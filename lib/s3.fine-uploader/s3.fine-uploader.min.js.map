{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","3rdparty-temp/core.js","3rdparty-temp/enc-base64.js","3rdparty-temp/hmac.js","3rdparty-temp/sha1.js","3rdparty-temp/sha256.js","3rdparty-temp/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.worker-manager.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","s3.fine-uploader.worker-inline.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/s3/uploader.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","strBefore","substring","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","match","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","fileRecord","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","alreadyInWaiting","alreadyInOpen","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","root","factory","undef","CryptoJS","F","subtype","C","C_lib","lib","Base","overrides","mixIn","init","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","rcache","m_w","m_z","mask","_r","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","update","messageUpdate","hash","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","parseLoop","base64Str","base64StrLength","reverseMap","bits1","bits2","Base64","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","_reverseMap","paddingIndex","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","subInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","bucket","patterns","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","policyJson","awsParams","customParams","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","pad","minutesToAdd","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","doc","contentWindow","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSignerWorkerManager","workerUrl","createS3InlineWorkerUrl","worker","Worker","outstandingRequests","workerPromises","onmessage","resp","generateSignature","task","RequestSigner","handleSignatureReceived","responseJson","pendingSignatureData","pendingSignatures","signatureConstructor","invalid","expectingPolicy","generateHeaders","getStringToSignArtifacts","requestInfo","endOfUrl","signatureSpec","toSign","headerNames","headersStr","generateStringToSign","contentMd5","headerIndexesToRemove","headerName","headerIdx","hashedContent","v2","getStringToSign","v4","signedHeaders","getSignedHeaders","hashed","toSignRaw","raw","thisSignatureRequester","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","getEncodedHashedPayload","content","Host","determineSignatureClientSide","toBeSigned","signatureEffort","updatedHeaders","getHeaders","getToSign","signatureArtifacts","signApiRequest","stringToSign","signPolicy","Authorization","getRequestDate","getEndOfUrl","headersWordArray","headersHmacSha1","headersHmacSha1Base64","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","getCanonicalQueryString","endOfUri","encodedQueryParams","encodedQueryParamNames","queryStrings","queryParamIdx","canonicalQueryString","nameAndVal","paramVal","forEach","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","workerManager","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","stringToSignTemplate","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","headersPattern","matches","credentialPattern","credentialCondition","credential","condition","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","handleSuccessResponse","parsedResponse","pendingRequests","successIndicator","failureIndicator","InitiateMultipartAjaxRequester","getSignatureAjaxRequester","getContentType","handleInitiateRequestComplete","uploadIdElements","messageElements","pendingInitiateRequests","domParser","DOMParser","responseDoc","parseFromString","CompleteMultipartAjaxRequester","handleCompleteRequestComplete","pendingCompleteRequests","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","awsErrorMsg","errorEls","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","toSend","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","codeEls","messageEls","parsedDoc","errorDetails","existedInLocalStorage","baseStorageId","bucketName","isValidResponse","innerHtml","responseData","createForm","handleFinishedUpload","handleUpload","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","FineUploader","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","createDocumentFragment","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","uploader","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"s3.fine-uploader.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\r\nqq.version = \"5.14.0-beta3\";\r\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\r\n/**\r\n * Defines the public API for FineUploaderBasic mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.basePublicApi = {\r\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\r\n        addBlobs: function(blobDataOrArray, params, endpoint) {\r\n            this.addFiles(blobDataOrArray, params, endpoint);\r\n        },\r\n\r\n        addInitialFiles: function(cannedFileList) {\r\n            var self = this;\r\n\r\n            qq.each(cannedFileList, function(index, cannedFile) {\r\n                self._addCannedFile(cannedFile);\r\n            });\r\n        },\r\n\r\n        addFiles: function(data, params, endpoint) {\r\n            this._maybeHandleIos8SafariWorkaround();\r\n\r\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\r\n\r\n                processBlob = qq.bind(function(blob) {\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processBlobData = qq.bind(function(blobData) {\r\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvas = qq.bind(function(canvas) {\r\n                    var blob = qq.canvasToBlob(canvas);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName + \".png\"\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvasData = qq.bind(function(canvasData) {\r\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\r\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: canvasData.name\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processFileOrInput = qq.bind(function(fileOrInput) {\r\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\r\n                        var files = Array.prototype.slice.call(fileOrInput.files),\r\n                            self = this;\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            self._handleNewFile(file, batchId, verifiedFiles);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\r\n                    }\r\n                }, this),\r\n\r\n                normalizeData = function() {\r\n                    if (qq.isFileList(data)) {\r\n                        data = Array.prototype.slice.call(data);\r\n                    }\r\n                    data = [].concat(data);\r\n                },\r\n\r\n                self = this,\r\n                verifiedFiles = [];\r\n\r\n            this._currentBatchId = batchId;\r\n\r\n            if (data) {\r\n                normalizeData();\r\n\r\n                qq.each(data, function(idx, fileContainer) {\r\n                    if (qq.isFileOrInput(fileContainer)) {\r\n                        processFileOrInput(fileContainer);\r\n                    }\r\n                    else if (qq.isBlob(fileContainer)) {\r\n                        processBlob(fileContainer);\r\n                    }\r\n                    else if (qq.isObject(fileContainer)) {\r\n                        if (fileContainer.blob && fileContainer.name) {\r\n                            processBlobData(fileContainer);\r\n                        }\r\n                        else if (fileContainer.canvas && fileContainer.name) {\r\n                            processCanvasData(fileContainer);\r\n                        }\r\n                    }\r\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\r\n                        processCanvas(fileContainer);\r\n                    }\r\n                    else {\r\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\r\n                    }\r\n                });\r\n\r\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\r\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\r\n            }\r\n        },\r\n\r\n        cancel: function(id) {\r\n            this._handler.cancel(id);\r\n        },\r\n\r\n        cancelAll: function() {\r\n            var storedIdsCopy = [],\r\n                self = this;\r\n\r\n            qq.extend(storedIdsCopy, this._storedIds);\r\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\r\n                self.cancel(storedFileId);\r\n            });\r\n\r\n            this._handler.cancelAll();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._storedIds = [];\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (uploadData.status === qq.status.PAUSED) {\r\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\r\n                this._uploadFile(id);\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        deleteFile: function(id) {\r\n            return this._onSubmitDelete(id);\r\n        },\r\n\r\n        // TODO document?\r\n        doesExist: function(fileOrBlobId) {\r\n            return this._handler.isValid(fileOrBlobId);\r\n        },\r\n\r\n        // Generate a variable size thumbnail on an img or canvas,\r\n        // returning a promise that is fulfilled when the attempt completes.\r\n        // Thumbnail can either be based off of a URL for an image returned\r\n        // by the server in the upload response, or the associated `Blob`.\r\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\r\n            var promiseToReturn = new qq.Promise(),\r\n                fileOrUrl, options;\r\n\r\n            if (this._imageGenerator) {\r\n                fileOrUrl = this._thumbnailUrls[fileId];\r\n                options = {\r\n                    customResizeFunction: customResizeFunction,\r\n                    maxSize: maxSize > 0 ? maxSize : null,\r\n                    scale: maxSize > 0\r\n                };\r\n\r\n                // If client-side preview generation is possible\r\n                // and we are not specifically looking for the image URl returned by the server...\r\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\r\n                    fileOrUrl = this.getFile(fileId);\r\n                }\r\n\r\n                /* jshint eqeqeq:false,eqnull:true */\r\n                if (fileOrUrl == null) {\r\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\r\n                }\r\n                else {\r\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\r\n                        function success(modifiedContainer) {\r\n                            promiseToReturn.success(modifiedContainer);\r\n                        },\r\n\r\n                        function failure(container, reason) {\r\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\r\n            }\r\n\r\n            return promiseToReturn;\r\n        },\r\n\r\n        getButton: function(fileId) {\r\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\r\n        },\r\n\r\n        getEndpoint: function(fileId) {\r\n            return this._endpointStore.get(fileId);\r\n        },\r\n\r\n        getFile: function(fileOrBlobId) {\r\n            return this._handler.getFile(fileOrBlobId) || null;\r\n        },\r\n\r\n        getInProgress: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        getName: function(id) {\r\n            return this._uploadData.retrieve({id: id}).name;\r\n        },\r\n\r\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\r\n        getParentId: function(id) {\r\n            var uploadDataEntry = this.getUploads({id: id}),\r\n                parentId = null;\r\n\r\n            if (uploadDataEntry) {\r\n                if (uploadDataEntry.parentId !== undefined) {\r\n                    parentId = uploadDataEntry.parentId;\r\n                }\r\n            }\r\n\r\n            return parentId;\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            return this._handler.getResumableFilesData();\r\n        },\r\n\r\n        getSize: function(id) {\r\n            return this._uploadData.retrieve({id: id}).size;\r\n        },\r\n\r\n        getNetUploads: function() {\r\n            return this._netUploaded;\r\n        },\r\n\r\n        getRemainingAllowedItems: function() {\r\n            var allowedItems = this._currentItemLimit;\r\n\r\n            if (allowedItems > 0) {\r\n                return allowedItems - this._netUploadedOrQueued;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        getUploads: function(optionalFilter) {\r\n            return this._uploadData.retrieve(optionalFilter);\r\n        },\r\n\r\n        getUuid: function(id) {\r\n            return this._uploadData.retrieve({id: id}).uuid;\r\n        },\r\n\r\n        log: function(str, level) {\r\n            if (this._options.debug && (!level || level === \"info\")) {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\r\n            }\r\n            else if (level && level !== \"info\") {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\r\n\r\n            }\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            // Pause only really makes sense if the file is uploading or retrying\r\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\r\n                if (this._handler.pause(id)) {\r\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\r\n                }\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        removeFileRef: function(id) {\r\n            this._handler.expunge(id);\r\n        },\r\n\r\n        reset: function() {\r\n            this.log(\"Resetting uploader...\");\r\n\r\n            this._handler.reset();\r\n            this._storedIds = [];\r\n            this._autoRetries = [];\r\n            this._retryTimeouts = [];\r\n            this._preventRetries = [];\r\n            this._thumbnailUrls = [];\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n\r\n            this._paramsStore.reset();\r\n            this._endpointStore.reset();\r\n            this._netUploadedOrQueued = 0;\r\n            this._netUploaded = 0;\r\n            this._uploadData.reset();\r\n            this._buttonIdsForFileIds = [];\r\n\r\n            this._pasteHandler && this._pasteHandler.reset();\r\n            this._options.session.refreshOnReset && this._refreshSessionData();\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n\r\n            this._totalProgress && this._totalProgress.reset();\r\n        },\r\n\r\n        retry: function(id) {\r\n            return this._manualRetry(id);\r\n        },\r\n\r\n        scaleImage: function(id, specs) {\r\n            var self = this;\r\n\r\n            return qq.Scaler.prototype.scaleImage(id, specs, {\r\n                log: qq.bind(self.log, self),\r\n                getFile: qq.bind(self.getFile, self),\r\n                uploadData: self._uploadData\r\n            });\r\n        },\r\n\r\n        setCustomHeaders: function(headers, id) {\r\n            this._customHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileCustomHeaders: function(headers, id) {\r\n            this._deleteFileCustomHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileEndpoint: function(endpoint, id) {\r\n            this._deleteFileEndpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setDeleteFileParams: function(params, id) {\r\n            this._deleteFileParamsStore.set(params, id);\r\n        },\r\n\r\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\r\n        setEndpoint: function(endpoint, id) {\r\n            this._endpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setForm: function(elementOrId) {\r\n            this._updateFormSupportAndParams(elementOrId);\r\n        },\r\n\r\n        setItemLimit: function(newItemLimit) {\r\n            this._currentItemLimit = newItemLimit;\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            this._uploadData.updateName(id, newName);\r\n        },\r\n\r\n        setParams: function(params, id) {\r\n            this._paramsStore.set(params, id);\r\n        },\r\n\r\n        setUuid: function(id, newUuid) {\r\n            return this._uploadData.uuidChanged(id, newUuid);\r\n        },\r\n\r\n        /**\r\n         * Expose the internal status of a file id to the public api for manual state changes\r\n         * @public\r\n         *\r\n         * @param {Number} id,\r\n         * @param {String} newStatus\r\n         *\r\n         * @todo Implement the remaining methods\r\n         */\r\n        setStatus: function(id, newStatus) {\r\n            var fileRecord = this.getUploads({id: id});\r\n            if (!fileRecord) {\r\n                throw new qq.Error(id + \" is not a valid file ID.\");\r\n            }\r\n\r\n            switch (newStatus) {\r\n                case qq.status.DELETED:\r\n                    this._onDeleteComplete(id, null, false);\r\n                    break;\r\n                case qq.status.DELETE_FAILED:\r\n                    this._onDeleteComplete(id, null, true);\r\n                    break;\r\n                default:\r\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\r\n                    this.log(errorMessage);\r\n                    throw new qq.Error(errorMessage);\r\n            }\r\n        },\r\n\r\n        uploadStoredFiles: function() {\r\n            if (this._storedIds.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n            }\r\n            else {\r\n                this._uploadStoredFiles();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploaderBasic mode.\r\n     */\r\n    qq.basePrivateApi = {\r\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._uploadData.addFile({\r\n                uuid: sessionData.uuid,\r\n                name: sessionData.name,\r\n                size: sessionData.size,\r\n                status: qq.status.UPLOAD_SUCCESSFUL\r\n            });\r\n\r\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\r\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\r\n\r\n            if (sessionData.thumbnailUrl) {\r\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\r\n            }\r\n\r\n            this._netUploaded++;\r\n            this._netUploadedOrQueued++;\r\n\r\n            return id;\r\n        },\r\n\r\n        _annotateWithButtonId: function(file, associatedInput) {\r\n            if (qq.isFile(file)) {\r\n                file.qqButtonId = this._getButtonId(associatedInput);\r\n            }\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._options.callbacks.onError(null, null, message, undefined);\r\n        },\r\n\r\n        _createDeleteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.DeleteFileAjaxRequester({\r\n                method: this._options.deleteFile.method.toUpperCase(),\r\n                maxConnections: this._options.maxConnections,\r\n                uuidParamName: this._options.request.uuidName,\r\n                customHeaders: this._deleteFileCustomHeadersStore,\r\n                paramsStore: this._deleteFileParamsStore,\r\n                endpointStore: this._deleteFileEndpointStore,\r\n                cors: this._options.cors,\r\n                log: qq.bind(self.log, self),\r\n                onDelete: function(id) {\r\n                    self._onDelete(id);\r\n                    self._options.callbacks.onDelete(id);\r\n                },\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\r\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        _createPasteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.PasteSupport({\r\n                targetElement: this._options.paste.targetElement,\r\n                callbacks: {\r\n                    log: qq.bind(self.log, self),\r\n                    pasteReceived: function(blob) {\r\n                        self._handleCheckedCallback({\r\n                            name: \"onPasteReceived\",\r\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\r\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\r\n                            identifier: \"pasted image\"\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _createStore: function(initialValue, _readOnlyValues_) {\r\n            var store = {},\r\n                catchall = initialValue,\r\n                perIdReadOnlyValues = {},\r\n                readOnlyValues = _readOnlyValues_,\r\n                copy = function(orig) {\r\n                    if (qq.isObject(orig)) {\r\n                        return qq.extend({}, orig);\r\n                    }\r\n                    return orig;\r\n                },\r\n                getReadOnlyValues = function() {\r\n                    if (qq.isFunction(readOnlyValues)) {\r\n                        return readOnlyValues();\r\n                    }\r\n                    return readOnlyValues;\r\n                },\r\n                includeReadOnlyValues = function(id, existing) {\r\n                    if (readOnlyValues && qq.isObject(existing)) {\r\n                        qq.extend(existing, getReadOnlyValues());\r\n                    }\r\n\r\n                    if (perIdReadOnlyValues[id]) {\r\n                        qq.extend(existing, perIdReadOnlyValues[id]);\r\n                    }\r\n                };\r\n\r\n            return {\r\n                set: function(val, id) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id == null) {\r\n                        store = {};\r\n                        catchall = copy(val);\r\n                    }\r\n                    else {\r\n                        store[id] = copy(val);\r\n                    }\r\n                },\r\n\r\n                get: function(id) {\r\n                    var values;\r\n\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id != null && store[id]) {\r\n                        values = store[id];\r\n                    }\r\n                    else {\r\n                        values = copy(catchall);\r\n                    }\r\n\r\n                    includeReadOnlyValues(id, values);\r\n\r\n                    return copy(values);\r\n                },\r\n\r\n                addReadOnly: function(id, values) {\r\n                    // Only applicable to Object stores\r\n                    if (qq.isObject(store)) {\r\n                        // If null ID, apply readonly values to all files\r\n                        if (id === null) {\r\n                            if (qq.isFunction(values)) {\r\n                                readOnlyValues = values;\r\n                            }\r\n                            else {\r\n                                readOnlyValues = readOnlyValues || {};\r\n                                qq.extend(readOnlyValues, values);\r\n                            }\r\n                        }\r\n                        else {\r\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\r\n                            qq.extend(perIdReadOnlyValues[id], values);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                remove: function(fileId) {\r\n                    return delete store[fileId];\r\n                },\r\n\r\n                reset: function() {\r\n                    store = {};\r\n                    perIdReadOnlyValues = {};\r\n                    catchall = initialValue;\r\n                }\r\n            };\r\n        },\r\n\r\n        _createUploadDataTracker: function() {\r\n            var self = this;\r\n\r\n            return new qq.UploadData({\r\n                getName: function(id) {\r\n                    return self.getName(id);\r\n                },\r\n                getUuid: function(id) {\r\n                    return self.getUuid(id);\r\n                },\r\n                getSize: function(id) {\r\n                    return self.getSize(id);\r\n                },\r\n                onStatusChange: function(id, oldStatus, newStatus) {\r\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\r\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\r\n                    self._maybeAllComplete(id, newStatus);\r\n\r\n                    if (self._totalProgress) {\r\n                        setTimeout(function() {\r\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Generate a tracked upload button.\r\n         *\r\n         * @param spec Object containing a required `element` property\r\n         * along with optional `multiple`, `accept`, and `folders`.\r\n         * @returns {qq.UploadButton}\r\n         * @private\r\n         */\r\n        _createUploadButton: function(spec) {\r\n            var self = this,\r\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\r\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\r\n                button;\r\n\r\n            function allowMultiple() {\r\n                if (qq.supportedFeatures.ajaxUploading) {\r\n                    // Workaround for bug in iOS7+ (see #1039)\r\n                    if (self._options.workarounds.iosEmptyVideos &&\r\n                        qq.ios() &&\r\n                        !qq.ios6() &&\r\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    if (spec.multiple === undefined) {\r\n                        return self._options.multiple;\r\n                    }\r\n\r\n                    return spec.multiple;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            button = new qq.UploadButton({\r\n                acceptFiles: acceptFiles,\r\n                element: spec.element,\r\n                focusClass: this._options.classes.buttonFocus,\r\n                folders: spec.folders,\r\n                hoverClass: this._options.classes.buttonHover,\r\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\r\n                multiple: allowMultiple(),\r\n                name: this._options.request.inputName,\r\n                onChange: function(input) {\r\n                    self._onInputChange(input);\r\n                },\r\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\r\n            });\r\n\r\n            this._disposeSupport.addDisposer(function() {\r\n                button.dispose();\r\n            });\r\n\r\n            self._buttons.push(button);\r\n\r\n            return button;\r\n        },\r\n\r\n        _createUploadHandler: function(additionalOptions, namespace) {\r\n            var self = this,\r\n                lastOnProgress = {},\r\n                options = {\r\n                    debug: this._options.debug,\r\n                    maxConnections: this._options.maxConnections,\r\n                    cors: this._options.cors,\r\n                    paramsStore: this._paramsStore,\r\n                    endpointStore: this._endpointStore,\r\n                    chunking: this._options.chunking,\r\n                    resume: this._options.resume,\r\n                    blobs: this._options.blobs,\r\n                    log: qq.bind(self.log, self),\r\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\r\n                    onProgress: function(id, name, loaded, total) {\r\n                        if (loaded < 0 || total < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        if (lastOnProgress[id]) {\r\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\r\n                                self._onProgress(id, name, loaded, total);\r\n                                self._options.callbacks.onProgress(id, name, loaded, total);\r\n                            }\r\n                        }\r\n                        else {\r\n                            self._onProgress(id, name, loaded, total);\r\n                            self._options.callbacks.onProgress(id, name, loaded, total);\r\n                        }\r\n\r\n                        lastOnProgress[id] = {loaded: loaded, total: total};\r\n\r\n                    },\r\n                    onComplete: function(id, name, result, xhr) {\r\n                        delete lastOnProgress[id];\r\n\r\n                        var status = self.getUploads({id: id}).status,\r\n                            retVal;\r\n\r\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\r\n                        // invoked by the browser multiple times for the same XHR instance with the same state\r\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\r\n                        // done this.\r\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\r\n                            return;\r\n                        }\r\n\r\n                        retVal = self._onComplete(id, name, result, xhr);\r\n\r\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\r\n                        // until the promise has been fulfilled.\r\n                        if (retVal instanceof  qq.Promise) {\r\n                            retVal.done(function() {\r\n                                self._options.callbacks.onComplete(id, name, result, xhr);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self._options.callbacks.onComplete(id, name, result, xhr);\r\n                        }\r\n                    },\r\n                    onCancel: function(id, name, cancelFinalizationEffort) {\r\n                        var promise = new qq.Promise();\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onCancel\",\r\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\r\n                            onFailure: promise.failure,\r\n                            onSuccess: function() {\r\n                                cancelFinalizationEffort.then(function() {\r\n                                    self._onCancel(id, name);\r\n                                });\r\n\r\n                                promise.success();\r\n                            },\r\n                            identifier: id\r\n                        });\r\n\r\n                        return promise;\r\n                    },\r\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\r\n                    onUpload: function(id, name) {\r\n                        self._onUpload(id, name);\r\n                        self._options.callbacks.onUpload(id, name);\r\n                    },\r\n                    onUploadChunk: function(id, name, chunkData) {\r\n                        self._onUploadChunk(id, chunkData);\r\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\r\n                    },\r\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\r\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\r\n                    },\r\n                    onResume: function(id, name, chunkData) {\r\n                        return self._options.callbacks.onResume(id, name, chunkData);\r\n                    },\r\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\r\n                        return self._onAutoRetry.apply(self, arguments);\r\n                    },\r\n                    onUuidChanged: function(id, newUuid) {\r\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\r\n                        self.setUuid(id, newUuid);\r\n                    },\r\n                    getName: qq.bind(self.getName, self),\r\n                    getUuid: qq.bind(self.getUuid, self),\r\n                    getSize: qq.bind(self.getSize, self),\r\n                    setSize: qq.bind(self._setSize, self),\r\n                    getDataByUuid: function(uuid) {\r\n                        return self.getUploads({uuid: uuid});\r\n                    },\r\n                    isQueued: function(id) {\r\n                        var status = self.getUploads({id: id}).status;\r\n                        return status === qq.status.QUEUED ||\r\n                            status === qq.status.SUBMITTED ||\r\n                            status === qq.status.UPLOAD_RETRYING ||\r\n                            status === qq.status.PAUSED;\r\n                    },\r\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\r\n                    getIdsInBatch: self._uploadData.getIdsInBatch\r\n                };\r\n\r\n            qq.each(this._options.request, function(prop, val) {\r\n                options[prop] = val;\r\n            });\r\n\r\n            options.customHeaders = this._customHeadersStore;\r\n\r\n            if (additionalOptions) {\r\n                qq.each(additionalOptions, function(key, val) {\r\n                    options[key] = val;\r\n                });\r\n            }\r\n\r\n            return new qq.UploadHandlerController(options, namespace);\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id) {\r\n            this._netUploadedOrQueued--;\r\n            this._uploadData.setStatus(id, qq.status.REJECTED);\r\n        },\r\n\r\n        _formatSize: function(bytes) {\r\n            if (bytes === 0) {\r\n                return bytes + this._options.text.sizeSymbols[0];\r\n            }\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1000;\r\n                i++;\r\n            } while (bytes > 999);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\r\n        },\r\n\r\n        // Creates an internal object that tracks various properties of each extra button,\r\n        // and then actually creates the extra button.\r\n        _generateExtraButtonSpecs: function() {\r\n            var self = this;\r\n\r\n            this._extraButtonSpecs = {};\r\n\r\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\r\n                var multiple = extraButtonOptionEntry.multiple,\r\n                    validation = qq.extend({}, self._options.validation, true),\r\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\r\n\r\n                if (multiple === undefined) {\r\n                    multiple = self._options.multiple;\r\n                }\r\n\r\n                if (extraButtonSpec.validation) {\r\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\r\n                }\r\n\r\n                qq.extend(extraButtonSpec, {\r\n                    multiple: multiple,\r\n                    validation: validation\r\n                }, true);\r\n\r\n                self._initExtraButton(extraButtonSpec);\r\n            });\r\n        },\r\n\r\n        _getButton: function(buttonId) {\r\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            if (extraButtonsSpec) {\r\n                return extraButtonsSpec.element;\r\n            }\r\n            else if (buttonId === this._defaultButtonId) {\r\n                return this._options.button;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the internally used tracking ID for a button.\r\n         *\r\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\r\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\r\n         * @private\r\n         */\r\n        _getButtonId: function(buttonOrFileInputOrFile) {\r\n            var inputs, fileInput,\r\n                fileBlobOrInput = buttonOrFileInputOrFile;\r\n\r\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\r\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\r\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\r\n            }\r\n\r\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\r\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\r\n                if (qq.isFile(fileBlobOrInput)) {\r\n                    return fileBlobOrInput.qqButtonId;\r\n                }\r\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\r\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\r\n\r\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n\r\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\r\n\r\n                qq.each(inputs, function(idx, input) {\r\n                    if (input.getAttribute(\"type\") === \"file\") {\r\n                        fileInput = input;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (fileInput) {\r\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n            }\r\n        },\r\n\r\n        _getNotFinished: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED,\r\n                    qq.status.SUBMITTING,\r\n                    qq.status.SUBMITTED,\r\n                    qq.status.PAUSED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        // Get the validation options for this button.  Could be the default validation option\r\n        // or a specific one assigned to this particular button.\r\n        _getValidationBase: function(buttonId) {\r\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\r\n        },\r\n\r\n        _getValidationDescriptor: function(fileWrapper) {\r\n            if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                return {\r\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\r\n                    size: fileWrapper.file.referenceBlob.size\r\n                };\r\n            }\r\n\r\n            return {\r\n                name: this.getUploads({id: fileWrapper.id}).name,\r\n                size: this.getUploads({id: fileWrapper.id}).size\r\n            };\r\n        },\r\n\r\n        _getValidationDescriptors: function(fileWrappers) {\r\n            var self = this,\r\n                fileDescriptors = [];\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\r\n            });\r\n\r\n            return fileDescriptors;\r\n        },\r\n\r\n        // Allows camera access on either the default or an extra button for iOS devices.\r\n        _handleCameraAccess: function() {\r\n            if (this._options.camera.ios && qq.ios()) {\r\n                var acceptIosCamera = \"image/*;capture=camera\",\r\n                    button = this._options.camera.button,\r\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\r\n                    optionRoot = this._options;\r\n\r\n                // If we are not targeting the default button, it is an \"extra\" button\r\n                if (buttonId && buttonId !== this._defaultButtonId) {\r\n                    optionRoot = this._extraButtonSpecs[buttonId];\r\n                }\r\n\r\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\r\n                optionRoot.multiple = false;\r\n\r\n                // update the options\r\n                if (optionRoot.validation.acceptFiles === null) {\r\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\r\n                }\r\n                else {\r\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\r\n                }\r\n\r\n                // update the already-created button\r\n                qq.each(this._buttons, function(idx, button) {\r\n                    if (button.getButtonId() === buttonId) {\r\n                        button.setMultiple(optionRoot.multiple);\r\n                        button.setAcceptFiles(optionRoot.acceptFiles);\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _handleCheckedCallback: function(details) {\r\n            var self = this,\r\n                callbackRetVal = details.callback();\r\n\r\n            if (qq.isGenericPromise(callbackRetVal)) {\r\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\r\n                return callbackRetVal.then(\r\n                    function(successParam) {\r\n                        self.log(details.name + \" promise success for \" + details.identifier);\r\n                        details.onSuccess(successParam);\r\n                    },\r\n                    function() {\r\n                        if (details.onFailure) {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                            details.onFailure();\r\n                        }\r\n                        else {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            if (callbackRetVal !== false) {\r\n                details.onSuccess(callbackRetVal);\r\n            }\r\n            else {\r\n                if (details.onFailure) {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\r\n                    details.onFailure();\r\n                }\r\n                else {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\r\n                }\r\n            }\r\n\r\n            return callbackRetVal;\r\n        },\r\n\r\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\r\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\r\n            var self = this,\r\n                uuid = qq.getUniqueId(),\r\n                size = -1,\r\n                name = qq.getFilename(file),\r\n                actualFile = file.blob || file,\r\n                handler = this._customNewFileHandler ?\r\n                    this._customNewFileHandler :\r\n                    qq.bind(self._handleNewFileGeneric, self);\r\n\r\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\r\n                size = actualFile.size;\r\n            }\r\n\r\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\r\n                uploadData: self._uploadData,\r\n                paramsStore: self._paramsStore,\r\n                addFileToHandler: function(id, file) {\r\n                    self._handler.add(id, file);\r\n                    self._netUploadedOrQueued++;\r\n                    self._trackButton(id);\r\n                }\r\n            });\r\n        },\r\n\r\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\r\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\r\n\r\n            this._handler.add(id, file);\r\n            this._trackButton(id);\r\n\r\n            this._netUploadedOrQueued++;\r\n\r\n            fileList.push({id: id, file: file});\r\n        },\r\n\r\n        _handlePasteSuccess: function(blob, extSuppliedName) {\r\n            var extension = blob.type.split(\"/\")[1],\r\n                name = extSuppliedName;\r\n\r\n            /*jshint eqeqeq: true, eqnull: true*/\r\n            if (name == null) {\r\n                name = this._options.paste.defaultName;\r\n            }\r\n\r\n            name += \".\" + extension;\r\n\r\n            this.addFiles({\r\n                name: name,\r\n                blob: blob\r\n            });\r\n        },\r\n\r\n        _handleDeleteSuccess: function(id) {\r\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\r\n                var name = this.getName(id);\r\n\r\n                this._netUploadedOrQueued--;\r\n                this._netUploaded--;\r\n                this._handler.expunge(id);\r\n                this._uploadData.setStatus(id, qq.status.DELETED);\r\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\r\n            }\r\n        },\r\n\r\n        _handleDeleteFailed: function(id, xhrOrXdr) {\r\n            var name = this.getName(id);\r\n\r\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\r\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\r\n\r\n            // Check first if xhrOrXdr is actually passed or valid\r\n            // For error reporting, we only have access to the response status if this is not\r\n            // an `XDomainRequest`.\r\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\r\n            }\r\n            else {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\r\n            }\r\n        },\r\n\r\n        // Creates an extra button element\r\n        _initExtraButton: function(spec) {\r\n            var button = this._createUploadButton({\r\n                accept: spec.validation.acceptFiles,\r\n                allowedExtensions: spec.validation.allowedExtensions,\r\n                element: spec.element,\r\n                folders: spec.folders,\r\n                multiple: spec.multiple,\r\n                title: spec.fileInputTitle\r\n            });\r\n\r\n            this._extraButtonSpecs[button.getButtonId()] = spec;\r\n        },\r\n\r\n        _initFormSupportAndParams: function() {\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n            );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore = this._createStore(\r\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\r\n                );\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\r\n                }\r\n            }\r\n            else {\r\n                this._paramsStore = this._createStore(this._options.request.params);\r\n            }\r\n        },\r\n\r\n        _isDeletePossible: function() {\r\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (this._options.cors.expected) {\r\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\r\n                    return true;\r\n                }\r\n\r\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _isAllowedExtension: function(allowed, fileName) {\r\n            var valid = false;\r\n\r\n            if (!allowed.length) {\r\n                return true;\r\n            }\r\n\r\n            qq.each(allowed, function(idx, allowedExt) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExt)) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\r\n\r\n                    if (fileName.match(extRegex) != null) {\r\n                        valid = true;\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return valid;\r\n        },\r\n\r\n        /**\r\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\r\n         *\r\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\r\n         * @param maybeNameOrNames names of the items that have failed, if applicable\r\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\r\n         * @private\r\n         */\r\n        _itemError: function(code, maybeNameOrNames, item) {\r\n            var message = this._options.messages[code],\r\n                allowedExtensions = [],\r\n                names = [].concat(maybeNameOrNames),\r\n                name = names[0],\r\n                buttonId = this._getButtonId(item),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                extensionsForMessage, placeholderMatch;\r\n\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExtension)) {\r\n                    allowedExtensions.push(allowedExtension);\r\n                }\r\n            });\r\n\r\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\r\n\r\n            r(\"{file}\", this._options.formatFileName(name));\r\n            r(\"{extensions}\", extensionsForMessage);\r\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\r\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\r\n\r\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\r\n            if (placeholderMatch !== null) {\r\n                qq.each(placeholderMatch, function(idx, placeholder) {\r\n                    r(placeholder, names[idx]);\r\n                });\r\n            }\r\n\r\n            this._options.callbacks.onError(null, name, message, undefined);\r\n\r\n            return message;\r\n        },\r\n\r\n        /**\r\n         * Conditionally orders a manual retry of a failed upload.\r\n         *\r\n         * @param id File ID of the failed upload\r\n         * @param callback Optional callback to invoke if a retry is prudent.\r\n         * In lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if a manual retry will occur\r\n         * @private\r\n         */\r\n        _manualRetry: function(id, callback) {\r\n            if (this._onBeforeManualRetry(id)) {\r\n                this._netUploadedOrQueued++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n\r\n                if (callback) {\r\n                    callback(id);\r\n                }\r\n                else {\r\n                    this._handler.retry(id);\r\n                }\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _maybeAllComplete: function(id, status) {\r\n            var self = this,\r\n                notFinished = this._getNotFinished();\r\n\r\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\r\n                this._succeededSinceLastAllComplete.push(id);\r\n            }\r\n            else if (status === qq.status.UPLOAD_FAILED) {\r\n                this._failedSinceLastAllComplete.push(id);\r\n            }\r\n\r\n            if (notFinished === 0 &&\r\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\r\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\r\n                setTimeout(function() {\r\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _maybeHandleIos8SafariWorkaround: function() {\r\n            var self = this;\r\n\r\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n                setTimeout(function() {\r\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\r\n                }, 0);\r\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\r\n            }\r\n        },\r\n\r\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\r\n            // Assuming no one will actually set the response code to something other than 200\r\n            // and still set 'success' to true...\r\n            if (!response.success) {\r\n                if (xhr && xhr.status !== 200 && !response.error) {\r\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\r\n                }\r\n                else {\r\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\r\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\r\n            var self = this;\r\n\r\n            if (items.length > index) {\r\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\r\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\r\n                    setTimeout(function() {\r\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\r\n                            buttonId = self._getButtonId(items[index].file),\r\n                            button = self._getButton(buttonId);\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onValidate\",\r\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\r\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\r\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\r\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\r\n                        });\r\n                    }, 0);\r\n                }\r\n                else if (!validItem) {\r\n                    for (; index < items.length; index++) {\r\n                        self._fileOrBlobRejected(items[index].id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\r\n\r\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n        },\r\n\r\n        /**\r\n         * Attempt to automatically retry a failed upload.\r\n         *\r\n         * @param id The file ID of the failed upload\r\n         * @param name The name of the file associated with the failed upload\r\n         * @param responseJSON Response from the server, parsed into a javascript object\r\n         * @param xhr Ajax transport used to send the failed request\r\n         * @param callback Optional callback to be invoked if a retry is prudent.\r\n         * Invoked in lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if an auto-retry will occur\r\n         * @private\r\n         */\r\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\r\n            var self = this;\r\n\r\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\r\n\r\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\r\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\r\n\r\n                self._maybeParseAndSendUploadError.apply(self, arguments);\r\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\r\n                self._onBeforeAutoRetry(id, name);\r\n\r\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n                self._retryTimeouts[id] = setTimeout(function() {\r\n                    self.log(\"Starting retry for \" + name + \"...\");\r\n\r\n                    if (callback) {\r\n                        callback(id);\r\n                    }\r\n                    else {\r\n                        self._handler.retry(id);\r\n                    }\r\n                }, retryWaitPeriod);\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id, name) {\r\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            var itemLimit = this._currentItemLimit,\r\n                fileName;\r\n\r\n            if (this._preventRetries[id]) {\r\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\r\n                return false;\r\n            }\r\n            else if (this._handler.isValid(id)) {\r\n                fileName = this.getName(id);\r\n\r\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\r\n                    return false;\r\n                }\r\n\r\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\r\n                    this._itemError(\"retryFailTooManyItems\");\r\n                    return false;\r\n                }\r\n\r\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._netUploadedOrQueued--;\r\n\r\n            clearTimeout(this._retryTimeouts[id]);\r\n\r\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\r\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\r\n                this._storedIds.splice(storedItemIndex, 1);\r\n            }\r\n\r\n            this._uploadData.setStatus(id, qq.status.CANCELED);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            if (!result.success) {\r\n                this._netUploadedOrQueued--;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\r\n\r\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\r\n                    this._preventRetries[id] = true;\r\n                }\r\n            }\r\n            else {\r\n                if (result.thumbnailUrl) {\r\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\r\n                }\r\n\r\n                this._netUploaded++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\r\n            }\r\n\r\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\r\n\r\n            return result.success ? true : false;\r\n        },\r\n\r\n        _onDelete: function(id) {\r\n            this._uploadData.setStatus(id, qq.status.DELETING);\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n            var name = this.getName(id);\r\n\r\n            if (isError) {\r\n                this._handleDeleteFailed(id, xhrOrXdr);\r\n            }\r\n            else {\r\n                this._handleDeleteSuccess(id);\r\n            }\r\n        },\r\n\r\n        _onInputChange: function(input) {\r\n            var fileIndex;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\r\n                    this._annotateWithButtonId(input.files[fileIndex], input);\r\n                }\r\n\r\n                this.addFiles(input.files);\r\n            }\r\n            // Android 2.3.x will fire `onchange` even if no file has been selected\r\n            else if (input.value.length > 0) {\r\n                this.addFiles(input);\r\n            }\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n        },\r\n\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            //nothing to do yet in core uploader\r\n        },\r\n\r\n        _onSubmitCallbackSuccess: function(id, name) {\r\n            this._onSubmit.apply(this, arguments);\r\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\r\n            this._onSubmitted.apply(this, arguments);\r\n\r\n            if (this._options.autoUpload) {\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n                this._uploadFile(id);\r\n            }\r\n            else {\r\n                this._storeForLater(id);\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\r\n            var uuid = this.getUuid(id),\r\n                adjustedOnSuccessCallback;\r\n\r\n            if (onSuccessCallback) {\r\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\r\n            }\r\n\r\n            if (this._isDeletePossible()) {\r\n                this._handleCheckedCallback({\r\n                    name: \"onSubmitDelete\",\r\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\r\n                    onSuccess: adjustedOnSuccessCallback ||\r\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\r\n                    identifier: id\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\r\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitted: function(id) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._options.callbacks.onTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            // nothing to do in the core uploader for now\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\r\n            if (newStatus === qq.status.PAUSED) {\r\n                clearTimeout(this._retryTimeouts[id]);\r\n            }\r\n        },\r\n\r\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\r\n            var self = this;\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                self._fileOrBlobRejected(fileWrapper.id);\r\n            });\r\n        },\r\n\r\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\r\n            var errorMessage,\r\n                itemLimit = this._currentItemLimit,\r\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\r\n\r\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\r\n                if (items.length > 0) {\r\n                    this._handleCheckedCallback({\r\n                        name: \"onValidate\",\r\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\r\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\r\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\r\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\r\n                    });\r\n                }\r\n                else {\r\n                    this._itemError(\"noFilesError\");\r\n                }\r\n            }\r\n            else {\r\n                this._onValidateBatchCallbackFailure(items);\r\n                errorMessage = this._options.messages.tooManyItemsError\r\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\r\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\r\n                this._batchError(errorMessage);\r\n            }\r\n        },\r\n\r\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\r\n            var nextIndex = index + 1;\r\n\r\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\r\n\r\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n        },\r\n\r\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\r\n            var self = this,\r\n                nextIndex = index + 1,\r\n                validationDescriptor = this._getValidationDescriptor(items[index]);\r\n\r\n            this._validateFileOrBlobData(items[index], validationDescriptor)\r\n                .then(\r\n                function() {\r\n                    self._upload(items[index].id, params, endpoint);\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\r\n                },\r\n                function() {\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n                }\r\n            );\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            if (items.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n                return;\r\n            }\r\n\r\n            var validationDescriptors = this._getValidationDescriptors(items),\r\n                buttonId = this._getButtonId(items[0].file),\r\n                button = this._getButton(buttonId);\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onValidateBatch\",\r\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\r\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\r\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\r\n                identifier: \"batch validation\"\r\n            });\r\n        },\r\n\r\n        _preventLeaveInProgress: function() {\r\n            var self = this;\r\n\r\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\r\n                if (self.getInProgress()) {\r\n                    e = e || window.event;\r\n                    // for ie, ff\r\n                    e.returnValue = self._options.messages.onLeave;\r\n                    // for webkit\r\n                    return self._options.messages.onLeave;\r\n                }\r\n            });\r\n        },\r\n\r\n        // Attempts to refresh session data only if the `qq.Session` module exists\r\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\r\n        // callback will be invoked once the refresh is complete.\r\n        _refreshSessionData: function() {\r\n            var self = this,\r\n                options = this._options.session;\r\n\r\n            /* jshint eqnull:true */\r\n            if (qq.Session && this._options.session.endpoint != null) {\r\n                if (!this._session) {\r\n                    qq.extend(options, {cors: this._options.cors});\r\n\r\n                    options.log = qq.bind(this.log, this);\r\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\r\n\r\n                    this._session = new qq.Session(options);\r\n                }\r\n\r\n                setTimeout(function() {\r\n                    self._session.refresh().then(function(response, xhrOrXdr) {\r\n                        self._sessionRequestComplete();\r\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\r\n\r\n                    }, function(response, xhrOrXdr) {\r\n\r\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\r\n                    });\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _sessionRequestComplete: function() {},\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._uploadData.updateSize(id, newSize);\r\n            this._totalProgress && this._totalProgress.onNewSize(id);\r\n        },\r\n\r\n        _shouldAutoRetry: function(id, name, responseJSON) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            /*jshint laxbreak: true */\r\n            if (!this._preventRetries[id]\r\n                && this._options.retry.enableAuto\r\n                && uploadData.status !== qq.status.PAUSED) {\r\n\r\n                if (this._autoRetries[id] === undefined) {\r\n                    this._autoRetries[id] = 0;\r\n                }\r\n\r\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\r\n                    this._autoRetries[id] += 1;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._storedIds.push(id);\r\n        },\r\n\r\n        // Maps a file with the button that was used to select it.\r\n        _trackButton: function(id) {\r\n            var buttonId;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                buttonId = this._handler.getFile(id).qqButtonId;\r\n            }\r\n            else {\r\n                buttonId = this._getButtonId(this._handler.getInput(id));\r\n            }\r\n\r\n            if (buttonId) {\r\n                this._buttonIdsForFileIds[id] = buttonId;\r\n            }\r\n        },\r\n\r\n        _updateFormSupportAndParams: function(formElementOrId) {\r\n            this._options.form.element = formElementOrId;\r\n\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n                );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this.setEndpoint(this._formSupport.newEndpoint);\r\n                }\r\n            }\r\n        },\r\n\r\n        _upload: function(id, params, endpoint) {\r\n            var name = this.getName(id);\r\n\r\n            if (params) {\r\n                this.setParams(params, id);\r\n            }\r\n\r\n            if (endpoint) {\r\n                this.setEndpoint(endpoint, id);\r\n            }\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onSubmit\",\r\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\r\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\r\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\r\n                identifier: id\r\n            });\r\n        },\r\n\r\n        _uploadFile: function(id) {\r\n            if (!this._handler.upload(id)) {\r\n                this._uploadData.setStatus(id, qq.status.QUEUED);\r\n            }\r\n        },\r\n\r\n        _uploadStoredFiles: function() {\r\n            var idToUpload, stillSubmitting,\r\n                self = this;\r\n\r\n            while (this._storedIds.length) {\r\n                idToUpload = this._storedIds.shift();\r\n                this._uploadFile(idToUpload);\r\n            }\r\n\r\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\r\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\r\n            if (stillSubmitting) {\r\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\r\n                setTimeout(function() {\r\n                    self._uploadStoredFiles();\r\n                }, 1000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Performs some internal validation checks on an item, defined in the `validation` option.\r\n         *\r\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\r\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\r\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\r\n         * @private\r\n         */\r\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\r\n            var self = this,\r\n                file = (function() {\r\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                        return fileWrapper.file.referenceBlob;\r\n                    }\r\n                    return fileWrapper.file;\r\n                }()),\r\n                name = validationDescriptor.name,\r\n                size = validationDescriptor.size,\r\n                buttonId = this._getButtonId(fileWrapper.file),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                validityChecker = new qq.Promise();\r\n\r\n            validityChecker.then(\r\n                function() {},\r\n                function() {\r\n                    self._fileOrBlobRejected(fileWrapper.id, name);\r\n                });\r\n\r\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\r\n                this._itemError(\"typeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (!this._options.validation.allowEmpty && size === 0) {\r\n                this._itemError(\"emptyError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\r\n                this._itemError(\"sizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && size < validationBase.minSizeLimit) {\r\n                this._itemError(\"minSizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\r\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\r\n                    validityChecker.success,\r\n                    function(errorCode) {\r\n                        self._itemError(errorCode + \"ImageError\", name, file);\r\n                        validityChecker.failure();\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                validityChecker.success();\r\n            }\r\n\r\n            return validityChecker;\r\n        },\r\n\r\n        _wrapCallbacks: function() {\r\n            var self, safeCallback, prop;\r\n\r\n            self = this;\r\n\r\n            safeCallback = function(name, callback, args) {\r\n                var errorMsg;\r\n\r\n                try {\r\n                    return callback.apply(self, args);\r\n                }\r\n                catch (exception) {\r\n                    errorMsg = exception.message || exception.toString();\r\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\r\n                }\r\n            };\r\n\r\n            /* jshint forin: false, loopfunc: true */\r\n            for (prop in this._options.callbacks) {\r\n                (function() {\r\n                    var callbackName, callbackFunc;\r\n                    callbackName = prop;\r\n                    callbackFunc = self._options.callbacks[callbackName];\r\n                    self._options.callbacks[callbackName] = function() {\r\n                        return safeCallback(callbackName, callbackFunc, arguments);\r\n                    };\r\n                }());\r\n            }\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.FineUploaderBasic = function(o) {\r\n        var self = this;\r\n\r\n        // These options define FineUploaderBasic mode.\r\n        this._options = {\r\n            debug: false,\r\n            button: null,\r\n            multiple: true,\r\n            maxConnections: 3,\r\n            disableCancelForFormUploads: false,\r\n            autoUpload: true,\r\n\r\n            request: {\r\n                customHeaders: {},\r\n                endpoint: \"/server/upload\",\r\n                filenameParam: \"qqfilename\",\r\n                forceMultipart: true,\r\n                inputName: \"qqfile\",\r\n                method: \"POST\",\r\n                params: {},\r\n                paramsInBody: true,\r\n                totalFileSizeName: \"qqtotalfilesize\",\r\n                uuidName: \"qquuid\"\r\n            },\r\n\r\n            validation: {\r\n                allowedExtensions: [],\r\n                sizeLimit: 0,\r\n                minSizeLimit: 0,\r\n                itemLimit: 0,\r\n                stopOnFirstInvalidFile: true,\r\n                acceptFiles: null,\r\n                image: {\r\n                    maxHeight: 0,\r\n                    maxWidth: 0,\r\n                    minHeight: 0,\r\n                    minWidth: 0\r\n                },\r\n                allowEmpty: false\r\n            },\r\n\r\n            callbacks: {\r\n                onSubmit: function(id, name) {},\r\n                onSubmitted: function(id, name) {},\r\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\r\n                onAllComplete: function(successful, failed) {},\r\n                onCancel: function(id, name) {},\r\n                onUpload: function(id, name) {},\r\n                onUploadChunk: function(id, name, chunkData) {},\r\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\r\n                onResume: function(id, fileName, chunkData) {},\r\n                onProgress: function(id, name, loaded, total) {},\r\n                onTotalProgress: function(loaded, total) {},\r\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\r\n                onAutoRetry: function(id, name, attemptNumber) {},\r\n                onManualRetry: function(id, name) {},\r\n                onValidateBatch: function(fileOrBlobData) {},\r\n                onValidate: function(fileOrBlobData) {},\r\n                onSubmitDelete: function(id) {},\r\n                onDelete: function(id) {},\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\r\n                onPasteReceived: function(blob) {},\r\n                onStatusChange: function(id, oldStatus, newStatus) {},\r\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\r\n            },\r\n\r\n            messages: {\r\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\r\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\r\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\r\n                emptyError: \"{file} is empty, please select files again without it.\",\r\n                noFilesError: \"No files to upload.\",\r\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\r\n                maxHeightImageError: \"Image is too tall.\",\r\n                maxWidthImageError: \"Image is too wide.\",\r\n                minHeightImageError: \"Image is not tall enough.\",\r\n                minWidthImageError: \"Image is not wide enough.\",\r\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\r\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\r\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\r\n            },\r\n\r\n            retry: {\r\n                enableAuto: false,\r\n                maxAutoAttempts: 3,\r\n                autoAttemptDelay: 5,\r\n                preventRetryResponseProperty: \"preventRetry\"\r\n            },\r\n\r\n            classes: {\r\n                buttonHover: \"qq-upload-button-hover\",\r\n                buttonFocus: \"qq-upload-button-focus\"\r\n            },\r\n\r\n            chunking: {\r\n                enabled: false,\r\n                concurrent: {\r\n                    enabled: false\r\n                },\r\n                mandatory: false,\r\n                paramNames: {\r\n                    partIndex: \"qqpartindex\",\r\n                    partByteOffset: \"qqpartbyteoffset\",\r\n                    chunkSize: \"qqchunksize\",\r\n                    totalFileSize: \"qqtotalfilesize\",\r\n                    totalParts: \"qqtotalparts\"\r\n                },\r\n                partSize: 2000000,\r\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\r\n                success: {\r\n                    endpoint: null\r\n                }\r\n            },\r\n\r\n            resume: {\r\n                enabled: false,\r\n                recordsExpireIn: 7, //days\r\n                paramNames: {\r\n                    resuming: \"qqresume\"\r\n                }\r\n            },\r\n\r\n            formatFileName: function(fileOrBlobName) {\r\n                return fileOrBlobName;\r\n            },\r\n\r\n            text: {\r\n                defaultResponseError: \"Upload failure reason unknown\",\r\n                fileInputTitle: \"file input\",\r\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\r\n            },\r\n\r\n            deleteFile: {\r\n                enabled: false,\r\n                method: \"DELETE\",\r\n                endpoint: \"/server/upload\",\r\n                customHeaders: {},\r\n                params: {}\r\n            },\r\n\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false,\r\n                allowXdr: false\r\n            },\r\n\r\n            blobs: {\r\n                defaultName: \"misc_data\"\r\n            },\r\n\r\n            paste: {\r\n                targetElement: null,\r\n                defaultName: \"pasted_image\"\r\n            },\r\n\r\n            camera: {\r\n                ios: false,\r\n\r\n                // if ios is true: button is null means target the default button, otherwise target the button specified\r\n                button: null\r\n            },\r\n\r\n            // This refers to additional upload buttons to be handled by Fine Uploader.\r\n            // Each element is an object, containing `element` as the only required\r\n            // property.  The `element` must be a container that will ultimately\r\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\r\n            // Optional properties of each object include `multiple`, `validation`,\r\n            // and `folders`.\r\n            extraButtons: [],\r\n\r\n            // Depends on the session module.  Used to query the server for an initial file list\r\n            // during initialization and optionally after a `reset`.\r\n            session: {\r\n                endpoint: null,\r\n                params: {},\r\n                customHeaders: {},\r\n                refreshOnReset: true\r\n            },\r\n\r\n            // Send parameters associated with an existing form along with the files\r\n            form: {\r\n                // Element ID, HTMLElement, or null\r\n                element: \"qq-form\",\r\n\r\n                // Overrides the base `autoUpload`, unless `element` is null.\r\n                autoUpload: false,\r\n\r\n                // true = upload files on form submission (and squelch submit event)\r\n                interceptSubmit: true\r\n            },\r\n\r\n            // scale images client side, upload a new file for each scaled version\r\n            scaling: {\r\n                customResizer: null,\r\n\r\n                // send the original file as well\r\n                sendOriginal: true,\r\n\r\n                // fox orientation for scaled images\r\n                orient: true,\r\n\r\n                // If null, scaled image type will match reference image type.  This value will be referred to\r\n                // for any size record that does not specific a type.\r\n                defaultType: null,\r\n\r\n                defaultQuality: 80,\r\n\r\n                failureText: \"Failed to scale\",\r\n\r\n                includeExif: false,\r\n\r\n                // metadata about each requested scaled version\r\n                sizes: []\r\n            },\r\n\r\n            workarounds: {\r\n                iosEmptyVideos: true,\r\n                ios8SafariUploads: true,\r\n                ios8BrowserCrash: false\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(this._options, o, true);\r\n\r\n        this._buttons = [];\r\n        this._extraButtonSpecs = {};\r\n        this._buttonIdsForFileIds = [];\r\n\r\n        this._wrapCallbacks();\r\n        this._disposeSupport =  new qq.DisposeSupport();\r\n\r\n        this._storedIds = [];\r\n        this._autoRetries = [];\r\n        this._retryTimeouts = [];\r\n        this._preventRetries = [];\r\n        this._thumbnailUrls = [];\r\n\r\n        this._netUploadedOrQueued = 0;\r\n        this._netUploaded = 0;\r\n        this._uploadData = this._createUploadDataTracker();\r\n\r\n        this._initFormSupportAndParams();\r\n\r\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\r\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\r\n\r\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\r\n\r\n        this._endpointStore = this._createStore(this._options.request.endpoint);\r\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\r\n\r\n        this._handler = this._createUploadHandler();\r\n\r\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\r\n\r\n        if (this._options.button) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._options.button,\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._generateExtraButtonSpecs();\r\n\r\n        this._handleCameraAccess();\r\n\r\n        if (this._options.paste.targetElement) {\r\n            if (qq.PasteSupport) {\r\n                this._pasteHandler = this._createPasteHandler();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._preventLeaveInProgress();\r\n\r\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\r\n        this._refreshSessionData();\r\n\r\n        this._succeededSinceLastAllComplete = [];\r\n        this._failedSinceLastAllComplete = [];\r\n\r\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\r\n        if (this._scaler.enabled) {\r\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\r\n        }\r\n\r\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\r\n            this._totalProgress = new qq.TotalProgress(\r\n                qq.bind(this._onTotalProgress, this),\r\n\r\n                function(id) {\r\n                    var entry = self._uploadData.retrieve({id: id});\r\n                    return (entry && entry.size) || 0;\r\n                }\r\n            );\r\n        }\r\n\r\n        this._currentItemLimit = this._options.validation.itemLimit;\r\n    };\r\n\r\n    // Define the private & public API methods.\r\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\r\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n}());\r\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\r\n/**\r\n * Base upload handler module.  Controls more specific handlers.\r\n *\r\n * @param o Options.  Passed along to the specific handler submodule as well.\r\n * @param namespace [optional] Namespace for the specific handler.\r\n */\r\nqq.UploadHandlerController = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var controller = this,\r\n        chunkingPossible = false,\r\n        concurrentChunkingPossible = false,\r\n        chunking, preventRetryResponse, log, handler,\r\n\r\n    options = {\r\n        paramsStore: {},\r\n        maxConnections: 3, // maximum number of concurrent uploads\r\n        chunking: {\r\n            enabled: false,\r\n            multiple: {\r\n                enabled: false\r\n            }\r\n        },\r\n        log: function(str, level) {},\r\n        onProgress: function(id, fileName, loaded, total) {},\r\n        onComplete: function(id, fileName, response, xhr) {},\r\n        onCancel: function(id, fileName) {},\r\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\r\n        onUpload: function(id, fileName) {},\r\n        onUploadChunk: function(id, fileName, chunkData) {},\r\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\r\n        onAutoRetry: function(id, fileName, response, xhr) {},\r\n        onResume: function(id, fileName, chunkData) {},\r\n        onUuidChanged: function(id, newUuid) {},\r\n        getName: function(id) {},\r\n        setSize: function(id, newSize) {},\r\n        isQueued: function(id) {},\r\n        getIdsInProxyGroup: function(id) {},\r\n        getIdsInBatch: function(id) {}\r\n    },\r\n\r\n    chunked = {\r\n        // Called when each chunk has uploaded successfully\r\n        done: function(id, chunkIdx, response, xhr) {\r\n            var chunkData = handler._getChunkData(id, chunkIdx);\r\n\r\n            handler._getFileState(id).attemptingResume = false;\r\n\r\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\r\n            handler._getFileState(id).loaded += chunkData.size;\r\n\r\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\r\n        // logic associated with closing out the file, such as combining the chunks.\r\n        finalize: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id);\r\n\r\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\r\n            handler.finalizeChunks(id).then(\r\n                function(response, xhr) {\r\n                    log(\"Finalize successful for \" + id);\r\n\r\n                    var normaizedResponse = upload.normalizeResponse(response, true);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    handler._maybeDeletePersistedChunkData(id);\r\n                    upload.cleanup(id, normaizedResponse, xhr);\r\n                },\r\n                function(response, xhr) {\r\n                    var normaizedResponse = upload.normalizeResponse(response, false);\r\n\r\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\r\n\r\n                    if (normaizedResponse.reset) {\r\n                        chunked.reset(id);\r\n                    }\r\n\r\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\r\n                        upload.cleanup(id, normaizedResponse, xhr);\r\n                    }\r\n                }\r\n            );\r\n        },\r\n\r\n        handleFailure: function(chunkIdx, id, response, xhr) {\r\n            var name = options.getName(id);\r\n\r\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\r\n\r\n            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n            var responseToReport = upload.normalizeResponse(response, false),\r\n                inProgressIdx;\r\n\r\n            if (responseToReport.reset) {\r\n                chunked.reset(id);\r\n            }\r\n            else {\r\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\r\n                if (inProgressIdx >= 0) {\r\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\r\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\r\n                }\r\n            }\r\n\r\n            // We may have aborted all other in-progress chunks for this file due to a failure.\r\n            // If so, ignore the failures associated with those aborts.\r\n            if (!handler._getFileState(id).temp.ignoreFailure) {\r\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\r\n                // chunks since they will be explicitly aborted\r\n                if (concurrentChunkingPossible) {\r\n                    handler._getFileState(id).temp.ignoreFailure = true;\r\n\r\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\r\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\r\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\r\n                        ckXhr.abort();\r\n                        // Flag the transport, in case we are waiting for some other async operation\r\n                        // to complete before attempting to upload the chunk\r\n                        ckXhr._cancelled = true;\r\n                    });\r\n\r\n                    // We must indicate that all aborted chunks are no longer in progress\r\n                    handler.moveInProgressToRemaining(id);\r\n\r\n                    // Free up any connections used by these chunks, but don't allow any\r\n                    // other files to take up the connections (until we have exhausted all auto-retries)\r\n                    connectionManager.free(id, true);\r\n                }\r\n\r\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\r\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\r\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\r\n                    // is a failure or not.\r\n                    upload.cleanup(id, responseToReport, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        hasMoreParts: function(id) {\r\n            return !!handler._getFileState(id).chunking.remaining.length;\r\n        },\r\n\r\n        nextPart: function(id) {\r\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\r\n\r\n            if (nextIdx >= handler._getTotalChunks(id)) {\r\n                nextIdx = null;\r\n            }\r\n\r\n            return nextIdx;\r\n        },\r\n\r\n        reset: function(id) {\r\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\r\n\r\n            handler._maybeDeletePersistedChunkData(id);\r\n            handler.reevaluateChunking(id);\r\n            handler._getFileState(id).loaded = 0;\r\n        },\r\n\r\n        sendNext: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id),\r\n                chunkIdx = chunked.nextPart(id),\r\n                chunkData = handler._getChunkData(id, chunkIdx),\r\n                resuming = handler._getFileState(id).attemptingResume,\r\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\r\n\r\n            if (handler._getFileState(id).loaded == null) {\r\n                handler._getFileState(id).loaded = 0;\r\n            }\r\n\r\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\r\n            if (resuming && options.onResume(id, name, chunkData) === false) {\r\n                chunked.reset(id);\r\n                chunkIdx = chunked.nextPart(id);\r\n                chunkData = handler._getChunkData(id, chunkIdx);\r\n                resuming = false;\r\n            }\r\n\r\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\r\n            if (chunkIdx == null && inProgressChunks.length === 0) {\r\n                chunked.finalize(id);\r\n            }\r\n\r\n            // Send the next chunk\r\n            else {\r\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\r\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\r\n                inProgressChunks.push(chunkIdx);\r\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\r\n\r\n                if (concurrentChunkingPossible) {\r\n                    connectionManager.open(id, chunkIdx);\r\n                }\r\n\r\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\r\n                    chunked.sendNext(id);\r\n                }\r\n\r\n                if (chunkData.blob.size === 0) {\r\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\r\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\r\n                }\r\n                else {\r\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\r\n                        // upload chunk success\r\n                        function success(response, xhr) {\r\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\r\n\r\n                            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\r\n                                responseToReport = upload.normalizeResponse(response, true),\r\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\r\n\r\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\r\n\r\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\r\n\r\n                            if (inProgressChunkIdx >= 0) {\r\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\r\n                            }\r\n\r\n                            handler._maybePersistChunkedState(id);\r\n\r\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\r\n                                chunked.finalize(id);\r\n                            }\r\n                            else if (chunked.hasMoreParts(id)) {\r\n                                chunked.sendNext(id);\r\n                            }\r\n                            else {\r\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\r\n                            }\r\n                        },\r\n\r\n                        // upload chunk failure\r\n                        function failure(response, xhr) {\r\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\r\n                        }\r\n                        )\r\n                        .done(function() {\r\n                            handler.clearXhr(id, chunkIdx);\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    connectionManager = {\r\n        _open: [],\r\n        _openChunks: {},\r\n        _waiting: [],\r\n\r\n        available: function() {\r\n            var max = options.maxConnections,\r\n                openChunkEntriesCount = 0,\r\n                openChunksCount = 0;\r\n\r\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\r\n                openChunkEntriesCount++;\r\n                openChunksCount += openChunkIndexes.length;\r\n            });\r\n\r\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\r\n        },\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        free: function(id, dontAllowNext) {\r\n            var allowNext = !dontAllowNext,\r\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\r\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\r\n                nextId;\r\n\r\n            delete connectionManager._openChunks[id];\r\n\r\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\r\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\r\n                delete handler._getFileState(id).file;\r\n            }\r\n\r\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\r\n            if (waitingIndex >= 0) {\r\n                connectionManager._waiting.splice(waitingIndex, 1);\r\n            }\r\n            // If this file was consuming a connection, allow the next file to be uploaded\r\n            else if (allowNext && connectionsIndex >= 0) {\r\n                connectionManager._open.splice(connectionsIndex, 1);\r\n\r\n                nextId = connectionManager._waiting.shift();\r\n                if (nextId >= 0) {\r\n                    connectionManager._open.push(nextId);\r\n                    upload.start(nextId);\r\n                }\r\n            }\r\n        },\r\n\r\n        getWaitingOrConnected: function() {\r\n            var waitingOrConnected = [];\r\n\r\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\r\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\r\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\r\n                if (chunks && chunks.length) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // For non-chunked files, only one connection will be consumed per file.\r\n            // This is where we aggregate those file IDs.\r\n            qq.each(connectionManager._open, function(idx, fileId) {\r\n                if (!connectionManager._openChunks[fileId]) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // There may be files waiting for a connection.\r\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\r\n\r\n            return waitingOrConnected;\r\n        },\r\n\r\n        isUsingConnection: function(id) {\r\n            return qq.indexOf(connectionManager._open, id) >= 0;\r\n        },\r\n\r\n        open: function(id, chunkIdx) {\r\n            if (chunkIdx == null) {\r\n                var alreadyInWaiting = qq.indexOf(connectionManager._waiting, id);\r\n                var alreadyInOpen = qq.indexOf(connectionManager._open, id);\r\n                if (alreadyInWaiting === -1 && alreadyInOpen === -1) {\r\n                    connectionManager._waiting.push(id);\r\n                }\r\n            }\r\n\r\n            if (connectionManager.available()) {\r\n                if (chunkIdx == null) {\r\n                    connectionManager._waiting.pop();\r\n                    connectionManager._open.push(id);\r\n                }\r\n                else {\r\n                    (function() {\r\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\r\n                        openChunksEntry.push(chunkIdx);\r\n                        connectionManager._openChunks[id] = openChunksEntry;\r\n                    }());\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        reset: function() {\r\n            connectionManager._waiting = [];\r\n            connectionManager._open = [];\r\n        }\r\n    },\r\n\r\n    simple = {\r\n        send: function(id, name) {\r\n            handler._getFileState(id).loaded = 0;\r\n\r\n            log(\"Sending simple upload request for \" + id);\r\n            handler.uploadFile(id).then(\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request succeeded for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, true),\r\n                        size = options.getSize(id);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    upload.maybeNewUuid(id, responseToReport);\r\n                    upload.cleanup(id, responseToReport, optXhr);\r\n                },\r\n\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request failed for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, false);\r\n\r\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\r\n                        upload.cleanup(id, responseToReport, optXhr);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    upload = {\r\n        cancel: function(id) {\r\n            log(\"Cancelling \" + id);\r\n            options.paramsStore.remove(id);\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        cleanup: function(id, response, optXhr) {\r\n            var name = options.getName(id);\r\n\r\n            options.onComplete(id, name, response, optXhr);\r\n\r\n            if (handler._getFileState(id)) {\r\n                handler._clearXhrs && handler._clearXhrs(id);\r\n            }\r\n\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\r\n        // if none of these are available for the ID\r\n        getProxyOrBlob: function(id) {\r\n            return (handler.getProxy && handler.getProxy(id)) ||\r\n                (handler.getFile && handler.getFile(id));\r\n        },\r\n\r\n        initHandler: function() {\r\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\r\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\r\n\r\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\r\n                options,\r\n                {\r\n                    getDataByUuid: options.getDataByUuid,\r\n                    getName: options.getName,\r\n                    getSize: options.getSize,\r\n                    getUuid: options.getUuid,\r\n                    log: log,\r\n                    onCancel: options.onCancel,\r\n                    onProgress: options.onProgress,\r\n                    onUuidChanged: options.onUuidChanged\r\n                }\r\n            );\r\n\r\n            if (handler._removeExpiredChunkingRecords) {\r\n                handler._removeExpiredChunkingRecords();\r\n            }\r\n        },\r\n\r\n        isDeferredEligibleForUpload: function(id) {\r\n            return options.isQueued(id);\r\n        },\r\n\r\n        // For Blobs that are part of a group of generated images, along with a reference image,\r\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\r\n        // even if some async processing must be completed on one or more Blobs first.\r\n        maybeDefer: function(id, blob) {\r\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\r\n            // and then submit the upload to the specific handler once the blob is available.\r\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\r\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\r\n\r\n                // Blob creation may take some time, so the caller may want to update the\r\n                // UI to indicate that an operation is in progress, even before the actual\r\n                // upload begins and an onUpload callback is invoked.\r\n                options.onUploadPrep(id);\r\n\r\n                log(\"Attempting to generate a blob on-demand for \" + id);\r\n                blob.create().then(function(generatedBlob) {\r\n                    log(\"Generated an on-demand blob for \" + id);\r\n\r\n                    // Update record associated with this file by providing the generated Blob\r\n                    handler.updateBlob(id, generatedBlob);\r\n\r\n                    // Propagate the size for this generated Blob\r\n                    options.setSize(id, generatedBlob.size);\r\n\r\n                    // Order handler to recalculate chunking possibility, if applicable\r\n                    handler.reevaluateChunking(id);\r\n\r\n                    upload.maybeSendDeferredFiles(id);\r\n                },\r\n\r\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\r\n                function(errorMessage) {\r\n                    var errorResponse = {};\r\n\r\n                    if (errorMessage) {\r\n                        errorResponse.error = errorMessage;\r\n                    }\r\n\r\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\r\n\r\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\r\n                    upload.maybeSendDeferredFiles(id);\r\n                    connectionManager.free(id);\r\n                });\r\n            }\r\n            else {\r\n                return upload.maybeSendDeferredFiles(id);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\r\n        maybeSendDeferredFiles: function(id) {\r\n            var idsInGroup = options.getIdsInProxyGroup(id),\r\n                uploadedThisId = false;\r\n\r\n            if (idsInGroup && idsInGroup.length) {\r\n                log(\"Maybe ready to upload proxy group file \" + id);\r\n\r\n                qq.each(idsInGroup, function(idx, idInGroup) {\r\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\r\n                        uploadedThisId = idInGroup === id;\r\n                        upload.now(idInGroup);\r\n                    }\r\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                uploadedThisId = true;\r\n                upload.now(id);\r\n            }\r\n\r\n            return uploadedThisId;\r\n        },\r\n\r\n        maybeNewUuid: function(id, response) {\r\n            if (response.newUuid !== undefined) {\r\n                options.onUuidChanged(id, response.newUuid);\r\n            }\r\n        },\r\n\r\n        // The response coming from handler implementations may be in various formats.\r\n        // Instead of hoping a promise nested 5 levels deep will always return an object\r\n        // as its first param, let's just normalize the response here.\r\n        normalizeResponse: function(originalResponse, successful) {\r\n            var response = originalResponse;\r\n\r\n            // The passed \"response\" param may not be a response at all.\r\n            // It could be a string, detailing the error, for example.\r\n            if (!qq.isObject(originalResponse)) {\r\n                response = {};\r\n\r\n                if (qq.isString(originalResponse) && !successful) {\r\n                    response.error = originalResponse;\r\n                }\r\n            }\r\n\r\n            response.success = successful;\r\n\r\n            return response;\r\n        },\r\n\r\n        now: function(id) {\r\n            var name = options.getName(id);\r\n\r\n            if (!controller.isValid(id)) {\r\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\r\n            }\r\n\r\n            options.onUpload(id, name);\r\n\r\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\r\n                chunked.sendNext(id);\r\n            }\r\n            else {\r\n                simple.send(id, name);\r\n            }\r\n        },\r\n\r\n        start: function(id) {\r\n            var blobToUpload = upload.getProxyOrBlob(id);\r\n\r\n            if (blobToUpload) {\r\n                return upload.maybeDefer(id, blobToUpload);\r\n            }\r\n            else {\r\n                upload.now(id);\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds file or file input to the queue\r\n         **/\r\n        add: function(id, file) {\r\n            handler.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id\r\n         */\r\n        upload: function(id) {\r\n            if (connectionManager.open(id)) {\r\n                return upload.start(id);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        retry: function(id) {\r\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\r\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\r\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\r\n            // any more failures at this point.\r\n            if (concurrentChunkingPossible) {\r\n                handler._getFileState(id).temp.ignoreFailure = false;\r\n            }\r\n\r\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\r\n            // Just go ahead and ask the handler to upload again.\r\n            if (connectionManager.isUsingConnection(id)) {\r\n                return upload.start(id);\r\n            }\r\n\r\n            // If we are attempting to retry a file that is not currently consuming a connection,\r\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\r\n            // before the retry commences.\r\n            else {\r\n                return controller.upload(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id) {\r\n            var cancelRetVal = handler.cancel(id);\r\n\r\n            if (qq.isGenericPromise(cancelRetVal)) {\r\n                cancelRetVal.then(function() {\r\n                    upload.cancel(id);\r\n                });\r\n            }\r\n            else if (cancelRetVal !== false) {\r\n                upload.cancel(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels all queued or in-progress uploads\r\n         */\r\n        cancelAll: function() {\r\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\r\n                i;\r\n\r\n            // ensure files are cancelled in reverse order which they were added\r\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\r\n            if (waitingOrConnected.length) {\r\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\r\n                    controller.cancel(waitingOrConnected[i]);\r\n                }\r\n            }\r\n\r\n            connectionManager.reset();\r\n        },\r\n\r\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\r\n        // Undefined if no file record is available.\r\n        getFile: function(id) {\r\n            if (handler.getProxy && handler.getProxy(id)) {\r\n                return handler.getProxy(id).referenceBlob;\r\n            }\r\n\r\n            return handler.getFile && handler.getFile(id);\r\n        },\r\n\r\n        // Returns true if the Blob associated with the ID is related to a proxy s\r\n        isProxied: function(id) {\r\n            return !!(handler.getProxy && handler.getProxy(id));\r\n        },\r\n\r\n        getInput: function(id) {\r\n            if (handler.getInput) {\r\n                return handler.getInput(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            log(\"Resetting upload handler\");\r\n            controller.cancelAll();\r\n            connectionManager.reset();\r\n            handler.reset();\r\n        },\r\n\r\n        expunge: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.expunge(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Determine if the file exists.\r\n         */\r\n        isValid: function(id) {\r\n            return handler.isValid(id);\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            if (handler.getResumableFilesData) {\r\n                return handler.getResumableFilesData();\r\n            }\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\r\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\r\n         * will be undefined.\r\n         *\r\n         * @param id Internal file ID\r\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\r\n         */\r\n        getThirdPartyFileId: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.getThirdPartyFileId(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\r\n         * @param id ID of the upload/file to pause\r\n         * @returns {boolean} true if the upload was paused\r\n         */\r\n        pause: function(id) {\r\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\r\n                connectionManager.free(id);\r\n                handler.moveInProgressToRemaining(id);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // True if the file is eligible for pause/resume.\r\n        isResumable: function(id) {\r\n            return !!handler.isResumable && handler.isResumable(id);\r\n        }\r\n    });\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\r\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\r\n\r\n    preventRetryResponse = (function() {\r\n        var response = {};\r\n\r\n        response[options.preventRetryParam] = true;\r\n\r\n        return response;\r\n    }());\r\n\r\n    upload.initHandler();\r\n};\r\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n",";(function (root, factory, undef) {\nif (qq.CryptoJS) { factory(qq.CryptoJS); } else { qq.CryptoJS = factory(); }\n}\n(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory, undef) {\nif (qq.CryptoJS) { factory(qq.CryptoJS); } else { qq.CryptoJS = factory(); }\n}\n(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory, undef) {\nif (qq.CryptoJS) { factory(qq.CryptoJS); } else { qq.CryptoJS = factory(); }\n}\n(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\nif (qq.CryptoJS) { factory(qq.CryptoJS); } else { qq.CryptoJS = factory(); }\n}\n(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory, undef) {\nif (qq.CryptoJS) { factory(qq.CryptoJS); } else { qq.CryptoJS = factory(); }\n}\n(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));",";(function (root, factory, undef) {\nif (qq.CryptoJS) { factory(qq.CryptoJS); } else { qq.CryptoJS = factory(); }\n}\n(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));","/*globals qq */\r\nqq.s3 = qq.s3 || {};\r\n\r\nqq.s3.util = qq.s3.util || (function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\r\n\r\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\r\n\r\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\r\n\r\n        DATE_PARAM_NAME: \"x-amz-date\",\r\n\r\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\r\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\r\n\r\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\r\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\r\n\r\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\r\n\r\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\r\n\r\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\r\n\r\n        CASE_SENSITIVE_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNSIGNABLE_REST_HEADER_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNPREFIXED_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\",\r\n            \"x-amz-server-side-encryption-customer-algorithm\",\r\n            \"x-amz-server-side-encryption-customer-key\",\r\n            \"x-amz-server-side-encryption-customer-key-MD5\"\r\n        ],\r\n\r\n        /**\r\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\r\n         *\r\n         * Examples of some valid endpoints are:\r\n         *     http://foo.s3.amazonaws.com\r\n         *     https://foo.s3.amazonaws.com\r\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\r\n         *     foo.s3.amazonaws.com\r\n         *     http://foo.bar.com\r\n         *     http://s3.amazonaws.com/foo.bar.com\r\n         * ...etc\r\n         *\r\n         * @param endpoint The bucket's URL.\r\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\r\n         */\r\n        getBucket: function(endpoint) {\r\n            var patterns = [\r\n                    //bucket in domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\r\n                    //bucket in path\r\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\r\n                    //custom domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\r\n                ],\r\n                bucket;\r\n\r\n            qq.each(patterns, function(idx, pattern) {\r\n                var match = pattern.exec(endpoint);\r\n\r\n                if (match) {\r\n                    bucket = match[1];\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return bucket;\r\n        },\r\n\r\n        /** Create Prefixed request headers which are appropriate for S3.\r\n         *\r\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\r\n         * it along without a metadata prefix. For all other request header parameter names,\r\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\r\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\r\n         */\r\n        _getPrefixedParamName: function(name) {\r\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\r\n                return name;\r\n            }\r\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\r\n        },\r\n\r\n        /**\r\n         * Create a policy document to be signed and sent along with the S3 upload request.\r\n         *\r\n         * @param spec Object with properties use to construct the policy document.\r\n         * @returns {Object} Policy doc.\r\n         */\r\n        getPolicy: function(spec) {\r\n            var policy = {},\r\n                conditions = [],\r\n                bucket = spec.bucket,\r\n                date = spec.date,\r\n                drift = spec.clockDrift,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                type = spec.type,\r\n                expectedStatus = spec.expectedStatus,\r\n                sessionToken = spec.sessionToken,\r\n                params = spec.params,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                minFileSize = spec.minFileSize,\r\n                maxFileSize = spec.maxFileSize,\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion;\r\n\r\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\r\n\r\n            conditions.push({acl: acl});\r\n            conditions.push({bucket: bucket});\r\n\r\n            if (type) {\r\n                conditions.push({\"Content-Type\": type});\r\n            }\r\n\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                conditions.push({success_action_status: expectedStatus.toString()});\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                conditions.push({success_action_redirect: successRedirectUrl});\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (signatureVersion === 2) {\r\n                conditions.push({key: key});\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1].key = key;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\r\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\r\n                    qq.s3.util.getV4PolicyDate(date, drift);\r\n            }\r\n\r\n            // user metadata\r\n            qq.each(params, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\r\n                    param = {};\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    param[awsParamName] = val;\r\n                }\r\n                else {\r\n                    param[awsParamName] = encodeURIComponent(val);\r\n                }\r\n\r\n                conditions.push(param);\r\n            });\r\n\r\n            policy.conditions = conditions;\r\n\r\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\r\n\r\n            return policy;\r\n        },\r\n\r\n        /**\r\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\r\n         * update the session token.  This is only relevant if requests are being signed client-side.\r\n         *\r\n         * @param policy Live policy document\r\n         * @param newSessionToken Updated session token.\r\n         */\r\n        refreshPolicyCredentials: function(policy, newSessionToken) {\r\n            var sessionTokenFound = false;\r\n\r\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\r\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\r\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\r\n                        oldCondObj[oldCondName] = newSessionToken;\r\n                        sessionTokenFound = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (!sessionTokenFound) {\r\n                policy.conditions.push({});\r\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\r\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\r\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\r\n         * still possible for a malicious user to tamper with these values during policy document generation,\r\n         * before it is sent to the server for signing.\r\n         *\r\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\r\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\r\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\r\n         */\r\n        generateAwsParams: function(spec, signPolicyCallback) {\r\n            var awsParams = {},\r\n                customParams = spec.params,\r\n                promise = new qq.Promise(),\r\n                sessionToken = spec.sessionToken,\r\n                drift = spec.clockDrift,\r\n                type = spec.type,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                expectedStatus = spec.expectedStatus,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion,\r\n                now = new Date(),\r\n                log = spec.log,\r\n                policyJson;\r\n\r\n            spec.date = now;\r\n            policyJson = qq.s3.util.getPolicy(spec);\r\n\r\n            awsParams.key = key;\r\n\r\n            if (type) {\r\n                awsParams[\"Content-Type\"] = type;\r\n            }\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                awsParams.success_action_status = expectedStatus;\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                awsParams.success_action_redirect = successRedirectUrl;\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            awsParams.acl = acl;\r\n\r\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\r\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\r\n            // Prefixed param values will be URI encoded as well.\r\n            qq.each(customParams, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    awsParams[awsParamName] = val;\r\n                }\r\n                else {\r\n                    awsParams[awsParamName] = encodeURIComponent(val);\r\n                }\r\n            });\r\n\r\n            if (signatureVersion === 2) {\r\n                awsParams.AWSAccessKeyId = accessKey;\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\r\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\r\n            }\r\n\r\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\r\n            // HMAC signature for the policy doc.\r\n            signPolicyCallback(policyJson).then(\r\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\r\n                    awsParams.policy = policyAndSignature.policy;\r\n\r\n                    if (spec.signatureVersion === 2) {\r\n                        awsParams.signature = policyAndSignature.signature;\r\n\r\n                        if (updatedAccessKey) {\r\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\r\n                        }\r\n                    }\r\n                    else if (spec.signatureVersion === 4) {\r\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\r\n                    }\r\n\r\n                    if (updatedSessionToken) {\r\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                    }\r\n\r\n                    promise.success(awsParams);\r\n                },\r\n                function(errorMessage) {\r\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\r\n                                                   \"a valid signature and policy from the server.\";\r\n\r\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\r\n                    promise.failure(errorMessage);\r\n                }\r\n            );\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\r\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\r\n         * checks already in place.\r\n         *\r\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\r\n         * @param minSize Minimum acceptable size, in bytes\r\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\r\n         */\r\n        enforceSizeLimits: function(policy, minSize, maxSize) {\r\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\r\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\r\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\r\n\r\n            if (minSize > 0 || maxSize > 0) {\r\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\r\n            }\r\n        },\r\n\r\n        getPolicyExpirationDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\r\n        },\r\n\r\n        getCredentialsDate: function(date) {\r\n            if (!date) {\r\n                date = new Date();\r\n            }\r\n            return date.getUTCFullYear() + \"\" +\r\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\r\n                (\"0\" + date.getUTCDate()).slice(-2);\r\n        },\r\n\r\n        getPolicyDate: function(date, _minutesToAdd_) {\r\n            var minutesToAdd = _minutesToAdd_ || 0,\r\n                pad, r;\r\n\r\n            /*jshint -W014 */\r\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\r\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\r\n\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                pad = function(number) {\r\n                    r = String(number);\r\n\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n\r\n                    return r;\r\n                };\r\n\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\r\n         * the associated resource.\r\n         *\r\n         * @param iframe Iframe containing response\r\n         * @returns {{bucket: *, key: *, etag: *}}\r\n         */\r\n        parseIframeResponse: function(iframe) {\r\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\r\n                queryString = doc.location.search,\r\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\r\n\r\n            if (match) {\r\n                return {\r\n                    bucket: match[1],\r\n                    key: match[2],\r\n                    etag: match[3].replace(/%22/g, \"\")\r\n                };\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param successRedirectUrl Relative or absolute location of success redirect page\r\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\r\n         */\r\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\r\n            if (successRedirectUrl) {\r\n                var targetAnchorContainer = document.createElement(\"div\"),\r\n                    targetAnchor;\r\n\r\n                if (qq.ie7()) {\r\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\r\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\r\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\r\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\r\n                    targetAnchor = targetAnchorContainer.firstChild;\r\n                    return targetAnchor.href;\r\n                }\r\n                else {\r\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\r\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\r\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\r\n                    // in order to ensure relative URLs will be properly parsed.\r\n                    targetAnchor = document.createElement(\"a\");\r\n                    targetAnchor.href = successRedirectUrl;\r\n                    targetAnchor.href = targetAnchor.href;\r\n                    return targetAnchor.href;\r\n                }\r\n            }\r\n        },\r\n\r\n        getV4CredentialsString: function(spec) {\r\n            return spec.key + \"/\" +\r\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\r\n                spec.region + \"/s3/aws4_request\";\r\n        },\r\n\r\n        getV4PolicyDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n\r\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\r\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\r\n                    \"Z\";\r\n        },\r\n\r\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\r\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\r\n        // and spaces are replaced with \"+\".\r\n        encodeQueryStringParam: function(param) {\r\n            var percentEncoded = encodeURIComponent(param);\r\n\r\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\r\n\r\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\r\n\r\n            // replace percent-encoded spaces with a \"+\"\r\n            return percentEncoded.replace(/%20/g, \"+\");\r\n        },\r\n        /**\r\n         * Escapes url part as for AWS requirements\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscape: function(string) {\r\n            var output = encodeURIComponent(string);\r\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\r\n            output = output.replace(/[*]/g, function(ch) {\r\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\r\n            });\r\n            return output;\r\n        },\r\n        /**\r\n         * Escapes a path as for AWS requirement\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscapePath: function(path) {\r\n            var parts = [];\r\n            qq.each(path.split(\"/\"), function(idx, item) {\r\n                parts.push(qq.s3.util.uriEscape(item));\r\n            });\r\n            return parts.join(\"/\");\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploaderBasic = function(o) {\n        var options = {\n            request: {\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\n                accessKey: null,\n\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\n                clockDrift: 0\n            },\n\n            objectProperties: {\n                acl: \"private\",\n\n                // string or a function which may be promissory\n                bucket: qq.bind(function(id) {\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\n                }, this),\n\n                // string or a function which may be promissory - only used for V4 multipart uploads\n                host: qq.bind(function(id) {\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\n                }, this),\n\n                // 'uuid', 'filename', or a function which may be promissory\n                key: \"uuid\",\n\n                reducedRedundancy: false,\n\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\n                region: \"us-east-1\",\n\n                serverSideEncryption: false\n            },\n\n            credentials: {\n                // Public key (required).\n                accessKey: null,\n                // Private key (required).\n                secretKey: null,\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\n                expiration: null,\n                // Temporary credentials session token.\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\n                sessionToken: null\n            },\n\n            // All but `version` are ignored if `credentials` is provided.\n            signature: {\n                customHeaders: {},\n                endpoint: null,\n                version: 2\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            // required if non-File-API browsers, such as IE9 and older, are used\n            iframeSupport: {\n                localBlankPagePath: null\n            },\n\n            chunking: {\n                // minimum part size is 5 MiB when uploading to S3\n                partSize: 5242880\n            },\n\n            cors: {\n                allowXdr: true\n            },\n\n            callbacks: {\n                onCredentialsExpired: function() {}\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        if (!this.setCredentials(options.credentials, true)) {\n            this._currentCredentials.accessKey = options.request.accessKey;\n        }\n\n        this._aclStore = this._createStore(options.objectProperties.acl);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds S3 keys for file representations constructed from a session request.\n        this._cannedKeys = {};\n        // Holds S3 buckets for file representations constructed from a session request.\n        this._cannedBuckets = {};\n\n        this._buckets = {};\n        this._hosts = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\n        getBucket: function(id) {\n            if (this._cannedBuckets[id] == null) {\n                return this._buckets[id];\n            }\n            return this._cannedBuckets[id];\n        },\n\n        /**\n         * @param id File ID\n         * @returns {*} Key name associated w/ the file, if one exists\n         */\n        getKey: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedKeys[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n\n            return this._cannedKeys[id];\n        },\n\n        /**\n         * Override the parent's reset function to cleanup various S3-related items.\n         */\n        reset: function() {\n            qq.FineUploaderBasic.prototype.reset.call(this);\n            this._failedSuccessRequestCallbacks = [];\n            this._buckets = {};\n            this._hosts = {};\n        },\n\n        setCredentials: function(credentials, ignoreEmpty) {\n            if (credentials && credentials.secretKey) {\n                if (!credentials.accessKey) {\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\n                }\n                else if (!credentials.expiration) {\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\n                }\n                else {\n                    this._currentCredentials = qq.extend({}, credentials);\n\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\n                    if (qq.isString(credentials.expiration)) {\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\n                    }\n                }\n\n                return true;\n            }\n            else if (!ignoreEmpty) {\n                throw new qq.Error(\"Invalid credentials parameter!\");\n            }\n            else {\n                this._currentCredentials = {};\n            }\n        },\n\n        setAcl: function(acl, id) {\n            this._aclStore.set(acl, id);\n        },\n\n        /**\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\n         *\n         * @returns {qq.UploadHandlerController}\n         * @private\n         */\n        _createUploadHandler: function() {\n            var self = this,\n                additionalOptions = {\n                    aclStore: this._aclStore,\n                    getBucket: qq.bind(this._determineBucket, this),\n                    getHost: qq.bind(this._determineHost, this),\n                    getKeyName: qq.bind(this._determineKeyName, this),\n                    iframeSupport: this._options.iframeSupport,\n                    objectProperties: this._options.objectProperties,\n                    signature: this._options.signature,\n                    clockDrift: this._options.request.clockDrift,\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\n                    validation: {\n                        minSizeLimit: this._options.validation.minSizeLimit,\n                        maxSizeLimit: this._options.validation.sizeLimit\n                    }\n                };\n\n            // We assume HTTP if it is missing from the start of the endpoint string.\n            qq.override(this._endpointStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var endpoint = super_.get(id);\n\n                        if (endpoint.indexOf(\"http\") < 0) {\n                            return \"http://\" + endpoint;\n                        }\n\n                        return endpoint;\n                    }\n                };\n            });\n\n            // Some param names should be lower case to avoid signature mismatches\n            qq.override(this._paramsStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var oldParams = super_.get(id),\n                            modifiedParams = {};\n\n                        qq.each(oldParams, function(name, val) {\n                            var paramName = name;\n\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\n                                paramName = paramName.toLowerCase();\n                            }\n\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\n                        });\n\n                        return modifiedParams;\n                    }\n                };\n            });\n\n            additionalOptions.signature.credentialsProvider = {\n                get: function() {\n                    return self._currentCredentials;\n                },\n\n                onExpired: function() {\n                    var updateCredentials = new qq.Promise(),\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\n\n                    if (qq.isGenericPromise(callbackRetVal)) {\n                        callbackRetVal.then(function(credentials) {\n                            try {\n                                self.setCredentials(credentials);\n                                updateCredentials.success();\n                            }\n                            catch (error) {\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\n                            }\n                        }, function(errorMsg) {\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\n                        });\n                    }\n                    else {\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\n                    }\n\n                    return updateCredentials;\n                }\n            };\n\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\n        },\n\n        _determineObjectPropertyValue: function(id, property) {\n            var maybe = this._options.objectProperties[property],\n                promise = new qq.Promise(),\n                self = this;\n\n            if (qq.isFunction(maybe)) {\n                maybe = maybe(id);\n                if (qq.isGenericPromise(maybe)) {\n                    promise = maybe;\n                }\n                else {\n                    promise.success(maybe);\n                }\n            }\n            else if (qq.isString(maybe)) {\n                promise.success(maybe);\n            }\n\n            promise.then(\n                function success(value) {\n                    self[\"_\" + property + \"s\"][id] = value;\n                },\n\n                function failure(errorMsg) {\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\n                }\n            );\n\n            return promise;\n        },\n\n        _determineBucket: function(id) {\n            return this._determineObjectPropertyValue(id, \"bucket\");\n        },\n\n        _determineHost: function(id) {\n            return this._determineObjectPropertyValue(id, \"host\");\n        },\n\n        /**\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\n         * delegate to an integrator-defined function that determines the file's key name on demand,\n         * which also may be promissory.\n         *\n         * @param id ID of the file\n         * @param filename Name of the file\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\n         * @private\n         */\n        _determineKeyName: function(id, filename) {\n            /*jshint -W015*/\n            var promise = new qq.Promise(),\n                keynameLogic = this._options.objectProperties.key,\n                extension = qq.getExtension(filename),\n                onGetKeynameFailure = promise.failure,\n                onGetKeynameSuccess = function(keyname, extension) {\n                    var keynameToUse = keyname;\n\n                    if (extension !== undefined) {\n                        keynameToUse += \".\" + extension;\n                    }\n\n                    promise.success(keynameToUse);\n                };\n\n            switch (keynameLogic) {\n                case \"uuid\":\n                    onGetKeynameSuccess(this.getUuid(id), extension);\n                    break;\n                case \"filename\":\n                    onGetKeynameSuccess(filename);\n                    break;\n                default:\n                    if (qq.isFunction(keynameLogic)) {\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\n                    }\n                    else {\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\n                        onGetKeynameFailure();\n                    }\n            }\n\n            return promise;\n        },\n\n        /**\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\n         * the promise contract associated with the caller as well.\n         *\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\n         * @param id ID of the associated file\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\n         * @private\n         */\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\n            var self = this,\n                onSuccess = function(keyname) {\n                    successCallback(keyname);\n                },\n                onFailure = function(reason) {\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\n                    failureCallback(reason);\n                },\n                keyname = keynameFunc.call(this, id);\n\n            if (qq.isGenericPromise(keyname)) {\n                keyname.then(onSuccess, onFailure);\n            }\n            /*jshint -W116*/\n            else if (keyname == null) {\n                onFailure();\n            }\n            else {\n                onSuccess(keyname);\n            }\n        },\n\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\n            var params = {\n                key: this.getKey(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                bucket: this.getBucket(id)\n            };\n\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\n            }\n            else if (response.etag) {\n                params.etag = response.etag;\n            }\n\n            return params;\n        },\n\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\n        _onSubmitDelete: function(id, onSuccessCallback) {\n            var additionalMandatedParams = {\n                key: this.getKey(id),\n                bucket: this.getBucket(id)\n            };\n\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.s3Key == null) {\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedKeys[id] = sessionData.s3Key;\n                this._cannedBuckets[id] = sessionData.s3Bucket;\n            }\n\n            return id;\n        }\n    });\n}());\n","/* globals qq, CryptoJS */\r\n\r\n/**\r\n * Manages creation and communication of s3 signature workers.\r\n */\r\nqq.s3.RequestSignerWorkerManager = function (o) {\r\n    \"use strict\";\r\n    var worker = null,\r\n        workerPromises = {},\r\n        options = {\r\n            workerUrl: null,\r\n            log: function(str, level) {}\r\n        };\r\n    qq.extend(options, o, true);\r\n\r\n    function init() {\r\n        var workerUrl;\r\n        switch (typeof options.workerUrl) {\r\n            case \"string\":\r\n                if (options.workerUrl !== \"inline\") {\r\n                    workerUrl = options.workerUrl;\r\n                } else {\r\n                    workerUrl = qq.s3.createS3InlineWorkerUrl();\r\n                }\r\n                break;\r\n            case \"function\":\r\n                workerUrl = options.workerUrl();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (!workerUrl) {\r\n            return;\r\n        }\r\n        try {\r\n            worker = new Worker(workerUrl);\r\n            worker.onerror = function (e) {\r\n                // Prevent the event from bubbling\r\n                e.preventDefault();\r\n                // log the error, and fail any pending promises.\r\n                options.log(\"Worker encountered an error. Disabling. \" + e.message, \"warn\");\r\n                worker = null;\r\n                var outstandingRequests = Object.keys(workerPromises),\r\n                    i;\r\n                for (i = 0; i < outstandingRequests.length; i++) {\r\n                    workerPromises[outstandingRequests[i]].failure(e);\r\n                    delete workerPromises[outstandingRequests[i]];\r\n                }\r\n            };\r\n            worker.onmessage = function (e) {\r\n                if (!workerPromises[e.data.id]) {\r\n                    options.log(\"Worker returned a result for an request we dont know about.\", \"warn\");\r\n                    return;\r\n                }\r\n                if (e.data.err) {\r\n                    workerPromises[e.data.id].failure(e.data.err);\r\n                } else {\r\n                    workerPromises[e.data.id].success(e.data.resp);\r\n                }\r\n                delete workerPromises[e.data.id];\r\n            };\r\n        }  catch (ex) {\r\n            // worker is not supported or invalid\r\n            options.log(\"Worker failed to be created. Defaulting back to main thread processing.\" + ex, \"warn\");\r\n            worker = null;\r\n        }\r\n    }\r\n    init();\r\n    /*\r\n        Generates the signuare of the given file.\r\n        @param file the file/slice to generate the signature for.\r\n        @returns a promise or null if we can't generate signatures at all.\r\n    */\r\n    this.generateSignature = function (file) {\r\n        if (!worker) {\r\n            return null;\r\n        }\r\n        var promise = new qq.Promise(),\r\n            task = {file: file, id: qq.getUniqueId()};\r\n        workerPromises[task.id] = promise;\r\n        worker.postMessage(task);\r\n        return promise;\r\n    };\r\n};\r\n","/* globals qq, CryptoJS */\r\n\r\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\r\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\r\nif (!window.Uint8ClampedArray) {\r\n    window.Uint8ClampedArray = function() {};\r\n}\r\n/**\r\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\r\n *\r\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\r\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\r\n * to determine if the effort was successful.\r\n *\r\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\r\n * sign the requests directly in the browser and send them off to S3.\r\n *\r\n * @param o Options associated with all such requests\r\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\r\n * @constructor\r\n */\r\nqq.s3.RequestSigner = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        thisSignatureRequester = this,\r\n        pendingSignatures = {},\r\n        options = {\r\n            expectingPolicy: false,\r\n            method: \"POST\",\r\n            signatureSpec: {\r\n                drift: 0,\r\n                credentialsProvider: {},\r\n                endpoint: null,\r\n                customHeaders: {},\r\n                version: 2\r\n            },\r\n            maxConnections: 3,\r\n            endpointStore: {},\r\n            paramsStore: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {}\r\n        },\r\n        credentialsProvider,\r\n\r\n        generateHeaders = function(signatureConstructor, signature, promise) {\r\n            var headers = signatureConstructor.getHeaders();\r\n\r\n            if (options.signatureSpec.version === 4) {\r\n                headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\r\n                    \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\r\n                    qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\r\n                    options.signatureSpec.region + \"/\" +\r\n                    \"s3/aws4_request,\" +\r\n                    \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\r\n                    \"Signature=\" + signature;\r\n            }\r\n            else {\r\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\r\n            }\r\n\r\n            promise.success(headers, signatureConstructor.getEndOfUrl());\r\n        },\r\n\r\n        v2 = {\r\n            getStringToSign: function(signatureSpec) {\r\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\r\n                    signatureSpec.method,\r\n                    signatureSpec.contentMd5 || \"\",\r\n                    signatureSpec.contentType || \"\",\r\n                    signatureSpec.headersStr || \"\\n\",\r\n                    signatureSpec.bucket,\r\n                    signatureSpec.endOfUrl);\r\n            },\r\n\r\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\r\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\r\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\r\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\r\n\r\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\r\n            },\r\n\r\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n                var policyStr = JSON.stringify(policy),\r\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\r\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\r\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\r\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\r\n\r\n                signatureEffort.success({\r\n                    policy: base64Policy,\r\n                    signature: policyHmacSha1Base64\r\n                }, updatedAccessKey, updatedSessionToken);\r\n            }\r\n        },\r\n\r\n        v4 = {\r\n            getCanonicalQueryString: function(endOfUri) {\r\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\r\n                    canonicalQueryString = \"\",\r\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\r\n\r\n                if (queryParamIdx >= 0) {\r\n                    encodedQueryParams = {};\r\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\r\n\r\n                    qq.each(queryStrings, function(idx, queryString) {\r\n                        var nameAndVal = queryString.split(\"=\"),\r\n                            paramVal = nameAndVal[1];\r\n\r\n                        if (paramVal == null) {\r\n                            paramVal = \"\";\r\n                        }\r\n\r\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\r\n                    });\r\n\r\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\r\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\r\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\r\n                        if (idx < encodedQueryParamNames.length - 1) {\r\n                            canonicalQueryString += \"&\";\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return canonicalQueryString;\r\n            },\r\n\r\n            getCanonicalRequest: function(signatureSpec) {\r\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\r\n                    signatureSpec.method,\r\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\r\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\r\n                    signatureSpec.headersStr || \"\\n\",\r\n                    v4.getSignedHeaders(signatureSpec.headerNames),\r\n                    signatureSpec.hashedContent);\r\n            },\r\n\r\n            getCanonicalUri: function(endOfUri) {\r\n                var path = endOfUri,\r\n                    queryParamIdx = endOfUri.indexOf(\"?\");\r\n\r\n                if (queryParamIdx > 0) {\r\n                    path = endOfUri.substr(0, queryParamIdx);\r\n                }\r\n                return \"/\" + path;\r\n            },\r\n\r\n            getEncodedHashedPayload: function(body) {\r\n                var promise,\r\n                    reader;\r\n                if (qq.isBlob(body)) {\r\n                    // We will fallback to the inline reader if the worker was\r\n                    // not loaded correctly\r\n                    if (options.signatureSpec.workerManager) {\r\n                        promise = options.signatureSpec.workerManager.generateSignature(body);\r\n                        if (promise !== null) {\r\n                            return promise;\r\n                        }\r\n                    }\r\n                    promise = new qq.Promise();\r\n                    reader = new FileReader();\r\n                    reader.onloadend = function(e) {\r\n                        if (e.target.readyState === FileReader.DONE) {\r\n                            if (e.target.error) {\r\n                                promise.failure(e.target.error);\r\n                            }\r\n                            else {\r\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\r\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\r\n                            }\r\n                        }\r\n                    };\r\n                    reader.readAsArrayBuffer(body);\r\n                    return promise;\r\n                }\r\n                promise = new qq.Promise();\r\n                body = body || \"\";\r\n                promise.success(qq.CryptoJS.SHA256(body).toString());\r\n                return promise;\r\n            },\r\n\r\n            getScope: function(date, region) {\r\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\r\n                    region + \"/s3/aws4_request\";\r\n            },\r\n\r\n            getStringToSign: function(signatureSpec) {\r\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\r\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\r\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\r\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\r\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\r\n\r\n                return {\r\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\r\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\r\n                };\r\n            },\r\n\r\n            getSignedHeaders: function(headerNames) {\r\n                var signedHeaders = \"\";\r\n\r\n                headerNames.forEach(function(headerName, idx) {\r\n                    signedHeaders += headerName.toLowerCase();\r\n\r\n                    if (idx < headerNames.length - 1) {\r\n                        signedHeaders += \";\";\r\n                    }\r\n                });\r\n\r\n                return signedHeaders;\r\n            },\r\n\r\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\r\n                var secretKey = credentialsProvider.get().secretKey,\r\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\r\n                    matches = headersPattern.exec(headersStr),\r\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\r\n\r\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\r\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\r\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\r\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\r\n\r\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\r\n            },\r\n\r\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n                var policyStr = JSON.stringify(policy),\r\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\r\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\r\n                    secretKey = credentialsProvider.get().secretKey,\r\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\r\n                    credentialCondition = (function() {\r\n                        var credential = null;\r\n                        qq.each(policy.conditions, function(key, condition) {\r\n                            var val = condition[\"x-amz-credential\"];\r\n                            if (val) {\r\n                                credential = val;\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return credential;\r\n                    }()),\r\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\r\n\r\n                matches = credentialPattern.exec(credentialCondition);\r\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\r\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\r\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\r\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\r\n\r\n                signatureEffort.success({\r\n                    policy: base64Policy,\r\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\r\n                }, updatedAccessKey, updatedSessionToken);\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o, true);\r\n    credentialsProvider = options.signatureSpec.credentialsProvider;\r\n\r\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\r\n        var responseJson = xhrOrXdr.responseText,\r\n            pendingSignatureData = pendingSignatures[id],\r\n            promise = pendingSignatureData.promise,\r\n            signatureConstructor = pendingSignatureData.signatureConstructor,\r\n            errorMessage, response;\r\n\r\n        delete pendingSignatures[id];\r\n\r\n        // Attempt to parse what we would expect to be a JSON response\r\n        if (responseJson) {\r\n            try {\r\n                response = qq.parseJson(responseJson);\r\n            }\r\n            catch (error) {\r\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\r\n            }\r\n        }\r\n\r\n        // If the response is parsable and contains an `error` property, use it as the error message\r\n        if (response && response.error) {\r\n            isError = true;\r\n            errorMessage = response.error;\r\n        }\r\n        // If we have received a parsable response, and it has an `invalid` property,\r\n        // the policy document or request headers may have been tampered with client-side.\r\n        else if (response && response.invalid) {\r\n            isError = true;\r\n            errorMessage = \"Invalid policy document or request headers!\";\r\n        }\r\n        // Make sure the response contains policy & signature properties\r\n        else if (response) {\r\n            if (options.expectingPolicy && !response.policy) {\r\n                isError = true;\r\n                errorMessage = \"Response does not include the base64 encoded policy!\";\r\n            }\r\n            else if (!response.signature) {\r\n                isError = true;\r\n                errorMessage = \"Response does not include the signature!\";\r\n            }\r\n        }\r\n        // Something unknown went wrong\r\n        else {\r\n            isError = true;\r\n            errorMessage = \"Received an empty or invalid response from the server!\";\r\n        }\r\n\r\n        if (isError) {\r\n            if (errorMessage) {\r\n                options.log(errorMessage, \"error\");\r\n            }\r\n\r\n            promise.failure(errorMessage);\r\n        }\r\n        else if (signatureConstructor) {\r\n            generateHeaders(signatureConstructor, response.signature, promise);\r\n        }\r\n        else {\r\n            promise.success(response);\r\n        }\r\n    }\r\n\r\n    function getStringToSignArtifacts(id, version, requestInfo) {\r\n        var promise = new qq.Promise(),\r\n            method = \"POST\",\r\n            headerNames = [],\r\n            headersStr = \"\",\r\n            now = new Date(),\r\n            endOfUrl, signatureSpec, toSign,\r\n\r\n            generateStringToSign = function(requestInfo) {\r\n                var contentMd5,\r\n                    headerIndexesToRemove = [];\r\n\r\n                qq.each(requestInfo.headers, function(name) {\r\n                    headerNames.push(name);\r\n                });\r\n                headerNames.sort();\r\n\r\n                qq.each(headerNames, function(idx, headerName) {\r\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\r\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\r\n                    }\r\n                    else if (headerName === \"Content-MD5\") {\r\n                        contentMd5 = requestInfo.headers[headerName];\r\n                    }\r\n                    else {\r\n                        headerIndexesToRemove.unshift(idx);\r\n                    }\r\n                });\r\n\r\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\r\n                    headerNames.splice(headerIdx, 1);\r\n                });\r\n\r\n                signatureSpec = {\r\n                    bucket: requestInfo.bucket,\r\n                    contentMd5: contentMd5,\r\n                    contentType: requestInfo.contentType,\r\n                    date: now,\r\n                    drift: options.signatureSpec.drift,\r\n                    endOfUrl: endOfUrl,\r\n                    hashedContent: requestInfo.hashedContent,\r\n                    headerNames: headerNames,\r\n                    headersStr: headersStr,\r\n                    method: method\r\n                };\r\n\r\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\r\n\r\n                return {\r\n                    date: now,\r\n                    endOfUrl: endOfUrl,\r\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\r\n                    toSign: version === 4 ? toSign.hashed : toSign,\r\n                    toSignRaw: version === 4 ? toSign.raw : toSign\r\n                };\r\n            };\r\n\r\n        /*jshint indent:false */\r\n        switch (requestInfo.type) {\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\r\n                method = \"DELETE\";\r\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\r\n                endOfUrl = \"uploads\";\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\r\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\r\n                method = \"PUT\";\r\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\r\n                break;\r\n        }\r\n\r\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\r\n        if (version === 4) {\r\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\r\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\r\n                requestInfo.headers.Host = requestInfo.host;\r\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\r\n                requestInfo.hashedContent = hashedContent;\r\n\r\n                promise.success(generateStringToSign(requestInfo));\r\n            }, function (err) {\r\n                promise.failure(err);\r\n            });\r\n        }\r\n        else {\r\n            promise.success(generateStringToSign(requestInfo));\r\n        }\r\n\r\n        return promise;\r\n    }\r\n\r\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n        var updatedHeaders;\r\n\r\n        // REST API request\r\n        if (toBeSigned.signatureConstructor) {\r\n            if (updatedSessionToken) {\r\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\r\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\r\n            }\r\n\r\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\r\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\r\n            }, function (err) {\r\n                signatureEffort.failure(err);\r\n            });\r\n        }\r\n        // Form upload (w/ policy document)\r\n        else {\r\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\r\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n    }\r\n\r\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n        if (options.signatureSpec.version === 4) {\r\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n        else {\r\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n    }\r\n\r\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\r\n        if (options.signatureSpec.version === 4) {\r\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\r\n        }\r\n        else {\r\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\r\n        }\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        method: options.method,\r\n        contentType: \"application/json; charset=utf-8\",\r\n        endpointStore: {\r\n            get: function() {\r\n                return options.signatureSpec.endpoint;\r\n            }\r\n        },\r\n        paramsStore: options.paramsStore,\r\n        maxConnections: options.maxConnections,\r\n        customHeaders: options.signatureSpec.customHeaders,\r\n        log: options.log,\r\n        onComplete: handleSignatureReceived,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\r\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\r\n         *\r\n         * @param id File ID.\r\n         * @param toBeSigned an Object that holds the item(s) to be signed\r\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\r\n         */\r\n        getSignature: function(id, toBeSigned) {\r\n            var params = toBeSigned,\r\n                signatureConstructor = toBeSigned.signatureConstructor,\r\n                signatureEffort = new qq.Promise(),\r\n                queryParams;\r\n\r\n            if (options.signatureSpec.version === 4) {\r\n                queryParams = {v4: true};\r\n            }\r\n\r\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\r\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\r\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\r\n                }\r\n                // If credentials are expired, ask for new ones before attempting to sign request\r\n                else {\r\n                    credentialsProvider.onExpired().then(function() {\r\n                        determineSignatureClientSide(id, toBeSigned,\r\n                            signatureEffort,\r\n                            credentialsProvider.get().accessKey,\r\n                            credentialsProvider.get().sessionToken);\r\n                    }, function(errorMsg) {\r\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\r\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                options.log(\"Submitting S3 signature request for \" + id);\r\n\r\n                if (signatureConstructor) {\r\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\r\n                        params = {headers: signatureArtifacts.stringToSignRaw};\r\n                        requester.initTransport(id)\r\n                            .withParams(params)\r\n                            .withQueryParams(queryParams)\r\n                            .send();\r\n                    }, function (err) {\r\n                        options.log(\"Failed to construct signature. \", \"error\");\r\n                        signatureEffort.failure(\"Failed to construct signature.\");\r\n                    });\r\n                }\r\n                else {\r\n                    requester.initTransport(id)\r\n                        .withParams(params)\r\n                        .withQueryParams(queryParams)\r\n                        .send();\r\n                }\r\n\r\n                pendingSignatures[id] = {\r\n                    promise: signatureEffort,\r\n                    signatureConstructor: signatureConstructor\r\n                };\r\n            }\r\n\r\n            return signatureEffort;\r\n        },\r\n\r\n        constructStringToSign: function(type, bucket, host, key) {\r\n            var headers = {},\r\n                uploadId, content, contentType, partNum, artifacts;\r\n\r\n            return {\r\n                withHeaders: function(theHeaders) {\r\n                    headers = theHeaders;\r\n                    return this;\r\n                },\r\n\r\n                withUploadId: function(theUploadId) {\r\n                    uploadId = theUploadId;\r\n                    return this;\r\n                },\r\n\r\n                withContent: function(theContent) {\r\n                    content = theContent;\r\n                    return this;\r\n                },\r\n\r\n                withContentType: function(theContentType) {\r\n                    contentType = theContentType;\r\n                    return this;\r\n                },\r\n\r\n                withPartNum: function(thePartNum) {\r\n                    partNum = thePartNum;\r\n                    return this;\r\n                },\r\n\r\n                getToSign: function(id) {\r\n                    var sessionToken = credentialsProvider.get().sessionToken,\r\n                        promise = new qq.Promise(),\r\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\r\n\r\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\r\n\r\n                    if (sessionToken) {\r\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n                    }\r\n\r\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\r\n                        bucket: bucket,\r\n                        content: content,\r\n                        contentType: contentType,\r\n                        headers: headers,\r\n                        host: host,\r\n                        key: key,\r\n                        partNum: partNum,\r\n                        type: type,\r\n                        uploadId: uploadId\r\n                    }).then(function(_artifacts_) {\r\n                        artifacts = _artifacts_;\r\n                        promise.success({\r\n                            headers: (function() {\r\n                                if (contentType) {\r\n                                    headers[\"Content-Type\"] = contentType;\r\n                                }\r\n\r\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\r\n                                return headers;\r\n                            }()),\r\n                            date: artifacts.date,\r\n                            endOfUrl: artifacts.endOfUrl,\r\n                            signedHeaders: artifacts.signedHeaders,\r\n                            stringToSign: artifacts.toSign,\r\n                            stringToSignRaw: artifacts.toSignRaw\r\n                        });\r\n                    }, function (err) {\r\n                        promise.failure(err);\r\n                    });\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getHeaders: function() {\r\n                    return qq.extend({}, headers);\r\n                },\r\n\r\n                getEndOfUrl: function() {\r\n                    return artifacts && artifacts.endOfUrl;\r\n                },\r\n\r\n                getRequestDate: function() {\r\n                    return artifacts && artifacts.date;\r\n                },\r\n\r\n                getSignedHeaders: function() {\r\n                    return artifacts && artifacts.signedHeaders;\r\n                }\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\r\n    MULTIPART_INITIATE: \"multipart_initiate\",\r\n    MULTIPART_COMPLETE: \"multipart_complete\",\r\n    MULTIPART_ABORT: \"multipart_abort\",\r\n    MULTIPART_UPLOAD: \"multipart_upload\"\r\n};\r\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\n * request to S3 via the REST API.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingInitiateRequests = {},\n        options = {\n            filenameParam: \"qqfilename\",\n            method: \"POST\",\n            endpointStore: null,\n            paramsStore: null,\n            signatureSpec: null,\n            aclStore: null,\n            reducedRedundancy: false,\n            serverSideEncryption: false,\n            maxConnections: 3,\n            getContentType: function(id) {},\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            getName: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\n     * method on the promise will be called.\n     *\n     * @param id Associated file ID\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id) {\n        var bucket = options.getBucket(id),\n            host = options.getHost(id),\n            headers = {},\n            promise = new qq.Promise(),\n            key = options.getKey(id),\n            signatureConstructor;\n\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\n\n        if (options.reducedRedundancy) {\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n        }\n\n        if (options.serverSideEncryption) {\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n        }\n\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\n\n        qq.each(options.paramsStore.get(id), function(name, val) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                headers[name] = val;\n            }\n            else {\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\n            }\n        });\n\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\n            .withContentType(options.getContentType(id))\n            .withHeaders(headers);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Initiate MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleInitiateRequestComplete(id, xhr, isError) {\n        var promise = pendingInitiateRequests[id],\n            domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\n\n        delete pendingInitiateRequests[id];\n\n        // The base ajax requester may declare the request to be a failure based on status code.\n        if (isError) {\n            status = xhr.status;\n\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\n            if (messageElements.length > 0) {\n                errorMessage = messageElements[0].textContent;\n            }\n        }\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\n        else {\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\n            if (uploadIdElements.length > 0) {\n                uploadId = uploadIdElements[0].textContent;\n            }\n            else {\n                errorMessage = \"Upload ID missing from request\";\n            }\n        }\n\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\n        if (uploadId === undefined) {\n            if (errorMessage) {\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\n            }\n\n            promise.failure(\"Problem initiating upload request.\", xhr);\n        }\n        else {\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\n            promise.success(uploadId, xhr);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleInitiateRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\n         *\n         * @param id The ID associated with the file\n         * @returns {qq.Promise}\n         */\n        send: function(id) {\n            var promise = new qq.Promise();\n\n            getHeaders(id).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\n\n                pendingInitiateRequests[id] = promise;\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\n * request to S3 via the REST API.\n *\n * @param o Options passed by the creator, to overwrite any default option values.\n * @constructor\n */\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingCompleteRequests = {},\n        options = {\n            method: \"POST\",\n            contentType: \"text/xml\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId, body) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\n                .withUploadId(uploadId)\n                .withContent(body)\n                .withContentType(\"application/xml; charset=UTF-8\");\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Complete MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleCompleteRequestComplete(id, xhr, isError) {\n        var promise = pendingCompleteRequests[id],\n            domParser = new DOMParser(),\n            bucket = options.getBucket(id),\n            key = options.getKey(id),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\n\n        delete pendingCompleteRequests[id];\n\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (bucketEls.length && keyEls.length) {\n                if (bucketEls[0].textContent !== bucket) {\n                    isError = true;\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\n                }\n\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\n            }\n            else {\n                isError = true;\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\n            }\n        }\n\n        if (isError) {\n            promise.failure(\"Problem combining the file parts!\", xhr);\n        }\n        else {\n            promise.success({}, xhr);\n        }\n    }\n\n    /**\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\n     */\n    function getCompleteRequestBody(etagEntries) {\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\n\n        // The entries MUST be sorted by part number, per the AWS API spec.\n        etagEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(etagEntries, function(idx, etagEntry) {\n            var part = etagEntry.part,\n                etag = etagEntry.etag,\n                partEl = doc.createElement(\"Part\"),\n                partNumEl = doc.createElement(\"PartNumber\"),\n                partNumTextEl = doc.createTextNode(part),\n                etagTextEl = doc.createTextNode(etag),\n                etagEl = doc.createElement(\"ETag\");\n\n            etagEl.appendChild(etagTextEl);\n            partNumEl.appendChild(partNumTextEl);\n            partEl.appendChild(partNumEl);\n            partEl.appendChild(etagEl);\n            qq(doc).children()[0].appendChild(partEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: \"application/xml; charset=UTF-8\",\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleCompleteRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n         * @returns {qq.Promise}\n         */\n        send: function(id, uploadId, etagEntries) {\n            var promise = new qq.Promise(),\n                body = getCompleteRequestBody(etagEntries);\n\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\n\n                pendingCompleteRequests[id] = promise;\n                delete headers[\"Content-Type\"];\n\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .withPayload(body)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\n * request to S3 via the REST API.\n\n * @param o\n * @constructor\n */\nqq.s3.AbortMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @param id Associated file ID\n     * @param uploadId ID of the associated upload, according to AWS\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\n                .withUploadId(uploadId);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Abort MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleAbortRequestComplete(id, xhr, isError) {\n        var domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\n            awsErrorMsg;\n\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (errorEls.length) {\n                isError = true;\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [\"DELETE\"],\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleAbortRequestComplete,\n        successfulResponseCodes: {\n            DELETE: [204]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Abort\" request.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         */\n        send: function(id, uploadId) {\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            });\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\r\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\r\n *\r\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.s3.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    // need to pre-construct the workerManager\r\n    var workerManager;\r\n    if (spec.signature.workerUrl) {\r\n        workerManager = new qq.s3.RequestSignerWorkerManager({\r\n            workerUrl: spec.signature.workerUrl,\r\n            log: proxy.log,\r\n        });\r\n    }\r\n\r\n    var getName = proxy.getName,\r\n        log = proxy.log,\r\n        clockDrift = spec.clockDrift,\r\n        expectedStatus = 200,\r\n        onGetBucket = spec.getBucket,\r\n        onGetHost = spec.getHost,\r\n        onGetKeyName = spec.getKeyName,\r\n        filenameParam = spec.filenameParam,\r\n        paramsStore = spec.paramsStore,\r\n        endpointStore = spec.endpointStore,\r\n        aclStore = spec.aclStore,\r\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\r\n        region = spec.objectProperties.region,\r\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\r\n        validation = spec.validation,\r\n        signature = qq.extend({region: region, drift: clockDrift, workerManager: workerManager}, spec.signature),\r\n        handler = this,\r\n        credentialsProvider = spec.signature.credentialsProvider,\r\n\r\n        chunked = {\r\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\r\n            // when the response to this request has been parsed.\r\n            combine: function(id) {\r\n                var uploadId = handler._getPersistableData(id).uploadId,\r\n                    etagMap = handler._getPersistableData(id).etags,\r\n                    result = new qq.Promise();\r\n\r\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\r\n                    result.success,\r\n\r\n                    function failure(reason, xhr) {\r\n                        result.failure(upload.done(id, xhr).response, xhr);\r\n                    }\r\n                );\r\n\r\n                return result;\r\n            },\r\n\r\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\r\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\r\n            // in the XML response and store that along with the associated part number.\r\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\r\n            done: function(id, xhr, chunkIdx) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    etag;\r\n\r\n                if (response.success) {\r\n                    etag = xhr.getResponseHeader(\"ETag\");\r\n\r\n                    if (!handler._getPersistableData(id).etags) {\r\n                        handler._getPersistableData(id).etags = [];\r\n                    }\r\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\r\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\r\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\r\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\r\n             * callback.\r\n             *\r\n             * @param id File ID\r\n             * @param chunkIdx Index of the chunk to PUT\r\n             * @returns {qq.Promise}\r\n             */\r\n            initHeaders: function(id, chunkIdx, blob) {\r\n                var headers = {},\r\n                    bucket = upload.bucket.getName(id),\r\n                    host = upload.host.getName(id),\r\n                    key = upload.key.urlSafe(id),\r\n                    promise = new qq.Promise(),\r\n                    signatureConstructor = requesters.restSignature.constructStringToSign\r\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\r\n                        .withPartNum(chunkIdx + 1)\r\n                        .withContent(blob)\r\n                        .withUploadId(handler._getPersistableData(id).uploadId);\r\n\r\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            put: function(id, chunkIdx) {\r\n                var xhr = handler._createXhr(id, chunkIdx),\r\n                    chunkData = handler._getChunkData(id, chunkIdx),\r\n                    domain = spec.endpointStore.get(id),\r\n                    promise = new qq.Promise();\r\n\r\n                // Add appropriate headers to the multipart upload request.\r\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\r\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\r\n                    if (xhr._cancelled) {\r\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\r\n                        promise.failure({error: \"Chunk upload cancelled\"});\r\n                    }\r\n                    else {\r\n                        var url = domain + \"/\" + endOfUrl;\r\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\r\n                        xhr.open(\"PUT\", url, true);\r\n\r\n                        qq.each(headers, function(name, val) {\r\n                            xhr.setRequestHeader(name, val);\r\n                        });\r\n\r\n                        xhr.send(chunkData.blob);\r\n                    }\r\n                }, function() {\r\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            send: function(id, chunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                chunked.setup(id).then(\r\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\r\n                    function() {\r\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\r\n                    },\r\n\r\n                    // We were unable to initiate the chunked upload process.\r\n                    function(errorMessage, xhr) {\r\n                        promise.failure({error: errorMessage}, xhr);\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\r\n             * initiated.\r\n             *\r\n             * @param id Associated file ID\r\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\r\n             */\r\n            setup: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    uploadId = handler._getPersistableData(id).uploadId,\r\n                    uploadIdPromise = new qq.Promise();\r\n\r\n                if (!uploadId) {\r\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\r\n                    requesters.initiateMultipart.send(id).then(\r\n                        function(uploadId) {\r\n                            handler._getPersistableData(id).uploadId = uploadId;\r\n                            uploadIdPromise.success(uploadId);\r\n                            promise.success(uploadId);\r\n                        },\r\n                        function(errorMsg, xhr) {\r\n                            handler._getPersistableData(id).uploadId = null;\r\n                            promise.failure(errorMsg, xhr);\r\n                            uploadIdPromise.failure(errorMsg, xhr);\r\n                        }\r\n                    );\r\n                }\r\n                else if (uploadId instanceof qq.Promise) {\r\n                    uploadId.then(function(uploadId) {\r\n                        promise.success(uploadId);\r\n                    });\r\n                }\r\n                else {\r\n                    promise.success(uploadId);\r\n                }\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        requesters = {\r\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\r\n                filenameParam: filenameParam,\r\n                endpointStore: endpointStore,\r\n                paramsStore: paramsStore,\r\n                signatureSpec: signature,\r\n                aclStore: aclStore,\r\n                reducedRedundancy: reducedRedundancy,\r\n                serverSideEncryption: serverSideEncryption,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getContentType: function(id) {\r\n                    return handler._getMimeType(id);\r\n                },\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                },\r\n                getName: function(id) {\r\n                    return getName(id);\r\n                }\r\n            }),\r\n\r\n            policySignature: new qq.s3.RequestSigner({\r\n                expectingPolicy: true,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            }),\r\n\r\n            restSignature: new qq.s3.RequestSigner({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            })\r\n        },\r\n\r\n        simple = {\r\n            /**\r\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\r\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\r\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\r\n             * due to some error.\r\n             *\r\n             * @param id File ID\r\n             * @returns {qq.Promise}\r\n             */\r\n            initParams: function(id) {\r\n                /*jshint -W040 */\r\n                var customParams = paramsStore.get(id);\r\n                customParams[filenameParam] = getName(id);\r\n\r\n                return qq.s3.util.generateAwsParams({\r\n                    endpoint: endpointStore.get(id),\r\n                    clockDrift: clockDrift,\r\n                    params: customParams,\r\n                    type: handler._getMimeType(id),\r\n                    bucket: upload.bucket.getName(id),\r\n                    key: handler.getThirdPartyFileId(id),\r\n                    accessKey: credentialsProvider.get().accessKey,\r\n                    sessionToken: credentialsProvider.get().sessionToken,\r\n                    acl: aclStore.get(id),\r\n                    expectedStatus: expectedStatus,\r\n                    minFileSize: validation.minSizeLimit,\r\n                    maxFileSize: validation.maxSizeLimit,\r\n                    reducedRedundancy: reducedRedundancy,\r\n                    region: region,\r\n                    serverSideEncryption: serverSideEncryption,\r\n                    signatureVersion: signature.version,\r\n                    log: log\r\n                },\r\n                qq.bind(requesters.policySignature.getSignature, this, id));\r\n            },\r\n\r\n            send: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    xhr = handler._createXhr(id),\r\n                    fileOrBlob = handler.getFile(id);\r\n\r\n                handler._registerProgressHandler(id);\r\n                upload.track(id, xhr).then(promise.success, promise.failure);\r\n\r\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\r\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\r\n                    log(\"Sending upload request for \" + id);\r\n                    xhr.send(toSend);\r\n                }, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\r\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\r\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\r\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\r\n             *\r\n             * Note that this is only used by the simple (non-chunked) upload process.\r\n             *\r\n             * @param id File ID\r\n             * @param xhr XMLHttpRequest to use for the upload\r\n             * @param fileOrBlob `File` or `Blob` to send\r\n             * @returns {qq.Promise}\r\n             */\r\n            setup: function(id, xhr, fileOrBlob) {\r\n                var formData = new FormData(),\r\n                    endpoint = endpointStore.get(id),\r\n                    url = endpoint,\r\n                    promise = new qq.Promise();\r\n\r\n                simple.initParams(id).then(\r\n                    // Success - all params determined\r\n                    function(awsParams) {\r\n                        xhr.open(\"POST\", url, true);\r\n\r\n                        qq.obj2FormData(awsParams, formData);\r\n\r\n                        // AWS requires the file field be named \"file\".\r\n                        formData.append(\"file\", fileOrBlob);\r\n\r\n                        promise.success(formData);\r\n                    },\r\n\r\n                    // Failure - we couldn't determine some params (likely the signature)\r\n                    function(errorMessage) {\r\n                        promise.failure({error: errorMessage});\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        upload = {\r\n            /**\r\n             * Note that this is called when an upload has reached a termination point,\r\n             * regardless of success/failure.  For example, it is called when we have\r\n             * encountered an error during the upload or when the file may have uploaded successfully.\r\n             *\r\n             * @param id file ID\r\n             */\r\n            bucket: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedBucket = handler._getFileState(id).bucket;\r\n\r\n                    if (cachedBucket) {\r\n                        promise.success(cachedBucket);\r\n                    }\r\n                    else {\r\n                        onGetBucket(id).then(function(bucket) {\r\n                            handler._getFileState(id).bucket = bucket;\r\n                            promise.success(bucket);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).bucket;\r\n                }\r\n            },\r\n\r\n            host: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedHost = handler._getFileState(id).host;\r\n\r\n                    if (cachedHost) {\r\n                        promise.success(cachedHost);\r\n                    }\r\n                    else {\r\n                        onGetHost(id).then(function(host) {\r\n                            handler._getFileState(id).host = host;\r\n                            promise.success(host);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).host;\r\n                }\r\n            },\r\n\r\n            done: function(id, xhr) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    isError = response.success !== true;\r\n\r\n                if (isError && upload.response.shouldReset(response.code)) {\r\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\r\n                    response.reset = true;\r\n                }\r\n\r\n                return {\r\n                    success: !isError,\r\n                    response: response\r\n                };\r\n            },\r\n\r\n            key: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        key = handler.getThirdPartyFileId(id);\r\n\r\n                    /* jshint eqnull:true */\r\n                    if (key == null) {\r\n                        handler._setThirdPartyFileId(id, promise);\r\n                        onGetKeyName(id, getName(id)).then(\r\n                            function(keyName) {\r\n                                handler._setThirdPartyFileId(id, keyName);\r\n                                promise.success(keyName);\r\n                            },\r\n                            function(errorReason) {\r\n                                handler._setThirdPartyFileId(id, null);\r\n                                promise.failure(errorReason);\r\n                            }\r\n                        );\r\n                    }\r\n                    else if (qq.isGenericPromise(key)) {\r\n                        key.then(promise.success, promise.failure);\r\n                    }\r\n                    else {\r\n                        promise.success(key);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                urlSafe: function(id) {\r\n                    var encodedKey = handler.getThirdPartyFileId(id);\r\n                    return qq.s3.util.uriEscapePath(encodedKey);\r\n                }\r\n            },\r\n\r\n            response: {\r\n                parse: function(id, xhr) {\r\n                    var response = {},\r\n                        parsedErrorProps;\r\n\r\n                    try {\r\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\r\n\r\n                        if (xhr.status === expectedStatus) {\r\n                            response.success = true;\r\n                        }\r\n                        else {\r\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\r\n\r\n                            if (parsedErrorProps) {\r\n                                response.error = parsedErrorProps.message;\r\n                                response.code = parsedErrorProps.code;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\r\n                    }\r\n\r\n                    return response;\r\n                },\r\n\r\n                /**\r\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\r\n                 *\r\n                 * @param awsResponseXml XML response from AWS\r\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\r\n                 */\r\n                parseError: function(awsResponseXml) {\r\n                    var parser = new DOMParser(),\r\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\r\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\r\n                        errorDetails = {},\r\n                        codeEls, messageEls;\r\n\r\n                    if (errorEls.length) {\r\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\r\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\r\n\r\n                        if (messageEls.length) {\r\n                            errorDetails.message = messageEls[0].textContent;\r\n                        }\r\n\r\n                        if (codeEls.length) {\r\n                            errorDetails.code = codeEls[0].textContent;\r\n                        }\r\n\r\n                        return errorDetails;\r\n                    }\r\n                },\r\n\r\n                // Determine if the upload should be restarted on the next retry attempt\r\n                // based on the error code returned in the response from AWS.\r\n                shouldReset: function(errorCode) {\r\n                    /*jshint -W014 */\r\n                    return errorCode === \"EntityTooSmall\"\r\n                        || errorCode === \"InvalidPart\"\r\n                        || errorCode === \"InvalidPartOrder\"\r\n                        || errorCode === \"NoSuchUpload\";\r\n                }\r\n            },\r\n\r\n            start: function(id, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                upload.key.promise(id).then(function() {\r\n                    upload.bucket.promise(id).then(function() {\r\n                        upload.host.promise(id).then(function() {\r\n                            /* jshint eqnull:true */\r\n                            if (optChunkIdx == null) {\r\n                                simple.send(id).then(promise.success, promise.failure);\r\n                            }\r\n                            else {\r\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\r\n                            }\r\n                        });\r\n                    });\r\n                },\r\n                function(errorReason) {\r\n                    promise.failure({error: errorReason});\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            track: function(id, xhr, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4) {\r\n                        var result;\r\n\r\n                        /* jshint eqnull:true */\r\n                        if (optChunkIdx == null) {\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                        else {\r\n                            chunked.done(id, xhr, optChunkIdx);\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                return promise;\r\n            }\r\n        };\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: upload.start,\r\n        uploadFile: upload.start\r\n    });\r\n\r\n    qq.extend(this, new qq.XhrUploadHandler({\r\n        options: qq.extend({namespace: \"s3\"}, spec),\r\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n    }));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            expunge: function(id) {\r\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\r\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\r\n\r\n                if (uploadId !== undefined && existedInLocalStorage) {\r\n                    requesters.abortMultipart.send(id, uploadId);\r\n                }\r\n\r\n                super_.expunge(id);\r\n            },\r\n\r\n            finalizeChunks: function(id) {\r\n                return chunked.combine(id);\r\n            },\r\n\r\n            _getLocalStorageId: function(id) {\r\n                var baseStorageId = super_._getLocalStorageId(id),\r\n                    bucketName = upload.bucket.getName(id);\r\n\r\n                return baseStorageId + \"-\" + bucketName;\r\n            }\r\n        };\r\n    });\r\n};\r\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\n * AWS API.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        clockDrift = options.clockDrift,\n        onUuidChanged = proxy.onUuidChanged,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        onGetBucket = options.getBucket,\n        onGetKeyName = options.getKeyName,\n        filenameParam = options.filenameParam,\n        paramsStore = options.paramsStore,\n        endpointStore = options.endpointStore,\n        aclStore = options.aclStore,\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\n        region = options.objectProperties.region,\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\n        validation = options.validation,\n        signature = options.signature,\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\n        credentialsProvider = options.signature.credentialsProvider,\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\n            signatureSpec: signature,\n            cors: options.cors,\n            log: log\n        });\n\n    if (successRedirectUrl === undefined) {\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\n    }\n\n    /**\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\n     * have redirected to a known endpoint that should provide a parseable response.\n     *\n     * @param id ID of the associated file\n     * @param iframe target of the form submit\n     * @returns {boolean} true if the contents can be read, false otherwise\n     */\n    function isValidResponse(id, iframe) {\n        var response,\n            endpoint = options.endpointStore.get(id),\n            bucket = handler._getFileState(id).bucket,\n            doc,\n            innerHtml,\n            responseData;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            responseData = qq.s3.util.parseIframeResponse(iframe);\n            if (responseData.bucket === bucket &&\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\n\n                return true;\n            }\n\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\n\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n        }\n\n        return false;\n    }\n\n    function generateAwsParams(id) {\n        /*jshint -W040 */\n        var customParams = paramsStore.get(id);\n\n        customParams[filenameParam] = getName(id);\n\n        return qq.s3.util.generateAwsParams({\n            endpoint: endpointStore.get(id),\n            clockDrift: clockDrift,\n            params: customParams,\n            bucket: handler._getFileState(id).bucket,\n            key: handler.getThirdPartyFileId(id),\n            accessKey: credentialsProvider.get().accessKey,\n            sessionToken: credentialsProvider.get().sessionToken,\n            acl: aclStore.get(id),\n            minFileSize: validation.minSizeLimit,\n            maxFileSize: validation.maxSizeLimit,\n            successRedirectUrl: successRedirectUrl,\n            reducedRedundancy: reducedRedundancy,\n            region: region,\n            serverSideEncryption: serverSideEncryption,\n            signatureVersion: signature.version,\n            log: log\n        },\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            endpoint = options.endpointStore.get(id),\n            fileName = getName(id);\n\n        generateAwsParams(id).then(function(params) {\n            var form = handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: true,\n                targetName: iframe.name\n            });\n\n            promise.success(form);\n        }, function(errorMessage) {\n            promise.failure(errorMessage);\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\n        });\n\n        return promise;\n    }\n\n    function handleUpload(id) {\n        var iframe = handler._createIframe(id),\n            input = handler.getInput(id),\n            promise = new qq.Promise();\n\n        createForm(id, iframe).then(function(form) {\n            form.appendChild(input);\n\n            // Register a callback when the response comes in from S3\n            handler._attachLoadEvent(iframe, function(response) {\n                log(\"iframe loaded\");\n\n                // If the common response handler has determined success or failure immediately\n                if (response) {\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\n                    if (response.success === false) {\n                        log(\"Amazon likely rejected the upload request\", \"error\");\n                        promise.failure(response);\n                    }\n                }\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\n                else {\n                    response = {};\n                    response.success = isValidResponse(id, iframe);\n\n                    // If the more specific response handle detected a problem with the response from S3\n                    if (response.success === false) {\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\n                        promise.failure(response);\n                    }\n                    else {\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\n                        promise.success(response);\n                    }\n                }\n\n                handleFinishedUpload(id, iframe);\n            });\n\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n        }, promise.failure);\n\n        return promise;\n    }\n\n    function handleFinishedUpload(id, iframe) {\n        handler._detachLoadEvent(id);\n        iframe && qq(iframe).remove();\n    }\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: false,\n            inputName: \"file\"\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            onUuidChanged: onUuidChanged,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n\n    qq.extend(this, {\n        uploadFile: function(id) {\n            var name = getName(id),\n                promise = new qq.Promise();\n\n            if (handler.getThirdPartyFileId(id)) {\n                if (handler._getFileState(id).bucket) {\n                    handleUpload(id).then(promise.success, promise.failure);\n                }\n                else {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handleUpload(id).then(promise.success, promise.failure);\n                    });\n                }\n            }\n            else {\n                // The S3 uploader module will either calculate the key or ask the server for it\n                // and will call us back once it is known.\n                onGetKeyName(id, name).then(function(key) {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handler._setThirdPartyFileId(id, key);\n                        handleUpload(id).then(promise.success, promise.failure);\n                    }, function(errorReason) {\n                        promise.failure({error: errorReason});\n                    });\n                }, function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n            }\n\n            return promise;\n        }\n    });\n};\n","\n        qq.s3.createS3InlineWorkerUrl = function () {\n            return URL.createObjectURL(new Blob([\"// Fine Uploader 5.14.0-beta3 - (c) 2013-present Widen Enterprises, Inc. MIT licensed. http://fineuploader.com\\nfunction doTask(t,r){\\\"use strict\\\";var n=new FileReader;n.onloadend=function(t){if(t.target.readyState===FileReader.DONE)if(t.target.error)r(JSON.parse(JSON.stringify(t.target.error,null,2)));else{var n=qq.CryptoJS.lib.WordArray.create(t.target.result);r(null,qq.CryptoJS.SHA256(n).toString())}},n.readAsArrayBuffer(t)}qq={},function(t,r,n){qq.CryptoJS?r(qq.CryptoJS):qq.CryptoJS=r()}(this,function(){var t=t||function(t,r){var n=Object.create||function(){function t(){}return function(r){var n;return t.prototype=r,n=new t,t.prototype=null,n}}(),e={},i=e.lib={},o=i.Base=function(){return{extend:function(t){var r=n(this);return t&&r.mixIn(t),r.hasOwnProperty(\\\"init\\\")&&this.init!==r.init||(r.init=function(){r.$super.init.apply(this,arguments)}),r.init.prototype=r,r.$super=this,r},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},mixIn:function(t){for(var r in t)t.hasOwnProperty(r)&&(this[r]=t[r]);t.hasOwnProperty(\\\"toString\\\")&&(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),s=i.WordArray=o.extend({init:function(t,n){t=this.words=t||[],n!=r?this.sigBytes=n:this.sigBytes=4*t.length},toString:function(t){return(t||c).stringify(this)},concat:function(t){var r=this.words,n=t.words,e=this.sigBytes,i=t.sigBytes;if(this.clamp(),e%4)for(var o=0;o<i;o++){var s=n[o>>>2]>>>24-o%4*8&255;r[e+o>>>2]|=s<<24-(e+o)%4*8}else for(var o=0;o<i;o+=4)r[e+o>>>2]=n[o>>>2];return this.sigBytes+=i,this},clamp:function(){var r=this.words,n=this.sigBytes;r[n>>>2]&=4294967295<<32-n%4*8,r.length=t.ceil(n/4)},clone:function(){var t=o.clone.call(this);return t.words=this.words.slice(0),t},random:function(r){for(var n,e=[],i=function(r){var r=r,n=987654321,e=4294967295;return function(){n=36969*(65535&n)+(n>>16)&e,r=18e3*(65535&r)+(r>>16)&e;var i=(n<<16)+r&e;return i/=4294967296,i+=.5,i*(t.random()>.5?1:-1)}},o=0;o<r;o+=4){var a=i(4294967296*(n||t.random()));n=987654071*a(),e.push(4294967296*a()|0)}return new s.init(e,r)}}),a=e.enc={},c=a.Hex={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var o=r[i>>>2]>>>24-i%4*8&255;e.push((o>>>4).toString(16)),e.push((15&o).toString(16))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e+=2)n[e>>>3]|=parseInt(t.substr(e,2),16)<<24-e%8*4;return new s.init(n,r/2)}},f=a.Latin1={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var o=r[i>>>2]>>>24-i%4*8&255;e.push(String.fromCharCode(o))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e++)n[e>>>2]|=(255&t.charCodeAt(e))<<24-e%4*8;return new s.init(n,r)}},u=a.Utf8={stringify:function(t){try{return decodeURIComponent(escape(f.stringify(t)))}catch(t){throw new Error(\\\"Malformed UTF-8 data\\\")}},parse:function(t){return f.parse(unescape(encodeURIComponent(t)))}},h=i.BufferedBlockAlgorithm=o.extend({reset:function(){this._data=new s.init,this._nDataBytes=0},_append:function(t){\\\"string\\\"==typeof t&&(t=u.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes},_process:function(r){var n=this._data,e=n.words,i=n.sigBytes,o=this.blockSize,a=4*o,c=i/a;c=r?t.ceil(c):t.max((0|c)-this._minBufferSize,0);var f=c*o,u=t.min(4*f,i);if(f){for(var h=0;h<f;h+=o)this._doProcessBlock(e,h);var l=e.splice(0,f);n.sigBytes-=u}return new s.init(l,u)},clone:function(){var t=o.clone.call(this);return t._data=this._data.clone(),t},_minBufferSize:0}),l=(i.Hasher=h.extend({cfg:o.extend(),init:function(t){this.cfg=this.cfg.extend(t),this.reset()},reset:function(){h.reset.call(this),this._doReset()},update:function(t){return this._append(t),this._process(),this},finalize:function(t){t&&this._append(t);var r=this._doFinalize();return r},blockSize:16,_createHelper:function(t){return function(r,n){return new t.init(n).finalize(r)}},_createHmacHelper:function(t){return function(r,n){return new l.HMAC.init(t,n).finalize(r)}}}),e.algo={});return e}(Math);return t}),function(t,r,n){qq.CryptoJS?r(qq.CryptoJS):qq.CryptoJS=r()}(this,function(t){return function(){function r(t,r,n){for(var e=[],o=0,s=0;s<r;s++)if(s%4){var a=n[t.charCodeAt(s-1)]<<s%4*2,c=n[t.charCodeAt(s)]>>>6-s%4*2;e[o>>>2]|=(a|c)<<24-o%4*8,o++}return i.create(e,o)}var n=t,e=n.lib,i=e.WordArray,o=n.enc;o.Base64={stringify:function(t){var r=t.words,n=t.sigBytes,e=this._map;t.clamp();for(var i=[],o=0;o<n;o+=3)for(var s=r[o>>>2]>>>24-o%4*8&255,a=r[o+1>>>2]>>>24-(o+1)%4*8&255,c=r[o+2>>>2]>>>24-(o+2)%4*8&255,f=s<<16|a<<8|c,u=0;u<4&&o+.75*u<n;u++)i.push(e.charAt(f>>>6*(3-u)&63));var h=e.charAt(64);if(h)for(;i.length%4;)i.push(h);return i.join(\\\"\\\")},parse:function(t){var n=t.length,e=this._map,i=this._reverseMap;if(!i){i=this._reverseMap=[];for(var o=0;o<e.length;o++)i[e.charCodeAt(o)]=o}var s=e.charAt(64);if(s){var a=t.indexOf(s);a!==-1&&(n=a)}return r(t,n,i)},_map:\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\"}}(),t.enc.Base64}),function(t,r,n){qq.CryptoJS?r(qq.CryptoJS):qq.CryptoJS=r()}(this,function(t){!function(){var r=t,n=r.lib,e=n.Base,i=r.enc,o=i.Utf8,s=r.algo;s.HMAC=e.extend({init:function(t,r){t=this._hasher=new t.init,\\\"string\\\"==typeof r&&(r=o.parse(r));var n=t.blockSize,e=4*n;r.sigBytes>e&&(r=t.finalize(r)),r.clamp();for(var i=this._oKey=r.clone(),s=this._iKey=r.clone(),a=i.words,c=s.words,f=0;f<n;f++)a[f]^=1549556828,c[f]^=909522486;i.sigBytes=s.sigBytes=e,this.reset()},reset:function(){var t=this._hasher;t.reset(),t.update(this._iKey)},update:function(t){return this._hasher.update(t),this},finalize:function(t){var r=this._hasher,n=r.finalize(t);r.reset();var e=r.finalize(this._oKey.clone().concat(n));return e}})}()}),function(t,r,n){qq.CryptoJS?r(qq.CryptoJS):qq.CryptoJS=r()}(this,function(t){return function(){var r=t,n=r.lib,e=n.WordArray,i=n.Hasher,o=r.algo,s=[],a=o.SHA1=i.extend({_doReset:function(){this._hash=new e.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],o=n[2],a=n[3],c=n[4],f=0;f<80;f++){if(f<16)s[f]=0|t[r+f];else{var u=s[f-3]^s[f-8]^s[f-14]^s[f-16];s[f]=u<<1|u>>>31}var h=(e<<5|e>>>27)+c+s[f];h+=f<20?(i&o|~i&a)+1518500249:f<40?(i^o^a)+1859775393:f<60?(i&o|i&a|o&a)-1894007588:(i^o^a)-899497514,c=a,a=o,o=i<<30|i>>>2,i=e,e=h}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+o|0,n[3]=n[3]+a|0,n[4]=n[4]+c|0},_doFinalize:function(){var t=this._data,r=t.words,n=8*this._nDataBytes,e=8*t.sigBytes;return r[e>>>5]|=128<<24-e%32,r[(e+64>>>9<<4)+14]=Math.floor(n/4294967296),r[(e+64>>>9<<4)+15]=n,t.sigBytes=4*r.length,this._process(),this._hash},clone:function(){var t=i.clone.call(this);return t._hash=this._hash.clone(),t}});r.SHA1=i._createHelper(a),r.HmacSHA1=i._createHmacHelper(a)}(),t.SHA1}),function(t,r,n){qq.CryptoJS?r(qq.CryptoJS):qq.CryptoJS=r()}(this,function(t){return function(r){var n=t,e=n.lib,i=e.WordArray,o=e.Hasher,s=n.algo,a=[],c=[];!function(){function t(t){for(var n=r.sqrt(t),e=2;e<=n;e++)if(!(t%e))return!1;return!0}function n(t){return 4294967296*(t-(0|t))|0}for(var e=2,i=0;i<64;)t(e)&&(i<8&&(a[i]=n(r.pow(e,.5))),c[i]=n(r.pow(e,1/3)),i++),e++}();var f=[],u=s.SHA256=o.extend({_doReset:function(){this._hash=new i.init(a.slice(0))},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],o=n[2],s=n[3],a=n[4],u=n[5],h=n[6],l=n[7],p=0;p<64;p++){if(p<16)f[p]=0|t[r+p];else{var y=f[p-15],d=(y<<25|y>>>7)^(y<<14|y>>>18)^y>>>3,v=f[p-2],g=(v<<15|v>>>17)^(v<<13|v>>>19)^v>>>10;f[p]=d+f[p-7]+g+f[p-16]}var _=a&u^~a&h,S=e&i^e&o^i&o,q=(e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22),A=(a<<26|a>>>6)^(a<<21|a>>>11)^(a<<7|a>>>25),w=l+A+_+c[p]+f[p],B=q+S;l=h,h=u,u=a,a=s+w|0,s=o,o=i,i=e,e=w+B|0}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+o|0,n[3]=n[3]+s|0,n[4]=n[4]+a|0,n[5]=n[5]+u|0,n[6]=n[6]+h|0,n[7]=n[7]+l|0},_doFinalize:function(){var t=this._data,n=t.words,e=8*this._nDataBytes,i=8*t.sigBytes;return n[i>>>5]|=128<<24-i%32,n[(i+64>>>9<<4)+14]=r.floor(e/4294967296),n[(i+64>>>9<<4)+15]=e,t.sigBytes=4*n.length,this._process(),this._hash},clone:function(){var t=o.clone.call(this);return t._hash=this._hash.clone(),t}});n.SHA256=o._createHelper(u),n.HmacSHA256=o._createHmacHelper(u)}(Math),t.SHA256}),function(t,r,n){qq.CryptoJS?r(qq.CryptoJS):qq.CryptoJS=r()}(this,function(t){return function(){if(\\\"function\\\"==typeof ArrayBuffer){var r=t,n=r.lib,e=n.WordArray,i=e.init,o=e.init=function(t){if(t instanceof ArrayBuffer&&(t=new Uint8Array(t)),(t instanceof Int8Array||\\\"undefined\\\"!=typeof Uint8ClampedArray&&t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)&&(t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),t instanceof Uint8Array){for(var r=t.byteLength,n=[],e=0;e<r;e++)n[e>>>2]|=t[e]<<24-e%4*8;i.call(this,n,r)}else i.apply(this,arguments)};o.prototype=e}}(),t.lib.WordArray}),onmessage=function(t){\\\"use strict\\\";doTask(t.data.file,function(r,n){postMessage({err:r,resp:n,id:t.data.id})})};\\n//# sourceMappingURL=s3.fine-uploader.worker.js.map\"], {type: \"application/javascript\"}));\n        };\n    ","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Defines the public API for FineUploader mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.uiPublicApi = {\r\n        addInitialFiles: function(cannedFileList) {\r\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\r\n            this._templating.addCacheToDom();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\r\n            this._templating.clearFiles();\r\n        },\r\n\r\n        addExtraDropzone: function(element) {\r\n            this._dnd && this._dnd.setupExtraDropzone(element);\r\n        },\r\n\r\n        removeExtraDropzone: function(element) {\r\n            if (this._dnd) {\r\n                return this._dnd.removeDropzone(element);\r\n            }\r\n        },\r\n\r\n        getItemByFileId: function(id) {\r\n            if (!this._templating.isHiddenForever(id)) {\r\n                return this._templating.getFileContainer(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            this._parent.prototype.reset.apply(this, arguments);\r\n            this._templating.reset();\r\n\r\n            if (!this._options.button && this._templating.getButton()) {\r\n                this._defaultButtonId = this._createUploadButton({\r\n                    element: this._templating.getButton(),\r\n                    title: this._options.text.fileInputTitle\r\n                }).getButtonId();\r\n            }\r\n\r\n            if (this._dnd) {\r\n                this._dnd.dispose();\r\n                this._dnd = this._setupDragAndDrop();\r\n            }\r\n\r\n            this._totalFilesInBatch = 0;\r\n            this._filesInBatchAddedToUi = 0;\r\n\r\n            this._setupClickAndEditEventHandlers();\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            var formattedFilename = this._options.formatFileName(newName);\r\n\r\n            this._parent.prototype.setName.apply(this, arguments);\r\n            this._templating.updateFilename(id, formattedFilename);\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\r\n\r\n            paused && this._templating.uploadPaused(id);\r\n            return paused;\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\r\n\r\n            continued && this._templating.uploadContinued(id);\r\n            return continued;\r\n        },\r\n\r\n        getId: function(fileContainerOrChildEl) {\r\n            return this._templating.getFileId(fileContainerOrChildEl);\r\n        },\r\n\r\n        getDropTarget: function(fileId) {\r\n            var file = this.getFile(fileId);\r\n\r\n            return file.qqDropTarget;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploader mode.\r\n     */\r\n    qq.uiPrivateApi = {\r\n        _getButton: function(buttonId) {\r\n            var button = this._parent.prototype._getButton.apply(this, arguments);\r\n\r\n            if (!button) {\r\n                if (buttonId === this._defaultButtonId) {\r\n                    button = this._templating.getButton();\r\n                }\r\n            }\r\n\r\n            return button;\r\n        },\r\n\r\n        _removeFileItem: function(fileId) {\r\n            this._templating.removeFile(fileId);\r\n        },\r\n\r\n        _setupClickAndEditEventHandlers: function() {\r\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\r\n\r\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\r\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\r\n            this._focusinEventSupported = !qq.firefox();\r\n\r\n            if (this._isEditFilenameEnabled())\r\n            {\r\n                this._filenameClickHandler = this._bindFilenameClickEvent();\r\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\r\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\r\n            }\r\n        },\r\n\r\n        _setupDragAndDrop: function() {\r\n            var self = this,\r\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\r\n                templating = this._templating,\r\n                defaultDropZone = templating.getDropZone();\r\n\r\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\r\n\r\n            return new qq.DragAndDrop({\r\n                dropZoneElements: dropZoneElements,\r\n                allowMultipleItems: this._options.multiple,\r\n                classes: {\r\n                    dropActive: this._options.classes.dropActive\r\n                },\r\n                callbacks: {\r\n                    processingDroppedFiles: function() {\r\n                        templating.showDropProcessing();\r\n                    },\r\n                    processingDroppedFilesComplete: function(files, targetEl) {\r\n                        templating.hideDropProcessing();\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            file.qqDropTarget = targetEl;\r\n                        });\r\n\r\n                        if (files.length) {\r\n                            self.addFiles(files, null, null);\r\n                        }\r\n                    },\r\n                    dropError: function(code, errorData) {\r\n                        self._itemError(code, errorData);\r\n                    },\r\n                    dropLog: function(message, level) {\r\n                        self.log(message, level);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _bindFileButtonsClickEvent: function() {\r\n            var self = this;\r\n\r\n            return new qq.FileButtonsClickHandler({\r\n                templating: this._templating,\r\n\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n\r\n                onDeleteFile: function(fileId) {\r\n                    self.deleteFile(fileId);\r\n                },\r\n\r\n                onCancel: function(fileId) {\r\n                    self.cancel(fileId);\r\n                },\r\n\r\n                onRetry: function(fileId) {\r\n                    self.retry(fileId);\r\n                },\r\n\r\n                onPause: function(fileId) {\r\n                    self.pauseUpload(fileId);\r\n                },\r\n\r\n                onContinue: function(fileId) {\r\n                    self.continueUpload(fileId);\r\n                },\r\n\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                }\r\n            });\r\n        },\r\n\r\n        _isEditFilenameEnabled: function() {\r\n            /*jshint -W014 */\r\n            return this._templating.isEditFilenamePossible()\r\n                && !this._options.autoUpload\r\n                && qq.FilenameClickHandler\r\n                && qq.FilenameInputFocusHandler\r\n                && qq.FilenameInputFocusHandler;\r\n        },\r\n\r\n        _filenameEditHandler: function() {\r\n            var self = this,\r\n                templating = this._templating;\r\n\r\n            return {\r\n                templating: templating,\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n                onGetUploadStatus: function(fileId) {\r\n                    return self.getUploads({id: fileId}).status;\r\n                },\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                },\r\n                onSetName: function(id, newName) {\r\n                    self.setName(id, newName);\r\n                },\r\n                onEditingStatusChange: function(id, isEditing) {\r\n                    var qqInput = qq(templating.getEditInput(id)),\r\n                        qqFileContainer = qq(templating.getFileContainer(id));\r\n\r\n                    if (isEditing) {\r\n                        qqInput.addClass(\"qq-editing\");\r\n                        templating.hideFilename(id);\r\n                        templating.hideEditIcon(id);\r\n                    }\r\n                    else {\r\n                        qqInput.removeClass(\"qq-editing\");\r\n                        templating.showFilename(id);\r\n                        templating.showEditIcon(id);\r\n                    }\r\n\r\n                    // Force IE8 and older to repaint\r\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\r\n                }\r\n            };\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\r\n\r\n            if (this._isEditFilenameEnabled()) {\r\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\r\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\r\n                    this._templating.markFilenameEditable(id);\r\n                    this._templating.hideEditIcon(id);\r\n                }\r\n            }\r\n\r\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\r\n                this._templating.hideRetry(id);\r\n                this._templating.setStatusText(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\r\n            }\r\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\r\n                this._templating.hidePause(id);\r\n            }\r\n        },\r\n\r\n        _bindFilenameInputFocusInEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusInHandler(spec);\r\n        },\r\n\r\n        _bindFilenameInputFocusEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusHandler(spec);\r\n        },\r\n\r\n        _bindFilenameClickEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameClickHandler(spec);\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._parent.prototype._storeForLater.apply(this, arguments);\r\n            this._templating.hideSpinner(id);\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._parent.prototype._onAllComplete.apply(this, arguments);\r\n            this._templating.resetTotalProgress();\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            var file = this.getFile(id);\r\n\r\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\r\n                this._paramsStore.addReadOnly(id, {\r\n                    qqpath: file.qqPath\r\n                });\r\n            }\r\n\r\n            this._parent.prototype._onSubmit.apply(this, arguments);\r\n            this._addToList(id, name);\r\n        },\r\n\r\n        // The file item has been added to the DOM.\r\n        _onSubmitted: function(id) {\r\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\r\n            if (this._isEditFilenameEnabled()) {\r\n                this._templating.markFilenameEditable(id);\r\n                this._templating.showEditIcon(id);\r\n\r\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\r\n                if (!this._focusinEventSupported) {\r\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\r\n                }\r\n            }\r\n        },\r\n\r\n        // Update the progress bar & percentage as the file is uploaded\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._parent.prototype._onProgress.apply(this, arguments);\r\n\r\n            this._templating.updateProgress(id, loaded, total);\r\n\r\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\r\n                this._templating.hideCancel(id);\r\n                this._templating.hidePause(id);\r\n                this._templating.hideProgress(id);\r\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\r\n\r\n                // If ~last byte was sent, display total file size\r\n                this._displayFileSize(id);\r\n            }\r\n            else {\r\n                // If still uploading, display percentage - total size is actually the total request(s) size\r\n                this._displayFileSize(id, loaded, total);\r\n            }\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\r\n            this._templating.updateTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\r\n                templating = this._templating,\r\n                fileContainer = templating.getFileContainer(id),\r\n                self = this;\r\n\r\n            function completeUpload(result) {\r\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\r\n                // If so, don't perform any UI-related tasks related to this file.\r\n                if (!fileContainer) {\r\n                    return;\r\n                }\r\n\r\n                templating.setStatusText(id);\r\n\r\n                qq(fileContainer).removeClass(self._classes.retrying);\r\n                templating.hideProgress(id);\r\n\r\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\r\n                    templating.hideCancel(id);\r\n                }\r\n                templating.hideSpinner(id);\r\n\r\n                if (result.success) {\r\n                    self._markFileAsSuccessful(id);\r\n                }\r\n                else {\r\n                    qq(fileContainer).addClass(self._classes.fail);\r\n                    templating.showCancel(id);\r\n\r\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\r\n                        qq(fileContainer).addClass(self._classes.retryable);\r\n                        templating.showRetry(id);\r\n                    }\r\n                    self._controlFailureTextDisplay(id, result);\r\n                }\r\n            }\r\n\r\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\r\n            if (parentRetVal instanceof qq.Promise) {\r\n                parentRetVal.done(function(newResult) {\r\n                    completeUpload(newResult);\r\n                });\r\n\r\n            }\r\n            else {\r\n                completeUpload(result);\r\n            }\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _markFileAsSuccessful: function(id) {\r\n            var templating = this._templating;\r\n\r\n            if (this._isDeletePossible()) {\r\n                templating.showDeleteButton(id);\r\n            }\r\n\r\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\r\n\r\n            this._maybeUpdateThumbnail(id);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\r\n            this._templating.showSpinner(id);\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\r\n\r\n            this._templating.showSpinner(id);\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\r\n\r\n            // Only display the pause button if we have finished uploading at least one chunk\r\n            // & this file can be resumed\r\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\r\n                this._templating.allowPause(id);\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._parent.prototype._onCancel.apply(this, arguments);\r\n            this._removeFileItem(id);\r\n\r\n            if (this._getNotFinished() === 0) {\r\n                this._templating.resetTotalProgress();\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id) {\r\n            var retryNumForDisplay, maxAuto, retryNote;\r\n\r\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\r\n\r\n            this._showCancelLink(id);\r\n\r\n            if (this._options.retry.showAutoRetryNote) {\r\n                retryNumForDisplay = this._autoRetries[id];\r\n                maxAuto = this._options.retry.maxAutoAttempts;\r\n\r\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\r\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\r\n\r\n                this._templating.setStatusText(id, retryNote);\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\r\n            }\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\r\n                this._templating.resetProgress(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\r\n                this._templating.setStatusText(id);\r\n                this._templating.showSpinner(id);\r\n                this._showCancelLink(id);\r\n                return true;\r\n            }\r\n            else {\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\r\n                this._templating.showRetry(id);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id) {\r\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\r\n\r\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\r\n        },\r\n\r\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\r\n            if (this._options.deleteFile.forceConfirm) {\r\n                this._showDeleteConfirm.apply(this, arguments);\r\n            }\r\n            else {\r\n                this._sendDeleteRequest.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhr, isError) {\r\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\r\n\r\n            this._templating.hideSpinner(id);\r\n\r\n            if (isError) {\r\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\r\n                this._templating.showDeleteButton(id);\r\n            }\r\n            else {\r\n                this._removeFileItem(id);\r\n            }\r\n        },\r\n\r\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\r\n            this._templating.hideDeleteButton(id);\r\n            this._templating.showSpinner(id);\r\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\r\n            this._deleteHandler.sendDelete.apply(this, arguments);\r\n        },\r\n\r\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\r\n            /*jshint -W004 */\r\n            var fileName = this.getName(id),\r\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\r\n                uuid = this.getUuid(id),\r\n                deleteRequestArgs = arguments,\r\n                self = this,\r\n                retVal;\r\n\r\n            retVal = this._options.showConfirm(confirmMessage);\r\n\r\n            if (qq.isGenericPromise(retVal)) {\r\n                retVal.then(function() {\r\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n                });\r\n            }\r\n            else if (retVal !== false) {\r\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n            }\r\n        },\r\n\r\n        _addToList: function(id, name, canned) {\r\n            var prependData,\r\n                prependIndex = 0,\r\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\r\n                record;\r\n\r\n            if (this._options.display.prependFiles) {\r\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\r\n                    prependIndex = this._filesInBatchAddedToUi - 1;\r\n                }\r\n\r\n                prependData = {\r\n                    index: prependIndex\r\n                };\r\n            }\r\n\r\n            if (!canned) {\r\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\r\n                    this._templating.disableCancel();\r\n                }\r\n\r\n                // Cancel all existing (previous) files and clear the list if this file is not part of\r\n                // a scaled file group that has already been accepted, or if this file is not part of\r\n                // a scaled file group at all.\r\n                if (!this._options.multiple) {\r\n                    record = this.getUploads({id: id});\r\n\r\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\r\n\r\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\r\n                        this._handler.cancelAll();\r\n                        this._clearList();\r\n                        this._handledProxyGroup = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (canned) {\r\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\r\n            }\r\n            else {\r\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\r\n            }\r\n\r\n            this._filesInBatchAddedToUi += 1;\r\n\r\n            if (canned ||\r\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\r\n\r\n                this._displayFileSize(id);\r\n            }\r\n        },\r\n\r\n        _clearList: function() {\r\n            this._templating.clearFiles();\r\n            this.clearStoredFiles();\r\n        },\r\n\r\n        _displayFileSize: function(id, loadedSize, totalSize) {\r\n            var size = this.getSize(id),\r\n                sizeForDisplay = this._formatSize(size);\r\n\r\n            if (size >= 0) {\r\n                if (loadedSize !== undefined && totalSize !== undefined) {\r\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\r\n                }\r\n\r\n                this._templating.updateSize(id, sizeForDisplay);\r\n            }\r\n        },\r\n\r\n        _formatProgress: function(uploadedSize, totalSize) {\r\n            var message = this._options.text.formatProgress;\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\r\n            r(\"{total_size}\", this._formatSize(totalSize));\r\n            return message;\r\n        },\r\n\r\n        _controlFailureTextDisplay: function(id, response) {\r\n            var mode, responseProperty, failureReason;\r\n\r\n            mode = this._options.failedUploadTextDisplay.mode;\r\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\r\n\r\n            if (mode === \"custom\") {\r\n                failureReason = response[responseProperty];\r\n                if (!failureReason) {\r\n                    failureReason = this._options.text.failUpload;\r\n                }\r\n\r\n                this._templating.setStatusText(id, failureReason);\r\n\r\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\r\n                    this._showTooltip(id, failureReason);\r\n                }\r\n            }\r\n            else if (mode === \"default\") {\r\n                this._templating.setStatusText(id, this._options.text.failUpload);\r\n            }\r\n            else if (mode !== \"none\") {\r\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\r\n            }\r\n        },\r\n\r\n        _showTooltip: function(id, text) {\r\n            this._templating.getFileContainer(id).title = text;\r\n        },\r\n\r\n        _showCancelLink: function(id) {\r\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\r\n                this._templating.showCancel(id);\r\n            }\r\n        },\r\n\r\n        _itemError: function(code, name, item) {\r\n            var message = this._parent.prototype._itemError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._parent.prototype._batchError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _setupPastePrompt: function() {\r\n            var self = this;\r\n\r\n            this._options.callbacks.onPasteReceived = function() {\r\n                var message = self._options.paste.namePromptMessage,\r\n                    defaultVal = self._options.paste.defaultName;\r\n\r\n                return self._options.showPrompt(message, defaultVal);\r\n            };\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id, name) {\r\n            this._totalFilesInBatch -= 1;\r\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            this._totalFilesInBatch = items.length;\r\n            this._filesInBatchAddedToUi = 0;\r\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\r\n        },\r\n\r\n        _maybeUpdateThumbnail: function(fileId) {\r\n            var thumbnailUrl = this._thumbnailUrls[fileId],\r\n                fileStatus = this.getUploads({id: fileId}).status;\r\n\r\n            if (fileStatus !== qq.status.DELETED &&\r\n                (thumbnailUrl ||\r\n                this._options.thumbnails.placeholders.waitUntilResponse ||\r\n                !qq.supportedFeatures.imagePreviews)) {\r\n\r\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\r\n                // if called with a null thumbnailUrl.\r\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\r\n            }\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\r\n\r\n            this._addToList(id, this.getName(id), true);\r\n            this._templating.hideSpinner(id);\r\n            this._templating.hideCancel(id);\r\n            this._markFileAsSuccessful(id);\r\n\r\n            return id;\r\n        },\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._parent.prototype._setSize.apply(this, arguments);\r\n\r\n            this._templating.updateSize(id, this._formatSize(newSize));\r\n        },\r\n\r\n        _sessionRequestComplete: function() {\r\n            this._templating.addCacheToDom();\r\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\n * in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"s3\");\n\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\n        }\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\n}());\n"]}