{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/third-party/crypto-js/core.js","../client/js/third-party/crypto-js/enc-base64.js","../client/js/third-party/crypto-js/hmac.js","../client/js/third-party/crypto-js/sha1.js","../client/js/third-party/crypto-js/sha256.js","../client/js/third-party/crypto-js/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.worker-manager.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","s3.fine-uploader.worker-inline.js","../client/js/s3/uploader.js","../client/js/azure/util.js","../client/js/azure/uploader.basic.js","../client/js/azure/azure.xhr.upload.handler.js","../client/js/azure/get-sas.js","../client/js/azure/rest/delete-blob.js","../client/js/azure/rest/put-blob.js","../client/js/azure/rest/put-block.js","../client/js/azure/rest/put-block-list.js","../client/js/azure/uploader.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","strBefore","substring","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","match","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","fileRecord","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","alreadyInWaiting","alreadyInOpen","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","setUploadHeaders","extraHeaders","toSend","promises","endpointHandler","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","FineUploader","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","uploader","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus","CryptoJS","C","C_lib","lib","Base","F","overrides","subtype","mixIn","init","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","messageUpdate","hash","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","Base64","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","paddingIndex","bits1","bits2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","subInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","bucket","patterns","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","policyJson","awsParams","customParams","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","pad","minutesToAdd","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSignerWorkerManager","workerUrl","createS3InlineWorkerUrl","worker","Worker","outstandingRequests","workerPromises","onmessage","resp","generateSignature","task","RequestSigner","handleSignatureReceived","signatureConstructor","responseJson","pendingSignatureData","pendingSignatures","invalid","expectingPolicy","generateHeaders","getStringToSignArtifacts","requestInfo","endOfUrl","signatureSpec","toSign","headerNames","headersStr","generateStringToSign","contentMd5","headerIndexesToRemove","headerName","headerIdx","hashedContent","v2","getStringToSign","v4","signedHeaders","getSignedHeaders","hashed","toSignRaw","raw","thisSignatureRequester","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","getEncodedHashedPayload","Host","determineSignatureClientSide","toBeSigned","signatureEffort","updatedHeaders","getHeaders","getToSign","signatureArtifacts","signApiRequest","stringToSign","signPolicy","getToSignPromise","Authorization","getRequestDate","getEndOfUrl","headersWordArray","headersHmacSha1","headersHmacSha1Base64","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","getCanonicalQueryString","endOfUri","encodedQueryParams","encodedQueryParamNames","queryStrings","queryParamIdx","canonicalQueryString","nameAndVal","paramVal","forEach","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","workerManager","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","stringToSignTemplate","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","headersPattern","matches","credentialPattern","credentialCondition","credential","condition","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","handleSuccessResponse","parsedResponse","pendingRequests","successIndicator","failureIndicator","InitiateMultipartAjaxRequester","getSignatureAjaxRequester","getContentType","handleInitiateRequestComplete","uploadIdElements","messageElements","pendingInitiateRequests","domParser","DOMParser","responseDoc","parseFromString","CompleteMultipartAjaxRequester","handleCompleteRequestComplete","pendingCompleteRequests","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","awsErrorMsg","errorEls","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","codeEls","messageEls","parsedDoc","errorDetails","existedInLocalStorage","baseStorageId","bucketName","isValidResponse","responseData","handleFinishedUpload","handleUpload","azure","AZURE_PARAM_PREFIX","_paramNameMatchesAzureParameter","getParamsAsHeaders","parseAzureError","codeTag","messageTag","errorTag","blobProperties","_cannedBlobNames","getBlobName","onGetBlobName","_determineBlobName","deleteBlob","_deleteBlob","blobNameOptionValue","fileExtension","blobNameToUse","blobName","relatedToCancel","deleteBlobSasUri","blobUriStore","deleteFileEndpointStore","getSasSuccess","sasUri","getSasFailure","DeleteBlob","getSas","GetSas","restRequestVerb","combineChunks","getSignedUrl","mimeType","blockIdEntries","putBlockList","determineBlobUrl","containerUrl","getBlobNameSuccess","getBlobNameFailure","getSasId","getSasXhr","determineBlobUrlSuccess","blobUrl","getSasForPutBlobOrBlock","determineBlobUrlFailure","azureError","minFileSizeForChunking","getBlobMetadata","putBlob","PutBlob","putBlock","PutBlock","PutBlockList","blockIdEntry","chunkingData","maybePossible","sasResponseReceived","requestPromises","blobUri","requestPromise","restVerb","bloburi","codes","endpoints","createBlockId","digits","zeros","paddedPartNum","btoa","blockId","createRequestBody","latestEl","latestTextEl","fileMimeType","registerXhrCallback","blockIdsXml","x-ms-blob-content-type"],"mappings":";CAAA,SAAUA,QCEV,GAAIC,IAAK,SAASC,GACd,YAEA,QACIC,KAAM,WAEF,MADAD,GAAQE,MAAMC,QAAU,OACjBC,MAIXC,OAAQ,SAASC,EAAMC,GAMnB,MALIP,GAAQQ,iBACRR,EAAQQ,iBAAiBF,EAAMC,GAAI,GAC5BP,EAAQS,aACfT,EAAQS,YAAY,KAAOH,EAAMC,GAE9B,WACHR,GAAGC,GAASU,OAAOJ,EAAMC,KAIjCG,OAAQ,SAASJ,EAAMC,GAMnB,MALIP,GAAQW,oBACRX,EAAQW,oBAAoBL,EAAMC,GAAI,GAC/BP,EAAQS,aACfT,EAAQY,YAAY,KAAON,EAAMC,GAE9BH,MAGXS,SAAU,SAASC,GAKf,QAAKA,IAKDd,IAAYc,IAIZd,EAAQa,SACDb,EAAQa,SAASC,MAGgC,EAA9CA,EAAWC,wBAAwBf,OAOrDgB,aAAc,SAASC,GAEnB,MADAA,GAASC,WAAWF,aAAahB,EAASiB,GACnCb,MAGXe,OAAQ,WAEJ,MADAnB,GAAQkB,WAAWE,YAAYpB,GACxBI,MAOXiB,IAAK,SAASC,GAEV,GAAqB,MAAjBtB,EAAQE,MACR,KAAM,IAAIH,IAAGwB,MAAM,6EAWvB,OAPsB,OAAlBD,EAAOE,SAC8B,gBAA1BxB,GAAQE,MAAMsB,SAAqD,mBAArBxB,GAAe,UACpEsB,EAAOG,OAAS,iBAAmBC,KAAKC,MAAM,IAAML,EAAOE,SAAW,KAG9EzB,GAAG6B,OAAO5B,EAAQE,MAAOoB,GAElBlB,MAGXyB,SAAU,SAASC,EAAMC,GACrB,GAAIC,GAAK,GAAIC,QAAO,QAAUH,EAAO,QACrC,OAAOE,GAAGE,KAAKlC,EAAQmC,eAAiBJ,IAAkBC,EAAGE,KAAKlC,EAAQkB,WAAWiB,aAGzFC,SAAU,SAASN,GAIf,MAHK/B,IAAGC,GAAS6B,SAASC,KACtB9B,EAAQmC,WAAa,IAAML,GAExB1B,MAGXiC,YAAa,SAASP,GAClB,GAAIE,GAAK,GAAIC,QAAO,QAAUH,EAAO,QAErC,OADA9B,GAAQmC,UAAYnC,EAAQmC,UAAUG,QAAQN,EAAI,KAAKM,QAAQ,aAAc,IACtElC,MAGXmC,WAAY,SAASJ,EAAWK,GAC5B,GAAIC,GACAC,IAEJ,OAAIF,IAASxC,EAAQ2C,cACV3C,EAAQ2C,cAAc,IAAMR,GAE9BnC,EAAQ4C,iBACN5C,EAAQ4C,iBAAiB,IAAMT,IAG1CM,EAAazC,EAAQ6C,qBAAqB,KAE1C9C,GAAG+C,KAAKL,EAAY,SAASM,EAAKC,GAC1BjD,GAAGiD,GAAKnB,SAASM,IACjBO,EAAOO,KAAKD,KAGbR,EAAQE,EAAO,GAAKA,IAG/BQ,gBAAiB,SAASf,GACtB,MAAOpC,IAAGC,GAASuC,WAAWJ,GAAW,IAG7CgB,SAAU,WAIN,IAHA,GAAIA,MACAC,EAAQpD,EAAQqD,WAEbD,GACoB,IAAnBA,EAAME,UACNH,EAASF,KAAKG,GAElBA,EAAQA,EAAMG,WAGlB,OAAOJ,IAGXK,QAAS,SAASC,GAGd,MAFAzD,GAAQ0D,UAAYD,EACpBzD,EAAQ2D,YAAcF,EACfrD,MAGXwD,UAAW,WACP,MAAO7D,IAAGC,GAASwD,QAAQ,KAK/BK,aAAc,SAASC,GACnB,GAAIC,EAEJ,OAAI/D,GAAQ6D,eAEH7D,EAAQ6D,aAAaC,IAKkC,MAArD,WAAaE,KAAKhE,EAAQiE,aAAaH,KAG9CC,EAAU/D,EAAQ8D,GAEFI,SAAZH,GAKiC,MAA9B,WAAaC,KAAKD,QAMxC,WACG,YAEAhE,IAAGoE,aAAe,SAASC,EAAQC,EAAMC,GACrC,MAAOvE,IAAGwE,cAAcH,EAAOI,UAAUH,EAAMC,KAGnDvE,GAAGwE,cAAgB,SAASE,GACxB,GAAIC,GAAaC,EAgBbC,EAAUC,EAfVC,EAAa,SAASC,EAAMV,GACxB,GAAIW,GAAcC,OAAOD,aACjBC,OAAOC,mBACPD,OAAOE,gBACPF,OAAOG,cACXC,EAAcL,GAAe,GAAIA,EAErC,OAAIK,IACAA,EAAYC,OAAOP,GACZM,EAAYE,QAAQlB,IAGpB,GAAImB,OAAMT,IAAQzE,KAAM+D,IAyB3C,OAlBIM,GADAF,EAAQgB,MAAM,KAAK,GAAGC,QAAQ,WAAa,EAC9BC,KAAKlB,EAAQgB,MAAM,KAAK,IAGxBG,UAAUnB,EAAQgB,MAAM,KAAK,IAI9CZ,EAAaJ,EAAQgB,MAAM,KAAK,GAC3BA,MAAM,KAAK,GACXA,MAAM,KAAK,GAGhBf,EAAc,GAAImB,aAAYlB,EAAWmB,QACzClB,EAAW,GAAImB,YAAWrB,GAC1B3E,GAAG+C,KAAK6B,EAAY,SAAS5B,EAAKiD,GAC9BpB,EAAS7B,GAAOiD,EAAUC,WAAW,KAGlCnB,EAAWJ,EAAaG,IAGnC9E,GAAGmG,IAAM,SAASC,EAASC,GACnBnB,OAAOoB,UACFD,GAAmB,SAAVA,EAKNnB,OAAOoB,QAAQD,GACfnB,OAAOoB,QAAQD,GAAOD,GAGtBlB,OAAOoB,QAAQH,IAAI,IAAME,EAAQ,KAAOD,GAR5ClB,OAAOoB,QAAQH,IAAIC,KAc/BpG,GAAGuG,SAAW,SAASC,GACnB,MAAOA,KAAaA,EAASjD,UAAyD,oBAA7CkD,OAAOC,UAAUC,SAASC,KAAKJ,IAG5ExG,GAAG6G,WAAa,SAASL,GACrB,MAA6B,kBAAf,IASlBxG,GAAG8G,QAAU,SAASC,GAClB,MAAiD,mBAA1CN,OAAOC,UAAUC,SAASC,KAAKG,IACjCA,GAAS7B,OAAOY,aAAeiB,EAAMC,QAAUD,EAAMC,OAAOC,cAAgBnB,aAIrF9F,GAAGkH,WAAa,SAASC,GACrB,MAAyD,kCAAlDV,OAAOC,UAAUC,SAASC,KAAKO,IAK1CnH,GAAGoH,WAAa,SAASC,GACrB,MAAyD,sBAAlDZ,OAAOC,UAAUC,SAASC,KAAKS,IAGjCA,EAAcC,MAAQD,EAAcE,WAG7CvH,GAAGwH,SAAW,SAASC,GACnB,MAAuD,oBAAhDhB,OAAOC,UAAUC,SAASC,KAAKa,IAG1CzH,GAAG0H,QAAU,SAASC,GAClB,MAAIC,QAAOlB,UAAUmB,KACVF,EAAOE,OAGXF,EAAOpF,QAAQ,aAAc,KAOxCvC,GAAG8H,OAAS,SAASC,GAEjB,GAAIC,GAAQC,MAAMvB,UAAUwB,MAAMtB,KAAKuB,UAAW,GAC9CC,EAASL,EACTM,EAAmBD,EAAOzC,QAAQ,KAetC,OAbA3F,IAAG+C,KAAKiF,EAAM,SAAShF,EAAKC,GACxB,GAAIqF,GAAYF,EAAOG,UAAU,EAAGF,GAChCG,EAAWJ,EAAOG,UAAUF,EAAmB,EAMnD,IAJAD,EAASE,EAAYrF,EAAMuF,EAC3BH,EAAmBD,EAAOzC,QAAQ,KAAM0C,EAAmBpF,EAAI8C,QAG3DsC,EAAmB,EACnB,OAAO,IAIRD,GAGXpI,GAAGyI,OAAS,SAASC,GACjB,MAAOxD,QAAOyD,MAAsD,kBAA9ClC,OAAOC,UAAUC,SAASC,KAAK8B,IAGzD1I,GAAG4I,WAAa,SAASC,GACrB,MAAO3D,QAAO4D,UAA8D,sBAAlDrC,OAAOC,UAAUC,SAASC,KAAKiC,IAG7D7I,GAAG+I,cAAgB,SAASC,GACxB,MAAOhJ,IAAGyI,OAAOO,IAAqBhJ,GAAGiJ,QAAQD,IAGrDhJ,GAAGiJ,QAAU,SAASC,EAAYC,GAC9B,GAAIC,GAAe,SAAS7I,GACxB,GAAI8I,GAAiB9I,EAAK+I,aAE1B,OAAIH,GAC0B,SAAnBE,EAGe,SAAnBA,EAGX,UAAInE,OAAOqE,kBAC4C,8BAA/C9C,OAAOC,UAAUC,SAASC,KAAKsC,IAC3BA,EAAW3I,MAAQ6I,EAAaF,EAAW3I,WAKnD2I,EAAWM,SAC8B,UAArCN,EAAWM,QAAQF,eACfJ,EAAW3I,MAAQ6I,EAAaF,EAAW3I,QAS3DP,GAAGyJ,OAAS,SAASC,GACjB,GAAIxE,OAAOO,MAAsD,kBAA9CgB,OAAOC,UAAUC,SAASC,KAAK8C,GAC9C,OAAO,GAIf1J,GAAG2J,qBAAuB,WACtB,GAAIC,GAAQC,SAASC,cAAc,QAGnC,OAFAF,GAAMrJ,KAAO,OAGU4D,SAAnByF,EAAMG,UACc,mBAATpB,OACa,mBAAbqB,WACoC,mBAAnChK,IAAGiK,oBAAqBC,QAI5ClK,GAAGiK,kBAAoB,WACnB,GAAI/E,OAAOiF,eACP,MAAO,IAAIA,eAGf,KACI,MAAO,IAAIC,eAAc,sBAE7B,MAAOC,GAEH,MADArK,IAAGmG,IAAI,wCAAyC,SACzC,OAIfnG,GAAGsK,sBAAwB,SAASC,GAChC,MAAOA,GAAaC,OAChBD,EAAaC,MAAMzE,OAAS,GAC5BwE,EAAaC,MAAM,GAAGC,kBAG9BzK,GAAG0K,wBAA0B,WACzB,OAAQ1K,GAAG2K,gBACP3K,GAAG2J,yBACuBxF,SAAzBwE,KAAKjC,UAAUwB,OAAsD/D,SAA/BwE,KAAKjC,UAAUkE,aAAyDzG,SAA5BwE,KAAKjC,UAAUmE,WAG1G7K,GAAG8K,UAAY,SAASC,EAAYC,EAAOC,GACvC,GAAIC,GAASH,EAAW7C,OAAS6C,EAAWF,UAAYE,EAAWH,WAEnE,OAAOM,GAAOtE,KAAKmE,EAAYC,EAAOC,IAG1CjL,GAAGmL,iBAAmB,SAASnE,GAC3B,GAAIoE,GAAa,GACbC,EAAQ,GAAIrF,YAAWgB,EAY3B,OAVAhH,IAAG+C,KAAKsI,EAAO,SAASrI,EAAKsI,GACzB,GAAIC,GAAeD,EAAI3E,SAAS,GAE5B4E,GAAaxF,OAAS,IACtBwF,EAAe,IAAMA,GAGzBH,GAAcG,IAGXH,GAGXpL,GAAGwL,cAAgB,SAASC,EAAMC,EAAa3F,GAC3C,GAAI4F,GAAc3L,GAAG8K,UAAUW,EAAMC,EAAaA,EAAc3F,GAC5D6F,EAAa,GAAIC,YACjBC,EAAU,GAAI9L,IAAG+L,OAUrB,OARAH,GAAWI,OAAS,WAChBF,EAAQG,QAAQjM,GAAGmL,iBAAiBS,EAAWjJ,UAGnDiJ,EAAWM,QAAUJ,EAAQK,QAE7BP,EAAWQ,kBAAkBT,GAEtBG,GAGX9L,GAAG6B,OAAS,SAASY,EAAO4J,EAAQC,GAahC,MAZAtM,IAAG+C,KAAKsJ,EAAQ,SAASE,EAAMtJ,GACvBqJ,GAAgBtM,GAAGuG,SAAStD,IACRkB,SAAhB1B,EAAM8J,KACN9J,EAAM8J,OAEVvM,GAAG6B,OAAOY,EAAM8J,GAAOtJ,GAAK,IAG5BR,EAAM8J,GAAQtJ,IAIfR,GAaXzC,GAAGwM,SAAW,SAASC,EAAQC,GAC3B,GAAIC,MACAC,EAASF,EAASC,EAUtB,OARA3M,IAAG+C,KAAK6J,EAAQ,SAASC,EAAaC,GACN3I,SAAxBsI,EAAOI,KACPF,EAAOE,GAAeJ,EAAOI,IAGjCJ,EAAOI,GAAeC,IAGnBL,GAMXzM,GAAG2F,QAAU,SAASoH,EAAKC,EAAKC,GAC5B,GAAIF,EAAIpH,QACJ,MAAOoH,GAAIpH,QAAQqH,EAAKC,EAG5BA,GAAOA,GAAQ,CACf,IAAIC,GAAMH,EAAIhH,MAMd,KAJIkH,EAAO,IACPA,GAAQC,GAGLD,EAAOC,EAAKD,GAAQ,EACvB,GAAIF,EAAII,eAAeF,IAASF,EAAIE,KAAUD,EAC1C,MAAOC,EAGf,QAAO,GAIXjN,GAAGoN,YAAc,WACb,MAAO,uCAAuC7K,QAAQ,QAAS,SAAS8K,GAEpE,GAAIC,GAAoB,GAAhB3L,KAAK4L,SAAgB,EAAGC,EAAS,KAALH,EAAWC,EAAS,EAAJA,EAAU,CAC9D,OAAOE,GAAE7G,SAAS,OAM1B3G,GAAGyN,GAAK,WACJ,MAAOC,WAAUC,UAAUhI,QAAQ,WAAY,GAC3C+H,UAAUC,UAAUhI,QAAQ,cAAe,GAGnD3F,GAAG4N,IAAM,WACL,MAAOF,WAAUC,UAAUhI,QAAQ,aAAc,GAGrD3F,GAAG6N,IAAM,WACL,MAAOH,WAAUC,UAAUhI,QAAQ,aAAc,GAGrD3F,GAAG8N,KAAO,WACN,MAAOJ,WAAUC,UAAUhI,QAAQ,cAAe,GAGtD3F,GAAG+N,KAAO,WACN,MAAO/N,IAAGyN,MAAQC,UAAUC,UAAUhI,QAAQ,YAAa,GAG/D3F,GAAGgO,KAAO,WACN,MAAON,WAAUC,UAAUhI,QAAQ,SAAW,GAGlD3F,GAAGiO,OAAS,WACR,MAA4B9J,UAArBuJ,UAAUQ,QAAwBR,UAAUQ,OAAOvI,QAAQ,YAAa,GAGnF3F,GAAGmO,OAAS,WACR,MAA4BhK,UAArBuJ,UAAUQ,QAAwBR,UAAUQ,OAAOvI,QAAQ,aAAc,GAGpF3F,GAAGoO,MAAQ,WACP,MAA4BjK,UAArBuJ,UAAUQ,QAAwBR,UAAUQ,OAAOvI,QAAQ,YAAa,GAGnF3F,GAAGqO,QAAU,WACT,OAASrO,GAAGgO,SAAWhO,GAAG+N,QAAUL,UAAUC,UAAUhI,QAAQ,cAAe,GAA2BxB,SAArBuJ,UAAUQ,QAA6C,KAArBR,UAAUQ,QAGrIlO,GAAGsO,QAAU,WACT,MAA8B,UAAvBZ,UAAUa,UAGrBvO,GAAGwO,QAAU,WACT,MAAOd,WAAUC,UAAUrE,cAAc3D,QAAQ,cAAe,GAKpE3F,GAAG2K,aAAe,WACd,MAAO3K,IAAGwO,WAAad,UAAUC,UAAUrE,cAAc3D,QAAQ,UAAY,GAGjF3F,GAAGyO,KAAO,WACN,MAAOzO,IAAG0O,OAAShB,UAAUC,UAAUhI,QAAQ,aAAc,GAGjE3F,GAAG2O,KAAO,WACN,MAAO3O,IAAG0O,OAAShB,UAAUC,UAAUhI,QAAQ,aAAc,GAGjE3F,GAAG4O,KAAO,WACN,MAAO5O,IAAG0O,OAAShB,UAAUC,UAAUhI,QAAQ,aAAc,GAIjE3F,GAAG6O,OAAS,WACR,MAAO7O,IAAG0O,OAAShB,UAAUC,UAAUhI,QAAQ,eAAgB,GAGnE3F,GAAG0O,IAAM,WAEL,MAAOhB,WAAUC,UAAUhI,QAAQ,WAAY,GACxC+H,UAAUC,UAAUhI,QAAQ,WAAY,GACxC+H,UAAUC,UAAUhI,QAAQ,aAAc,GAGrD3F,GAAG8O,UAAY,WACX,MAAO9O,IAAG0O,OAAShB,UAAUC,UAAUhI,QAAQ,YAAa,GAGhE3F,GAAG+O,UAAY,WACX,MAAO/O,IAAG0O,QAAU1O,GAAG8O,aAAepB,UAAUC,UAAUhI,QAAQ,aAAc,GAGpF3F,GAAGgP,iBAAmB,WAClB,MAAOhP,IAAG0O,QAAU1O,GAAG8O,cAAgB9O,GAAG+O,aAM9C/O,GAAGiP,eAAiB,SAASC,GACrBA,EAAED,eACFC,EAAED,iBAEFC,EAAEC,aAAc,GAQxBnP,GAAGoP,UAAa,WACZ,GAAIC,GAAMxF,SAASC,cAAc,MACjC,OAAO,UAASwF,GACZD,EAAIE,UAAYD,CAChB,IAAIrP,GAAUoP,EAAI/L,UAElB,OADA+L,GAAIhO,YAAYpB,GACTA,MAKfD,GAAG+C,KAAO,SAASyM,EAAcC,GAC7B,GAAIC,GAAYC,CAEhB,IAAIH,EAEA,GAAItK,OAAO0K,SAAWJ,EAAavI,cAAgB/B,OAAO0K,QACtD,IAAKF,EAAa,EAAGA,EAAaF,EAAazJ,SAC3C4J,EAASF,EAASD,EAAaK,IAAIH,GAAaF,EAAaM,QAAQN,EAAaK,IAAIH,KAClFC,KAAW,GAFoCD,SAStD,IAAI1P,GAAG8G,QAAQ0I,IAAiBxP,GAAGkH,WAAWsI,IAAiBxP,GAAGoH,WAAWoI,GAC9E,IAAKE,EAAa,EAAGA,EAAaF,EAAazJ,SAC3C4J,EAASF,EAASC,EAAYF,EAAaE,IACvCC,KAAW,GAFoCD,SAOtD,IAAI1P,GAAGwH,SAASgI,GACjB,IAAKE,EAAa,EAAGA,EAAaF,EAAazJ,SAC3C4J,EAASF,EAASC,EAAYF,EAAaO,OAAOL,IAC9CC,KAAW,GAFoCD,SAQvD,KAAKA,IAAcF,GACf,GAAI/I,OAAOC,UAAUyG,eAAevG,KAAK4I,EAAcE,KACnDC,EAASF,EAASC,EAAYF,EAAaE,IACvCC,KAAW,GACX,OASxB3P,GAAGgQ,KAAO,SAASC,EAASC,GACxB,GAAIlQ,GAAG6G,WAAWoJ,GAAU,CACxB,GAAIjI,GAAQC,MAAMvB,UAAUwB,MAAMtB,KAAKuB,UAAW,EAElD,OAAO,YACH,GAAIgI,GAAUnQ,GAAG6B,UAAWmG,EAI5B,OAHIG,WAAUpC,SACVoK,EAAUA,EAAQC,OAAOnI,MAAMvB,UAAUwB,MAAMtB,KAAKuB,aAEjD8H,EAAQI,MAAMH,EAASC,IAItC,KAAM,IAAI3O,OAAM,wCAmBpBxB,GAAGsQ,QAAU,SAASC,EAAKC,EAAMC,GAE7B,GAAIC,MACAC,EAAS,IACTC,EAAM,SAASC,EAASC,GACpB,GAAIC,GAAWP,EACR,QAAQrO,KAAKqO,GACdA,EACAA,EAAO,IAAMM,EAAI,IACjBA,CACY,eAAbC,GAAoC,cAAND,GAC/BJ,EAAWxN,KACa,gBAAZ2N,GACF7Q,GAAGsQ,QAAQO,EAASE,GAAU,GACe,sBAA5CtK,OAAOC,UAAUC,SAASC,KAAKiK,GAChCG,mBAAmBD,GAAY,IAAMC,mBAAmBH,KACxDG,mBAAmBD,GAAY,IAAMC,mBAAmBH,IAqB9E,QAhBKJ,GAAcD,GACfG,EAAU,KAAKxO,KAAKqO,GAAU,MAAMrO,KAAKqO,GAAS,GAAK,IAAM,IAC7DE,EAAWxN,KAAKsN,GAChBE,EAAWxN,KAAKlD,GAAGsQ,QAAQC,KACqB,mBAAxC9J,OAAOC,UAAUC,SAASC,KAAK2J,IAA8C,mBAARA,GAC7EvQ,GAAG+C,KAAKwN,EAAK,SAASvN,EAAKC,GACvB2N,EAAI3N,EAAKD,KAEU,mBAARuN,IAAiC,OAARA,GAAiC,gBAARA,GACjEvQ,GAAG+C,KAAKwN,EAAK,SAAShE,EAAMtJ,GACxB2N,EAAI3N,EAAKsJ,KAGbmE,EAAWxN,KAAK8N,mBAAmBR,GAAQ,IAAMQ,mBAAmBT,IAGpEC,EACOE,EAAWO,KAAKN,GAEhBD,EAAWO,KAAKN,GAClBpO,QAAQ,KAAM,IACdA,QAAQ,OAAQ,MAI7BvC,GAAGkR,aAAe,SAASX,EAAKY,EAAUC,GAmBtC,MAlBKD,KACDA,EAAW,GAAInH,WAGnBhK,GAAG+C,KAAKwN,EAAK,SAASV,EAAK5M,GACvB4M,EAAMuB,EAAeA,EAAe,IAAMvB,EAAM,IAAMA,EAElD7P,GAAGuG,SAAStD,GACZjD,GAAGkR,aAAajO,EAAKkO,EAAUtB,GAE1B7P,GAAG6G,WAAW5D,GACnBkO,EAAS5L,OAAOsK,EAAK5M,KAGrBkO,EAAS5L,OAAOsK,EAAK5M,KAItBkO,GAGXnR,GAAGqR,WAAa,SAASd,EAAKe,GAC1B,GAAI1H,EAeJ,OAbK0H,KACDA,EAAOzH,SAASC,cAAc,SAGlC9J,GAAGkR,aAAaX,GACZhL,OAAQ,SAASsK,EAAK5M,GAClB2G,EAAQC,SAASC,cAAc,SAC/BF,EAAM2H,aAAa,OAAQ1B,GAC3BjG,EAAM2H,aAAa,QAAStO,GAC5BqO,EAAKE,YAAY5H,MAIlB0H,GAOXtR,GAAGyR,UAAY,SAASC,MAEpB,MAAIxM,QAAOyM,MAAQ3R,GAAG6G,WAAW8K,KAAKC,OAC3BD,KAAKC,MAAMF,MAEXG,KAAK,IAAMH,KAAO,MAUjC1R,GAAG8R,aAAe,SAASC,GACvB,GAAIC,GAASD,EAASE,YAAY,KAAO,CAEzC,IAAID,EAAS,EACT,MAAOD,GAASG,OAAOF,EAAQD,EAAShM,OAASiM,IAIzDhS,GAAGmS,YAAc,SAASC,GAGtB,MAAIpS,IAAGiJ,QAAQmJ,GAEJA,EAAgBrL,MAAMxE,QAAQ,YAAa,IAE7CvC,GAAGyI,OAAO2J,IACkB,OAA7BA,EAAgBC,UAAkDlO,SAA7BiO,EAAgBC,SAC9CD,EAAgBC,SAIxBD,EAAgBrQ,MAM3B/B,GAAGsS,eAAiB,WAChB,GAAIC,KAEJ,QAEIC,QAAS,WACL,GAAIC,EACJ,GACIA,GAAWF,EAAUG,QACjBD,GACAA,UAGDA,IAIXnS,OAAQ,WACJ,GAAI0H,GAAOG,SAEX9H,MAAKsS,YAAY3S,GAAGgI,EAAK,IAAI1H,OAAO+P,MAAMhQ,KAAM4H,MAAMvB,UAAUwB,MAAMtB,KAAKuB,UAAW,MAI1FwK,YAAa,SAASC,GAClBL,EAAUrP,KAAK0P,SCt2B9B,WACG,YACsB,mBAAXC,SAAyBA,OAAOC,IACvCD,OAAO,WACH,MAAO7S,MAGY,mBAAX+S,SAA0BA,OAAOC,QAC7CD,OAAOC,QAAUhT,GAGjBD,OAAOC,GAAKA,MCRnB,WACG,YAEAA,IAAGwB,MAAQ,SAAS4E,GAChB/F,KAAK+F,QAAU,kBAAoBpG,GAAGiT,QAAU,KAAO7M,GAG3DpG,GAAGwB,MAAMkF,UAAY,GAAIlF,UCV7BxB,GAAGiT,QAAU,SCAbjT,GAAGkT,kBAAqB,WACpB,YAkBA,SAASC,KACL,GACIC,GADAC,GAAY,CAGhB,KACID,EAAYvJ,SAASC,cAAc,SACnCsJ,EAAU7S,KAAO,OACjBP,GAAGoT,GAAWlT,OAEVkT,EAAUE,WACVD,GAAY,GAGpB,MAAOE,GACHF,GAAY,EAGhB,MAAOA,GAIX,QAASG,KACL,OAAQxT,GAAGmO,UAAYnO,GAAGoO,UAC+CjK,SAArEuJ,UAAUC,UAAU8F,MAAM,uCAIlC,QAASC,KACL,OAAQ1T,GAAGmO,UAAYnO,GAAGoO,UAC+CjK,SAArEuJ,UAAUC,UAAU8F,MAAM,uCAIlC,QAASE,KACL,GAAIzO,OAAOiF,eAAgB,CACvB,GAAIyJ,GAAM5T,GAAGiK,mBAGb,OAA+B9F,UAAxByP,EAAIC,gBAGf,OAAO,EAIX,QAASC,KACL,MAAiC3P,UAA1Be,OAAO6O,eAKlB,QAASC,KACL,QAAIL,KAIGG,IAGX,QAASG,KAEL,MAA2D9P,UAApD0F,SAASC,cAAc,SAASoK,gBAG3C,QAASC,KACL,IACI,QAASjP,OAAOkP,cAEZpU,GAAG6G,WAAW3B,OAAOkP,aAAaC,SAE1C,MAAOhK,GAEH,OAAO,GAIf,QAASiK,KACL,GAAIC,GAAO1K,SAASC,cAAc,OAElC,QAAQ,aAAeyK,IAAS,eAAiBA,IAAQ,UAAYA,MAChEvU,GAAGwO,YAAcxO,GAAG0O,MAhG7B,GAAI8F,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CAwHJ,OAnCAd,GAAoBrB,IAEpBwB,EAA4BH,GAAqBxU,GAAG2J,uBAEpD8K,EAAyBE,IAA8B3U,GAAG2K,eAE1D+J,EAAmBC,GAA6BL,IAEhDM,EAAqBF,GAAoBlB,IAEzCqB,EAAmBF,GAA6B3U,GAAG0K,0BAEnDoK,EAAiBH,GAA6BE,GAAoBV,IAElEY,EAAyBJ,GAA6BjB,IAEtDsB,EAAqBR,IAA6CrQ,SAAvBe,OAAOqQ,aAA6BZ,GAE/EO,EAA4BvB,IAE5BsB,EAAwBnB,IAExBqB,EAAyBnB,IAEzBoB,EAA0BnB,IAE1BoB,EAAwBV,GAAmDxQ,SAAtBe,OAAO2G,WAE5DyJ,EAA0B,WACtB,QAAIX,KACQ3U,GAAG2K,iBAAmB3K,GAAG8O,iBAMrC0G,cAAeb,EACfc,cAAehB,EACfiB,iBAAkBf,EAClBgB,SAAUd,EACVe,eAAgBT,EAChBU,kBAAmBZ,EACnBa,kBAAmBZ,EACnBa,gBAAiB7Q,OAAO8Q,kBACxBC,SAAUvB,EACVwB,WAAYtB,EACZuB,gBAAiBf,EACjBgB,cAAef,EACfgB,gBAAiBhB,EACjBiB,mBAAoB3B,EACpB4B,MAAO1B,EACP2B,YAAalB,EACbmB,OAAQ3B,EACR4B,QAASrB,GAAyBZ,EAClCkC,aAAc3W,GAAGiO,SACjB2I,0BAA2B5W,GAAG0O,MAC9BmI,UAAWrC,EACXsC,WAAY9B,EACZ+B,oBAAqBpC,EACrBqC,mBAAoBrC,EACpBsC,eAAgBlC,MChKxB/U,GAAGkX,iBAAmB,SAASC,GAC3B,YACA,UAAUA,GAAgBA,EAAaC,MAAQpX,GAAG6G,WAAWsQ,EAAaC,QAG9EpX,GAAG+L,QAAU,WACT,YAEA,IAAIsL,GAAaC,EACbC,KACAC,KACAC,KACAC,EAAQ,CAEZ1X,IAAG6B,OAAOxB,MACN+W,KAAM,SAASO,EAAWC,GAgBtB,MAfc,KAAVF,GACIC,GACAJ,EAAiBrU,KAAKyU,GAEtBC,GACAJ,EAAiBtU,KAAK0U,IAGrBF,KAAU,EACfE,GAAaA,EAAUvH,MAAM,KAAMiH,GAE9BK,GACLA,EAAUtH,MAAM,KAAMgH,GAGnBhX,MAGXwX,KAAM,SAASpI,GAQX,MAPc,KAAViI,EACAD,EAAcvU,KAAKuM,GAGnBA,EAASY,MAAM,KAAsBlM,SAAhBmT,EAA4BD,EAAcC,GAG5DjX,MAGX4L,QAAS,WAgBL,MAfAyL,GAAQ,EACRL,EAAclP,UAEVoP,EAAiBxR,QACjB/F,GAAG+C,KAAKwU,EAAkB,SAASvU,EAAKyM,GACpCA,EAASY,MAAM,KAAMgH,KAIzBI,EAAc1R,QACd/F,GAAG+C,KAAK0U,EAAe,SAASzU,EAAKyM,GACjCA,EAASY,MAAM,KAAMgH,KAItBhX,MAGX8L,QAAS,WAgBL,MAfAuL,IAAQ,EACRJ,EAAcnP,UAEVqP,EAAiBzR,QACjB/F,GAAG+C,KAAKyU,EAAkB,SAASxU,EAAKyM,GACpCA,EAASY,MAAM,KAAMiH,KAIzBG,EAAc1R,QACd/F,GAAG+C,KAAK0U,EAAe,SAASzU,EAAKyM,GACjCA,EAASY,MAAM,KAAMiH,KAItBjX,SC3EnBL,GAAG8X,UAAY,SAASC,EAAeC,GACnC,YAEAhY,IAAG6B,OAAOxB,MACN0X,cAAeA,EAEfE,OAAQ,WACJ,MAAOD,GAASD,OCF5B/X,GAAGkY,aAAe,SAASC,GACvB,YA0CA,SAASC,KACL,GAAIxO,GAAQC,SAASC,cAAc,QAmEnC,OAjEAF,GAAM2H,aAAavR,GAAGkY,aAAaG,oBAAqBC,GACxD1O,EAAM2H,aAAa,QAASgH,EAAQC,OAEpCC,EAAKC,YAAYH,EAAQxO,SAAUH,GAE/B2O,EAAQI,SAAW3Y,GAAGkT,kBAAkBiD,iBAExCvM,EAAM2H,aAAa,kBAAmB,IAGtCgH,EAAQK,aACRhP,EAAM2H,aAAa,SAAUgH,EAAQK,aAGzChP,EAAM2H,aAAa,OAAQ,QAC3B3H,EAAM2H,aAAa,OAAQgH,EAAQxW,MAEnC/B,GAAG4J,GAAOtI,KACNuX,SAAU,WAIVC,MAAO,EACPC,IAAK,EACLC,WAAY,QASZC,SAAUjZ,GAAGyN,OAASzN,GAAG6N,MAAQ,SAAW,QAC5CqL,OAAQ,EACRC,QAAS,EACTC,OAAQ,UACR3X,QAAS,KAKZzB,GAAG4N,OAAS5N,GAAG4J,GAAOtI,KAAK+X,OAAQ,SAEpCd,EAAQtY,QAAQuR,YAAY5H,GAE5B0P,EAAehZ,OAAOsJ,EAAO,SAAU,WACnC2O,EAAQgB,SAAS3P,KAIrB0P,EAAehZ,OAAOsJ,EAAO,YAAa,WACtC5J,GAAGuY,EAAQtY,SAASoC,SAASkW,EAAQiB,cAEzCF,EAAehZ,OAAOsJ,EAAO,WAAY,WACrC5J,GAAGuY,EAAQtY,SAASqC,YAAYiW,EAAQiB,cAG5CF,EAAehZ,OAAOsJ,EAAO,QAAS,WAClC5J,GAAGuY,EAAQtY,SAASoC,SAASkW,EAAQkB,cAEzCH,EAAehZ,OAAOsJ,EAAO,OAAQ,WACjC5J,GAAGuY,EAAQtY,SAASqC,YAAYiW,EAAQkB,cAGrC7P,EA5GX,GAgCIA,GAAO0O,EAhCPG,EAAOpY,KAEPiZ,EAAiB,GAAItZ,IAAGsS,eAExBiG,GAEIK,YAAa,KAGb3Y,QAAS,KAETwZ,WAAY,yBAGZd,SAAS,EAGTa,WAAY,yBAEZE,4BAA4B,EAG5B3P,UAAU,EAGVhI,KAAM,SAGNwX,SAAU,SAAS3P,KAEnB4O,MAAO,KAKfxY,IAAG6B,OAAO0W,EAASJ,GAEnBG,EAAWtY,GAAGoN,cA2EdpN,GAAGuY,EAAQtY,SAASqB,KAChBuX,SAAU,WACVc,SAAU,SAEVC,UAAW,QAIf5Z,GAAG6B,OAAOxB,MACNwZ,SAAU,WACN,MAAOjQ,IAGXkQ,YAAa,WACT,MAAOxB,IAGXI,YAAa,SAASqB,EAAYC,GAC9B,GAAIpQ,GAAQoQ,GAAY3Z,KAAKwZ,UAKzBtB,GAAQmB,4BAA8B1Z,GAAG4O,SAAW5O,GAAG8O,aAAe9O,GAAGgP,oBACzEpF,EAAM2H,aAAa,WAAY,IAI3BwI,EACAnQ,EAAM2H,aAAa,WAAY,IAG/B3H,EAAMqQ,gBAAgB,aAKlCC,eAAgB,SAAStB,GACjBA,IAAgBL,EAAQK,aACxBhP,EAAM2H,aAAa,SAAUqH,IAIrCuB,MAAO,WACCvQ,EAAMzI,YACNnB,GAAG4J,GAAOxI,SAGdpB,GAAGuY,EAAQtY,SAASqC,YAAYiW,EAAQkB,YACxC7P,EAAQ,KACRA,EAAQwO,OAIhBxO,EAAQwO,KAGZpY,GAAGkY,aAAaG,oBAAsB,eCxLtCrY,GAAGoa,WAAa,SAASC,GACrB,YAQA,SAASC,GAAaC,GAClB,GAAIva,GAAG8G,QAAQyT,GAAU,CACrB,GAAIC,KAMJ,OAJAxa,IAAG+C,KAAKwX,EAAS,SAASvX,EAAKyX,GAC3BD,EAAQtX,KAAK8B,EAAKyV,MAGfD,EAGX,MAAOxV,GAAKuV,GAGhB,QAASG,GAAeC,GACpB,GAAI3a,GAAG8G,QAAQ6T,GAAQ,CACnB,GAAIH,KAMJ,OAJAxa,IAAG+C,KAAK4X,EAAO,SAAS3X,EAAK4X,GACzBJ,EAAQtX,KAAK8B,EAAK6V,EAAOD,OAGtBJ,EAGX,MAAOxV,GAAK6V,EAAOF,IAGvB,QAASG,GAAgBC,GACrB,GAAIC,MACAC,KAAc7K,OAAO2K,EAYzB,OAVA/a,IAAG+C,KAAKkY,EAAU,SAASC,EAAOC,GAC9B,GAAIC,GAAsBC,EAASF,EAEPhX,UAAxBiX,GACApb,GAAG+C,KAAKqY,EAAqB,SAAStK,EAAGwK,GACrCN,EAAc9X,KAAK8B,EAAKsW,QAK7BN,EAhDX,GAAIhW,MACA6V,KACAQ,KACAE,KACAC,IA+CJxb,IAAG6B,OAAOxB,MAgBNob,QAAS,SAASC,GACd,GAAIX,GAASW,EAAKX,QAAU/a,GAAG+a,OAAOY,WAClClB,EAAKzV,EAAK9B,MACNnB,KAAM2Z,EAAK3Z,KACX6Z,aAAcF,EAAK3Z,KACnB6Y,KAAMc,EAAKd,KACXiB,KAAmB,MAAbH,EAAKG,MAAe,EAAKH,EAAKG,KACpCd,OAAQA,IACP,CA+BT,OA7BIW,GAAKI,UACL9W,EAAKyV,GAAIqB,QAAUJ,EAAKI,QAEQ3X,SAA5BqX,EAAUE,EAAKI,WACfN,EAAUE,EAAKI,aAEnBN,EAAUE,EAAKI,SAAS5Y,KAAKuX,IAG7BiB,EAAKK,eACL/W,EAAKyV,GAAIsB,aAAeL,EAAKK,aAEa5X,SAAtCoX,EAAeG,EAAKK,gBACpBR,EAAeG,EAAKK,kBAExBR,EAAeG,EAAKK,cAAc7Y,KAAKuX,IAG3CzV,EAAKyV,GAAIA,GAAKA,EACdI,EAAOa,EAAKd,MAAQH,EAEKtW,SAArBkX,EAASN,KACTM,EAASN,OAEbM,EAASN,GAAQ7X,KAAKuX,GAEtBiB,EAAKM,sBAAwBN,EAAKM,qBAAqBvB,GACvDJ,EAAc4B,eAAexB,EAAI,KAAMM,GAEhCN,GAGXyB,SAAU,SAASC,GACf,MAAInc,IAAGuG,SAAS4V,IAAmBnX,EAAKe,OACV5B,SAAtBgY,EAAe1B,GACRH,EAAa6B,EAAe1B,IAGNtW,SAAxBgY,EAAevB,KACbF,EAAeyB,EAAevB,MAGhCuB,EAAepB,OACbD,EAAgBqB,EAAepB,QADrC,OAKE/a,GAAG6B,UAAWmD,GAAM,IAInCmV,MAAO,WACHnV,KACA6V,KACAQ,KACAG,MAGJY,UAAW,SAAS3B,EAAI4B,GACpB,GAAIC,GAAYtX,EAAKyV,GAAIM,OACrBwB,EAAyBvc,GAAG2F,QAAQ0V,EAASiB,GAAY7B,EAE7DY,GAASiB,GAAWE,OAAOD,EAAwB,GAEnDvX,EAAKyV,GAAIM,OAASsB,EAEUlY,SAAxBkX,EAASgB,KACThB,EAASgB,OAEbhB,EAASgB,GAAWnZ,KAAKuX,GAEzBJ,EAAc4B,eAAexB,EAAI6B,EAAWD,IAGhDI,YAAa,SAAShC,EAAIiC,GACtB,GAAIC,GAAU3X,EAAKyV,GAAIG,IAEvB5V,GAAKyV,GAAIG,KAAO8B,EAChB7B,EAAO6B,GAAWjC,QACXI,GAAO8B,IAGlBC,WAAY,SAASnC,EAAIoC,GACrB7X,EAAKyV,GAAI1Y,KAAO8a,GAGpBC,WAAY,SAASrC,EAAIsC,GACrB/X,EAAKyV,GAAIoB,KAAOkB,GAIpBC,YAAa,SAASC,EAAUC,GAC5BlY,EAAKiY,GAAUC,SAAWA,GAG9BC,mBAAoB,SAAS1C,GACzB,GAAIsB,GAAe/W,EAAKyV,GAAIsB,YAE5B,OAAIA,GACOR,EAAeQ,OAK9BqB,cAAe,SAAS3C,GACpB,GAAIqB,GAAU9W,EAAKyV,GAAIqB,OAEvB,OAAON,GAAUM,OAK7B9b,GAAG+a,QACCY,WAAY,aACZ0B,UAAW,YACXC,SAAU,WACVC,OAAQ,SACRC,SAAU,WACVC,OAAQ,SACRC,UAAW,YACXC,gBAAiB,kBACjBC,kBAAmB,oBACnBC,cAAe,gBACfC,cAAe,gBACfC,SAAU,WACVC,QAAS,WC1MZ,WACG,YAEAhe,IAAGie,eAECC,SAAU,SAASC,EAAiBC,EAAQC,GACxChe,KAAKie,SAASH,EAAiBC,EAAQC,IAG3CE,gBAAiB,SAASC,GACtB,GAAI/F,GAAOpY,IAEXL,IAAG+C,KAAKyb,EAAgB,SAAStD,EAAOuD,GACpChG,EAAKiG,eAAeD,MAI5BH,SAAU,SAAStZ,EAAMoZ,EAAQC,GAC7Bhe,KAAKse,kCAEL,IAAI7C,GAAqC,IAA3Bzb,KAAKue,WAAW7Y,OAAe/F,GAAGoN,cAAgB/M,KAAKwe,gBAEjEC,EAAc9e,GAAGgQ,KAAK,SAASvE,GAC3BpL,KAAK0e,gBACDtT,KAAMA,EACN1J,KAAM1B,KAAK2e,SAASC,MAAMC,aAC3BpD,EAASqD,IACb9e,MAEH+e,EAAkBpf,GAAGgQ,KAAK,SAASqP,GAC/Bhf,KAAK0e,eAAeM,EAAUvD,EAASqD,IACxC9e,MAEHif,EAAgBtf,GAAGgQ,KAAK,SAAS3L,GAC7B,GAAIoH,GAAOzL,GAAGoE,aAAaC,EAE3BhE,MAAK0e,gBACDtT,KAAMA,EACN1J,KAAM1B,KAAK2e,SAASC,MAAMC,YAAc,QACzCpD,EAASqD,IACb9e,MAEHkf,EAAoBvf,GAAGgQ,KAAK,SAASwP,GACjC,GAAIC,GAAoBD,EAAWjb,SAAWib,EAAWjb,QAAU,IAC/DkH,EAAOzL,GAAGoE,aAAaob,EAAWnb,OAAQmb,EAAWjf,KAAMkf,EAE/Dpf,MAAK0e,gBACDtT,KAAMA,EACN1J,KAAMyd,EAAWzd,MAClB+Z,EAASqD,IACb9e,MAEHqf,EAAqB1f,GAAGgQ,KAAK,SAAS2P,GAClC,GAAI3f,GAAGiJ,QAAQ0W,IAAgB3f,GAAGkT,kBAAkBsC,cAAe,CAC/D,GAAIoK,GAAQ3X,MAAMvB,UAAUwB,MAAMtB,KAAK+Y,EAAYC,OAC/CnH,EAAOpY,IAEXL,IAAG+C,KAAK6c,EAAO,SAAS5c,EAAK6c,GACzBpH,EAAKsG,eAAec,EAAM/D,EAASqD,SAIvC9e,MAAK0e,eAAeY,EAAa7D,EAASqD,IAE/C9e,MAEHyf,EAAgB,WACR9f,GAAG4I,WAAW5D,KACdA,EAAOiD,MAAMvB,UAAUwB,MAAMtB,KAAK5B,IAEtCA,KAAUoL,OAAOpL,IAGrByT,EAAOpY,KACP8e,IAEJ9e,MAAKwe,gBAAkB/C,EAEnB9W,IACA8a,IAEA9f,GAAG+C,KAAKiC,EAAM,SAAShC,EAAK+c,GACpB/f,GAAG+I,cAAcgX,GACjBL,EAAmBK,GAEd/f,GAAGyJ,OAAOsW,GACfjB,EAAYiB,GAEP/f,GAAGuG,SAASwZ,GACbA,EAActU,MAAQsU,EAAche,KACpCqd,EAAgBW,GAEXA,EAAc1b,QAAU0b,EAAche,MAC3Cwd,EAAkBQ,GAGjBA,EAAcvW,SAAmD,WAAxCuW,EAAcvW,QAAQF,cACpDgW,EAAcS,GAGdtH,EAAKtS,IAAI4Z,EAAgB,6CAA8C,UAI/E1f,KAAK8F,IAAI,YAAcgZ,EAAcpZ,OAAS,WAC9C1F,KAAK2f,uBAAuBb,EAAef,EAAQC,KAI3D4B,OAAQ,SAASxF,GACbpa,KAAK6f,SAASD,OAAOxF,IAGzB0F,UAAW,WACP,GAAIC,MACA3H,EAAOpY,IAEXL,IAAG6B,OAAOue,EAAe/f,KAAKue,YAC9B5e,GAAG+C,KAAKqd,EAAe,SAASpd,EAAKqd,GACjC5H,EAAKwH,OAAOI,KAGhBhgB,KAAK6f,SAASC,aAGlBG,iBAAkB,WACdjgB,KAAKue,eAGT2B,eAAgB,SAAS9F,GACrB,GAAI+F,GAAangB,KAAKogB,YAAYvE,UAAUzB,GAAIA,GAEhD,UAAKza,GAAGkT,kBAAkBqD,QAAUlW,KAAK2e,SAASrJ,SAAS+K,WAIvDF,EAAWzF,SAAW/a,GAAG+a,OAAO0C,QAChCpd,KAAK8F,IAAInG,GAAG8H,OAAO,yDAA0D2S,EAAIpa,KAAKsgB,QAAQlG,KAC9Fpa,KAAKugB,YAAYnG,IACV,IAGPpa,KAAK8F,IAAInG,GAAG8H,OAAO,sDAAuD2S,EAAIpa,KAAKsgB,QAAQlG,IAAM,UAG9F,KAGXoG,WAAY,SAASpG,GACjB,MAAOpa,MAAKygB,gBAAgBrG,IAIhCsG,UAAW,SAASC,GAChB,MAAO3gB,MAAK6f,SAASe,QAAQD,IAOjCE,cAAe,SAASC,EAAQC,EAAaC,EAASC,EAAYC,GAC9D,GACIC,GAAWjJ,EADXkJ,EAAkB,GAAIzhB,IAAG+L,OAqC7B,OAlCI1L,MAAKqhB,iBACLF,EAAYnhB,KAAKshB,eAAeR,GAChC5I,GACIgJ,qBAAsBA,EACtBF,QAASA,EAAU,EAAIA,EAAU,KACjCO,MAAOP,EAAU,IAKhBC,GAActhB,GAAGkT,kBAAkBkD,gBACpCoL,EAAYnhB,KAAKwhB,QAAQV,IAIZ,MAAbK,EACAC,EAAgBtV,SAAS2V,UAAWV,EAAa/W,MAAO,2BAGxDhK,KAAKqhB,gBAAgBK,SAASP,EAAWJ,EAAa7I,GAASnB,KAC3D,SAAiB4K,GACbP,EAAgBxV,QAAQ+V,IAG5B,SAAiBF,EAAWG,GACxBR,EAAgBtV,SAAS2V,UAAWA,EAAWzX,MAAO4X,GAAU,oCAM5ER,EAAgBtV,SAAS2V,UAAWV,EAAa/W,MAAO,mCAGrDoX,GAGXS,UAAW,SAASf,GAChB,MAAO9gB,MAAK8hB,WAAW9hB,KAAK+hB,qBAAqBjB,KAGrDkB,YAAa,SAASlB,GAClB,MAAO9gB,MAAKiiB,eAAeC,IAAIpB,IAGnCU,QAAS,SAASb,GACd,MAAO3gB,MAAK6f,SAAS2B,QAAQb,IAAiB,MAGlDwB,cAAe,WACX,MAAOniB,MAAKogB,YAAYvE,UACpBnB,QACI/a,GAAG+a,OAAO2C,UACV1d,GAAG+a,OAAO4C,gBACV3d,GAAG+a,OAAOwC,UAEfxX,QAGP4a,QAAS,SAASlG,GACd,MAAOpa,MAAKogB,YAAYvE,UAAUzB,GAAIA,IAAK1Y,MAI/C0gB,YAAa,SAAShI,GAClB,GAAIiI,GAAkBriB,KAAKsiB,YAAYlI,GAAIA,IACvCyC,EAAW,IAQf,OANIwF,IACiCve,SAA7Bue,EAAgBxF,WAChBA,EAAWwF,EAAgBxF,UAI5BA,GAGX0F,sBAAuB,WACnB,MAAOviB,MAAK6f,SAAS0C,yBAGzBC,QAAS,SAASpI,GACd,MAAOpa,MAAKogB,YAAYvE,UAAUzB,GAAIA,IAAKoB,MAG/CiH,cAAe,WACX,MAAOziB,MAAK0iB,cAGhBC,yBAA0B,WACtB,GAAIC,GAAe5iB,KAAK6iB,iBAExB,OAAID,GAAe,EACRA,EAAe5iB,KAAK8iB,qBAGxB,MAGXR,WAAY,SAASxG,GACjB,MAAO9b,MAAKogB,YAAYvE,SAASC,IAGrCiH,QAAS,SAAS3I,GACd,MAAOpa,MAAKogB,YAAYvE,UAAUzB,GAAIA,IAAKG,MAG/CzU,IAAK,SAAS4B,EAAK1B,IACXhG,KAAK2e,SAASqE,OAAWhd,GAAmB,SAAVA,EAG7BA,GAAmB,SAAVA,GACdrG,GAAGmG,IAAI,kBAAoBnG,GAAGiT,QAAU,KAAOlL,EAAK1B,GAHpDrG,GAAGmG,IAAI,kBAAoBnG,GAAGiT,QAAU,KAAOlL,IAQvDub,YAAa,SAAS7I,GAClB,GAAI+F,GAAangB,KAAKogB,YAAYvE,UAAUzB,GAAIA,GAEhD,KAAKza,GAAGkT,kBAAkBqD,QAAUlW,KAAK2e,SAASrJ,SAAS+K,QACvD,OAAO,CAIX,IAAI1gB,GAAG2F,SAAS3F,GAAG+a,OAAO2C,UAAW1d,GAAG+a,OAAO4C,iBAAkB6C,EAAWzF,SAAW,EAAG,CACtF,GAAI1a,KAAK6f,SAAS3J,MAAMkE,GAEpB,MADApa,MAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAO0C,SAClC,CAGPpd,MAAK8F,IAAInG,GAAG8H,OAAO,mCAAoC2S,EAAIpa,KAAKsgB,QAAQlG,IAAM,aAIlFpa,MAAK8F,IAAInG,GAAG8H,OAAO,wDAAyD2S,EAAIpa,KAAKsgB,QAAQlG,IAAM,QAGvG,QAAO,GAGX8I,cAAe,SAAS9I,GACpBpa,KAAK6f,SAASsD,QAAQ/I,IAG1BN,MAAO,WACH9Z,KAAK8F,IAAI,yBAET9F,KAAK6f,SAAS/F,QACd9Z,KAAKue,cACLve,KAAKojB,gBACLpjB,KAAKqjB,kBACLrjB,KAAKsjB,mBACLtjB,KAAKshB,kBAEL3hB,GAAG+C,KAAK1C,KAAKujB,SAAU,SAAS5gB,EAAK6gB,GACjCA,EAAO1J,UAGX9Z,KAAKyjB,aAAa3J,QAClB9Z,KAAKiiB,eAAenI,QACpB9Z,KAAK8iB,qBAAuB,EAC5B9iB,KAAK0iB,aAAe,EACpB1iB,KAAKogB,YAAYtG,QACjB9Z,KAAK+hB,wBAEL/hB,KAAK0jB,eAAiB1jB,KAAK0jB,cAAc5J,QACzC9Z,KAAK2e,SAASgF,QAAQC,gBAAkB5jB,KAAK6jB,sBAE7C7jB,KAAK8jB,kCACL9jB,KAAK+jB,+BAEL/jB,KAAKgkB,gBAAkBhkB,KAAKgkB,eAAelK,SAG/CmK,MAAO,SAAS7J,GACZ,MAAOpa,MAAKkkB,aAAa9J,IAG7B+J,WAAY,SAAS/J,EAAIgK,GACrB,GAAIhM,GAAOpY,IAEX,OAAOL,IAAG0kB,OAAOhe,UAAU8d,WAAW/J,EAAIgK,GACtCte,IAAKnG,GAAGgQ,KAAKyI,EAAKtS,IAAKsS,GACvBoJ,QAAS7hB,GAAGgQ,KAAKyI,EAAKoJ,QAASpJ,GAC/B+H,WAAY/H,EAAKgI,eAIzBkE,iBAAkB,SAASC,EAASnK,GAChCpa,KAAKwkB,oBAAoBC,IAAIF,EAASnK,IAG1CsK,2BAA4B,SAASH,EAASnK,GAC1Cpa,KAAK2kB,8BAA8BF,IAAIF,EAASnK,IAGpDwK,sBAAuB,SAAS5G,EAAU5D,GACtCpa,KAAK6kB,yBAAyBJ,IAAIzG,EAAU5D,IAGhD0K,oBAAqB,SAAS/G,EAAQ3D,GAClCpa,KAAK+kB,uBAAuBN,IAAI1G,EAAQ3D,IAI5C4K,YAAa,SAAShH,EAAU5D,GAC5Bpa,KAAKiiB,eAAewC,IAAIzG,EAAU5D,IAGtC6K,QAAS,SAASC,GACdllB,KAAKmlB,4BAA4BD,IAGrCE,aAAc,SAASC,GACnBrlB,KAAK6iB,kBAAoBwC,GAG7BC,QAAS,SAASlL,EAAIoC,GAClBxc,KAAKogB,YAAY7D,WAAWnC,EAAIoC,IAGpC+I,UAAW,SAASxH,EAAQ3D,GACxBpa,KAAKyjB,aAAagB,IAAI1G,EAAQ3D,IAGlCoL,QAAS,SAASpL,EAAIiC,GAClB,MAAOrc,MAAKogB,YAAYhE,YAAYhC,EAAIiC,IAY5CN,UAAW,SAAS3B,EAAI4B,GACpB,GAAIyJ,GAAazlB,KAAKsiB,YAAYlI,GAAIA,GACtC,KAAKqL,EACD,KAAM,IAAI9lB,IAAGwB,MAAMiZ,EAAK,2BAG5B,QAAQ4B,GACJ,IAAKrc,IAAG+a,OAAOiD,QACX3d,KAAK0lB,kBAAkBtL,EAAI,MAAM,EACjC,MACJ,KAAKza,IAAG+a,OAAO+C,cACXzd,KAAK0lB,kBAAkBtL,EAAI,MAAM,EACjC,MACJ,SACI,GAAIuL,GAAe,+BAAiCjkB,KAAO,6BAA+Bsa,CAE1F,MADAhc,MAAK8F,IAAI6f,GACH,GAAIhmB,IAAGwB,MAAMwkB,KAI/BC,kBAAmB,WACgB,IAA3B5lB,KAAKue,WAAW7Y,OAChB1F,KAAK6lB,WAAW,gBAGhB7lB,KAAK8lB,uBAQjBnmB,GAAGomB,gBAEC1H,eAAgB,SAAS2H,GACrB,GAAI5N,GAAOpY,IAEX,OAAOA,MAAKogB,YAAYhF,SACpBb,KAAMyL,EAAYzL,KAClB7Y,KAAMskB,EAAYtkB,KAClB8Z,KAAMwK,EAAYxK,KAClBd,OAAQ/a,GAAG+a,OAAO6C,kBAClB5B,qBAAsB,SAASvB,GAC3B4L,EAAYC,oBAAsB7N,EAAKwM,sBAAsBoB,EAAYC,mBAAoB7L,GAC7F4L,EAAYE,kBAAoB9N,EAAK0M,oBAAoBkB,EAAYE,iBAAkB9L,GAEnF4L,EAAYG,eACZ/N,EAAKkJ,eAAelH,GAAM4L,EAAYG,cAG1C/N,EAAKsK,eACLtK,EAAK0K,2BAKjBsD,sBAAuB,SAAS5G,EAAM6G,GAC9B1mB,GAAGyI,OAAOoX,KACVA,EAAK8G,WAAatmB,KAAKumB,aAAaF,KAI5CG,YAAa,SAASzgB,GAClB/F,KAAK2e,SAAS8H,UAAUC,QAAQ,KAAM,KAAM3gB,EAASjC,SAGzD6iB,qBAAsB,WAClB,GAAIvO,GAAOpY,IAEX,OAAO,IAAIL,IAAGinB,yBACVC,OAAQ7mB,KAAK2e,SAAS6B,WAAWqG,OAAOC,cACxCC,eAAgB/mB,KAAK2e,SAASoI,eAC9BC,cAAehnB,KAAK2e,SAASsI,QAAQC,SACrCC,cAAennB,KAAK2kB,8BACpByC,YAAapnB,KAAK+kB,uBAClBsC,cAAernB,KAAK6kB,yBACpByC,KAAMtnB,KAAK2e,SAAS2I,KACpBxhB,IAAKnG,GAAGgQ,KAAKyI,EAAKtS,IAAKsS,GACvBmP,SAAU,SAASnN,GACfhC,EAAKoP,UAAUpN,GACfhC,EAAKuG,SAAS8H,UAAUc,SAASnN,IAErCqN,iBAAkB,SAASrN,EAAIsN,EAAUC,GACrCvP,EAAKsN,kBAAkBtL,EAAIsN,EAAUC,GACrCvP,EAAKuG,SAAS8H,UAAUgB,iBAAiBrN,EAAIsN,EAAUC,OAMnEC,oBAAqB,WACjB,GAAIxP,GAAOpY,IAEX,OAAO,IAAIL,IAAGkoB,cACVC,cAAe9nB,KAAK2e,SAASoJ,MAAMD,cACnCrB,WACI3gB,IAAKnG,GAAGgQ,KAAKyI,EAAKtS,IAAKsS,GACvB4P,cAAe,SAAS5c,GACpBgN,EAAK6P,wBACDvmB,KAAM,kBACN0N,SAAUzP,GAAGgQ,KAAKyI,EAAKuG,SAAS8H,UAAUyB,gBAAiB9P,EAAMhN,GACjEkM,UAAW3X,GAAGgQ,KAAKyI,EAAK+P,oBAAqB/P,EAAMhN,GACnDgd,WAAY,sBAOhCC,aAAc,SAASC,EAAcC,GACjC,GAAIC,MACAC,EAAWH,EACXI,KACAC,EAAiBJ,EACjBK,EAAO,SAASC,GACZ,MAAIlpB,IAAGuG,SAAS2iB,GACLlpB,GAAG6B,UAAWqnB,GAElBA,GAEXC,EAAoB,WAChB,MAAInpB,IAAG6G,WAAWmiB,GACPA,IAEJA,GAEXI,EAAwB,SAAS3O,EAAI4O,GAC7BL,GAAkBhpB,GAAGuG,SAAS8iB,IAC9BrpB,GAAG6B,OAAOwnB,EAAUF,KAGpBJ,EAAoBtO,IACpBza,GAAG6B,OAAOwnB,EAAUN,EAAoBtO,IAIpD,QACIqK,IAAK,SAAS7hB,EAAKwX,GAEL,MAANA,GACAoO,KACAC,EAAWG,EAAKhmB,IAGhB4lB,EAAMpO,GAAMwO,EAAKhmB,IAIzBsf,IAAK,SAAS9H,GACV,GAAI6O,EAYJ,OARIA,GADM,MAAN7O,GAAcoO,EAAMpO,GACXoO,EAAMpO,GAGNwO,EAAKH,GAGlBM,EAAsB3O,EAAI6O,GAEnBL,EAAKK,IAGhBC,YAAa,SAAS9O,EAAI6O,GAElBtpB,GAAGuG,SAASsiB,KAED,OAAPpO,EACIza,GAAG6G,WAAWyiB,GACdN,EAAiBM,GAGjBN,EAAiBA,MACjBhpB,GAAG6B,OAAOmnB,EAAgBM,KAI9BP,EAAoBtO,GAAMsO,EAAoBtO,OAC9Cza,GAAG6B,OAAOknB,EAAoBtO,GAAK6O,MAK/CloB,OAAQ,SAAS+f,GACb,aAAc0H,GAAM1H,IAGxBhH,MAAO,WACH0O,KACAE,KACAD,EAAWH,KAKvBa,yBAA0B,WACtB,GAAI/Q,GAAOpY,IAEX,OAAO,IAAIL,IAAGoa,YACVuG,QAAS,SAASlG,GACd,MAAOhC,GAAKkI,QAAQlG,IAExB2I,QAAS,SAAS3I,GACd,MAAOhC,GAAK2K,QAAQ3I,IAExBoI,QAAS,SAASpI,GACd,MAAOhC,GAAKoK,QAAQpI,IAExBwB,eAAgB,SAASxB,EAAI6B,EAAWD,GACpC5D,EAAKgR,sBAAsBhP,EAAI6B,EAAWD,GAC1C5D,EAAKuG,SAAS8H,UAAU7K,eAAexB,EAAI6B,EAAWD,GACtD5D,EAAKiR,kBAAkBjP,EAAI4B,GAEvB5D,EAAK4L,gBACLsF,WAAW,WACPlR,EAAK4L,eAAepI,eAAexB,EAAI6B,EAAWD,IACnD,OAcnBuN,oBAAqB,SAASlO,GAM1B,QAASmO,KACL,QAAI7pB,GAAGkT,kBAAkBsC,kBAEjBiD,EAAKuG,SAAS8K,YAAYC,gBAC1B/pB,GAAG0O,QACF1O,GAAGyO,QACJgK,EAAKuR,oBAAoBC,EAAmB,WAK1B9lB,SAAlBuX,EAAK3R,SACE0O,EAAKuG,SAASjV,SAGlB2R,EAAK3R,WApBpB,GAGI8Z,GAHApL,EAAOpY,KACPuY,EAAc8C,EAAKwO,QAAU7pB,KAAK2e,SAASmL,WAAWvR,YACtDqR,EAAoBvO,EAAKuO,mBAAqB5pB,KAAK2e,SAASmL,WAAWF,iBA6C3E,OArBApG,GAAS,GAAI7jB,IAAGkY,cACZU,YAAaA,EACb3Y,QAASyb,EAAKzb,QACdwZ,WAAYpZ,KAAK2e,SAASoL,QAAQC,YAClC1R,QAAS+C,EAAK/C,QACda,WAAYnZ,KAAK2e,SAASoL,QAAQE,YAClC5Q,2BAA4BrZ,KAAK2e,SAAS8K,YAAYS,iBACtDxgB,SAAU8f,IACV9nB,KAAM1B,KAAK2e,SAASsI,QAAQkD,UAC5BjR,SAAU,SAAS3P,GACf6O,EAAKgS,eAAe7gB,IAExB4O,MAAqB,MAAdkD,EAAKlD,MAAgBnY,KAAK2e,SAAStb,KAAKgnB,eAAiBhP,EAAKlD,QAGzEnY,KAAKsqB,gBAAgBhY,YAAY,WAC7BkR,EAAOrR,YAGXiG,EAAKmL,SAAS1gB,KAAK2gB,GAEZA,GAGX+G,qBAAsB,SAASC,EAAmBC,GAC9C,GAAIrS,GAAOpY,KACP0qB,KACAxS,GACI8K,MAAOhjB,KAAK2e,SAASqE,MACrB+D,eAAgB/mB,KAAK2e,SAASoI,eAC9BO,KAAMtnB,KAAK2e,SAAS2I,KACpBF,YAAapnB,KAAKyjB,aAClB4D,cAAernB,KAAKiiB,eACpB3M,SAAUtV,KAAK2e,SAASrJ,SACxBc,OAAQpW,KAAK2e,SAASvI,OACtBwI,MAAO5e,KAAK2e,SAASC,MACrB9Y,IAAKnG,GAAGgQ,KAAKyI,EAAKtS,IAAKsS,GACvBuS,kBAAmB3qB,KAAK2e,SAASsF,MAAM2G,6BACvCC,WAAY,SAASzQ,EAAI1Y,EAAMopB,EAAQC,GAC/BD,EAAS,GAAKC,EAAQ,IAItBL,EAAetQ,GACXsQ,EAAetQ,GAAI0Q,SAAWA,GAAUJ,EAAetQ,GAAI2Q,QAAUA,IACrE3S,EAAK4S,YAAY5Q,EAAI1Y,EAAMopB,EAAQC,GACnC3S,EAAKuG,SAAS8H,UAAUoE,WAAWzQ,EAAI1Y,EAAMopB,EAAQC,KAIzD3S,EAAK4S,YAAY5Q,EAAI1Y,EAAMopB,EAAQC,GACnC3S,EAAKuG,SAAS8H,UAAUoE,WAAWzQ,EAAI1Y,EAAMopB,EAAQC,IAGzDL,EAAetQ,IAAO0Q,OAAQA,EAAQC,MAAOA,KAGjDE,WAAY,SAAS7Q,EAAI1Y,EAAMY,EAAQiR,SAC5BmX,GAAetQ,EAEtB,IACI9K,GADAoL,EAAStC,EAAKkK,YAAYlI,GAAIA,IAAKM,MAOnCA,KAAW/a,GAAG+a,OAAO6C,mBAAqB7C,IAAW/a,GAAG+a,OAAO8C,gBAInElO,EAAS8I,EAAK8S,YAAY9Q,EAAI1Y,EAAMY,EAAQiR,GAIxCjE,YAAmB3P,IAAG+L,QACtB4D,EAAOkI,KAAK,WACRY,EAAKuG,SAAS8H,UAAUwE,WAAW7Q,EAAI1Y,EAAMY,EAAQiR,KAIzD6E,EAAKuG,SAAS8H,UAAUwE,WAAW7Q,EAAI1Y,EAAMY,EAAQiR,KAG7D4X,SAAU,SAAS/Q,EAAI1Y,EAAM0pB,GACzB,GAAI3f,GAAU,GAAI9L,IAAG+L,OAgBrB,OAdA0M,GAAK6P,wBACDvmB,KAAM,WACN0N,SAAUzP,GAAGgQ,KAAKyI,EAAKuG,SAAS8H,UAAU0E,SAAU/S,EAAMgC,EAAI1Y,GAC9D6V,UAAW9L,EAAQK,QACnBwL,UAAW,WACP8T,EAAyBrU,KAAK,WAC1BqB,EAAKiT,UAAUjR,EAAI1Y,KAGvB+J,EAAQG,WAEZwc,WAAYhO,IAGT3O,GAEX6f,aAAc3rB,GAAGgQ,KAAK3P,KAAKurB,cAAevrB,MAC1CwrB,SAAU,SAASpR,EAAI1Y,GACnB0W,EAAKqT,UAAUrR,EAAI1Y,GACnB0W,EAAKuG,SAAS8H,UAAU+E,SAASpR,EAAI1Y,IAEzCgqB,cAAe,SAAStR,EAAI1Y,EAAMiqB,GAC9BvT,EAAKwT,eAAexR,EAAIuR,GACxBvT,EAAKuG,SAAS8H,UAAUiF,cAActR,EAAI1Y,EAAMiqB,IAEpDE,qBAAsB,SAASzR,EAAIuR,EAAWrpB,EAAQiR,GAClD6E,EAAKuG,SAAS8H,UAAUoF,qBAAqB7b,MAAMoI,EAAMtQ,YAE7DgkB,SAAU,SAAS1R,EAAI1Y,EAAMiqB,GACzB,MAAOvT,GAAKuG,SAAS8H,UAAUqF,SAAS1R,EAAI1Y,EAAMiqB,IAEtDI,YAAa,SAAS3R,EAAI1Y,EAAMsqB,EAAczY,GAC1C,MAAO6E,GAAK6T,aAAajc,MAAMoI,EAAMtQ,YAEzCokB,cAAe,SAAS9R,EAAIiC,GACxBjE,EAAKtS,IAAI,sCAAwCsS,EAAK2K,QAAQ3I,GAAM,SAAWiC,EAAU,KACzFjE,EAAKoN,QAAQpL,EAAIiC,IAErBiE,QAAS3gB,GAAGgQ,KAAKyI,EAAKkI,QAASlI,GAC/B2K,QAASpjB,GAAGgQ,KAAKyI,EAAK2K,QAAS3K,GAC/BoK,QAAS7iB,GAAGgQ,KAAKyI,EAAKoK,QAASpK,GAC/B+T,QAASxsB,GAAGgQ,KAAKyI,EAAKgU,SAAUhU,GAChCiU,cAAe,SAAS9R,GACpB,MAAOnC,GAAKkK,YAAY/H,KAAMA,KAElC+R,SAAU,SAASlS,GACf,GAAIM,GAAStC,EAAKkK,YAAYlI,GAAIA,IAAKM,MACvC,OAAOA,KAAW/a,GAAG+a,OAAOwC,QACxBxC,IAAW/a,GAAG+a,OAAOsC,WACrBtC,IAAW/a,GAAG+a,OAAO4C,iBACrB5C,IAAW/a,GAAG+a,OAAO0C,QAE7BN,mBAAoB1E,EAAKgI,YAAYtD,mBACrCC,cAAe3E,EAAKgI,YAAYrD,cAexC,OAZApd,IAAG+C,KAAK1C,KAAK2e,SAASsI,QAAS,SAAS/a,EAAMtJ,GAC1CsV,EAAQhM,GAAQtJ,IAGpBsV,EAAQiP,cAAgBnnB,KAAKwkB,oBAEzBgG,GACA7qB,GAAG+C,KAAK8nB,EAAmB,SAAShb,EAAK5M,GACrCsV,EAAQ1I,GAAO5M,IAIhB,GAAIjD,IAAG4sB,wBAAwBrU,EAASuS,IAGnD+B,oBAAqB,SAASpS,GAC1Bpa,KAAK8iB,uBACL9iB,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAOuC,WAG7CwP,YAAa,SAASzhB,GAClB,GAAc,IAAVA,EACA,MAAOA,GAAQhL,KAAK2e,SAAStb,KAAKqpB,YAAY,EAElD,IAAIjc,IAAI,CACR,GACIzF,IAAgB,IAChByF,UACKzF,EAAQ,IAEjB,OAAO1J,MAAKqrB,IAAI3hB,EAAO,IAAK4hB,QAAQ,GAAK5sB,KAAK2e,SAAStb,KAAKqpB,YAAYjc,IAK5Eoc,0BAA2B,WACvB,GAAIzU,GAAOpY,IAEXA,MAAK8sB,qBAELntB,GAAG+C,KAAK1C,KAAK2e,SAASoO,aAAc,SAASpqB,EAAKqqB,GAC9C,GAAItjB,GAAWsjB,EAAuBtjB,SAClCogB,EAAanqB,GAAG6B,UAAW4W,EAAKuG,SAASmL,YAAY,GACrDmD,EAAkBttB,GAAG6B,UAAWwrB,EAEnBlpB,UAAb4F,IACAA,EAAW0O,EAAKuG,SAASjV,UAGzBujB,EAAgBnD,YAChBnqB,GAAG6B,OAAOsoB,EAAYkD,EAAuBlD,YAAY,GAG7DnqB,GAAG6B,OAAOyrB,GACNvjB,SAAUA,EACVogB,WAAYA,IACb,GAEH1R,EAAK8U,iBAAiBD,MAI9BnL,WAAY,SAAS7J,GACjB,GAAIkV,GAAmBntB,KAAK8sB,kBAAkB7U,EAE9C,OAAIkV,GACOA,EAAiBvtB,QAEnBqY,IAAajY,KAAKotB,iBAChBptB,KAAK2e,SAAS6E,OADpB,QAYT+C,aAAc,SAAS8G,GACnB,GAAIC,GAAQC,EACRC,EAAkBH,CAQtB,IALIG,YAA2B7tB,IAAG8X,YAC9B+V,EAAkBA,EAAgB9V,eAIlC8V,IAAoB7tB,GAAGyJ,OAAOokB,GAAkB,CAChD,GAAI7tB,GAAGyI,OAAOolB,GACV,MAAOA,GAAgBlH,UAEtB,IAA8C,UAA1CkH,EAAgBrkB,QAAQF,eACU,SAAvCukB,EAAgBttB,KAAK+I,cAErB,MAAOukB,GAAgB3pB,aAAalE,GAAGkY,aAAaG,oBAYxD,IATAsV,EAASE,EAAgB/qB,qBAAqB,SAE9C9C,GAAG+C,KAAK4qB,EAAQ,SAAS3qB,EAAK4G,GAC1B,GAAmC,SAA/BA,EAAM1F,aAAa,QAEnB,MADA0pB,GAAYhkB,GACL,IAIXgkB,EACA,MAAOA,GAAU1pB,aAAalE,GAAGkY,aAAaG,uBAK1DyV,gBAAiB,WACb,MAAOztB,MAAKogB,YAAYvE,UACpBnB,QACI/a,GAAG+a,OAAO2C,UACV1d,GAAG+a,OAAO4C,gBACV3d,GAAG+a,OAAOwC,OACVvd,GAAG+a,OAAOY,WACV3b,GAAG+a,OAAOsC,UACVrd,GAAG+a,OAAO0C,UAEf1X,QAKPgoB,mBAAoB,SAASzV,GACzB,GAAIgV,GAAkBjtB,KAAK8sB,kBAAkB7U,EAE7C,OAAOgV,GAAkBA,EAAgBnD,WAAa9pB,KAAK2e,SAASmL,YAGxE6D,yBAA0B,SAASC,GAC/B,MAAIA,GAAYpO,eAAgB7f,IAAG8X,WAE3B/V,KAAM/B,GAAGmS,YAAY8b,EAAYpO,KAAK9H,eACtC8D,KAAMoS,EAAYpO,KAAK9H,cAAc8D,OAKzC9Z,KAAM1B,KAAKsiB,YAAYlI,GAAIwT,EAAYxT,KAAK1Y,KAC5C8Z,KAAMxb,KAAKsiB,YAAYlI,GAAIwT,EAAYxT,KAAKoB,OAIpDqS,0BAA2B,SAASC,GAChC,GAAI1V,GAAOpY,KACP+tB,IAMJ,OAJApuB,IAAG+C,KAAKorB,EAAc,SAASnrB,EAAKirB,GAChCG,EAAgBlrB,KAAKuV,EAAKuV,yBAAyBC,MAGhDG,GAIXC,oBAAqB,WACjB,GAAIhuB,KAAK2e,SAASsP,OAAO5f,KAAO1O,GAAG0O,MAAO,CACtC,GAAI6f,GAAkB,yBAClB1K,EAASxjB,KAAK2e,SAASsP,OAAOzK,OAC9BvL,EAAWuL,EAASxjB,KAAKumB,aAAa/C,GAAUxjB,KAAKotB,iBACrDe,EAAanuB,KAAK2e,QAGlB1G,IAAYA,IAAajY,KAAKotB,mBAC9Be,EAAanuB,KAAK8sB,kBAAkB7U,IAIxCkW,EAAWzkB,UAAW,EAGoB,OAAtCykB,EAAWrE,WAAWvR,YACtB4V,EAAWrE,WAAWvR,YAAc2V,EAGpCC,EAAWrE,WAAWvR,aAAe,IAAM2V,EAI/CvuB,GAAG+C,KAAK1C,KAAKujB,SAAU,SAAS5gB,EAAK6gB,GACjC,GAAIA,EAAO/J,gBAAkBxB,EAIzB,MAHAuL,GAAOnL,YAAY8V,EAAWzkB,UAC9B8Z,EAAO3J,eAAesU,EAAW5V,cAE1B,MAMvB0P,uBAAwB,SAASmG,GAC7B,GAAIhW,GAAOpY,KACPquB,EAAiBD,EAAQhf,UAE7B,OAAIzP,IAAGkX,iBAAiBwX,IACpBruB,KAAK8F,IAAIsoB,EAAQ1sB,KAAO,kBAAoB0sB,EAAQ1sB,KAAO,gCAAkC0sB,EAAQhG,YAC9FiG,EAAetX,KAClB,SAASuX,GACLlW,EAAKtS,IAAIsoB,EAAQ1sB,KAAO,wBAA0B0sB,EAAQhG,YAC1DgG,EAAQ9W,UAAUgX,IAEtB,WACQF,EAAQ7W,WACRa,EAAKtS,IAAIsoB,EAAQ1sB,KAAO,wBAA0B0sB,EAAQhG,YAC1DgG,EAAQ7W,aAGRa,EAAKtS,IAAIsoB,EAAQ1sB,KAAO,wBAA0B0sB,EAAQhG,gBAKtEiG,KAAmB,EACnBD,EAAQ9W,UAAU+W,GAGdD,EAAQ7W,WACRvX,KAAK8F,IAAIsoB,EAAQ1sB,KAAO,mCAAqC0sB,EAAQhG,WAAa,iCAClFgG,EAAQ7W,aAGRvX,KAAK8F,IAAIsoB,EAAQ1sB,KAAO,mCAAqC0sB,EAAQhG,WAAa;AAInFiG,IAIX3P,eAAgB,SAASc,EAAM/D,EAAS8S,GACpC,GAAInW,GAAOpY,KACPua,EAAO5a,GAAGoN,cACVyO,GAAO,EACP9Z,EAAO/B,GAAGmS,YAAY0N,GACtBgP,EAAahP,EAAKpU,MAAQoU,EAC1BiP,EAAUzuB,KAAK0uB,sBACX1uB,KAAK0uB,sBACL/uB,GAAGgQ,KAAKyI,EAAKuW,sBAAuBvW,IAEvCzY,GAAGiJ,QAAQ4lB,IAAeA,EAAWhT,MAAQ,IAC9CA,EAAOgT,EAAWhT,MAGtBiT,EAAQD,EAAY9sB,EAAM6Y,EAAMiB,EAAM+S,EAAoB9S,EAASzb,KAAK2e,SAASsI,QAAQC,UACrF/G,WAAY/H,EAAKgI,YACjBgH,YAAahP,EAAKqL,aAClBmL,iBAAkB,SAASxU,EAAIoF,GAC3BpH,EAAKyH,SAAStP,IAAI6J,EAAIoF,GACtBpH,EAAK0K,uBACL1K,EAAKyW,aAAazU,OAK9BuU,sBAAuB,SAASnP,EAAM9d,EAAM6Y,EAAMiB,EAAMsT,EAAUrT,GAC9D,GAAIrB,GAAKpa,KAAKogB,YAAYhF,SAASb,KAAMA,EAAM7Y,KAAMA,EAAM8Z,KAAMA,EAAMC,QAASA,GAEhFzb,MAAK6f,SAAStP,IAAI6J,EAAIoF,GACtBxf,KAAK6uB,aAAazU,GAElBpa,KAAK8iB,uBAELgM,EAASjsB,MAAMuX,GAAIA,EAAIoF,KAAMA,KAGjC2I,oBAAqB,SAAS/c,EAAM2jB,GAChC,GAAIC,GAAY5jB,EAAKlL,KAAKmF,MAAM,KAAK,GACjC3D,EAAOqtB,CAGC,OAARrtB,IACAA,EAAO1B,KAAK2e,SAASoJ,MAAMlJ,aAG/Bnd,GAAQ,IAAMstB,EAEdhvB,KAAKie,UACDvc,KAAMA,EACN0J,KAAMA,KAId6jB,qBAAsB,SAAS7U,GAC3B,GAAIpa,KAAKsiB,YAAYlI,GAAIA,IAAKM,SAAW/a,GAAG+a,OAAOiD,QAAS,CACxD,GAAIjc,GAAO1B,KAAKsgB,QAAQlG,EAExBpa,MAAK8iB,uBACL9iB,KAAK0iB,eACL1iB,KAAK6f,SAASsD,QAAQ/I,GACtBpa,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAOiD,SACzC3d,KAAK8F,IAAI,uBAAyBpE,EAAO,sBAIjDwtB,oBAAqB,SAAS9U,EAAIsN,GAC9B,GAAIhmB,GAAO1B,KAAKsgB,QAAQlG,EAExBpa,MAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAO+C,eACzCzd,KAAK8F,IAAI,uBAAyBpE,EAAO,gBAAiB,SAKrDgmB,GAAyC5jB,SAA7B4jB,EAASlU,gBAItBxT,KAAK2e,SAAS8H,UAAUC,QAAQtM,EAAI1Y,EAAM,4CAA8CgmB,EAAShN,OAAQgN,GAHzG1nB,KAAK2e,SAAS8H,UAAUC,QAAQtM,EAAI1Y,EAAM,wBAAyBgmB,IAQ3EwF,iBAAkB,SAAS7R,GACvB,GAAImI,GAASxjB,KAAKupB,qBACdM,OAAQxO,EAAKyO,WAAWvR,YACxBqR,kBAAmBvO,EAAKyO,WAAWF,kBACnChqB,QAASyb,EAAKzb,QACd0Y,QAAS+C,EAAK/C,QACd5O,SAAU2R,EAAK3R,SACfyO,MAAOkD,EAAKgP,gBAGhBrqB,MAAK8sB,kBAAkBtJ,EAAO/J,eAAiB4B,GAGnD8T,0BAA2B,WACvBnvB,KAAKovB,aAAezvB,GAAG0vB,aAAe,GAAI1vB,IAAG0vB,YACzCrvB,KAAK2e,SAAS1N,KAAMtR,GAAGgQ,KAAK3P,KAAK4lB,kBAAmB5lB,MAAOL,GAAGgQ,KAAK3P,KAAK8F,IAAK9F,OAG7EA,KAAKovB,cAAgBpvB,KAAKovB,aAAaE,gBACvCtvB,KAAKyjB,aAAezjB,KAAKqoB,aACrBroB,KAAK2e,SAASsI,QAAQlJ,OAAS/d,KAAKovB,aAAaG,uBAGrDvvB,KAAK2e,SAAS6Q,WAAaxvB,KAAKovB,aAAaK,cACzCzvB,KAAKovB,aAAaM,cAClB1vB,KAAK2e,SAASsI,QAAQjJ,SAAWhe,KAAKovB,aAAaM,cAIvD1vB,KAAKyjB,aAAezjB,KAAKqoB,aAAaroB,KAAK2e,SAASsI,QAAQlJ,SAIpE4R,kBAAmB,WACf,SAAKhwB,GAAGinB,0BAA4B5mB,KAAK2e,SAAS6B,WAAWH,YAIzDrgB,KAAK2e,SAAS2I,KAAKsI,aACfjwB,GAAGkT,kBAAkB4C,sBAIrB9V,GAAGkT,kBAAkB2C,oBAAqBxV,KAAK2e,SAAS2I,KAAKuI,aAUzElG,oBAAqB,SAASmG,EAAS9d,GACnC,GAAI+d,IAAQ,CAEZ,QAAKD,EAAQpqB,SAIb/F,GAAG+C,KAAKotB,EAAS,SAASntB,EAAKqtB,GAK3B,GAAIrwB,GAAGwH,SAAS6oB,GAAa,CAEzB,GAAIC,GAAW,GAAIpuB,QAAO,MAAQmuB,EAAa,IAAK,IAEpD,IAAgC,MAA5Bhe,EAASoB,MAAM6c,GAEf,MADAF,IAAQ,GACD,KAKZA,IAWXlK,WAAY,SAASqK,EAAMC,EAAkBlpB,GASzC,QAASgG,GAAEvL,EAAM0uB,GAAerqB,EAAUA,EAAQ7D,QAAQR,EAAM0uB,GARhE,GAMIC,GAAsBC,EANtBvqB,EAAU/F,KAAK2e,SAAS4R,SAASL,GACjCtG,KACA4G,KAAWzgB,OAAOogB,GAClBzuB,EAAO8uB,EAAM,GACbvY,EAAWjY,KAAKumB,aAAatf,GAC7BwpB,EAAiBzwB,KAAK0tB,mBAAmBzV,EA+B7C,OA1BAtY,IAAG+C,KAAK+tB,EAAe7G,kBAAmB,SAASjnB,EAAK+tB,GAKhD/wB,GAAGwH,SAASupB,IACZ9G,EAAkB/mB,KAAK6tB,KAI/BL,EAAuBzG,EAAkBhZ,KAAK,MAAM3H,cAEpDgE,EAAE,SAAUjN,KAAK2e,SAASgS,eAAejvB,IACzCuL,EAAE,eAAgBojB,GAClBpjB,EAAE,cAAejN,KAAKysB,YAAYgE,EAAeG,YACjD3jB,EAAE,iBAAkBjN,KAAKysB,YAAYgE,EAAeI,eAEpDP,EAAmBvqB,EAAQqN,MAAM,cACR,OAArBkd,GACA3wB,GAAG+C,KAAK4tB,EAAkB,SAAS3tB,EAAKmuB,GACpC7jB,EAAE6jB,EAAaN,EAAM7tB,MAI7B3C,KAAK2e,SAAS8H,UAAUC,QAAQ,KAAMhlB,EAAMqE,EAASjC,QAE9CiC,GAYXme,aAAc,SAAS9J,EAAIhL,GACvB,GAAIpP,KAAK+wB,qBAAqB3W,GAW1B,MAVApa,MAAK8iB,uBACL9iB,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAO4C,iBAErClO,EACAA,EAASgL,GAGTpa,KAAK6f,SAASoE,MAAM7J,IAGjB,GAIfiP,kBAAmB,SAASjP,EAAIM,GAC5B,GAAItC,GAAOpY,KACPgxB,EAAchxB,KAAKytB,iBAEnB/S,KAAW/a,GAAG+a,OAAO6C,kBACrBvd,KAAK8jB,+BAA+BjhB,KAAKuX,GAEpCM,IAAW/a,GAAG+a,OAAO8C,eAC1Bxd,KAAK+jB,4BAA4BlhB,KAAKuX,GAGtB,IAAhB4W,IACChxB,KAAK8jB,+BAA+Bpe,QAAU1F,KAAK+jB,4BAA4Bre,SAEhF4jB,WAAW,WACPlR,EAAK6Y,eAAe7Y,EAAK0L,+BAAgC1L,EAAK2L,8BAC/D,IAIXzF,iCAAkC,WAC9B,GAAIlG,GAAOpY,IAEX,IAAIA,KAAK2e,SAAS8K,YAAYyH,mBAAqBvxB,GAAG6O,UAAY7O,GAAG+O,YAIjE,KAHA4a,YAAW,WACPzkB,OAAOssB,MAAM/Y,EAAKuG,SAAS4R,SAASa,+BACrC,GACG,GAAIzxB,IAAGwB,MAAMnB,KAAK2e,SAAS4R,SAASa,+BAIlDC,8BAA+B,SAASjX,EAAI1Y,EAAM4vB,EAAU/d,GAGxD,IAAK+d,EAAS1lB,QACV,GAAI2H,GAAsB,MAAfA,EAAImH,SAAmB4W,EAAStnB,MACvChK,KAAK2e,SAAS8H,UAAUC,QAAQtM,EAAI1Y,EAAM,8BAAgC6R,EAAImH,OAAQnH,OAErF,CACD,GAAIge,GAAcD,EAAStnB,MAAQsnB,EAAStnB,MAAQhK,KAAK2e,SAAStb,KAAKmuB,oBACvExxB,MAAK2e,SAAS8H,UAAUC,QAAQtM,EAAI1Y,EAAM6vB,EAAahe,KAKnEke,6CAA8C,SAASC,EAAWvnB,EAAO0Q,EAAOkD,EAAQC,GACpF,GAAI5F,GAAOpY,IAEX,IAAImK,EAAMzE,OAASmV,EACf,GAAI6W,IAAc1xB,KAAK2e,SAASmL,WAAW6H,uBAEvCrI,WAAW,WACP,GAAIsI,GAAuBxZ,EAAKuV,yBAAyBxjB,EAAM0Q,IAC3D5C,EAAWG,EAAKmO,aAAapc,EAAM0Q,GAAO2E,MAC1CgE,EAASpL,EAAK0J,WAAW7J,EAE7BG,GAAK6P,wBACDvmB,KAAM,aACN0N,SAAUzP,GAAGgQ,KAAKyI,EAAKuG,SAAS8H,UAAUoL,WAAYzZ,EAAMwZ,EAAsBpO,GAClFlM,UAAW3X,GAAGgQ,KAAKyI,EAAK0Z,2BAA4B1Z,EAAMjO,EAAO0Q,EAAOkD,EAAQC,GAChFzG,UAAW5X,GAAGgQ,KAAKyI,EAAK2Z,2BAA4B3Z,EAAMjO,EAAO0Q,EAAOkD,EAAQC,GAChFoK,WAAY,SAAWwJ,EAAqBlwB,KAAO,YAAckwB,EAAqBpW,QAE3F,OAEF,KAAKkW,EACN,KAAO7W,EAAQ1Q,EAAMzE,OAAQmV,IACzBzC,EAAKoU,oBAAoBriB,EAAM0Q,GAAOT,KAMtD6W,eAAgB,SAASe,EAAYC,GACjCjyB,KAAKgkB,gBAAkBhkB,KAAKgkB,eAAekO,cAAcF,EAAYC,EAAQjyB,KAAKsjB,iBAElFtjB,KAAK2e,SAAS8H,UAAUyL,cAAcvyB,GAAG6B,UAAWwwB,GAAaryB,GAAG6B,UAAWywB,IAE/EjyB,KAAK8jB,kCACL9jB,KAAK+jB,gCAeTkI,aAAc,SAAS7R,EAAI1Y,EAAMsqB,EAAczY,EAAKnE,GAChD,GAAIgJ,GAAOpY,IAIX,IAFAoY,EAAKkL,gBAAgBlJ,GAAM4R,EAAa5T,EAAKuG,SAASsF,MAAM2G,8BAExDxS,EAAK+Z,iBAAiB/X,EAAI1Y,EAAMsqB,GAAe,CAC/C,GAAIoG,GAAyD,IAAvCha,EAAKuG,SAASsF,MAAMoO,gBAkB1C,OAhBAja,GAAKiZ,8BAA8BrhB,MAAMoI,EAAMtQ,WAC/CsQ,EAAKuG,SAAS8H,UAAUsF,YAAY3R,EAAI1Y,EAAM0W,EAAKgL,aAAahJ,IAChEhC,EAAKka,mBAAmBlY,EAAI1Y,GAE5B0W,EAAKgI,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAO4C,iBACzClF,EAAKiL,eAAejJ,GAAMkP,WAAW,WACjClR,EAAKtS,IAAI,sBAAwBpE,EAAO,OAEpC0N,EACAA,EAASgL,GAGThC,EAAKyH,SAASoE,MAAM7J,IAEzBgY,IAEI,IAIfE,mBAAoB,SAASlY,EAAI1Y,GAC7B1B,KAAK8F,IAAI,WAAa9F,KAAK2e,SAASsF,MAAMoO,iBAAmB,4BAA8B3wB,EAAO,QAItGqvB,qBAAsB,SAAS3W,GAC3B,GACIpI,GADAugB,EAAYvyB,KAAK6iB,iBAGrB,OAAI7iB,MAAKsjB,gBAAgBlJ,IACrBpa,KAAK8F,IAAI,gCAAkCsU,EAAI,SACxC,GAEFpa,KAAK6f,SAASe,QAAQxG,IAC3BpI,EAAWhS,KAAKsgB,QAAQlG,GAEpBpa,KAAK2e,SAAS8H,UAAU+L,cAAcpY,EAAIpI,MAAc,IAIxDugB,EAAY,GAAKvyB,KAAK8iB,qBAAuB,EAAIyP,GACjDvyB,KAAK6lB,WAAW,0BACT,IAGX7lB,KAAK8F,IAAI,wBAA0BkM,EAAW,UAAYoI,EAAK,SACxD,MAGPpa,KAAK8F,IAAI,IAAMsU,EAAK,2BAA4B,UACzC,IAIfiR,UAAW,SAASjR,EAAI1Y,GACpB1B,KAAK8iB,uBAEL2P,aAAazyB,KAAKqjB,eAAejJ,GAEjC,IAAIsY,GAAkB/yB,GAAG2F,QAAQtF,KAAKue,WAAYnE,IAC7Cpa,KAAK2e,SAAS6Q,YAAckD,GAAmB,GAChD1yB,KAAKue,WAAWpC,OAAOuW,EAAiB,GAG5C1yB,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAOyC,WAG7C+N,YAAa,SAAS9Q,EAAI1Y,EAAMY,EAAQiR,GAoBpC,MAnBKjR,GAAOsJ,SASJtJ,EAAO6jB,eACPnmB,KAAKshB,eAAelH,GAAM9X,EAAO6jB,cAGrCnmB,KAAK0iB,eACL1iB,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAO6C,qBAbzCvd,KAAK8iB,uBACL9iB,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAO8C,eAErClb,EAAOtC,KAAK2e,SAASsF,MAAM2G,iCAAkC,IAC7D5qB,KAAKsjB,gBAAgBlJ,IAAM,IAYnCpa,KAAKqxB,8BAA8BjX,EAAI1Y,EAAMY,EAAQiR,KAE9CjR,EAAOsJ,SAGlB4b,UAAW,SAASpN,GAChBpa,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAOgD,WAG7CgI,kBAAmB,SAAStL,EAAIsN,EAAUC,GAC3B3nB,KAAKsgB,QAAQlG,EAEpBuN,GACA3nB,KAAKkvB,oBAAoB9U,EAAIsN,GAG7B1nB,KAAKivB,qBAAqB7U,IAIlCgQ,eAAgB,SAAS7gB,GACrB,GAAIopB,EAEJ,IAAIhzB,GAAGkT,kBAAkBsC,cAAe,CACpC,IAAKwd,EAAY,EAAGA,EAAYppB,EAAMgW,MAAM7Z,OAAQitB,IAChD3yB,KAAKomB,sBAAsB7c,EAAMgW,MAAMoT,GAAYppB,EAGvDvJ,MAAKie,SAAS1U,EAAMgW,WAGfhW,GAAM7C,MAAMhB,OAAS,GAC1B1F,KAAKie,SAAS1U,EAGlB5J,IAAG+C,KAAK1C,KAAKujB,SAAU,SAAS5gB,EAAK6gB,GACjCA,EAAO1J,WAIfkR,YAAa,SAAS5Q,EAAI1Y,EAAMopB,EAAQC,GACpC/qB,KAAKgkB,gBAAkBhkB,KAAKgkB,eAAe4O,qBAAqBxY,EAAI0Q,EAAQC,IAGhF8H,UAAW,SAASzY,EAAI1Y,KAIxBoxB,yBAA0B,SAAS1Y,EAAI1Y,GACnC1B,KAAK6yB,UAAU7iB,MAAMhQ,KAAM8H,WAC3B9H,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAOsC,WACzChd,KAAK+yB,aAAa/iB,MAAMhQ,KAAM8H,WAE1B9H,KAAK2e,SAAS6Q,YACdxvB,KAAK2e,SAAS8H,UAAUuM,YAAYhjB,MAAMhQ,KAAM8H,WAChD9H,KAAKugB,YAAYnG,KAGjBpa,KAAKizB,eAAe7Y,GACpBpa,KAAK2e,SAAS8H,UAAUuM,YAAYhjB,MAAMhQ,KAAM8H,aAIxD2Y,gBAAiB,SAASrG,EAAI8Y,EAAmBC,GAC7C,GACIC,GADA7Y,EAAOva,KAAK+iB,QAAQ3I,EAOxB,OAJI8Y,KACAE,EAA4BzzB,GAAGgQ,KAAKujB,EAAmBlzB,KAAMoa,EAAIG,EAAM4Y,IAGvEnzB,KAAK2vB,qBACL3vB,KAAKioB,wBACDvmB,KAAM,iBACN0N,SAAUzP,GAAGgQ,KAAK3P,KAAK2e,SAAS8H,UAAU4M,eAAgBrzB,KAAMoa,GAChE9C,UAAW8b,GACPzzB,GAAGgQ,KAAK3P,KAAKszB,eAAeC,WAAYvzB,KAAMoa,EAAIG,EAAM4Y,GAC5D/K,WAAYhO,KAET,IAGPpa,KAAK8F,IAAI,iCAAmCsU,EAAK,wHACuB,SACjE,IAIf2Y,aAAc,SAAS3Y,KAIvBoZ,iBAAkB,SAAS1I,EAAQC,GAC/B/qB,KAAK2e,SAAS8H,UAAUgN,gBAAgB3I,EAAQC,IAGpDQ,cAAe,SAASnR,KAIxBqR,UAAW,SAASrR,EAAI1Y,GACpB1B,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAO2C,YAG7CuO,eAAgB,SAASxR,EAAIuR,KAI7BvC,sBAAuB,SAAShP,EAAI6B,EAAWD,GAEvCA,IAAcrc,GAAG+a,OAAO0C,QACxBqV,aAAazyB,KAAKqjB,eAAejJ,KAIzCsZ,gCAAiC,SAAS5F,GACtC,GAAI1V,GAAOpY,IAEXL,IAAG+C,KAAKorB,EAAc,SAASnrB,EAAKirB,GAChCxV,EAAKoU,oBAAoBoB,EAAYxT,OAI7CuZ,gCAAiC,SAASC,EAAuBzpB,EAAO4T,EAAQC,EAAUwF,GACtF,GAAImC,GACA4M,EAAYvyB,KAAK6iB,kBACjBgR,EAAmC7zB,KAAK8iB,oBAE1B,KAAdyP,GAAmBsB,GAAoCtB,EACnDpoB,EAAMzE,OAAS,EACf1F,KAAKioB,wBACDvmB,KAAM,aACN0N,SAAUzP,GAAGgQ,KAAK3P,KAAK2e,SAAS8H,UAAUoL,WAAY7xB,KAAM4zB,EAAsB,GAAIpQ,GACtFlM,UAAW3X,GAAGgQ,KAAK3P,KAAK8xB,2BAA4B9xB,KAAMmK,EAAO,EAAG4T,EAAQC,GAC5EzG,UAAW5X,GAAGgQ,KAAK3P,KAAK+xB,2BAA4B/xB,KAAMmK,EAAO,EAAG4T,EAAQC,GAC5EoK,WAAY,SAAWje,EAAM,GAAGqV,KAAK9d,KAAO,YAAcyI,EAAM,GAAGqV,KAAKhE,OAI5Exb,KAAK6lB,WAAW,iBAIpB7lB,KAAK0zB,gCAAgCvpB,GACrCwb,EAAe3lB,KAAK2e,SAAS4R,SAASuD,kBACjC5xB,QAAQ,gBAAiB2xB,GACzB3xB,QAAQ,iBAAkBqwB,GAC/BvyB,KAAKwmB,YAAYb,KAIzBoM,2BAA4B,SAAS5nB,EAAO0Q,EAAOkD,EAAQC,GACvD,GAAI+V,GAAYlZ,EAAQ,CAExB7a,MAAKwsB,oBAAoBriB,EAAM0Q,GAAOT,GAAIjQ,EAAM0Q,GAAO2E,KAAK9d,MAE5D1B,KAAKyxB,8CAA6C,EAAOtnB,EAAO4pB,EAAWhW,EAAQC,IAGvF8T,2BAA4B,SAAS3nB,EAAO0Q,EAAOkD,EAAQC,GACvD,GAAI5F,GAAOpY,KACP+zB,EAAYlZ,EAAQ,EACpB+W,EAAuB5xB,KAAK2tB,yBAAyBxjB,EAAM0Q,GAE/D7a,MAAKg0B,wBAAwB7pB,EAAM0Q,GAAQ+W,GACtC7a,KACD,WACIqB,EAAK6b,QAAQ9pB,EAAM0Q,GAAOT,GAAI2D,EAAQC,GACtC5F,EAAKqZ,8CAA6C,EAAMtnB,EAAO4pB,EAAWhW,EAAQC,IAEtF,WACI5F,EAAKqZ,8CAA6C,EAAOtnB,EAAO4pB,EAAWhW,EAAQC,MAK/F2B,uBAAwB,SAASxV,EAAO4T,EAAQC,GAC5C,GAAqB,IAAjB7T,EAAMzE,OAEN,WADA1F,MAAK6lB,WAAW,eAIpB,IAAI+N,GAAwB5zB,KAAK6tB,0BAA0B1jB,GACvD8N,EAAWjY,KAAKumB,aAAapc,EAAM,GAAGqV,MACtCgE,EAASxjB,KAAK8hB,WAAW7J,EAE7BjY,MAAKioB,wBACDvmB,KAAM,kBACN0N,SAAUzP,GAAGgQ,KAAK3P,KAAK2e,SAAS8H,UAAUyN,gBAAiBl0B,KAAM4zB,EAAuBpQ,GACxFlM,UAAW3X,GAAGgQ,KAAK3P,KAAK2zB,gCAAiC3zB,KAAM4zB,EAAuBzpB,EAAO4T,EAAQC,EAAUwF,GAC/GjM,UAAW5X,GAAGgQ,KAAK3P,KAAK0zB,gCAAiC1zB,KAAMmK,GAC/Die,WAAY,sBAIpB+L,wBAAyB,WACrB,GAAI/b,GAAOpY,IAEXA,MAAKsqB,gBAAgBrqB,OAAO4E,OAAQ,eAAgB,SAASgK,GACzD,GAAIuJ,EAAK+J,gBAKL,MAJAtT,GAAIA,GAAKhK,OAAOuvB,MAEhBvlB,EAAEC,YAAcsJ,EAAKuG,SAAS4R,SAAS8D,QAEhCjc,EAAKuG,SAAS4R,SAAS8D,WAQ1CxQ,oBAAqB,WACjB,GAAIzL,GAAOpY,KACPkY,EAAUlY,KAAK2e,SAASgF,OAGxBhkB,IAAG20B,SAA6C,MAAlCt0B,KAAK2e,SAASgF,QAAQ3F,WAC/Bhe,KAAKu0B,WACN50B,GAAG6B,OAAO0W,GAAUoP,KAAMtnB,KAAK2e,SAAS2I,OAExCpP,EAAQpS,IAAMnG,GAAGgQ,KAAK3P,KAAK8F,IAAK9F,MAChCkY,EAAQsc,cAAgB70B,GAAGgQ,KAAK3P,KAAKqe,eAAgBre,MAErDA,KAAKu0B,SAAW,GAAI50B,IAAG20B,QAAQpc,IAGnCoR,WAAW,WACPlR,EAAKmc,SAASE,UAAU1d,KAAK,SAASua,EAAU5J,GAC5CtP,EAAKsc,0BACLtc,EAAKuG,SAAS8H,UAAUkO,yBAAyBrD,GAAU,EAAM5J,IAElE,SAAS4J,EAAU5J,GAElBtP,EAAKuG,SAAS8H,UAAUkO,yBAAyBrD,GAAU,EAAO5J,MAEvE,KAIXgN,wBAAyB,aAEzBtI,SAAU,SAAShS,EAAIsC,GACnB1c,KAAKogB,YAAY3D,WAAWrC,EAAIsC,GAChC1c,KAAKgkB,gBAAkBhkB,KAAKgkB,eAAe4Q,UAAUxa,IAGzD+X,iBAAkB,SAAS/X,EAAI1Y,EAAMsqB,GACjC,GAAI7L,GAAangB,KAAKogB,YAAYvE,UAAUzB,GAAIA,GAGhD,WAAKpa,KAAKsjB,gBAAgBlJ,IACnBpa,KAAK2e,SAASsF,MAAM4Q,YACpB1U,EAAWzF,SAAW/a,GAAG+a,OAAO0C,SAELtZ,SAA1B9D,KAAKojB,aAAahJ,KAClBpa,KAAKojB,aAAahJ,GAAM,GAGxBpa,KAAKojB,aAAahJ,GAAMpa,KAAK2e,SAASsF,MAAM6Q,oBAC5C90B,KAAKojB,aAAahJ,IAAO,GAClB,IAOnB6Y,eAAgB,SAAS7Y,GACrBpa,KAAKue,WAAW1b,KAAKuX,IAIzByU,aAAc,SAASzU,GACnB,GAAInC,EAGAA,GADAtY,GAAGkT,kBAAkBsC,cACVnV,KAAK6f,SAAS2B,QAAQpH,GAAIkM,WAG1BtmB,KAAKumB,aAAavmB,KAAK6f,SAASrG,SAASY,IAGpDnC,IACAjY,KAAK+hB,qBAAqB3H,GAAMnC,IAIxCkN,4BAA6B,SAAS4P,GAClC/0B,KAAK2e,SAAS1N,KAAKrR,QAAUm1B,EAE7B/0B,KAAKovB,aAAezvB,GAAG0vB,aAAe,GAAI1vB,IAAG0vB,YACrCrvB,KAAK2e,SAAS1N,KAAMtR,GAAGgQ,KAAK3P,KAAK4lB,kBAAmB5lB,MAAOL,GAAGgQ,KAAK3P,KAAK8F,IAAK9F,OAGjFA,KAAKovB,cAAgBpvB,KAAKovB,aAAaE,iBACvCtvB,KAAKyjB,aAAayF,YAAY,KAAMlpB,KAAKovB,aAAaG,uBAEtDvvB,KAAK2e,SAAS6Q,WAAaxvB,KAAKovB,aAAaK,cACzCzvB,KAAKovB,aAAaM,aAClB1vB,KAAKglB,YAAYhlB,KAAKovB,aAAaM,eAK/CuE,QAAS,SAAS7Z,EAAI2D,EAAQC,GAC1B,GAAItc,GAAO1B,KAAKsgB,QAAQlG,EAEpB2D,IACA/d,KAAKulB,UAAUxH,EAAQ3D,GAGvB4D,GACAhe,KAAKglB,YAAYhH,EAAU5D,GAG/Bpa,KAAKioB,wBACDvmB,KAAM,WACN0N,SAAUzP,GAAGgQ,KAAK3P,KAAK2e,SAAS8H,UAAUuO,SAAUh1B,KAAMoa,EAAI1Y,GAC9D4V,UAAW3X,GAAGgQ,KAAK3P,KAAK8yB,yBAA0B9yB,KAAMoa,EAAI1Y,GAC5D6V,UAAW5X,GAAGgQ,KAAK3P,KAAKwsB,oBAAqBxsB,KAAMoa,EAAI1Y,GACvD0mB,WAAYhO,KAIpBmG,YAAa,SAASnG,GACbpa,KAAK6f,SAAShW,OAAOuQ,IACtBpa,KAAKogB,YAAYrE,UAAU3B,EAAIza,GAAG+a,OAAOwC,SAIjD4I,mBAAoB,WAIhB,IAHA,GAAImP,GAAYC,EACZ9c,EAAOpY,KAEJA,KAAKue,WAAW7Y,QACnBuvB,EAAaj1B,KAAKue,WAAWlM,QAC7BrS,KAAKugB,YAAY0U,EAIrBC,GAAkBl1B,KAAKsiB,YAAY5H,OAAQ/a,GAAG+a,OAAOY,aAAa5V,OAC9DwvB,IACAv1B,GAAGmG,IAAI,qBAAuBovB,EAAkB,yEAChD5L,WAAW,WACPlR,EAAK0N,sBACN,OAYXkO,wBAAyB,SAASpG,EAAagE,GAC3C,GAAIxZ,GAAOpY,KACPwf,EAAQ,WACJ,MAAIoO,GAAYpO,eAAgB7f,IAAG8X,UACxBmW,EAAYpO,KAAK9H,cAErBkW,EAAYpO,QAEvB9d,EAAOkwB,EAAqBlwB,KAC5B8Z,EAAOoW,EAAqBpW,KAC5BvD,EAAWjY,KAAKumB,aAAaqH,EAAYpO,MACzCiR,EAAiBzwB,KAAK0tB,mBAAmBzV,GACzCkd,EAAkB,GAAIx1B,IAAG+L,OAQ7B,OANAypB,GAAgBpe,KACZ,aACA,WACIqB,EAAKoU,oBAAoBoB,EAAYxT,GAAI1Y,KAG7C/B,GAAG+I,cAAc8W,KAAUxf,KAAK2pB,oBAAoB8G,EAAe7G,kBAAmBloB,IACtF1B,KAAK6lB,WAAW,YAAankB,EAAM8d,GAC5B2V,EAAgBrpB,WAGtB9L,KAAK2e,SAASmL,WAAWsL,YAAuB,IAAT5Z,EAKxCA,EAAO,GAAKiV,EAAeG,WAAapV,EAAOiV,EAAeG,WAC9D5wB,KAAK6lB,WAAW,YAAankB,EAAM8d,GAC5B2V,EAAgBrpB,WAGvB0P,EAAO,GAAKA,EAAOiV,EAAeI,cAClC7wB,KAAK6lB,WAAW,eAAgBnkB,EAAM8d,GAC/B2V,EAAgBrpB,YAGvBnM,GAAG01B,iBAAmB11B,GAAGkT,kBAAkBkD,eAAiBpW,GAAGyI,OAAOoX,GACtE,GAAI7f,IAAG01B,gBAAgB7V,EAAM7f,GAAGgQ,KAAKyI,EAAKtS,IAAKsS,IAAOkd,SAAS7E,EAAe8E,OAAOxe,KACjFoe,EAAgBvpB,QAChB,SAAS4pB,GACLpd,EAAKyN,WAAW2P,EAAY,aAAc9zB,EAAM8d,GAChD2V,EAAgBrpB,YAKxBqpB,EAAgBvpB,UAGbupB,IA3BHn1B,KAAK6lB,WAAW,aAAcnkB,EAAM8d,GAC7B2V,EAAgBrpB,YA6B/B2pB,eAAgB,WACZ,GAAIrd,GAAMsd,EAAcxpB,CAExBkM,GAAOpY,KAEP01B,EAAe,SAASh0B,EAAM0N,EAAUzH,GACpC,GAAIguB,EAEJ,KACI,MAAOvmB,GAASY,MAAMoI,EAAMzQ,GAEhC,MAAOiuB,GACHD,EAAWC,EAAU7vB,SAAW6vB,EAAUtvB,WAC1C8R,EAAKtS,IAAI,wBAA0BpE,EAAO,gBAAkBi0B,EAAU,UAK9E,KAAKzpB,IAAQlM,MAAK2e,SAAS8H,WACtB,WACG,GAAIoP,GAAcC,CAClBD,GAAe3pB,EACf4pB,EAAe1d,EAAKuG,SAAS8H,UAAUoP,GACvCzd,EAAKuG,SAAS8H,UAAUoP,GAAgB,WACpC,MAAOH,GAAaG,EAAcC,EAAchuB,oBCj3DvE,WACG,YAEAnI,IAAGo2B,kBAAoB,SAASje,GAC5B,GAAIM,GAAOpY,IAGXA,MAAK2e,UACDqE,OAAO,EACPQ,OAAQ,KACR9Z,UAAU,EACVqd,eAAgB,EAChBiP,6BAA6B,EAC7BxG,YAAY,EAEZvI,SACIE,iBACAnJ,SAAU,iBACViY,cAAe,aACfC,gBAAgB,EAChB/L,UAAW,SACXtD,OAAQ,OACR9I,UACAoY,cAAc,EACdC,kBAAmB,kBACnBlP,SAAU,UAGd4C,YACIF,qBACAgH,UAAW,EACXC,aAAc,EACd0B,UAAW,EACXZ,wBAAwB,EACxBpZ,YAAa,KACbgd,OACIc,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,SAAU,GAEdpB,YAAY,GAGhB3O,WACIuO,SAAU,SAAS5a,EAAI1Y,KACvBsxB,YAAa,SAAS5Y,EAAI1Y,KAC1BupB,WAAY,SAAS7Q,EAAI1Y,EAAMsqB,EAAcyK,KAC7CvE,cAAe,SAASF,EAAYC,KACpC9G,SAAU,SAAS/Q,EAAI1Y,KACvB8pB,SAAU,SAASpR,EAAI1Y,KACvBgqB,cAAe,SAAStR,EAAI1Y,EAAMiqB,KAClCE,qBAAsB,SAASzR,EAAIuR,EAAWK,EAAczY,KAC5DuY,SAAU,SAAS1R,EAAIpI,EAAU2Z,KACjCd,WAAY,SAASzQ,EAAI1Y,EAAMopB,EAAQC,KACvC0I,gBAAiB,SAAS3I,EAAQC,KAClCrE,QAAS,SAAStM,EAAI1Y,EAAMkgB,EAAQ8U,KACpC3K,YAAa,SAAS3R,EAAI1Y,EAAMi1B,KAChCnE,cAAe,SAASpY,EAAI1Y,KAC5BwyB,gBAAiB,SAAS0C,KAC1B/E,WAAY,SAAS+E,KACrBvD,eAAgB,SAASjZ,KACzBmN,SAAU,SAASnN,KACnBqN,iBAAkB,SAASrN,EAAIsN,EAAUC,KACzCO,gBAAiB,SAAS9c,KAC1BwQ,eAAgB,SAASxB,EAAI6B,EAAWD,KACxC2Y,yBAA0B,SAASrD,EAAU1lB,EAAS8b,MAG1D6I,UACIsG,UAAW,qEACXC,UAAW,yDACXC,aAAc,4DACdC,WAAY,yDACZC,aAAc,sBACdnD,kBAAmB,6EACnBoD,oBAAqB,qBACrBC,mBAAoB,qBACpBC,oBAAqB,4BACrBC,mBAAoB,4BACpBC,sBAAuB,mDACvBjD,QAAS,8EACTjD,6BAA8B,6KAGlCnN,OACI4Q,YAAY,EACZC,gBAAiB,EACjBzC,iBAAkB,EAClBzH,6BAA8B,gBAGlCb,SACIE,YAAa,yBACbD,YAAa,0BAGjB1U,UACI+K,SAAS,EACTkX,YACIlX,SAAS,GAEbmX,WAAW,EACXC,YACIC,UAAW,cACXC,eAAgB,mBAChBC,UAAW,cACXC,cAAe,kBACfC,WAAY,gBAEhBC,SAAU,IAEVnsB,SACIoS,SAAU,OAIlB5H,QACIiK,SAAS,EACT2X,gBAAiB,EACjBP,YACIQ,SAAU,aAIlBtH,eAAgB,SAASuH,GACrB,MAAOA,IAGX70B,MACImuB,qBAAsB,gCACtBnH,eAAgB,aAChBqC,aAAc,KAAM,KAAM,KAAM,KAAM,KAAM,OAGhDlM,YACIH,SAAS,EACTwG,OAAQ,SACR7I,SAAU,iBACVmJ,iBACApJ,WAGJuJ,MACIsI,UAAU,EACVuI,iBAAiB,EACjBtI,UAAU,GAGdjR,OACIC,YAAa,aAGjBkJ,OACID,cAAe,KACfjJ,YAAa,gBAGjBoP,QACI5f,KAAK,EAGLmV,OAAQ,MASZuJ,gBAIApJ,SACI3F,SAAU,KACVD,UACAoJ,iBACAvD,gBAAgB,GAIpB3S,MAEIrR,QAAS,UAGT4vB,YAAY,EAGZ4I,iBAAiB,GAIrB/hB,SACIgiB,cAAe,KAGfC,cAAc,EAGdC,QAAQ,EAIRC,YAAa,KAEbC,eAAgB,GAEhBC,YAAa,kBAEbC,aAAa,EAGbC,UAGJnP,aACIC,gBAAgB,EAChBwH,mBAAmB,EACnBhH,kBAAkB,IAK1BvqB,GAAG6B,OAAOxB,KAAK2e,SAAU7G,GAAG,GAE5B9X,KAAKujB,YACLvjB,KAAK8sB,qBACL9sB,KAAK+hB,wBAEL/hB,KAAKy1B,iBACLz1B,KAAKsqB,gBAAmB,GAAI3qB,IAAGsS,eAE/BjS,KAAKue,cACLve,KAAKojB,gBACLpjB,KAAKqjB,kBACLrjB,KAAKsjB,mBACLtjB,KAAKshB,kBAELthB,KAAK8iB,qBAAuB,EAC5B9iB,KAAK0iB,aAAe,EACpB1iB,KAAKogB,YAAcpgB,KAAKmpB,2BAExBnpB,KAAKmvB,4BAELnvB,KAAKwkB,oBAAsBxkB,KAAKqoB,aAAaroB,KAAK2e,SAASsI,QAAQE,eACnEnnB,KAAK2kB,8BAAgC3kB,KAAKqoB,aAAaroB,KAAK2e,SAAS6B,WAAW2G,eAEhFnnB,KAAK+kB,uBAAyB/kB,KAAKqoB,aAAaroB,KAAK2e,SAAS6B,WAAWzC,QAEzE/d,KAAKiiB,eAAiBjiB,KAAKqoB,aAAaroB,KAAK2e,SAASsI,QAAQjJ,UAC9Dhe,KAAK6kB,yBAA2B7kB,KAAKqoB,aAAaroB,KAAK2e,SAAS6B,WAAWxC,UAE3Ehe,KAAK6f,SAAW7f,KAAKuqB,uBAErBvqB,KAAKszB,eAAiB3zB,GAAGinB,yBAA2B5mB,KAAK2mB,uBAErD3mB,KAAK2e,SAAS6E,SACdxjB,KAAKotB,iBAAmBptB,KAAKupB,qBACzB3pB,QAASI,KAAK2e,SAAS6E,OACvBrL,MAAOnY,KAAK2e,SAAStb,KAAKgnB,iBAC3B5Q,eAGPzZ,KAAK6sB,4BAEL7sB,KAAKguB,sBAEDhuB,KAAK2e,SAASoJ,MAAMD,gBAChBnoB,GAAGkoB,aACH7nB,KAAK0jB,cAAgB1jB,KAAK4nB,sBAG1B5nB,KAAK8F,IAAI,iCAAkC,UAInD9F,KAAKm0B,0BAELn0B,KAAKqhB,gBAAkB1hB,GAAGk5B,gBAAkB,GAAIl5B,IAAGk5B,eAAel5B,GAAGgQ,KAAK3P,KAAK8F,IAAK9F,OACpFA,KAAK6jB,sBAEL7jB,KAAK8jB,kCACL9jB,KAAK+jB,+BAEL/jB,KAAK84B,QAAWn5B,GAAG0kB,QAAU,GAAI1kB,IAAG0kB,OAAOrkB,KAAK2e,SAAStI,QAAS1W,GAAGgQ,KAAK3P,KAAK8F,IAAK9F,WAChFA,KAAK84B,QAAQzY,UACbrgB,KAAK0uB,sBAAwB/uB,GAAGgQ,KAAK3P,KAAK84B,QAAQC,cAAe/4B,KAAK84B,UAGtEn5B,GAAGq5B,eAAiBr5B,GAAGkT,kBAAkBsD,cACzCnW,KAAKgkB,eAAiB,GAAIrkB,IAAGq5B,cACzBr5B,GAAGgQ,KAAK3P,KAAKwzB,iBAAkBxzB,MAE/B,SAASoa,GACL,GAAI6e,GAAQ7gB,EAAKgI,YAAYvE,UAAUzB,GAAIA,GAC3C,OAAQ6e,IAASA,EAAMzd,MAAS,KAK5Cxb,KAAK6iB,kBAAoB7iB,KAAK2e,SAASmL,WAAWyI,WAItD5yB,GAAGo2B,kBAAkB1vB,UAAY1G,GAAGie,cACpCje,GAAG6B,OAAO7B,GAAGo2B,kBAAkB1vB,UAAW1G,GAAGomB,mBCnTjDpmB,GAAGu5B,cAAgB,SAASphB,GACxB,YA2CA,SAASqhB,KACL,MAAOx5B,IAAG2F,SAAS,MAAO,OAAQ,QAAS4S,EAAQ2O,SAAW,EAMlE,QAASuS,GAAyB7U,GAC9B,GAAI8U,IAAoB,CASxB,OAPA15B,IAAG+C,KAAK22B,EAAmB,SAAS12B,EAAK22B,GACrC,GAAI35B,GAAG2F,SAAS,SAAU,kBAAmB,mBAAoB,gBAAiBg0B,GAAU,EAExF,MADAD,IAAoB,GACb,IAIRA,EAGX,QAASE,GAAMhmB,GAEX,MAAO2E,GAAQoP,KAAKsI,UAAoC9rB,SAAxByP,EAAIC,gBAIxC,QAASgmB,KACL,GAAI9R,EAeJ,QAbI7iB,OAAOiF,gBAAkBjF,OAAOkF,iBAChC2d,EAAW/nB,GAAGiK,oBAEmB9F,SAA7B4jB,EAASlU,kBACTkU,EAAW,GAAIhU,gBAEfgU,EAAS/b,OAAS,aAClB+b,EAAS7b,QAAU,aACnB6b,EAAS+R,UAAY,aACrB/R,EAASgS,WAAa,eAIvBhS,EAIX,QAASiS,GAAYvf,EAAIwf,GACrB,GAAIlS,GAAWmS,EAAYzf,GAAI7G,GAkB/B,OAhBKmU,KAEGA,EADAkS,EACWA,EAGP1hB,EAAQoP,KAAKsI,SACF4J,IAGA75B,GAAGiK,oBAItBiwB,EAAYzf,GAAI7G,IAAMmU,GAGnBA,EAIX,QAASoS,GAAQ1f,GACb,GAEI2f,GAFAtpB,EAAI9Q,GAAG2F,QAAQ00B,EAAO5f,GACtBuS,EAAMzU,EAAQ6O,qBAGX8S,GAAYzf,GACnB4f,EAAM7d,OAAO1L,EAAG,GAEZupB,EAAMt0B,QAAUinB,GAAOlc,EAAIkc,IAC3BoN,EAASC,EAAMrN,EAAM,GACrBsN,EAAYF,IAIpB,QAAS9O,GAAW7Q,EAAI8f,GACpB,GAAI3mB,GAAMomB,EAAYvf,GAClByM,EAAS3O,EAAQ2O,OACjBc,EAAUuS,KAAa,CAE3BJ,GAAQ1f,GAEJuN,EACA7hB,EAAI+gB,EAAS,gBAAkBzM,EAAK,cAAe,SAE7Cmf,EAAMhmB,IAAS4mB,EAAqB5mB,EAAImH,UAC9CiN,GAAU,EACV7hB,EAAI+gB,EAAS,gBAAkBzM,EAAK,+BAAiC7G,EAAImH,OAAQ,UAGrFxC,EAAQ+S,WAAW7Q,EAAI7G,EAAKoU,GAGhC,QAASyS,GAAUhgB,GACf,GAEI2D,GAFAsc,EAAiBR,EAAYzf,GAAIkgB,iBACjCC,EAAiBriB,EAAQqiB,cAqB7B,OAlBIriB,GAAQkP,YAAYlF,MACpBnE,EAAS7F,EAAQkP,YAAYlF,IAAI9H,IAGjCigB,GACA16B,GAAG+C,KAAK23B,EAAgB,SAAS34B,EAAMkB,GACnCmb,EAASA,MACTA,EAAOrc,GAAQkB,IAInB23B,GACA56B,GAAG+C,KAAK63B,EAAgB,SAAS74B,EAAMkB,GACnCmb,EAASA,MACTA,EAAOrc,GAAQkB,IAIhBmb,EAGX,QAASkc,GAAY7f,EAAIogB,GACrB,GAIIC,GAJAlnB,EAAMomB,EAAYvf,EAAIogB,GACtB3T,EAAS3O,EAAQ2O,OACjB9I,EAASqc,EAAUhgB,GACnBsgB,EAAUb,EAAYzf,GAAIsgB,OA+C9B,OA5CAxiB,GAAQyiB,OAAOvgB,GAEfqgB,EAAMG,EAAUxgB,EAAI2D,EAAQ8b,EAAYzf,GAAIygB,uBAGxCtB,EAAMhmB,IACNA,EAAI5H,OAASmvB,EAAkB1gB,GAC/B7G,EAAI1H,QAAUkvB,EAAmB3gB,IAGjC7G,EAAIynB,mBAAqBC,EAA8B7gB,GAG3D8gB,EAA0B9gB,GAG1B7G,EAAI4nB,KAAKtU,EAAQ4T,GAAK,GAIlBviB,EAAQoP,KAAKsI,UAAY1X,EAAQoP,KAAK6Q,kBAAoBoB,EAAMhmB,KAChEA,EAAIC,iBAAkB,GAG1B4nB,EAAWhhB,GAEXtU,EAAI,WAAa+gB,EAAS,gBAAkBzM,GAExCsgB,EACAnnB,EAAI8nB,KAAKX,GAEJY,IAAgCvd,EACrCxK,EAAI8nB,OAECtd,GAAU7F,EAAQqjB,aAAerjB,EAAQqjB,YAAYtyB,cAAc3D,QAAQ,sCAAwC,EACxHiO,EAAI8nB,KAAK17B,GAAGsQ,QAAQ8N,EAAQ,KAEvBA,GAAU7F,EAAQqjB,aAAerjB,EAAQqjB,YAAYtyB,cAAc3D,QAAQ,qBAAuB,EACvGiO,EAAI8nB,KAAK/pB,KAAKkqB,UAAUzd,IAGxBxK,EAAI8nB,KAAKtd,GAGNxK,EAGX,QAASqnB,GAAUxgB,EAAI2D,EAAQ8c,GAC3B,GAAI7c,GAAW9F,EAAQmP,cAAcnF,IAAI9H,GACrCqhB,EAAY5B,EAAYzf,GAAIqhB,SAehC,OAZiB33B,SAAb23B,IACAzd,GAAY,IAAMyd,GAGlBH,GAA+Bvd,IAC/BC,EAAWre,GAAGsQ,QAAQ8N,EAAQC,IAG9B6c,IACA7c,EAAWre,GAAGsQ,QAAQ4qB,EAAuB7c,IAG1CA,EAKX,QAASid,GAA8B7gB,GACnC,MAAO,YACgC,IAA/Buf,EAAYvf,GAAIshB,YAChBzQ,EAAW7Q,IAKvB,QAAS8gB,GAA0B9gB,GAC/B,GAAIyQ,GAAa3S,EAAQ2S,UAErBA,KACA8O,EAAYvf,GAAIvQ,OAAO6vB,WAAa,SAAS7qB,GACrCA,EAAE8sB,kBACF9Q,EAAWzQ,EAAIvL,EAAEic,OAAQjc,EAAEkc,SAQ3C,QAAS+P,GAAkB1gB,GACvB,MAAO,YACH6Q,EAAW7Q,IAMnB,QAAS2gB,GAAmB3gB,GACxB,MAAO,YACH6Q,EAAW7Q,GAAI,IAIvB,QAASghB,GAAWhhB,GAChB,GAAI7G,GAAMomB,EAAYvf,GAClB+M,EAAgBjP,EAAQiP,cACxByU,EAAkB/B,EAAYzf,GAAIyhB,sBAClChV,EAAS3O,EAAQ2O,OACjBiV,IAGCvC,GAAMhmB,KACP2E,EAAQ6jB,cAAgBxoB,EAAIyoB,iBAAiB,SAAU9jB,EAAQ6jB,cAG3D7jB,EAAQ+jB,qCAKH/jB,EAAQoP,KAAKsI,UAAcuJ,MAAoBC,EAAyBjS,KACzE5T,EAAIyoB,iBAAiB,mBAAoB,kBACzCzoB,EAAIyoB,iBAAiB,gBAAiB,eAI1C9jB,EAAQqjB,aAA2B,SAAX1U,GAAgC,QAAXA,GAC7CtT,EAAIyoB,iBAAiB,eAAgB9jB,EAAQqjB,aAGjD57B,GAAG6B,OAAOs6B,EAAYn8B,GAAG6G,WAAW2gB,GAAiBA,EAAc/M,GAAM+M,GACzExnB,GAAG6B,OAAOs6B,EAAYF,GAEtBj8B,GAAG+C,KAAKo5B,EAAY,SAASp6B,EAAMkB,GAC/B2Q,EAAIyoB,iBAAiBt6B,EAAMkB,MAKvC,QAASu3B,GAAqB+B,GAC1B,MAAOv8B,IAAG2F,QAAQ4S,EAAQikB,wBAAwBjkB,EAAQ2O,QAASqV,IAAiB,EAGxF,QAASE,GAAchiB,EAAIogB,EAAQiB,EAAWnB,EAAkBO,EAAuBgB,EAAmBnB,GACtGb,EAAYzf,IACRqhB,UAAWA,EACXnB,iBAAkBA,EAClBO,sBAAuBA,EACvBgB,kBAAmBA,EACnBnB,QAASA,EAGb,IAAI7tB,GAAMmtB,EAAMn3B,KAAKuX,EAGrB,IAAIvN,GAAOqL,EAAQ6O,eACf,MAAOkT,GAAY7f,EAAIogB,GA7U/B,GAAI10B,GAAKw1B,EACLtB,KACAH,KACA3hB,GACI6jB,aAAc,KACdM,cAAe,QAAS,OAAQ,OAChCxV,OAAQ,OACR0U,YAAa,oCACbxU,eAAgB,EAChBI,iBACAE,iBACAD,eACAmT,kBACA0B,oCAAoC,EACpCE,yBACIG,QAAS,IAAK,IAAK,KACnBC,OAAQ,IAAK,IAAK,IAAK,IAAK,KAC5BC,MAAO,IAAK,IAAK,IAAK,IAAK,KAC3BC,KAAM,IAAK,IAAK,IAAK,IAAK,KAC1BC,KAAM,MAEVpV,MACIsI,UAAU,EACVuI,iBAAiB,GAErBryB,IAAK,SAAS4B,EAAK1B,KACnB20B,OAAQ,SAASvgB,KACjB6Q,WAAY,SAAS7Q,EAAIsN,EAAUC,KACnCkD,WAAY,KAMpB,IAHAlrB,GAAG6B,OAAO0W,EAASJ,GACnBhS,EAAMoS,EAAQpS,IAEVnG,GAAG2F,QAAQ4S,EAAQmkB,aAAcnkB,EAAQ2O,QAAU,EACnD,KAAM,IAAI1lB,OAAM,IAAM+W,EAAQ2O,OAAS,wDA8S3CyU,GAAiD,QAAnBpjB,EAAQ2O,QAAuC,WAAnB3O,EAAQ2O,OAElElnB,GAAG6B,OAAOxB,MAEN28B,cAAe,SAASviB,GACpB,GAAIwiB,GAAM7e,EAAQwG,EAASmW,EAASmC,EAAahC,CAEjD,QAEIiC,SAAU,SAASC,GAEf,MADAH,GAAOG,EACA/8B,MAOXg9B,WAAY,SAAS1C,GAEjB,MADAvc,GAASuc,EACFt6B,MAGXi9B,gBAAiB,SAASC,GAEtB,MADArC,GAAwBqC,EACjBl9B,MAIXm9B,YAAa,SAAStB,GAElB,MADAtX,GAAUsX,EACH77B,MAIXo9B,YAAa,SAASC,GAElB,MADA3C,GAAU2C,EACHr9B,MAIXs9B,gBAAiB,WAEb,MADAT,IAAc,EACP78B,MAIXq7B,KAAM,SAASb,GAKX,MAJIqC,IAAel9B,GAAG2F,SAAS,MAAO,UAAW4S,EAAQ2O,SAAW,IAChE9I,EAAOwf,aAAc,GAAIC,OAAOC,WAG7BrB,EAAchiB,EAAIogB,EAAQoC,EAAM7e,EAAQ8c,EAAuBtW,EAASmW,MAK3FgD,SAAU,SAAStjB,GACf0f,EAAQ1f,OC1YpBza,GAAGg+B,cAAgB,SAAStiB,GACxB,YAEA,IAAIuiB,GAAQviB,EAAKuiB,MACbC,KACA1S,EAAWyS,EAAMzS,SACjB7K,EAAUsd,EAAMtd,OAEpB3gB,IAAG6B,OAAOxB,MACNuQ,IAAK,SAAS6J,EAAI0jB,GACdD,EAAUzjB,GAAM0jB,EAChBD,EAAUzjB,GAAIjK,SAGlByP,OAAQ,SAASxF,GACb,GAAIhC,GAAOpY,KACPorB,EAA2B,GAAIzrB,IAAG+L,QAClCqyB,EAAiB5S,EAAS/Q,EAAIkG,EAAQlG,GAAKgR,EAE/C2S,GAAehnB,KAAK,WACZqB,EAAKwI,QAAQxG,KACbyjB,EAAUzjB,GAAIsjB,UAAW,EACzBtlB,EAAK+K,QAAQ/I,IAEjBgR,EAAyBxf,aAIjCuX,QAAS,SAAS/I,SACPyjB,GAAUzjB,IAGrB4jB,oBAAqB,SAAS5jB,GAC1B,MAAOyjB,GAAUzjB,GAAI5K,KAGzBoR,QAAS,SAASxG,GACd,MAAyBtW,UAAlB+5B,EAAUzjB,IAGrBN,MAAO,WACH+jB,MAGJI,cAAe,SAAS7jB,GACpB,MAAOyjB,GAAUzjB,IAGrB8jB,qBAAsB,SAAS9jB,EAAI+jB,GAC/BN,EAAUzjB,GAAI5K,IAAM2uB,GAGxBC,aAAc,SAAShkB,GACnB,QAASyjB,EAAUzjB,GAAIsjB,aCpDnC/9B,GAAG4sB,wBAA0B,SAASzU,EAAG2S,GACrC,YAEA,IAGc4T,GAAsBv4B,EAAK2oB,EAHrC6P,EAAat+B,KACbu+B,GAAmB,EACnBC,GAA6B,EAGjCtmB,GACIkP,eACAL,eAAgB,EAChBzR,UACI+K,SAAS,EACT3W,UACI2W,SAAS,IAGjBva,IAAK,SAAS4B,EAAK1B,KACnB6kB,WAAY,SAASzQ,EAAIpI,EAAU8Y,EAAQC,KAC3CE,WAAY,SAAS7Q,EAAIpI,EAAUsf,EAAU/d,KAC7C4X,SAAU,SAAS/Q,EAAIpI,KACvBsZ,aAAc,SAASlR,KACvBoR,SAAU,SAASpR,EAAIpI,KACvB0Z,cAAe,SAAStR,EAAIpI,EAAU2Z,KACtCE,qBAAsB,SAASzR,EAAIuR,EAAW2F,EAAU/d,KACxDwY,YAAa,SAAS3R,EAAIpI,EAAUsf,EAAU/d,KAC9CuY,SAAU,SAAS1R,EAAIpI,EAAU2Z,KACjCO,cAAe,SAAS9R,EAAIiC,KAC5BiE,QAAS,SAASlG,KAClB+R,QAAS,SAAS/R,EAAIsC,KACtB4P,SAAU,SAASlS,KACnB0C,mBAAoB,SAAS1C,KAC7B2C,cAAe,SAAS3C,MAG5BqkB,GAEIjnB,KAAM,SAAS4C,EAAIskB,EAAUpN,EAAU/d,GACnC,GAAIoY,GAAY8C,EAAQkQ,cAAcvkB,EAAIskB,EAE1CjQ,GAAQwP,cAAc7jB,GAAIwkB,kBAAmB,QAEtCnQ,GAAQwP,cAAc7jB,GAAIjK,KAAK0uB,cAAcH,GACpDjQ,EAAQwP,cAAc7jB,GAAI0Q,QAAUa,EAAUnQ,KAE9CtD,EAAQ2T,qBAAqBzR,EAAIqU,EAAQqQ,yBAAyBnT,GAAY2F,EAAU/d,IAK5FwrB,SAAU,SAAS3kB,GACf,GAAIoB,GAAOtD,EAAQsK,QAAQpI,GACvB1Y,EAAOwW,EAAQoI,QAAQlG,EAE3BtU,GAAI,qCAAuCsU,EAAK,qBAChDqU,EAAQuQ,eAAe5kB,GAAIrD,KACvB,SAASua,EAAU/d,GACfzN,EAAI,2BAA6BsU,EAEjC,IAAI6kB,GAAoBp1B,EAAOq1B,kBAAkB5N,GAAU,EAE3DpZ,GAAQ2S,WAAWzQ,EAAI1Y,EAAM8Z,EAAMA,GACnCiT,EAAQ0Q,+BAA+B/kB,GACvCvQ,EAAOu1B,QAAQhlB,EAAI6kB,EAAmB1rB,IAE1C,SAAS+d,EAAU/d,GACf,GAAI0rB,GAAoBp1B,EAAOq1B,kBAAkB5N,GAAU,EAE3DxrB,GAAI,yCAA2CsU,EAAK,MAAQ6kB,EAAkBj1B,MAAO,SAEjFi1B,EAAkBnlB,OAClB2kB,EAAQ3kB,MAAMM,GAGblC,EAAQ6T,YAAY3R,EAAI1Y,EAAMu9B,EAAmB1rB,IAClD1J,EAAOu1B,QAAQhlB,EAAI6kB,EAAmB1rB,MAMtD8rB,cAAe,SAASX,EAAUtkB,EAAIkX,EAAU/d,GAC5C,GAAI7R,GAAOwW,EAAQoI,QAAQlG,EAE3BtU,GAAI,qCAAuCsU,EAAK,WAAaskB,GAE7DjQ,EAAQ6Q,iBAAiBllB,EAAIskB,EAE7B,IACIa,GADAC,EAAmB31B,EAAOq1B,kBAAkB5N,GAAU,EAGtDkO,GAAiB1lB,MACjB2kB,EAAQ3kB,MAAMM,IAGdmlB,EAAgB5/B,GAAG2F,QAAQmpB,EAAQwP,cAAc7jB,GAAI9E,SAASmqB,WAAYf,GACtEa,GAAiB,IACjB9Q,EAAQwP,cAAc7jB,GAAI9E,SAASmqB,WAAWtjB,OAAOojB,EAAe,GACpE9Q,EAAQwP,cAAc7jB,GAAI9E,SAASoqB,UAAUC,QAAQjB,KAMxDjQ,EAAQwP,cAAc7jB,GAAIjK,KAAKyvB,gBAG5BpB,IACA/P,EAAQwP,cAAc7jB,GAAIjK,KAAKyvB,eAAgB,EAE/C95B,EAAInG,GAAG8H,OAAO,mFAAoF6J,KAAKkqB,UAAUp1B,OAAOy5B,KAAKpR,EAAQqR,SAAS1lB,KAAO9I,KAAKkqB,UAAU/M,EAAQwP,cAAc7jB,GAAI9E,SAASmqB,cACvM9/B,GAAG+C,KAAK+rB,EAAQqR,SAAS1lB,GAAK,SAAS2lB,EAAMC,GACzCl6B,EAAInG,GAAG8H,OAAO,sDAAuD2S,EAAI2lB,EAAMC,EAAMtE,aACrFsE,EAAMC,QAGND,EAAME,YAAa,IAIvBzR,EAAQ0R,0BAA0B/lB,GAIlCgmB,EAAkBC,KAAKjmB,GAAI,IAG1BlC,EAAQ6T,YAAY3R,EAAI1Y,EAAM89B,EAAkBjsB,IAIjD1J,EAAOu1B,QAAQhlB,EAAIolB,EAAkBjsB,KAKjD+sB,aAAc,SAASlmB,GACnB,QAASqU,EAAQwP,cAAc7jB,GAAI9E,SAASoqB,UAAUh6B,QAG1D66B,SAAU,SAASnmB,GACf,GAAIomB,GAAU/R,EAAQwP,cAAc7jB,GAAI9E,SAASoqB,UAAUrtB,OAM3D,OAJImuB,IAAW/R,EAAQgS,gBAAgBrmB,KACnComB,EAAU,MAGPA,GAGX1mB,MAAO,SAASM,GACZtU,EAAI,8FAAgGsU,EAAI,SAExGqU,EAAQ0Q,+BAA+B/kB,GACvCqU,EAAQiS,mBAAmBtmB,GAC3BqU,EAAQwP,cAAc7jB,GAAI0Q,OAAS,GAGvC6V,SAAU,SAASvmB,GACf,GAAIoB,GAAOtD,EAAQsK,QAAQpI,GACvB1Y,EAAOwW,EAAQoI,QAAQlG,GACvBskB,EAAWD,EAAQ8B,SAASnmB,GAC5BuR,EAAY8C,EAAQkQ,cAAcvkB,EAAIskB,GACtCzG,EAAWxJ,EAAQwP,cAAc7jB,GAAIwkB,iBACrCgC,EAAmBnS,EAAQwP,cAAc7jB,GAAI9E,SAASmqB,cAElB,OAApChR,EAAQwP,cAAc7jB,GAAI0Q,SAC1B2D,EAAQwP,cAAc7jB,GAAI0Q,OAAS,GAInCmN,GAAY/f,EAAQ4T,SAAS1R,EAAI1Y,EAAMiqB,MAAe,IACtD8S,EAAQ3kB,MAAMM,GACdskB,EAAWD,EAAQ8B,SAASnmB,GAC5BuR,EAAY8C,EAAQkQ,cAAcvkB,EAAIskB,GACtCzG,GAAW,GAIC,MAAZyG,GAAgD,IAA5BkC,EAAiBl7B,OACrC+4B,EAAQM,SAAS3kB,IAKjBtU,EAAInG,GAAG8H,OAAO,oEAAqE2S,EAAIskB,EAAU/S,EAAUhhB,MAAQ,EAAGghB,EAAU/gB,IAAK4Q,IACrItD,EAAQwT,cAActR,EAAI1Y,EAAM+sB,EAAQqQ,yBAAyBnT,IACjEiV,EAAiB/9B,KAAK67B,GACtBjQ,EAAQwP,cAAc7jB,GAAI9E,SAASmqB,WAAamB,EAE5CpC,GACA4B,EAAkBjF,KAAK/gB,EAAIskB,GAG3BF,GAA8B4B,EAAkBS,aAAepS,EAAQwP,cAAc7jB,GAAI9E,SAASoqB,UAAUh6B,QAC5G+4B,EAAQkC,SAASvmB,GAGO,IAAxBuR,EAAUvgB,KAAKoQ,MACf1V,EAAInG,GAAG8H,OAAO,+DAAgEi3B,EAAUtkB,GAAK,SAC7FqkB,EAAQY,cAAcX,EAAUtkB,EAAI,8BAA+B,OAGnEqU,EAAQqS,YAAY1mB,EAAIskB,EAAUzG,GAAUlhB,KAExC,SAAiBua,EAAU/d,GACvBzN,EAAI,wCAA0CsU,EAAK,WAAaskB,GAEhEjQ,EAAQ6Q,iBAAiBllB,EAAIskB,EAE7B,IAAIkC,GAAmBnS,EAAQwP,cAAc7jB,GAAI9E,SAASmqB,eACtDD,EAAmB31B,EAAOq1B,kBAAkB5N,GAAU,GACtDyP,EAAqBphC,GAAG2F,QAAQs7B,EAAkBlC,EAEtD54B,GAAInG,GAAG8H,OAAO,8CAA+Ci3B,EAAUtkB,IAEvEqkB,EAAQjnB,KAAK4C,EAAIskB,EAAUc,EAAkBjsB,GAEzCwtB,GAAsB,GACtBH,EAAiBzkB,OAAO4kB,EAAoB,GAGhDtS,EAAQuS,0BAA0B5mB,GAE7BqkB,EAAQ6B,aAAalmB,IAAmC,IAA5BwmB,EAAiBl7B,OAGzC+4B,EAAQ6B,aAAalmB,GAC1BqkB,EAAQkC,SAASvmB,GAGjBtU,EAAInG,GAAG8H,OAAO,oGAAqG2S,EAAI9I,KAAKkqB,UAAUoF,KANtInC,EAAQM,SAAS3kB,IAWzB,SAAiBkX,EAAU/d,GACvBkrB,EAAQY,cAAcX,EAAUtkB,EAAIkX,EAAU/d,KAGjDiE,KAAK,WACFiX,EAAQwS,SAAS7mB,EAAIskB,QAO7C0B,GACIc,SACAC,eACAC,YAEAP,UAAW,WACP,GAAIlU,GAAMzU,EAAQ6O,eACdsa,EAAwB,EACxBC,EAAkB,CAOtB,OALA3hC,IAAG+C,KAAK09B,EAAkBe,YAAa,SAASrgB,EAAQygB,GACpDF,IACAC,GAAmBC,EAAiB77B,SAGjCinB,GAAOyT,EAAkBc,MAAMx7B,OAAS27B,EAAwBC,IAM3EjB,KAAM,SAASjmB,EAAIonB,GACf,GAGIzH,GAHA0H,GAAaD,EACbE,EAAe/hC,GAAG2F,QAAQ86B,EAAkBgB,SAAUhnB,GACtDunB,EAAmBhiC,GAAG2F,QAAQ86B,EAAkBc,MAAO9mB,SAGpDgmB,GAAkBe,YAAY/mB,GAEjCvQ,EAAO+3B,eAAexnB,YAAeza,IAAG8X,YACxC3R,EAAI,uCAAyCsU,EAAK,qCAC3CqU,GAAQwP,cAAc7jB,GAAIoF,MAIjCkiB,GAAgB,EAChBtB,EAAkBgB,SAASjlB,OAAOulB,EAAc,GAG3CD,GAAaE,GAAoB,IACtCvB,EAAkBc,MAAM/kB,OAAOwlB,EAAkB,GAEjD5H,EAASqG,EAAkBgB,SAAS/uB,QAChC0nB,GAAU,IACVqG,EAAkBc,MAAMr+B,KAAKk3B,GAC7BlwB,EAAOc,MAAMovB,MAKzB8H,sBAAuB,WACnB,GAAIC,KAqBJ,OAjBAniC,IAAG+C,KAAK09B,EAAkBe,YAAa,SAASrgB,EAAQihB,GAChDA,GAAUA,EAAOr8B,QACjBo8B,EAAmBj/B,KAAKm/B,SAASlhB,MAMzCnhB,GAAG+C,KAAK09B,EAAkBc,MAAO,SAASv+B,EAAKme,GACtCsf,EAAkBe,YAAYrgB,IAC/BghB,EAAmBj/B,KAAKm/B,SAASlhB,MAKzCghB,EAAqBA,EAAmB/xB,OAAOqwB,EAAkBgB,WAKrEa,kBAAmB,SAAS7nB,GACxB,MAAOza,IAAG2F,QAAQ86B,EAAkBc,MAAO9mB,IAAO,GAGtD+gB,KAAM,SAAS/gB,EAAIskB,GACf,GAAgB,MAAZA,EAAkB,CAClB,GAAIwD,GAAmBviC,GAAG2F,QAAQ86B,EAAkBgB,SAAUhnB,GAC1D+nB,EAAgBxiC,GAAG2F,QAAQ86B,EAAkBc,MAAO9mB,EACpD8nB,MAAqB,GAAMC,KAAkB,GAC7C/B,EAAkBgB,SAASv+B,KAAKuX,GAIxC,QAAIgmB,EAAkBS,cACF,MAAZnC,GACA0B,EAAkBgB,SAASgB,MAC3BhC,EAAkBc,MAAMr+B,KAAKuX,KAG5B,WACG,GAAIioB,GAAkBjC,EAAkBe,YAAY/mB,MACpDioB,GAAgBx/B,KAAK67B,GACrB0B,EAAkBe,YAAY/mB,GAAMioB,MAIrC,IAMfvoB,MAAO,WACHsmB,EAAkBgB,YAClBhB,EAAkBc,WAI1BoB,GACIjH,KAAM,SAASjhB,EAAI1Y,GACf+sB,EAAQwP,cAAc7jB,GAAI0Q,OAAS,EAEnChlB,EAAI,qCAAuCsU,GAC3CqU,EAAQ8T,WAAWnoB,GAAIrD,KACnB,SAASua,EAAUkJ,GACf10B,EAAI,uCAAyCsU,EAE7C,IAAIolB,GAAmB31B,EAAOq1B,kBAAkB5N,GAAU,GACtD9V,EAAOtD,EAAQsK,QAAQpI,EAE3BlC,GAAQ2S,WAAWzQ,EAAI1Y,EAAM8Z,EAAMA,GACnC3R,EAAO24B,aAAapoB,EAAIolB,GACxB31B,EAAOu1B,QAAQhlB,EAAIolB,EAAkBhF,IAGzC,SAASlJ,EAAUkJ,GACf10B,EAAI,oCAAsCsU,EAE1C,IAAIolB,GAAmB31B,EAAOq1B,kBAAkB5N,GAAU,EAErDpZ,GAAQ6T,YAAY3R,EAAI1Y,EAAM89B,EAAkBhF,IACjD3wB,EAAOu1B,QAAQhlB,EAAIolB,EAAkBhF,OAOzD3wB,GACI+V,OAAQ,SAASxF,GACbtU,EAAI,cAAgBsU,GACpBlC,EAAQkP,YAAYrmB,OAAOqZ,GAC3BgmB,EAAkBC,KAAKjmB,IAG3BglB,QAAS,SAAShlB,EAAIkX,EAAUkJ,GAC5B,GAAI94B,GAAOwW,EAAQoI,QAAQlG,EAE3BlC,GAAQ+S,WAAW7Q,EAAI1Y,EAAM4vB,EAAUkJ,GAEnC/L,EAAQwP,cAAc7jB,IACtBqU,EAAQgU,YAAchU,EAAQgU,WAAWroB,GAG7CgmB,EAAkBC,KAAKjmB,IAK3BwnB,eAAgB,SAASxnB,GACrB,MAAQqU,GAAQiU,UAAYjU,EAAQiU,SAAStoB,IACxCqU,EAAQjN,SAAWiN,EAAQjN,QAAQpH,IAG5CuoB,YAAa,WACT,GAAIC,GAAcnY,EAAY9qB,GAAG8qB,GAAa9qB,GAAGkjC,YAC7CC,EAAuBnjC,GAAGkT,kBAAkBsC,cAAgB,MAAQ,MAExEsZ,GAAU,GAAImU,GAAYE,EAAuB,iBAC7C5qB,GAEImU,cAAenU,EAAQmU,cACvB/L,QAASpI,EAAQoI,QACjBkC,QAAStK,EAAQsK,QACjBO,QAAS7K,EAAQ6K,QACjBjd,IAAKA,EACLqlB,SAAUjT,EAAQiT,SAClBN,WAAY3S,EAAQ2S,WACpBqB,cAAehU,EAAQgU,gBAI3BuC,EAAQsU,+BACRtU,EAAQsU,iCAIhBC,4BAA6B,SAAS5oB,GAClC,MAAOlC,GAAQoU,SAASlS,IAM5B6oB,WAAY,SAAS7oB,EAAIhP,GAIrB,MAAIA,KAASqjB,EAAQjN,QAAQpH,IAAOhP,YAAgBzL,IAAG8X,WAKnDS,EAAQoT,aAAalR,GAErBtU,EAAI,+CAAiDsU,GACrDhP,EAAKwM,SAASb,KAAK,SAASmsB,GACxBp9B,EAAI,mCAAqCsU,GAGzCqU,EAAQ0U,WAAW/oB,EAAI8oB,GAGvBhrB,EAAQiU,QAAQ/R,EAAI8oB,EAAc1nB,MAGlCiT,EAAQiS,mBAAmBtmB,GAE3BvQ,EAAOu5B,uBAAuBhpB,IAIlC,SAASuL,GACL,GAAI0d,KAEA1d,KACA0d,EAAcr5B,MAAQ2b,GAG1B7f,EAAInG,GAAG8H,OAAO,yDAA0D2S,EAAIuL,GAAe,SAE3FzN,EAAQ+S,WAAW7Q,EAAIlC,EAAQoI,QAAQlG,GAAKza,GAAG6B,OAAO6hC,EAAehF,GAAuB,MAC5Fx0B,EAAOu5B,uBAAuBhpB,GAC9BgmB,EAAkBC,KAAKjmB,MAOxB,GAHIvQ,EAAOu5B,uBAAuBhpB,IAO7CgpB,uBAAwB,SAAShpB,GAC7B,GAAIkpB,GAAaprB,EAAQ4E,mBAAmB1C,GACxCmpB,GAAiB,CAoBrB,OAlBID,IAAcA,EAAW59B,QACzBI,EAAI,0CAA4CsU,GAEhDza,GAAG+C,KAAK4gC,EAAY,SAAS3gC,EAAK6gC,GAC9B,GAAI35B,EAAOm5B,4BAA4BQ,IAAgB/U,EAAQjN,QAAQgiB,GACnED,EAAiBC,IAAcppB,EAC/BvQ,EAAO45B,IAAID,OAEV,IAAI35B,EAAOm5B,4BAA4BQ,GACxC,OAAO,MAKfD,GAAiB,EACjB15B,EAAO45B,IAAIrpB,IAGRmpB,GAGXf,aAAc,SAASpoB,EAAIkX,GACExtB,SAArBwtB,EAASjV,SACTnE,EAAQgU,cAAc9R,EAAIkX,EAASjV,UAO3C6iB,kBAAmB,SAASwE,EAAkB1R,GAC1C,GAAIV,GAAWoS,CAcf,OAVK/jC,IAAGuG,SAASw9B,KACbpS,KAEI3xB,GAAGwH,SAASu8B,KAAsB1R,IAClCV,EAAStnB,MAAQ05B,IAIzBpS,EAAS1lB,QAAUomB,EAEZV,GAGXmS,IAAK,SAASrpB,GACV,GAAI1Y,GAAOwW,EAAQoI,QAAQlG,EAE3B,KAAKkkB,EAAW1d,QAAQxG,GACpB,KAAM,IAAIza,IAAGwB,MAAMiZ,EAAK;AAG5BlC,EAAQsT,SAASpR,EAAI1Y,GAEjB68B,GAAoB9P,EAAQkV,qBAAqBvpB,GACjDqkB,EAAQkC,SAASvmB,GAGjBkoB,EAAOjH,KAAKjhB,EAAI1Y,IAIxBiJ,MAAO,SAASyP,GACZ,GAAIwpB,GAAe/5B,EAAO+3B,eAAexnB,EAEzC,OAAIwpB,GACO/5B,EAAOo5B,WAAW7oB,EAAIwpB,IAG7B/5B,EAAO45B,IAAIrpB,IACJ,IAKnBza,IAAG6B,OAAOxB,MAINuQ,IAAK,SAAS6J,EAAIoF,GACdiP,EAAQle,IAAIP,MAAMhQ,KAAM8H,YAM5B+B,OAAQ,SAASuQ,GACb,QAAIgmB,EAAkBjF,KAAK/gB,IAChBvQ,EAAOc,MAAMyP,IAK5B6J,MAAO,SAAS7J,GAWZ,MANIokB,KACA/P,EAAQwP,cAAc7jB,GAAIjK,KAAKyvB,eAAgB,GAK/CQ,EAAkB6B,kBAAkB7nB,GAC7BvQ,EAAOc,MAAMyP,GAObkkB,EAAWz0B,OAAOuQ,IAOjCwF,OAAQ,SAASxF,GACb,GAAIypB,GAAepV,EAAQ7O,OAAOxF,EAE9Bza,IAAGkX,iBAAiBgtB,GACpBA,EAAa9sB,KAAK,WACdlN,EAAO+V,OAAOxF,KAGbypB,KAAiB,GACtBh6B,EAAO+V,OAAOxF,IAOtB0F,UAAW,WACP,GACIrP,GADAqxB,EAAqB1B,EAAkByB,uBAK3C,IAAIC,EAAmBp8B,OACnB,IAAK+K,EAAIqxB,EAAmBp8B,OAAS,EAAG+K,GAAK,EAAGA,IAC5C6tB,EAAW1e,OAAOkiB,EAAmBrxB,GAI7C2vB,GAAkBtmB,SAKtB0H,QAAS,SAASpH,GACd,MAAIqU,GAAQiU,UAAYjU,EAAQiU,SAAStoB,GAC9BqU,EAAQiU,SAAStoB,GAAI1C,cAGzB+W,EAAQjN,SAAWiN,EAAQjN,QAAQpH,IAI9C0pB,UAAW,SAAS1pB,GAChB,SAAUqU,EAAQiU,WAAYjU,EAAQiU,SAAStoB,KAGnDZ,SAAU,SAASY,GACf,GAAIqU,EAAQjV,SACR,MAAOiV,GAAQjV,SAASY,IAIhCN,MAAO,WACHhU,EAAI,4BACJw4B,EAAWxe,YACXsgB,EAAkBtmB,QAClB2U,EAAQ3U,SAGZqJ,QAAS,SAAS/I,GACd,GAAIkkB,EAAW1d,QAAQxG,GACnB,MAAOqU,GAAQtL,QAAQ/I,IAO/BwG,QAAS,SAASxG,GACd,MAAOqU,GAAQ7N,QAAQxG,IAG3BmI,sBAAuB,WACnB,MAAIkM,GAAQlM,sBACDkM,EAAQlM,4BAavByb,oBAAqB,SAAS5jB,GAC1B,GAAIkkB,EAAW1d,QAAQxG,GACnB,MAAOqU,GAAQuP,oBAAoB5jB,IAS3ClE,MAAO,SAASkE,GACZ,SAAIkkB,EAAWyF,YAAY3pB,IAAOqU,EAAQvY,OAASooB,EAAW1d,QAAQxG,IAAOqU,EAAQvY,MAAMkE,MACvFgmB,EAAkBC,KAAKjmB,GACvBqU,EAAQ0R,0BAA0B/lB,IAC3B,IAMf2pB,YAAa,SAAS3pB,GAClB,QAASqU,EAAQsV,aAAetV,EAAQsV,YAAY3pB,MAI5Dza,GAAG6B,OAAO0W,EAASJ,GACnBhS,EAAMoS,EAAQpS,IACdy4B,EAAmBrmB,EAAQ5C,SAAS+K,SAAW1gB,GAAGkT,kBAAkByC,SACpEkpB,EAA6BD,GAAoBrmB,EAAQ5C,SAASiiB,WAAWlX,QAE7Ege,EAAwB,WACpB,GAAI/M,KAIJ,OAFAA,GAASpZ,EAAQyS,oBAAqB,EAE/B2G,KAGXznB,EAAO84B,eClvBXhjC,GAAGqkC,qBAAuB,SAASlsB,GAC/B,YAEA,IAAII,IACIpS,IAAK,SAASC,EAASC,MAE3Bi+B,IAEJtkC,IAAG6B,OAAO0W,EAASJ,GAEnBnY,GAAG6B,OAAOxB,MACNkkC,eAAgB,SAAS9pB,EAAIhL,GACzB,GAAI+0B,GAA2B,SAAS/P,GAChChlB,EAASglB,EAAMzvB,MAGnBE,QAAOqQ,YACP+uB,EAAyB7pB,GAAMza,GAAGkF,QAAQ5E,OAAO,UAAWkkC,GAG5Dr+B,IAAI,wDAAyD,UAIrEs+B,sBAAuB,SAAShqB,GAC5B,GAAIvV,OAAOqQ,YAAa,CACpB,GAAImvB,GAAWJ,EAAyB7pB,EACpCiqB,IACAA,SCvBpB1kC,GAAG2kC,kBAAoB,SAASjpB,GAC5B,YAoBA,SAASkpB,GAAYnqB,SACVoqB,GAAiBpqB,GAKpBqqB,IACAhS,aAAaiS,EAA0BtqB,UAChCsqB,GAA0BtqB,GACjCuqB,EAAoBP,sBAAsBhqB,GAG9C,IAAIwqB,GAASp7B,SAASq7B,eAAepW,EAAQqW,eAAe1qB,GACxDwqB,KAIAA,EAAO1zB,aAAa,MAAO,qBAE3BvR,GAAGilC,GAAQ7jC,UAQnB,QAASgkC,GAAuBC,GAC5B,MAAOA,GAAW3/B,MAAM,KAAK,GAUjC,QAAS4/B,GAAoBvjC,GACzB,GAAIkjC,GAASjlC,GAAGoP,UAAU,yCAA2CrN,EAAO,OAO5E,OALAkjC,GAAO1zB,aAAa,KAAMxP,GAE1BkjC,EAAO9kC,MAAMC,QAAU,OACvByJ,SAAS07B,KAAK/zB,YAAYyzB,GAEnBA,EAUX,QAASO,GAA4BP,EAAQx1B,GACzC,GAAI41B,GAAaJ,EAAOxqB,GACpB0G,EAASikB,EAAuBC,GAChCzqB,EAAOwI,EAAQjC,EAEnBskB,GAAgB7qB,GAAQnL,EAIxBo1B,EAAiB1jB,GAAUnhB,GAAGilC,GAAQ3kC,OAAO,OAAQ,WAC7CwuB,EAAQjV,SAASsH,KACjBhb,EAAI,mEAAqEk/B,EAAa,KAEtFN,EAA0BM,GAAc1b,WAAW,WAC/C,GAAI3D,GAAe,gEAAkEqf,CACrFl/B,GAAI6f,EAAc,SAClBvW,GACIpF,MAAO2b,KAEZ,QAMXgf,EAAoBT,eAAec,EAAY,SAASj/B,GACpDD,EAAI,2CAA6CC,EAAU,IAC3D,IAGIs/B,GAFA/T,GADSyT,EAAuBC,GACrBvW,EAAQ6W,mBAAmBv/B,IACtCwU,EAAO+W,EAAS/W,IAGhBA,IAAQ6qB,EAAgB7qB,IACxBzU,EAAI,qCAAuCk/B,GAC3CvS,aAAaiS,EAA0BM,UAChCN,GAA0BM,GAEjCvW,EAAQ8W,iBAAiBP,GAEzBK,EAAiBD,EAAgB7qB,SAE1B6qB,GAAgB7qB,GACvBoqB,EAAoBP,sBAAsBY,GAC1CK,EAAe/T,IAET/W,GACNzU,EAAI,IAAMC,EAAU,2CAxHhC,GAAImS,GAAUmD,EAAKnD,QACfuW,EAAUzuB,KACV49B,EAAQviB,EAAKuiB,MACb4H,EAAwB7lC,GAAGoN,cAC3Bq4B,KACAZ,KACAE,KACAD,EAASvsB,EAAQusB,OACjBta,EAAYjS,EAAQiS,UACpBpH,EAAU6a,EAAM7a,QAChBjd,EAAM83B,EAAM93B,IACZ6+B,EAAsB,GAAIhlC,IAAGqkC,sBAAsBl+B,IAAKA,GAkH5DnG,IAAG6B,OAAOxB,KAAM,GAAIL,IAAGg+B,cAActiB,IAErC1b,GAAGwM,SAASnM,KAAM,SAASsM,GACvB,OAIIiE,IAAK,SAAS6J,EAAImT,GACdjhB,EAAOiE,IAAI6J,GAAK7Q,MAAOgkB,IAEvBA,EAAUrc,aAAa,OAAQiZ,GAG3BoD,EAAUzsB,YACVnB,GAAG4tB,GAAWxsB,UAItBoiB,QAAS,SAAS/I,GACdmqB,EAAYnqB,GACZ9N,EAAO6W,QAAQ/I,IAGnBwG,QAAS,SAASxG,GACd,MAAO9N,GAAOsU,QAAQxG,IACkBtW,SAApC2qB,EAAQwP,cAAc7jB,GAAI7Q,UAK1C5J,GAAG6B,OAAOxB,MACNwZ,SAAU,SAASY,GACf,MAAOqU,GAAQwP,cAAc7jB,GAAI7Q,OAWrCk8B,iBAAkB,SAASb,EAAQx1B,GAE/B,GAAIs2B,EAEAjB,GACAU,EAA4BP,EAAQx1B,GAGpCo1B,EAAiBI,EAAOxqB,IAAMza,GAAGilC,GAAQ3kC,OAAO,OAAQ,WAMpD,GALA6F,EAAI,yBAA2B8+B,EAAOxqB,IAKjCwqB,EAAO9jC,WAAZ,CAIA,IAEI,GAAI8jC,EAAOe,iBACPf,EAAOe,gBAAgBT,MACkB,SAAzCN,EAAOe,gBAAgBT,KAAKh2B,UAK5B,OAGR,MAAOlF,GAEHlE,EAAI,8EAAgFkE,EAAMjE,QAAU,IAAK,SACzG2/B,GAAsB95B,SAAS,GAGnCwD,EAASs2B,OAWrBE,cAAe,SAASxrB,GACpB,GAAI4qB,GAAavW,EAAQqW,eAAe1qB,EAExC,OAAO6qB,GAAoBD,IAQ/BO,iBAAkB,SAASnrB,GACMtW,SAAzB0gC,EAAiBpqB,KACjBoqB,EAAiBpqB,WACVoqB,GAAiBpqB,KAQhC0qB,eAAgB,SAAShkB,GACrB,MAAOA,GAAS,IAAM0kB,GAY1BK,mBAAoB,SAASxqB,GACzB,GAAIwL,GAASxL,EAAKwL,OACd7I,EAAW3C,EAAK2C,SAChBD,EAAS1C,EAAK0C,OACdoY,EAAe9a,EAAK8a,aACpB2P,EAAazqB,EAAKyqB,WAClB70B,EAAOtR,GAAGoP,UAAU,iBAAmB8X,EAAS,2CAChD4T,EAAMzc,CAcV,OAZImY,GACAx2B,GAAGqR,WAAW+M,EAAQ9M,GAGtBwpB,EAAM96B,GAAGsQ,QAAQ8N,EAAQC,GAG7B/M,EAAKC,aAAa,SAAUupB,GAC5BxpB,EAAKC,aAAa,SAAU40B,GAC5B70B,EAAKnR,MAAMC,QAAU,OACrByJ,SAAS07B,KAAK/zB,YAAYF,GAEnBA,GAOXq0B,mBAAoB,SAASS,GACzB,GAAIzU,KAEJ,KACIA,EAAW3xB,GAAGyR,UAAU20B,GAE5B,MAAO/7B,GACHlE,EAAI,0DAA4DkE,EAAMjE,QAAU,IAAK,SAGzF,MAAOurB,OCnSnB3xB,GAAGqmC,iBAAmB,SAAS3qB,GAC3B,YAkBA,SAAS4kB,GAAM7lB,GACXza,GAAG+C,KAAK+rB,EAAQqR,SAAS1lB,GAAK,SAAS6rB,EAAO1yB,GAC1C,GAAI2yB,GAAgBzX,EAAQ0X,kBAAkB/rB,EAAI6rB,EAElD1yB,GAAIynB,mBAAqB,KACzBznB,EAAI1J,OAAO6vB,WAAa,KACxBnmB,EAAI0sB,QACJiG,GAAiBA,EAAcxI,UAAYwI,EAAcxI,SAAStjB,KAvB1E,GAAIqU,GAAUzuB,KACVyqB,EAAYpP,EAAKnD,QAAQuS,UACzBmT,EAAQviB,EAAKuiB,MACbtoB,EAAW+F,EAAKnD,QAAQ5C,SACxBc,EAASiF,EAAKnD,QAAQ9B,OACtBgwB,EAAa9wB,GAAY+F,EAAKnD,QAAQ5C,SAAS+K,SAAW1gB,GAAGkT,kBAAkByC,SAC/E+wB,EAAgBjwB,GAAUiF,EAAKnD,QAAQ9B,OAAOiK,SAAW+lB,GAAczmC,GAAGkT,kBAAkBuD,OAC5FkK,EAAUsd,EAAMtd,QAChBkC,EAAUob,EAAMpb,QAChBO,EAAU6a,EAAM7a,QAChBf,EAAc4b,EAAM5b,YACpBqK,EAAgBuR,EAAMvR,cACtBH,EAAgB0R,EAAM1R,cACtBrB,EAAa+S,EAAM/S,WACnB/kB,EAAM83B,EAAM93B,GAahBnG,IAAG6B,OAAOxB,KAAM,GAAIL,IAAGg+B,cAActiB,IAErC1b,GAAGwM,SAASnM,KAAM,SAASsM,GACvB,OAIIiE,IAAK,SAAS6J,EAAIksB,GACd,GAAI3mC,GAAGyI,OAAOk+B,IAAgB3mC,GAAGyJ,OAAOk9B,GACpCh6B,EAAOiE,IAAI6J,GAAKoF,KAAM8mB,QAErB,CAAA,KAAIA,YAAuB3mC,IAAG8X,WAI/B,KAAM,IAAItW,OAAM,2CAHhBmL,GAAOiE,IAAI6J,GAAKwjB,MAAO0I,IAM3B7X,EAAQ8X,eAAensB,GACvBisB,GAAiB5X,EAAQ+X,uBAAuBpsB,IAGpD+I,QAAS,SAAS/I,GACd6lB,EAAM7lB,GACNqU,EAAQ0Q,+BAA+B/kB,GACvCqU,EAAQgU,WAAWroB,GACnB9N,EAAO6W,QAAQ/I,OAK3Bza,GAAG6B,OAAOxB,MAENs/B,iBAAkB,SAASllB,EAAIskB,SACpBjQ,GAAQwP,cAAc7jB,GAAIjK,KAAKs2B,aAAa/H,IAGvDuC,SAAU,SAAS7mB,EAAIskB,GACnB,GAAIgI,GAAYjY,EAAQwP,cAAc7jB,GAAIjK,IAEtCu2B,GAAUC,YACHD,GAAUC,KAAKjI,GAEtBgI,EAAUE,sBACHF,GAAUE,eAAelI,IAMxCM,eAAgB,SAAS5kB,EAAIysB,GACzB,GAAIC,GAAerY,EAAQgS,gBAAgBrmB,GAAM,EAC7C7G,EAAMkb,EAAQsY,QAAQ3sB,EAAI0sB,EAE9B,OAAID,IACO,GAAIlnC,IAAG+L,SAAUE,QAAQi7B,EAAetzB,GAAMA,IAGlD,GAAI5T,IAAG+L,SAAUE,WAAY2H,IAGxCiO,QAAS,SAASpH,GACd,MAAOqU,GAAQ7N,QAAQxG,IAAOqU,EAAQwP,cAAc7jB,GAAIoF,MAG5DkjB,SAAU,SAAStoB,GACf,MAAOqU,GAAQ7N,QAAQxG,IAAOqU,EAAQwP,cAAc7jB,GAAIwjB,OAO5Drb,sBAAuB,WACnB,GAAIykB,KAmBJ,OAjBAvY,GAAQwY,sBAAsB,SAASz3B,EAAK2Q,GACxCsO,EAAQ0R,0BAA0B,KAAMhgB,EAAW7K,SAASmqB,WAAatf,EAAW7K,SAASoqB,UAE7F,IAAI/6B,IACAjD,KAAMye,EAAWze,KACjBg+B,UAAWvf,EAAW7K,SAASoqB,UAC/BlkB,KAAM2E,EAAW3E,KACjBjB,KAAM4F,EAAW5F,KAGjB4F,GAAW3Q,MACX7K,EAAK6K,IAAM2Q,EAAW3Q,KAG1Bw3B,EAAmBnkC,KAAK8B,KAGrBqiC,GAGXjD,YAAa,SAAS3pB,GAClB,QAAS9E,GAAYmZ,EAAQ7N,QAAQxG,KAAQqU,EAAQwP,cAAc7jB,GAAI8sB,cAG3E/G,0BAA2B,SAAS/lB,EAAI+sB,EAAeC,GACnD,GAAI3H,GAAa0H,GAAiB1Y,EAAQwP,cAAc7jB,GAAI9E,SAASmqB,WACjEC,EAAY0H,GAAgB3Y,EAAQwP,cAAc7jB,GAAI9E,SAASoqB,SAE/DD,KACA35B,EAAInG,GAAG8H,OAAO,yDAA0D6J,KAAKkqB,UAAUiE,KACvFA,EAAW4H,UACX1nC,GAAG+C,KAAK+8B,EAAY,SAAS98B,EAAK+7B,GAC9BgB,EAAUC,QAAQjB,KAEtBe,EAAW/5B,OAAS,IAI5BwQ,MAAO,SAASkE,GACZ,GAAIqU,EAAQ7N,QAAQxG,GAIhB,MAHAtU,GAAInG,GAAG8H,OAAO,4DAA6D2S,EAAIkG,EAAQlG,KACvFqU,EAAQwP,cAAc7jB,GAAIktB,QAAS,EACnCrH,EAAM7lB,IACC,GAIfsmB,mBAAoB,SAAStmB,GACzB,GAAI9E,GAAYmZ,EAAQ7N,QAAQxG,GAAK,CACjC,GACImtB,GACA92B,EAFA4G,EAAQoX,EAAQwP,cAAc7jB,EAQlC,UAJO/C,GAAM/B,SAEb+B,EAAM/B,YACNiyB,EAAc9Y,EAAQgS,gBAAgBrmB,GAClCmtB,EAAc,GAAKjyB,EAASkiB,UAAW,CAKvC,IAJAngB,EAAM/B,SAAS+K,SAAU,EACzBhJ,EAAM/B,SAASkyB,MAAQD,EACvBlwB,EAAM/B,SAASoqB,aAEVjvB,EAAI,EAAGA,EAAI82B,EAAa92B,IACzB4G,EAAM/B,SAASoqB,UAAU78B,KAAK4N,EAGlCge,GAAQ8X,eAAensB,OAGvB/C,GAAM/B,SAAS+K,SAAU,IAKrC8iB,WAAY,SAAS/oB,EAAIqtB,GACjBhZ,EAAQ7N,QAAQxG,KAChBqU,EAAQwP,cAAc7jB,GAAIoF,KAAOioB,IAIzChF,WAAY,SAASroB,GACjB,GAAIssB,GAAYjY,EAAQwP,cAAc7jB,GAAIjK,IAE1CxQ,IAAG+C,KAAKgkC,EAAUE,eAAgB,SAASc,SAChChB,GAAUE,eAAec,KAGpC/nC,GAAG+C,KAAKgkC,EAAUC,KAAM,SAASe,SACtBhB,GAAUC,KAAKe,MAW9BC,WAAY,SAASvtB,EAAIwtB,GACrB,MAAOnZ,GAAQoZ,aAAaztB,EAAIwtB,EAAajoC,GAAGiK,sBAGpDu8B,kBAAmB,SAAS/rB,EAAIwtB,GAC5B,GAAIlJ,GAA0B,MAAfkJ,GAAsB,EAAKA,CAC1C,OAAOnZ,GAAQwP,cAAc7jB,GAAIjK,KAAKy2B,eAAelI,IAGzDC,cAAe,SAASvkB,EAAI0tB,GACxB,GAAIlQ,GAAYtiB,EAASyiB,SACrBgQ,EAAWvlB,EAAQpI,GACnB1P,EAAa+jB,EAAQjN,QAAQpH,GAC7B4tB,EAAapQ,EAAYkQ,EACzBG,EAAWD,EAAapQ,GAAamQ,EAAWA,EAAWC,EAAapQ,EACxE2P,EAAc9Y,EAAQgS,gBAAgBrmB,GACtCqsB,EAAezmC,KAAKi+B,cAAc7jB,GAAIjK,KAAKs2B,aAI3Cr7B,EAAOq7B,EAAaqB,IAAenoC,GAAG8K,UAAUC,EAAYs9B,EAAYC,EAI5E,OAFAxB,GAAaqB,GAAc18B,GAGvB88B,KAAMJ,EACNn9B,MAAOq9B,EACPp9B,IAAKq9B,EACLE,MAAOZ,EACPn8B,KAAMA,EACNoQ,KAAMysB,EAAWD,IAIzBlJ,yBAA0B,SAASnT,GAC/B,OACI+L,UAAW/L,EAAUuc,KACrBE,UAAWzc,EAAUhhB,MAAQ,EAC7B09B,QAAS1c,EAAU/gB,IACnBktB,WAAYnM,EAAUwc,QAQ9BG,mBAAoB,SAASluB,GACzB,GAAImuB,GAAgB,MAChB7mC,EAAO4e,EAAQlG,GACfoB,EAAOgH,EAAQpI,GACfwd,EAAYtiB,EAASyiB,SACrB/Z,EAAWgE,EAAY5H,EAE3B,OAAOza,IAAG8H,OAAO,2BAA4BgjB,EAAW8d,EAAe7mC,EAAM8Z,EAAMoc,EAAW5Z,IAGlGwqB,aAAc,SAASpuB,GACnB,MAAOqU,GAAQjN,QAAQpH,GAAIla,MAG/BuoC,oBAAqB,SAASruB,GAC1B,MAAOqU,GAAQwP,cAAc7jB,GAAI9E,UAOrCmrB,gBAAiB,SAASrmB,GACtB,GAAI9E,EAAU,CACV,GAAIyyB,GAAWvlB,EAAQpI,GACnBwd,EAAYtiB,EAASyiB,QAEzB,OAAOz2B,MAAKonC,KAAKX,EAAWnQ,KAIpCmP,QAAS,SAAS3sB,EAAIwtB,GAClB,GAAIlJ,GAA0B,MAAfkJ,GAAsB,EAAKA,CAC1C,OAAOnZ,GAAQwP,cAAc7jB,GAAIjK,KAAKw2B,KAAKjI,IAG/CoB,SAAU,SAAS1lB,GACf,MAAOqU,GAAQwP,cAAc7jB,GAAIjK,KAAKw2B,MAK1CM,sBAAuB,SAAS73B,GACxBi3B,GACA1mC,GAAG+C,KAAKqR,aAAc,SAASvE,EAAKvI,GAChC,GAAwD,IAApDuI,EAAIlK,QAAQ3F,GAAG8H,OAAO,aAAcgjB,IAAmB,CACvD,GAAItK,GAAa7O,KAAKC,MAAMtK,EAC5BmI,GAASI,EAAK2Q,OAM9BomB,eAAgB,SAASnsB,GACrBqU,EAAQwP,cAAc7jB,GAAIjK,MACtBy2B,kBACA/H,iBACA8H,QACAF,kBAIRkC,kBAAmB,SAASvuB,GACxBqU,EAAQwP,cAAc7jB,GAAI8sB,cAAe,GAK7C/H,+BAAgC,SAAS/kB,GACrC,GAAIwuB,EAEJ,UAAIvC,GAAiB5X,EAAQsV,YAAY3pB,KACrCwuB,EAAiBna,EAAQ6Z,mBAAmBluB,GAExCwuB,GAAkB70B,aAAatE,QAAQm5B,OACvC70B,aAAa80B,WAAWD,IACjB,IASnBpC,uBAAwB,SAASpsB,GAC7B,GACIwuB,GAAgBE,EADhBzxB,EAAQoX,EAAQwP,cAAc7jB,EAK9BisB,IAA+BviC,SAAduT,EAAM7H,MACvBo5B,EAAiBna,EAAQ6Z,mBAAmBluB,GAC5C0uB,EAAgB/0B,aAAatE,QAAQm5B,GAGjCE,IACAA,EAAgBx3B,KAAKC,MAAMu3B,GAIvBzc,EAAcyc,EAAcvuB,MAC5BkU,EAAQka,kBAAkBvuB,IAG1BtU,EAAInG,GAAG8H,OAAO,0DAA2D2S,EAAIkG,EAAQlG,KAErF8R,EAAc9R,EAAI0uB,EAAcvuB,MAEhClD,EAAM7H,IAAMs5B,EAAct5B,IAC1B6H,EAAM/B,SAAWwzB,EAAcxzB,SAC/B+B,EAAMyT,OAASge,EAAche,OAC7BzT,EAAMunB,kBAAmB,EAEzBnQ,EAAQ0R,0BAA0B/lB,OAOlD4mB,0BAA2B,SAAS5mB,GAChC,GACIwuB,GAAgBE,EADhBzxB,EAAQoX,EAAQwP,cAAc7jB,EAIlC,IAAIisB,GAAiB5X,EAAQsV,YAAY3pB,GAAK,CAC1CwuB,EAAiBna,EAAQ6Z,mBAAmBluB,GAE5C0uB,GACIpnC,KAAM4e,EAAQlG,GACdoB,KAAMgH,EAAQpI,GACdG,KAAMwI,EAAQ3I,GACd5K,IAAK6H,EAAM7H,IACX8F,SAAU+B,EAAM/B,SAChBwV,OAAQzT,EAAMyT,OACdie,YAAavL,KAAKiG,MAGtB,KACI1vB,aAAaC,QAAQ40B,EAAgBt3B,KAAKkqB,UAAUsN,IAExD,MAAO9+B,GACHlE,EAAInG,GAAG8H,OAAO,0DAA2D2S,EAAIpQ,EAAM1D,YAAa,WAK5G0iC,yBAA0B,SAAS5uB,EAAIskB,EAAU9G,GAC7C,GAAIrkB,GAAMkb,EAAQsY,QAAQ3sB,EAAIskB,GAC1Bh9B,EAAO4e,EAAQlG,GACf6uB,GACI3G,OAAQ,SAASxX,EAAQC,GACrB,GAAIgd,GAAWvlB,EAAQpI,EAEnB0Q,KAAWC,EACXF,EAAWzQ,EAAI1Y,EAAMqmC,EAAUA,GAG/Bld,EAAWzQ,EAAI1Y,EAAOopB,GAAUid,EAAWA,EAAW,EAAIjd,EAASid,IAI3EtJ,QAAS,SAAS3T,EAAQC,GACtB,GAAI8T,GAAgBpQ,EAAQwP,cAAc7jB,GAAIjK,KAAK0uB,cAC/CqK,EAAiCza,EAAQwP,cAAc7jB,GAAI0Q,OAC3Dqe,EAAmBre,EACnBse,EAAkBre,EAClB8M,EAAgBrV,EAAQpI,GACxBivB,EAAuBF,GAAoBC,EAAkBxR,GAC7D0R,EAAqBJ,CAEzBrK,GAAcH,GAAY2K,EAE1B1pC,GAAG+C,KAAKm8B,EAAe,SAASH,EAAU6K,GACtCD,GAAsBC,IAG1B1e,EAAWzQ,EAAI1Y,EAAM4nC,EAAoBzR,IAIrDtkB,GAAI1J,OAAO6vB,WAAa,SAAS7qB,GAC7B,GAAIA,EAAE8sB,iBAAkB,CAEpB,GAAIz7B,GAAoB,MAAb03B,EAAoB,SAAW,SAC1CqR,GAAmB/oC,GAAM2O,EAAEic,OAAQjc,EAAEkc,UAcjD8c,aAAc,SAASztB,EAAIwtB,EAAar0B,EAAKi2B,GACzC,GAAIC,GAAwB,MAAf7B,GAAsB,EAAKA,EACpClB,EAAYjY,EAAQwP,cAAc7jB,GAAIjK,IAW1C,OATAu2B,GAAUC,KAAOD,EAAUC,SAC3BD,EAAUE,eAAiBF,EAAUE,mBAErCF,EAAUC,KAAK8C,GAAUl2B,EAErBi2B,IACA9C,EAAUE,eAAe6C,GAAUD,GAGhCj2B,GAIXwvB,8BAA+B,WAC3B,GAAI2G,GAAiBtzB,EAAO4hB,eAE5BvJ,GAAQwY,sBAAsB,SAASz3B,EAAK2Q,GACxC,GAAIwpB,GAAiB,GAAInM,MAAKrd,EAAW4oB,YAGzCY,GAAeC,QAAQD,EAAeE,UAAYH,GAE9CC,EAAelM,WAAaD,KAAKiG,QACjC39B,EAAI,2CAA6C0J,GACjDuE,aAAa80B,WAAWr5B,OAWpCm0B,qBAAsB,SAASvpB,GAC3B,GAAI/C,GAAQoX,EAAQwP,cAAc7jB,EAMlC,OAJK/C,GAAM/B,UACPmZ,EAAQiS,mBAAmBtmB,GAGxB/C,EAAM/B,SAAS+K,YCxflC1gB,GAAGinB,wBAA0B,SAAS9O,GAClC,YAqBA,SAASgyB,KACL,MAAqC,SAAjC5xB,EAAQ2O,OAAOC,eAEXijB,QAAS,aAtBrB,GAAIC,GACA9xB,GACI2O,OAAQ,SACRG,cAAe,SACfK,iBACAN,eAAgB,EAChBI,cAAe,SAAS/M,GAAK,UAC7BgN,eACAE,MACIsI,UAAU,EACVuI,iBAAiB,GAErBryB,IAAK,SAAS4B,EAAK1B,KACnBuhB,SAAU,SAASnN,KACnBqN,iBAAkB,SAASrN,EAAIsN,EAAUC,KAGjDhoB,IAAG6B,OAAO0W,EAASJ,GAYnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/B6C,aAAc,mBACdM,cAAe,OAAQ,UACvBxV,OAAQ3O,EAAQ2O,OAChBQ,cAAenP,EAAQmP,cACvBD,YAAalP,EAAQkP,YACrBmT,eAAgBuP,IAChB/iB,eAAgB7O,EAAQ6O,eACxBI,cAAe,SAAS/M,GACpB,MAAOlC,GAAQiP,cAAcjF,IAAI9H,IAErCtU,IAAKoS,EAAQpS,IACb60B,OAAQziB,EAAQqP,SAChB0D,WAAY/S,EAAQuP,iBACpBH,KAAMpP,EAAQoP,QAGlB3nB,GAAG6B,OAAOxB,MACNuzB,WAAY,SAASnZ,EAAIG,EAAM4Y,GAC3B,GAAI3I,GAAoB2I,KAExBjb,GAAQpS,IAAI,sCAAwCsU,GAE7B,WAAnBlC,EAAQ2O,OACRmjB,EAAUrN,cAAcviB,GACnB0iB,SAASviB,GACTyiB,WAAWxS,GACX6Q,QAGL7Q,EAAkBtS,EAAQ8O,eAAiBzM,EAC3CyvB,EAAUrN,cAAcviB,GACnB4iB,WAAWxS,GACX6Q,YCpDrB,WAMI,QAAS4O,GAAkBC,GACvB,GAGIC,GAHAC,EAAKF,EAAIG,aACTC,EAAKJ,EAAIK,cACTvmC,EAASwF,SAASC,cAAc,SAGpC,OAAI2gC,GAAKE,EAAK,UACVtmC,EAAOwmC,MAAQxmC,EAAOgV,OAAS,EAC/BmxB,EAAMnmC,EAAOymC,WAAW,MACxBN,EAAIO,UAAUR,GAAME,EAAK,EAAG,GAIoB,IAAzCD,EAAIQ,aAAa,EAAG,EAAG,EAAG,GAAGhmC,KAAK,IAUjD,QAASimC,GAAqBV,EAAKE,EAAIE,GACnC,GAIIH,GAAKxlC,EAAMkmC,EAAOC,EAJlB9mC,EAASwF,SAASC,cAAc,UAChCshC,EAAK,EACLC,EAAKV,EACLW,EAAKX,CAUT,KAPAtmC,EAAOwmC,MAAQ,EACfxmC,EAAOgV,OAASsxB,EAChBH,EAAMnmC,EAAOymC,WAAW,MACxBN,EAAIO,UAAUR,EAAK,EAAG,GACtBvlC,EAAOwlC,EAAIQ,aAAa,EAAG,EAAG,EAAGL,GAAI3lC,KAG9BsmC,EAAKF,GACRF,EAAQlmC,EAAgB,GAAVsmC,EAAK,GAAS,GACd,IAAVJ,EACAG,EAAKC,EAELF,EAAKE,EAETA,EAAMD,EAAKD,GAAO,CAItB,OADAD,GAASG,EAAKX,EACI,IAAVQ,EAAe,EAAIA,EAM/B,QAASI,GAAqBhB,EAAK9+B,EAAM8M,EAASizB,GAC9C,GAAInnC,GAASwF,SAASC,cAAc,UAChCxF,EAAOiU,EAAQjU,MAAQ,aACvBwH,EAAU,GAAI9L,IAAG+L,OASrB,OAPA0/B,GAAoBlB,EAAK9+B,EAAMpH,EAAQkU,EAASizB,GAC3Cp0B,KAAK,WACFtL,EAAQG,QACJ5H,EAAOI,UAAUH,EAAMiU,EAAQhU,SAAW,OAI/CuH,EAGX,QAAS4/B,GAAoChwB,GACzC,GAAIiwB,GAAY,MAEhB,KAAK3rC,GAAG0O,MACJ,KAAM,IAAI1O,IAAGwB,MAAM,kEAGvB,IAAIka,EAAKkwB,WAAalwB,EAAKmwB,UAAYF,EACnC,OACIG,UAAWnqC,KAAKC,MAAMD,KAAKoqC,KAAKJ,GAAajwB,EAAKkwB,WAAalwB,EAAKmwB,aACpEG,SAAUrqC,KAAKC,MAAMD,KAAKoqC,KAAKJ,GAAajwB,EAAKmwB,UAAYnwB,EAAKkwB,eAQ9E,QAASH,GAAoBlB,EAAK9+B,EAAMpH,EAAQkU,EAASizB,GACrD,GAMIS,GANAxB,EAAKF,EAAIG,aACTC,EAAKJ,EAAIK,cACTC,EAAQtyB,EAAQsyB,MAChBxxB,EAASd,EAAQc,OACjBmxB,EAAMnmC,EAAOymC,WAAW,MACxBh/B,EAAU,GAAI9L,IAAG+L,OAKrB,OAFAy+B,GAAI0B,OAEA3zB,EAAQ4zB,OACDC,GACH3gC,KAAMA,EACNpH,OAAQA,EACRuxB,MAAO2U,EACP8B,YAAa1B,EACb2B,WAAY7B,EACZ8B,YAAah0B,EAAQg0B,YACrBJ,OAAQ5zB,EAAQ4zB,OAChBK,aAAcnzB,EACdozB,YAAa5B,KAIhB7qC,GAAGkT,kBAAkB0D,2BACtBq1B,EAAqBP,GACjBG,UAAWhB,EACXe,WAAYvyB,IAGZ4yB,IACAjsC,GAAGmG,IAAInG,GAAG8H,OAAO,iFACb+iC,EAAOxxB,EAAQ4yB,EAAmBD,SAAUC,EAAmBH,WAC/D,QAEJjB,EAAQoB,EAAmBD,SAC3B3yB,EAAS4yB,EAAmBH,YAIpCY,EAAoBroC,EAAQwmC,EAAOxxB,EAAQd,EAAQg0B,aAI/CvsC,GAAG0O,OACF,WACO47B,EAAkBC,KAClBE,GAAM,EACNE,GAAM,EAGV,IAOIgC,GAAQC,EAAIC,EAPZC,EAAI,KACJC,EAAYljC,SAASC,cAAc,UACnCkjC,EAAkBxB,EAAWP,EAAqBV,EAAKE,EAAIE,GAAM,EACjEsC,EAAKtrC,KAAKonC,KAAK+D,EAAIjC,EAAQJ,GAC3ByC,EAAKvrC,KAAKonC,KAAK+D,EAAIzzB,EAASsxB,EAAKqC,GACjC5B,EAAK,EACL+B,EAAK,CAMT,KAHAJ,EAAUlC,MAAQkC,EAAU1zB,OAASyzB,EACrCH,EAASI,EAAUjC,WAAW,MAEvBM,EAAKT,GAAI,CAGZ,IAFAiC,EAAK,EACLC,EAAK,EACED,EAAKnC,GACRkC,EAAOS,UAAU,EAAG,EAAGN,EAAGA,GAC1BH,EAAO5B,UAAUR,GAAMqC,GAAKxB,GAC5BZ,EAAIO,UAAUgC,EAAW,EAAG,EAAGD,EAAGA,EAAGD,EAAIM,EAAIF,EAAIC,GACjDN,GAAME,EACND,GAAMI,CAEV7B,IAAM0B,EACNK,GAAMD,EAEV1C,EAAI6C,UACJN,EAAYJ,EAAS,QAIzBnC,EAAIO,UAAUR,EAAK,EAAG,EAAGM,EAAOxxB,GAGpChV,EAAOipC,iBAAmBjpC,EAAOipC,kBACjCxhC,EAAQG,UAEDH,GAGX,QAASsgC,GAAqCmB,GAC1C,GAAI9hC,GAAO8hC,EAAW9hC,KAClBmqB,EAAQ2X,EAAW3X,MACnByW,EAAckB,EAAWlB,YACzBC,EAAaiB,EAAWjB,WACxBC,EAAcgB,EAAWhB,YACzBzgC,EAAU,GAAI9L,IAAG+L,QACjBogC,EAASoB,EAAWpB,OACpBqB,EAAe3jC,SAASC,cAAc,UACtC2jC,EAAsBD,EAAa1C,WAAW,MAC9C4C,EAAeH,EAAWlpC,OAC1BmoC,EAAee,EAAWf,aAC1BC,EAAcc,EAAWd,WAyB7B,OAvBAC,GAAoBc,EAAclB,EAAYD,EAAaE,GAE3DmB,EAAar0B,OAASmzB,EACtBkB,EAAa7C,MAAQ4B,EAErBgB,EAAoB1C,UAAUnV,EAAO,EAAG,GAExCuW,GACI1gC,KAAMA,EACN4N,OAAQmzB,EACR5W,MAAOA,EACP4X,aAAcA,EACdE,aAAcA,EACd7C,MAAO4B,IAENr1B,KACG,WACIs2B,EAAaJ,iBAAmBI,EAAaJ,kBAC7CxhC,EAAQG,WAEZH,EAAQK,SAGTL,EAOX,QAAS4gC,GAAoBroC,EAAQwmC,EAAOxxB,EAAQkzB,GAChD,OAAQA,GACJ,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACDloC,EAAOwmC,MAAQxxB,EACfhV,EAAOgV,OAASwxB,CAChB,MACJ,SACIxmC,EAAOwmC,MAAQA,EACfxmC,EAAOgV,OAASA,EAExB,GAAImxB,GAAMnmC,EAAOymC,WAAW,KAC5B,QAAQyB,GACJ,IAAK,GAED/B,EAAImD,UAAU9C,EAAO,GACrBL,EAAI5oB,OAAM,EAAI,EACd,MACJ,KAAK,GAED4oB,EAAImD,UAAU9C,EAAOxxB,GACrBmxB,EAAIoD,OAAOjsC,KAAKksC,GAChB,MACJ,KAAK,GAEDrD,EAAImD,UAAU,EAAGt0B,GACjBmxB,EAAI5oB,MAAM,GAAG,EACb,MACJ,KAAK,GAED4oB,EAAIoD,OAAO,GAAMjsC,KAAKksC,IACtBrD,EAAI5oB,MAAM,GAAG,EACb,MACJ,KAAK,GAED4oB,EAAIoD,OAAO,GAAMjsC,KAAKksC,IACtBrD,EAAImD,UAAU,GAAIt0B,EAClB,MACJ,KAAK,GAEDmxB,EAAIoD,OAAO,GAAMjsC,KAAKksC,IACtBrD,EAAImD,UAAU9C,GAAQxxB,GACtBmxB,EAAI5oB,OAAM,EAAI,EACd,MACJ,KAAK,GAED4oB,EAAIoD,QAAO,GAAOjsC,KAAKksC,IACvBrD,EAAImD,WAAW9C,EAAO,IAUlC,QAASiD,GAAaC,EAAUC,GAC5B,GAAIv1B,GAAOpY,IAEP6E,QAAOO,MAAQsoC,YAAoBtoC,QAClC,WACG,GAAI8kC,GAAM,GAAI0D,OACVC,EAAMhpC,OAAOgpC,KAAOhpC,OAAOgpC,IAAIC,gBAAkBjpC,OAAOgpC,IACpDhpC,OAAOkpC,WAAalpC,OAAOkpC,UAAUD,gBAAkBjpC,OAAOkpC,UAAY,IAClF,KAAKF,EAAO,KAAM1sC,OAAM,uDACxB+oC,GAAI8D,IAAMH,EAAIC,gBAAgBJ,GAC9Bt1B,EAAKhN,KAAOsiC,EACZA,EAAWxD,KAGdwD,EAASrD,cAAiBqD,EAASnD,gBACpCmD,EAAS/hC,OAAS,WACd,GAAIsiC,GAAY71B,EAAK81B,kBACjBD,KACA71B,EAAK81B,mBAAqB,KAG1B5kB,WAAW,WACP,IAAK,GAAI7Y,GAAI,EAAG5D,EAAMohC,EAAUvoC,OAAQ+K,EAAI5D,EAAK4D,IAC7Cw9B,EAAUx9B,MAEf,KAGXi9B,EAAS7hC,QAAU8hC,EACnB3tC,KAAKkuC,uBAETluC,KAAK0tC,SAAWA,EAMpBD,EAAapnC,UAAU8nC,OAAS,SAAS/hC,EAAQ8L,GAC7CA,EAAUA,KAEV,IASIk2B,GATAh2B,EAAOpY,KACPquC,EAAWruC,KAAK0tC,SAASrD,aACzBiE,EAAYtuC,KAAK0tC,SAASnD,cAC1BC,EAAQtyB,EAAQsyB,MAChBxxB,EAASd,EAAQc,OACjBsd,EAAWpe,EAAQoe,SACnBD,EAAYne,EAAQme,UACpB8U,GAAYnrC,KAAKoL,MAA2B,eAAnBpL,KAAKoL,KAAKlL,KACnCiJ,EAAUiD,EAAOjD,QAAQF,aAG7B,OAAIjJ,MAAKkuC,uBACLluC,MAAKkuC,mBAAmBrrC,KAAK,WAAauV,EAAK+1B,OAAO/hC,EAAQ8L,MAI9DsyB,IAAUxxB,EACVA,EAAUs1B,EAAY9D,EAAQ6D,GAAa,EACpCr1B,IAAWwxB,EAClBA,EAAS6D,EAAWr1B,EAASs1B,GAAc,GAE3C9D,EAAQ6D,EACRr1B,EAASs1B,GAEThY,GAAYkU,EAAQlU,IACpBkU,EAAQlU,EACRtd,EAAUs1B,EAAY9D,EAAQ6D,GAAa,GAE3ChY,GAAard,EAASqd,IACtBrd,EAASqd,EACTmU,EAAS6D,EAAWr1B,EAASs1B,GAAc,GAG/CF,GAAQ5D,MAAOA,EAAOxxB,OAAQA,GAC9BrZ,GAAG+C,KAAKwV,EAAS,SAASq2B,EAAYC,GAClCJ,EAAIG,GAAcC,IAGN,QAAZrlC,GACC,WACG,GAAIslC,GAAeriC,EAAO4hC,GAC1B9C,GAAqB9yB,EAAKs1B,SAAUt1B,EAAKhN,KAAMgjC,EAAKjD,GAC/Cp0B,KAAK,SAAS1S,GACX+H,EAAO4hC,IAAM3pC,EACboqC,IAAiBriC,EAAO4hC,KAAO5hC,EAAOT,cAG/B,WAAZxC,GACPiiC,EAAoBprC,KAAK0tC,SAAU1tC,KAAKoL,KAAMgB,EAAQgiC,EAAKjD,QAElC,kBAAlBnrC,MAAK0uC,UACZ1uC,KAAK0uC,SAAStiC,MAItBzM,GAAG8tC,aAAeA,KCtYtB9tC,GAAGk5B,eAAiB,SAAS/yB,GACzB,YAEA,SAAS6oC,GAAMC,GACX,MAAoC,QAA7BA,EAAGzlC,QAAQF,cAGtB,QAAS4lC,GAASD,GACd,MAAoC,WAA7BA,EAAGzlC,QAAQF,cAGtB,QAAS6lC,KACL,MAAmChrC,WAA5B,GAAI8pC,QAAQmB,YAGvB,QAASC,KACL,GAAIhrC,GAASwF,SAASC,cAAc,SAEpC,OAAOzF,GAAOymC,YAAczmC,EAAOymC,WAAW,MAMlD,QAASwE,GAAwBC,GAE7B,GAAIC,GAAeD,EAAa7pC,MAAM,KAClC3D,EAAOytC,EAAaA,EAAazpC,OAAS,GAAGL,MAAM,KAAK,GACxD2pB,EAAYrvB,GAAG8R,aAAa/P,EAIhC,QAFAstB,EAAYA,GAAaA,EAAU/lB,eAG/B,IAAK,OACL,IAAK,MACD,MAAO,YACX,KAAK,MACD,MAAO,WACX,KAAK,MACD,MAAO,WACX,KAAK,MACD,MAAO,WACX,KAAK,OACL,IAAK,MACD,MAAO,cASnB,QAASmmC,GAAc3U,GACnB,GACI4U,GAAgBC,EAAgBC,EADhCC,EAAehmC,SAASC,cAAc,IAS1C,OANA+lC,GAAaC,KAAOhV,EAEpB4U,EAAiBG,EAAaE,SAC9BH,EAAaC,EAAaG,KAC1BL,EAAiBE,EAAaI,SAE1BP,EAAepmC,gBAAkBpE,OAAOgrC,SAASH,SAASzmC,gBAI1DqmC,EAAermC,gBAAkBpE,OAAOgrC,SAASD,SAAS3mC,eAK1DsmC,IAAe1qC,OAAOgrC,SAASF,OAAShwC,GAAGyN,MAOnD,QAAS0iC,GAAyB5F,EAAKz+B,GACnCy+B,EAAIv+B,OAAS,WACTu+B,EAAIv+B,OAAS,KACbu+B,EAAIr+B,QAAU,KACdJ,EAAQG,QAAQs+B,IAGpBA,EAAIr+B,QAAU,WACVq+B,EAAIv+B,OAAS,KACbu+B,EAAIr+B,QAAU,KACd/F,EAAI,6BAA8B,SAClC2F,EAAQK,QAAQo+B,EAAK,+BAI7B,QAAS6F,GAAgC/rC,EAAQyH,GAO7CzH,EAAOipC,gBAAkB,WACrBxhC,EAAQG,QAAQ5H,IAQxB,QAASgsC,GAAkCjvB,EAAatV,GACpD,GAAIwkC,GAAatB,EAAM5tB,IAAgB8tB,EAAS9tB,EAahD,OAXI4tB,GAAM5tB,GACN+uB,EAAyB/uB,EAAatV,GAEjCojC,EAAS9tB,GACdgvB,EAAgChvB,EAAatV,IAG7CA,EAAQK,QAAQiV,GAChBjb,EAAInG,GAAG8H,OAAO,iDAAkDsZ,EAAY5X,SAAU,UAGnF8mC,EAKX,QAASC,GAAKxlC,EAAY+W,EAAWvJ,GACjC,GAAIi4B,GAAc,GAAIxwC,IAAG+L,QACrB0c,EAAa,GAAIzoB,IAAGywC,SAAS1lC,EAAY5E,GACzCkb,EAAU9I,EAAQ8I,QAElBuX,EAA2B,MAAlBrgB,EAAQqgB,QAAwBrgB,EAAQqgB,OACjD8X,EAAsB,WAClB5uB,EAAU5V,QAAU,KACpB4V,EAAU9V,OAAS,KACnB7F,EAAI,mDAAoD,SACxDqqC,EAAYrkC,QAAQ2V,EAAW,gCAiDvC,OA9CA2G,GAAWkoB,gBAAgBv5B,KACvB,SAAS9S,GAGL,GAAIssC,IACIh/B,MAAO,WACH,OAAO,GAAI5R,IAAG+L,SAAUE,YAGhC4kC,EAAOjY,EAAS,GAAI54B,IAAG8wC,KAAK/lC,EAAY5E,GAAOyqC,EAC/CG,EAAQ,GAAI/wC,IAAG8tC,aAAa/iC,EAAY2lC,EAExCL,GAAkCvuB,EAAW0uB,IAC7CK,EAAKj/B,QAAQwF,KACT,SAASy5B,GACL,GAAItE,GAAcsE,GAAQA,EAAKG,WAE/BD,GAAMvC,OAAO1sB,GACT6U,SAAUtV,EACVqV,UAAWrV,EACXkrB,YAAaA,EACbjoC,KAAMA,EACN6nC,OAAQ5zB,EAAQgJ,wBAIxB,SAAS0vB,GACL9qC,EAAInG,GAAG8H,OAAO,iEAAkEmpC,IAEhFF,EAAMvC,OAAO1sB,GACT6U,SAAUtV,EACVqV,UAAWrV,EACX/c,KAAMA,EACN6nC,OAAQ5zB,EAAQgJ,0BAOpC,WACIpb,EAAI,mBACJqqC,EAAYrkC,QAAQ2V,EAAW,qBAIhC0uB,EAGX,QAASU,GAAyBpW,EAAKqW,EAAaZ,EAAMlvB,EAASE,GAC/D,GAAI6vB,GAAU,GAAInD,OACdoD,EAAgB,GAAIrxC,IAAG+L,OAE3BskC,GAAkCe,EAASC,GAEvC5B,EAAc3U,KACdsW,EAAQhC,YAAc,aAG1BgC,EAAQ/C,IAAMvT,EAEduW,EAAcj6B,KACV,WACIi5B,EAAkCc,EAAaZ,EAE/C,IAAIQ,GAAQ,GAAI/wC,IAAG8tC,aAAasD,EAChCL,GAAMvC,OAAO2C,GACTxa,SAAUtV,EACVqV,UAAWrV,EACX/c,KAAMgrC,EAAwBxU,GAC9BqR,OAAQ5qB,KAIhBgvB,EAAKpkC,SAIb,QAASmlC,GAA+BxW,EAAKyP,EAAKgG,EAAMlvB,GACpDgvB,EAAkC9F,EAAKgG,GAKvCvwC,GAAGuqC,GAAKjpC,KACJq1B,SAAUtV,EAAU,KACpBqV,UAAWrV,EAAU,OAGzBkpB,EAAI8D,IAAMvT,EAWd,QAASyW,GAAYzW,EAAKhZ,EAAWvJ,GACjC,GAAIg4B,GAAO,GAAIvwC,IAAG+L,QACd6V,EAAQrJ,EAAQqJ,MAChBP,EAAUO,EAAQrJ,EAAQ8I,QAAU,IA8BxC,OA3BIO,IAASotB,EAAMltB,GAGXutB,IAIII,EAAc3U,KAASqU,IACvBmC,EAA+BxW,EAAKhZ,EAAWyuB,EAAMlvB,GAGrD6vB,EAAyBpW,EAAKhZ,EAAWyuB,EAAMlvB,GAInDiwB,EAA+BxW,EAAKhZ,EAAWyuB,EAAMlvB,GAIpD6tB,EAASptB,GACdovB,EAAyBpW,EAAKhZ,EAAWyuB,EAAMlvB,GAG1CgvB,EAAkCvuB,EAAWyuB,KAClDzuB,EAAUusB,IAAMvT,GAGbyV,EAGXvwC,GAAG6B,OAAOxB,MAWN0hB,SAAU,SAASyvB,EAAe1vB,EAAWvJ,GACzC,MAAIvY,IAAGwH,SAASgqC,IACZrrC,EAAI,4DACGorC,EAAYC,EAAe1vB,EAAWvJ,SAG7CpS,EAAI,iDACGoqC,EAAKiB,EAAe1vB,EAAWvJ,WAMlDlY,KAAKoxC,YACLpxC,KAAKoxC,SAASzC,MAAQA,EACtB3uC,KAAKoxC,SAASvC,SAAWA,EACzB7uC,KAAKoxC,SAAShC,cAAgBA,EAC9BpvC,KAAKoxC,SAASnC,wBAA0BA,GChT5CtvC,GAAG8wC,KAAO,SAAS/lC,EAAY5E,GAC3B,YAYA,SAASurC,GAAkBC,GAIvB,IAHA,GAAIhvC,GAAS,EACTivC,EAAM,EAEHD,EAAI5rC,OAAS,GAChBpD,GAAU0/B,SAASsP,EAAIppC,UAAU,EAAG,GAAI,IAAM5G,KAAKiwC,IAAI,EAAGA,GAC1DD,EAAMA,EAAIppC,UAAU,EAAGopC,EAAI5rC,QAC3B6rC,GAAO,CAGX,OAAOjvC,GAKX,QAASkvC,GAAWC,EAAQhmC,GACxB,GAAIimC,GAAYD,EACZE,EAAalmC,CAwBjB,OAvBkB3H,UAAd4tC,IACAA,EAAY,EACZC,EAAa,GAAIhyC,IAAG+L,SAGxB/L,GAAGwL,cAAcT,EAAYgnC,EAAW,GAAG36B,KAAK,SAASu6B,GACrD,GACIM,GADAx+B,EAAQ,cAAcxP,KAAK0tC,EAG3Bl+B,GACiB,MAAbA,EAAM,IACNw+B,EAAgB5P,SAASsP,EAAIzpC,MAAM,EAAG,GAAI,IAC1C2pC,EAAWE,EAAYE,EAAgB,EAAGD,IAG1CA,EAAW/lC,QAAQ8lC,GAIvBC,EAAW7lC,QAAQ,iCAIpB6lC,EAIX,QAASE,KACL,GAAIpmC,GAAU,GAAI9L,IAAG+L,OAgBrB,OAdA/L,IAAGwL,cAAcT,EAAY,EAAG,GAAGqM,KAAK,SAASu6B,GACjB,IAAxBA,EAAIhsC,QAAQ,QACZmG,EAAQK,QAAQ,qBAGhB0lC,IAAaz6B,KAAK,SAAS06B,GACvBhmC,EAAQG,QAAQ6lC,IAEpB,SAASznC,GACLyB,EAAQK,QAAQ9B,OAKrByB,EAIX,QAASqmC,GAAeC,GACpB,GAAItmC,GAAU,GAAI9L,IAAG+L,OAMrB,OAJA/L,IAAGwL,cAAcT,EAAYqnC,EAAY,GAAI,GAAGh7B,KAAK,SAASu6B,GAC1D7lC,EAAQG,QAAgB,SAAR0lC,KAGb7lC,EAIX,QAASumC,GAAiBD,EAAWE,GACjC,GAAIxmC,GAAU,GAAI9L,IAAG+L,OAWrB,OATA/L,IAAGwL,cAAcT,EAAYqnC,EAAY,GAAI,GAAGh7B,KAAK,SAASu6B,GAC1D,MAAIW,GACOxmC,EAAQG,QAAQylC,EAAkBC,QAGzC7lC,GAAQG,QAAQo2B,SAASsP,EAAK,OAI/B7lC,EAIX,QAASymC,GAAOH,EAAWI,GACvB,GAAIV,GAASM,EAAY,GACrB/mC,EAAqB,GAAbmnC,CAEZ,OAAOxyC,IAAGwL,cAAcT,EAAY+mC,EAAQzmC,GAIhD,QAASonC,GAAcC,GAInB,IAHA,GAAIl4B,MACAs3B,EAAS,EAENA,EAAS,IAAMY,EAAO3sC,QACzByU,EAAQtX,KAAKwvC,EAAOxqC,MAAM4pC,EAAQA,EAAS,KAC3CA,GAAU,EAGd,OAAOt3B,GAIX,QAASm4B,GAAaL,EAAcE,GAChC,GAAII,GAAiB,GACjBC,EAAa7yC,GAAG6B,UAAWixC,GAC3BC,IAsBJ,OApBA/yC,IAAG+C,KAAKyvC,EAAY,SAASxvC,EAAKs2B,GAC9B,GAGI0Z,GAAWxpC,EAASypC,EAHpBC,EAAQ5Z,EAAMpxB,MAAM,EAAG,GACvBuS,EAAK63B,EAAeZ,EAAkBwB,GAAS7Q,SAAS6Q,EAAO,IAC/DC,EAAgBN,EAAWltC,QAAQ8U,EAYvC,IATI04B,GAAiB,IACjB3pC,EAAU4pC,EAAS34B,GAAI1Y,KACvBkxC,EAAeG,EAAS34B,GAAIpP,MAC5B2nC,EAAY1Z,EAAMpxB,MAAM0qC,EAAgBA,EAAiC,EAAfK,GAC1DF,EAAKvpC,GAAW8oC,EAAeZ,EAAkBsB,GAAa3Q,SAAS2Q,EAAW,IAElFH,EAAWr2B,OAAO22B,EAAe,IAGX,IAAtBN,EAAW9sC,OACX,OAAO,IAIRgtC,EApJX,GAAID,IAAW,KACXM,GACIC,KACItxC,KAAM,cACNsJ,MAAO,GAmJnBrL,IAAG6B,OAAOxB,MAONuR,MAAO,WACH,GAAI0hC,GAAS,GAAItzC,IAAG+L,QAChBwnC,EAAiB,SAASntC,GACtBD,EAAInG,GAAG8H,OAAO,kCAAmC1B,IACjDktC,EAAOnnC,QAAQ/F,GA0BvB,OAvBA8rC,KAAgB96B,KAAK,SAASo8B,GAC1BrtC,EAAInG,GAAG8H,OAAO,mDAAwE3D,SAApB4G,EAAWhJ,KAAqB,OAASgJ,EAAWhJ,OAEtHowC,EAAeqB,GAAYp8B,KAAK,SAASk7B,GAErCnsC,EAAInG,GAAG8H,OAAO,+BAAgCwqC,EAAe,SAAW,QAExED,EAAiBmB,EAAYlB,GAAcl7B,KAAK,SAASq8B,GAErDttC,EAAInG,GAAG8H,OAAO,kCAAmC2rC,IAEjDlB,EAAOiB,EAAYC,GAAer8B,KAAK,SAASs7B,GAC5C,GAAIF,GAAaC,EAAcC,GAC3BgB,EAAYf,EAAaL,EAAcE,EAE3CrsC,GAAI,sCAEJmtC,EAAOrnC,QAAQynC,IAChBH,IACJA,IACJA,IACJA,GAEID,KAKfjzC,KAAKoxC,YACLpxC,KAAKoxC,SAASC,kBAAoBA,GC7MtC1xC,GAAGywC,SAAW,SAAS1lC,EAAY5E,GAC/B,YAEA,SAASwtC,GAAeC,EAAYC,GAChC,GAAIC,IAAe,EACfC,KAAuB3jC,OAAOwjC,EASlC,OAPA5zC,IAAG+C,KAAKgxC,EAAmB,SAAS/wC,EAAKgxC,GACrC,GAAwD,IAApDH,EAAkBluC,QAAQquC,GAE1B,MADAF,IAAe,GACR,IAIRA,EAGX9zC,GAAG6B,OAAOxB,MASNswC,cAAe,WACX,GAAIl4B,GAAOpY,KACPooB,EAAa,GAAIzoB,IAAG+L,QACpBkoC,GAAc,EACdlyC,EAA2BoC,SAApB4G,EAAWhJ,KAAqB,OAASgJ,EAAWhJ,IAsC/D,OApCAoE,GAAInG,GAAG8H,OAAO,gEAAiE/F,IAE/EoE,EAAI,oDAEA9F,KAAK6zC,qBACL/tC,EAAI,sDAEJnG,GAAGwL,cAAcT,EAAY,EAAG,GAAGqM,KAAK,SAASu6B,GAC7C3xC,GAAG+C,KAAK0V,EAAK07B,uBAAwB,SAAS7vC,EAAM+G,GAChD,GAAIsoC,EAAetoC,EAAOsmC,GAQtB,OALa,eAATrtC,GAAyBtE,GAAGkT,kBAAkByD,gBAC9Cs9B,GAAc,EACdxrB,EAAWxc,QAAQ3H,KAGhB,IAIf6B,EAAInG,GAAG8H,OAAO,iDAAkD/F,EAAMkyC,EAAc,GAAK,QAEpFA,GACDxrB,EAAWtc,WAGnB,WACIhG,EAAI,+BAAiCpE,EAAO,gDAC5C0mB,EAAWtc,aAIfsc,EAAWtc,UAGRsc,GAWXyrB,kBAAmB,WACf,GAAIE,GAAWrpC,EAAWxK,KAEtB8zC,EAAoBr0C,GAAG2F,QAAQc,OAAOy5B,KAAK7/B,KAAK8zC,wBAAyBC,IAAa,EACtFH,GAAc,EACdlyC,EAA2BoC,SAApB4G,EAAWhJ,KAAqB,OAASgJ,EAAWhJ,IAa/D,OAXIsyC,KAEIJ,EADa,eAAbG,GACcp0C,GAAGkT,kBAAkByD,eAO1Cs9B,GAAe9tC,EAAIpE,EAAO,gEAEpBkyC,MAKnBj0C,GAAGywC,SAAS/pC,UAAUytC,wBAClBG,aAAc,SACdC,YAAa,SACbC,YAAa,SACbC,YAAa,OACbC,cAAe,WAAY,aCpG/B10C,GAAG01B,gBAAkB,SAASjqB,EAAMtF,GAChC,YAMA,SAASwuC,GAAiBC,GACtB,GAAIC,IAAa,CASjB,OAPA70C,IAAG+C,KAAK6xC,EAAQ,SAASE,EAAO/tC,GAC5B,GAAIA,EAAQ,EAER,MADA8tC,IAAa,GACN,IAIRA,EAQX,QAASE,KACL,GAAIC,GAAoB,GAAIh1C,IAAG+L,OA6B/B,OA3BA,IAAI/L,IAAGywC,SAAShlC,EAAMtF,GAAKwqC,gBAAgBv5B,KAAK,WAC5C,GAAIwe,GAAQ,GAAIqY,OACZnT,EAAM51B,OAAOgpC,KAAOhpC,OAAOgpC,IAAIC,gBAAkBjpC,OAAOgpC,IAClDhpC,OAAOkpC,WAAalpC,OAAOkpC,UAAUD,gBAAkBjpC,OAAOkpC,UAC9D,IAENtT,IACAlF,EAAM1pB,QAAU,WACZ/F,EAAI,4DAA6D,SACjE6uC,EAAkB7oC,WAGtBypB,EAAM5pB,OAAS,WACXgpC,EAAkB/oC,SACd4+B,MAAOxqC,KAAKwqC,MACZxxB,OAAQhZ,KAAKgZ,UAIrBuc,EAAMyY,IAAMvT,EAAIqT,gBAAgB1iC,KAGhCtF,EAAI,+DAAgE,SACpE6uC,EAAkB7oC,YAEvB6oC,EAAkB7oC,SAEd6oC,EASX,QAASC,GAAgBL,EAAQM,GAC7B,GAAIC,EA0BJ,OAxBAn1C,IAAG+C,KAAK6xC,EAAQ,SAASQ,EAAWC,GAChC,GAAIA,EAAa,EAAG,CAChB,GAAIC,GAAe,0BAA0BrxC,KAAKmxC,GAC9CG,EAAoBD,EAAa,GAAGvlC,OAAO,GAAGzG,cAAgBgsC,EAAa,GAAGptC,MAAM,GACpFstC,EAAcN,EAAWK,EAG7B,QAAQD,EAAa,IACjB,IAAK,MACD,GAAIE,EAAcH,EAEd,MADAF,GAAeC,GACR,CAEX,MACJ,KAAK,MACD,GAAII,EAAcH,EAEd,MADAF,GAAeC,GACR,MAOpBD,EAWX90C,KAAKs1B,SAAW,SAASif,GACrB,GAAIa,GAAmB,GAAIz1C,IAAG+L,OAoB9B,OAlBA5F,GAAI,iCAEAwuC,EAAiBC,GACjBG,IAAiB39B,KAAK,SAAS89B,GAC3B,GAAIC,GAAeF,EAAgBL,EAAQM,EAEvCC,GACAM,EAAiBtpC,QAAQgpC,GAGzBM,EAAiBxpC,WAEtBwpC,EAAiBxpC,SAGpBwpC,EAAiBxpC,UAGdwpC,IC7Hfz1C,GAAG20B,QAAU,SAASjZ,GAClB,YAaA,SAASg6B,GAAoB/jB,GACzB,QAAI3xB,GAAG8G,QAAQ6qB,QAIfpZ,GAAQpS,IAAI,oCAAqC,SAGrD,QAASwvC,GAAgBC,EAAW3pC,EAAS8b,EAAUjc,GACnD,GAAI+pC,IAAmB,CAEvB5pC,GAAUA,GAAWypC,EAAoBE,GAErC3pC,GACAjM,GAAG+C,KAAK6yC,EAAW,SAAS5yC,EAAKm7B,GAE7B,GAAqB,MAAjBA,EAASvjB,KACTi7B,GAAmB,EACnBt9B,EAAQpS,IAAInG,GAAG8H,OAAO,oEAAqE9E,GAAM,aAEhG,IAAqB,MAAjBm7B,EAASp8B,KACd8zC,GAAmB,EACnBt9B,EAAQpS,IAAInG,GAAG8H,OAAO,oEAAqE9E,GAAM,aAGjG,KAEI,MADAuV,GAAQsc,cAAcsJ,IACf,EAEX,MAAO2X,GACHD,GAAmB,EACnBt9B,EAAQpS,IAAI2vC,EAAI1vC,QAAS,SAIjC,OAAO,IAIf0F,EAAQG,IAAY4pC,EAAmB,UAAY,WAAWD,EAAW7tB,GAlD7E,GAAIxP,IACA8F,SAAU,KACVD,UACAoJ,iBACAG,QACAkN,cAAe,SAASxO,KACxBlgB,IAAK,SAASC,EAASC,KAG3BrG,IAAG6B,OAAO0W,EAASmD,GAAM,GA8CzBrb,KAAKy0B,QAAU,WAEX,GAAIihB,GAAgB,GAAI/1C,IAAG+L,QACvBiqC,EAA0B,SAASrkB,EAAU1lB,EAAS8b,GAClD4tB,EAAgBhkB,EAAU1lB,EAAS8b,EAAUguB,IAEjDE,EAAmBj2C,GAAG6B,UAAW0W,GACjC8xB,EAAY,GAAIrqC,IAAGk2C,qBACfl2C,GAAG6B,OAAOo0C,GAAmB3qB,WAAY0qB,IAKjD,OAFA3L,GAAU8L,cAEHJ,ICrEf/1C,GAAGk2C,qBAAuB,SAASx6B,GAC/B,YAiBA,SAAS4P,GAAW7Q,EAAIsN,EAAUC,GAC9B,GAAI2J,GAAW,IAGf,IAA6B,MAAzB5J,EAASquB,aACT,IACIzkB,EAAW3xB,GAAGyR,UAAUsW,EAASquB,cAErC,MAAON,GACHv9B,EAAQpS,IAAI,qCAAuC2vC,EAAI1vC,QAAS,SAChE4hB,GAAU,EAIlBzP,EAAQ+S,WAAWqG,GAAW3J,EAASD,GA7B3C,GAAIsiB,GACA9xB,GACI8F,SAAU,KACVmJ,iBACApJ,UACAuJ,MACIsI,UAAU,EACVuI,iBAAiB,GAErBlN,WAAY,SAASqG,EAAU1lB,EAAS8b,KACxC5hB,IAAK,SAAS4B,EAAK1B,KAG3BrG,IAAG6B,OAAO0W,EAASmD,GAmBnB2uB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/B6C,aAAc,mBACdM,cAAe,OACfxV,OAAQ,MACRQ,eACInF,IAAK,WACD,MAAOhK,GAAQ8F,WAGvBmJ,cAAejP,EAAQiP,cACvBrhB,IAAKoS,EAAQpS,IACbmlB,WAAYA,EACZ3D,KAAMpP,EAAQoP,QAGlB3nB,GAAG6B,OAAOxB,MACN81C,YAAa,WACT,GAAI/3B,GAASpe,GAAG6B,UAAW0W,EAAQ6F,OAEnC7F,GAAQpS,IAAI,0BAEZkkC,EAAUrN,cAAc,kBACnBK,WAAWjf,GACXuf,kBACAjC,WCzDjB17B,GAAG0kB,OAAS,SAAShJ,EAAMvV,GACvB,YAEA,IACIob,GAAuB7F,EAAKgd,cAC5B2d,EAAkB36B,EAAKid,aACvBC,EAASld,EAAKkd,OACdC,EAAcnd,EAAKmd,YACnBC,EAAiBpd,EAAKod,eAAiB,IACvCwd,EAAoB56B,EAAKqd,YACzBC,EAActd,EAAKsd,YACnBC,EAAQ54B,KAAKk2C,gBAAgB76B,EAAKud,MAGtCj5B,IAAG6B,OAAOxB,MAGNqgB,QAAS1gB,GAAGkT,kBAAkBwD,SAAWuiB,EAAMlzB,OAAS,EAExDywC,eAAgB,SAASC,EAAkBC,EAAkBC,GACzD,GAAIl+B,GAAOpY,KACPu2C,KACAC,EAAeF,EAAuBlrC,KAAOkrC,EAAuBlrC,KAAOkrC,EAC3EluB,EAAa,GAAIzoB,IAAGywC,SAASoG,EAAc1wC,EAiD/C,OA9CIsiB,GAAWyrB,qBAEXl0C,GAAG+C,KAAKk2B,EAAO,SAASj2B,EAAK8zC,GACzB,GAAIC,GAAat+B,EAAKu+B,sBAClBne,YAAaA,EACboe,cAAeH,EAAWv2C,KAC1B22C,QAASL,EAAat2C,MAG1Bq2C,GAAQ1zC,MACJ0X,KAAM5a,GAAGoN,cACTrL,KAAM0W,EAAK0+B,SAAST,GAChB30C,KAAM+0C,EAAW/0C,KACjBxB,KAAMw2C,EACNG,QAASL,EAAat2C,OAE1BkL,KAAM,GAAIzL,IAAG8X,UAAU++B,EACvB72C,GAAGgQ,KAAKyI,EAAK2+B,qBAAsB3+B,GAC/B8I,qBAAsBA,EACtBF,QAASy1B,EAAWz1B,QACpBuX,OAAQA,EACRr4B,KAAMw2C,EACNxyC,QAASu0B,EACTue,WAAYf,EACZtd,YAAaA,EACb7yB,IAAKA,SAKjBywC,EAAQ1zC,MACJ0X,KAAM67B,EACN10C,KAAM20C,EACN76B,KAAMg7B,EAAah7B,KACnBpQ,KAAM4qC,EAAkBQ,EAAe,QAI3CD,EAAQ1zC,MACJ0X,KAAM67B,EACN10C,KAAM20C,EACN76B,KAAMg7B,EAAah7B,KACnBpQ,KAAMorC,IAIPD,GAGXxd,cAAe,SAASvZ,EAAM9d,EAAM6Y,EAAMiB,EAAMsT,EAAUrT,EAASuL,EAAeiwB,GAC9E,GAAI7+B,GAAOpY,KAEPk3C,GADW13B,EAAK8G,YAAe9G,EAAKpU,MAAQoU,EAAKpU,KAAKkb,eAEtD6wB,EAAa,KACbvoB,EAAmBqoB,EAAIroB,iBACvBzO,EAAa82B,EAAI92B,WACjBiH,EAAc6vB,EAAI7vB,YAClB1L,EAAe/b,GAAGoN,aAEtBpN,IAAG+C,KAAK0V,EAAK+9B,eAAe57B,EAAM7Y,EAAM8d,GAAO,SAAS7c,EAAKy0C,GACzD,GACIh9B,GADAi9B,EAAWD,EAAO57B,IAGlB47B,GAAOhsC,eAAgBzL,IAAG8X,YAC1B4/B,GAAW,GAGfj9B,EAAK+F,EAAW/E,SACZb,KAAM68B,EAAO78B,KACb7Y,KAAM01C,EAAO11C,KACb8Z,KAAM67B,EACN57B,QAASA,EACTC,aAAcA,IAGd07B,EAAOhsC,eAAgBzL,IAAG8X,UAC1By/B,EAAUr0C,KAAKuX,GAGf+8B,EAAa/8B,EAGbg9B,EAAOhsC,MACPwjB,EAAiBxU,EAAIg9B,EAAOhsC,MAC5B0jB,EAASjsB,MAAMuX,GAAIA,EAAIoF,KAAM43B,EAAOhsC,QAGpC+U,EAAWpE,UAAU3B,EAAIza,GAAG+a,OAAOuC,YAOxB,OAAfk6B,IACAx3C,GAAG+C,KAAKw0C,EAAW,SAASv0C,EAAK20C,GAC7B,GAAIv5B,IACAw5B,aAAcp3B,EAAWtE,UAAUzB,GAAI+8B,IAAa58B,KACpDi9B,aAAcr3B,EAAWtE,UAAUzB,GAAI+8B,IAAa37B,KAKxDuC,GAAOiJ,GAAiB7G,EAAWtE,UAAUzB,GAAIk9B,IAAW/8B,KAE5D4F,EAAWxD,YAAY26B,EAAUH,GACjC/vB,EAAY8B,YAAYouB,EAAUv5B,KAKlCm5B,EAAUxxC,SACT,WACG,GAAI+xC,KACJA,GAAMzwB,GAAiB7G,EAAWtE,UAAUzB,GAAI+8B,IAAa58B,KAC7D6M,EAAY8B,YAAYiuB,EAAYM,WAQ5D93C,GAAG6B,OAAO7B,GAAG0kB,OAAOhe,WAChB8d,WAAY,SAAS/J,EAAIgK,EAAO6yB,GAC5B,YAEA,KAAKt3C,GAAGkT,kBAAkBwD,QACtB,KAAM,IAAI1W,IAAGwB,MAAM,4CAGvB,IAAIu2C,GAAgB,GAAI/3C,IAAG+L,QACvB5F,EAAMmxC,EAAInxC,IACV0Z,EAAOy3B,EAAIz1B,QAAQpH,GACnB+F,EAAa82B,EAAI92B,WAAWtE,UAAUzB,GAAIA,IAC1C1Y,EAAOye,GAAcA,EAAWze,KAChC6Y,EAAO4F,GAAcA,EAAW5F,KAChCo9B,GACItf,cAAejU,EAAMiU,cACrBC,cAAc,EACdC,OAAQnU,EAAMmU,OACdC,YAAapU,EAAMlkB,MAAQ,KAC3Bu4B,eAAgBrU,EAAMlgB,QACtB+xC,kBAAmB,kBACnBrd,QAASl3B,KAAM,GAAIsf,QAASoD,EAAMpD,WAEtC42B,EAAS,GAAIj4C,IAAG0kB,OAAOszB,EAAgB7xC,EAuB3C,OArBKnG,IAAG0kB,QAAW1kB,GAAGkT,kBAAkBkD,eAAkByJ,EAOrD7f,GAAGgQ,KAAK,WAEL,GAAIynC,GAASQ,EAAOzB,eAAe57B,EAAM7Y,EAAM8d,GAAM,EAEjD43B,IAAUA,EAAOhsC,eAAgBzL,IAAG8X,UACpC2/B,EAAOhsC,KAAKwM,SAASb,KAAK2gC,EAAc9rC,QAAS8rC,EAAc5rC,UAG/DhG,EAAIsU,EAAK,4BAA6B,SACtCs9B,EAAc5rC,YAEnB9L,SAjBH03C,EAAc5rC,UAEdhG,EAAI,iDAAmDsU,EAAK,uFAC6B,UAiBtFs9B,GAKXf,qBAAsB,SAASt7B,GAC3B,YAEA,IAAIu7B,GAAgBv7B,EAAKu7B,cACrBpe,EAAcnd,EAAKmd,YACnBqf,EAAgBx8B,EAAKw7B,OAIzB,OAAKre,IAAgBoe,EAQhBA,GAKDj3C,GAAG2F,QAAQc,OAAOy5B,KAAKlgC,GAAGywC,SAAS/pC,UAAUytC,wBAAyB8C,IAAkB,EAClE,eAAlBA,EACOj3C,GAAGkT,kBAAkByD,aAAesgC,EAAgBpe,EAGxDoe,EATApe,EARe,eAAlBqf,EACO,YAEJA,GAqBff,SAAU,SAASv7B,EAAcu8B,GAC7B,YAEA,IAAIC,GAAax8B,EAAa3J,YAAY,KACtComC,EAAcF,EAAwB53C,MAAQ,YAC9C23C,EAAgBC,EAAwBjB,QACxCoB,EAAa,GACbC,EAAYv4C,GAAG8R,aAAa8J,GAC5B48B,EAAgB,EAmBpB,OAjBIL,GAAwBp2C,MAAQo2C,EAAwBp2C,KAAK8F,OAAO9B,SACpEyyC,EAAgB,KAAOL,EAAwBp2C,KAAO,KAGtDq2C,GAAc,GACdE,EAAa18B,EAAa1J,OAAO,EAAGkmC,GAEhCF,IAAkBG,IAClBE,EAAYF,EAAY3yC,MAAM,KAAK,IAGvC4yC,GAAcE,EAAgB,IAAMD,GAGpCD,EAAa18B,EAAe48B,EAGzBF,GAIX/B,gBAAiB,SAAStd,GACtB,YAIA,OAFAA,GAAQj5B,GAAG6B,UAAWo3B,GAEfA,EAAMwf,KAAK,SAASC,EAAGC,GAC1B,MAAID,GAAEr3B,QAAUs3B,EAAEt3B,QACP,EAEPq3B,EAAEr3B,QAAUs3B,EAAEt3B,SACP,EAEJ,KAIf+1B,qBAAsB,SAAS17B,EAAMk9B,GACjC,YAEA,IAAIngC,GAAOpY,KACPkhB,EAAuB7F,EAAK6F,qBAC5Bpb,EAAMuV,EAAKvV,IACXkb,EAAU3F,EAAK2F,QACfuX,EAASld,EAAKkd,OACdr4B,EAAOmb,EAAKnb,KACZgE,EAAUmX,EAAKnX,QACf8yC,EAAa37B,EAAK27B,WAClBre,EAActd,EAAKsd,aAAmC,eAApB4f,EAAWr4C,MAAkC,eAATA,EACtEw3C,EAAgB,GAAI/3C,IAAG+L,QACvB8sC,EAAiB,GAAI74C,IAAGk5B,eAAe/yB,GACvC9B,EAASwF,SAASC,cAAc,SA8BpC,OA5BA3D,GAAI,6CAA+CyyC,EAAW72C,MAE9D82C,EAAe92B,SAAS62B,EAAYv0C,GAASgd,QAASA,EAASuX,OAAQA,EAAQrX,qBAAsBA,IAAuBnK,KAAK,WAC7H,GAAI0hC,GAAqBz0C,EAAOI,UAAUlE,EAAMgE,GAC5Cw0C,EAAgB,WACZ5yC,EAAI,yCAA2CyyC,EAAW72C,KAC1D,IAAI0J,GAAOzL,GAAGwE,cAAcs0C,EAC5Bf,GAAc9rC,QAAQR,GAG1ButB,GACAvgB,EAAKugC,kBAAkBJ,EAAYE,EAAoB3yC,GAAKiR,KAAK,SAAS6hC,GACtEH,EAAqBG,EACrBF,KAEJ,WACI5yC,EAAI,wFAAyF,SAC7F4yC,MAIJA,KAEL,WACC5yC,EAAI,iDAAmDyyC,EAAW72C,KAAM,SACxEg2C,EAAc5rC,QAAQkrC,KAGnBU,GAIXiB,kBAAmB,SAASE,EAAeJ,EAAoB3yC,GAC3D,YAEA,IAAIgzC,GAAS,GAAIttC,YACbutC,EAAkB,GAAIp5C,IAAG+L,QACzBstC,EAAuB,EAc3B,OAZAF,GAAOntC,OAAS,WACZqtC,EAAuBF,EAAOx2C,OAC9By2C,EAAgBntC,QAAQjM,GAAGs5C,aAAajM,QAAQgM,EAAsBP,KAG1EK,EAAOjtC,QAAU,WACb/F,EAAI,mBAAqB+yC,EAAcn3C,KAAO,2DAA4D,SAC1Gq3C,EAAgBjtC,WAGpBgtC,EAAOI,cAAcL,GAEdE,GAGXI,eAAgB,SAAS90C,GACrB,YAEA,IAAIE,GAAYE,EAAYH,EAAaE,CAsBzC,OAlBID,GADAF,EAAQgB,MAAM,KAAK,GAAGC,QAAQ,WAAa,EAC9BC,KAAKlB,EAAQgB,MAAM,KAAK,IAGxBG,UAAUnB,EAAQgB,MAAM,KAAK,IAI9CZ,EAAaJ,EAAQgB,MAAM,KAAK,GAC3BA,MAAM,KAAK,GACXA,MAAM,KAAK,GAGhBf,EAAc,GAAImB,aAAYlB,EAAWmB,QACzClB,EAAW,GAAImB,YAAWrB,GAC1B3E,GAAG+C,KAAK6B,EAAY,SAAS5B,EAAKiD,GAC9BpB,EAAS7B,GAAOiD,EAAUC,WAAW,KAGlC7F,KAAKo5C,YAAY90C,EAAaG,IAGzC20C,YAAa,SAASz0C,EAAMV,GACxB,YAEA,IAAIW,GAAcC,OAAOD,aACjBC,OAAOC,mBACPD,OAAOE,gBACPF,OAAOG,cACXC,EAAcL,GAAe,GAAIA,EAErC,OAAIK,IACAA,EAAYC,OAAOP,GACZM,EAAYE,QAAQlB,IAGpB,GAAImB,OAAMT,IAAQzE,KAAM+D,OChZ3CtE,GAAGs5C,aAAe,WAGjB,GAAIA,KA+KD,OA7KAA,GAAaI,QAAU,oEAMvBJ,EAAaK,SAAW,SAAS/vC,GAE7B,GACIgwC,GAAMC,EACNC,EAAMC,EAAMC,EAFZC,EAAS,GACGC,EAAO,GACDC,EAAO,GACzBrpC,EAAI,CAER,GACI8oC,GAAOhwC,EAAMkH,KACb+oC,EAAOjwC,EAAMkH,KACbopC,EAAOtwC,EAAMkH,KAEbgpC,EAAOF,GAAQ,EACfG,GAAgB,EAAPH,IAAa,EAAMC,GAAQ,EACpCG,GAAgB,GAAPH,IAAc,EAAMK,GAAQ,EACrCC,EAAc,GAAPD,EAEHE,MAAMP,GACPG,EAAOG,EAAO,GACNC,MAAMF,KACdC,EAAO,IAGVF,EAASA,EACN55C,KAAKq5C,QAAQ3pC,OAAO+pC,GACpBz5C,KAAKq5C,QAAQ3pC,OAAOgqC,GACpB15C,KAAKq5C,QAAQ3pC,OAAOiqC,GACpB35C,KAAKq5C,QAAQ3pC,OAAOoqC,GACvBP,EAAOC,EAAOK,EAAO,GACrBJ,EAAOC,EAAOC,EAAOG,EAAO,SACvBrpC,EAAIlH,EAAM7D,OAEnB,OAAOk0C,IAGXX,EAAajM,QAAU,SAASgN,EAAgBC,GAE5C,GAAIC,GAAuB,yBAE3B,KAAKF,EAAe5mC,MAAM8mC,GAEzB,MAAOD,EAGR,IAAIE,GAAWn6C,KAAKo6C,SAASJ,EAAe93C,QAAQg4C,EAAsB,KACtEG,EAAWr6C,KAAKs6C,eAAeH,GAE/B5kB,EAAQv1B,KAAKu6C,iBAAiBN,EAAmBI,EAErD,OAAOH,GAAuBl6C,KAAKs5C,SAAS/jB,IAKhD0jB,EAAasB,iBAAmB,SAASN,EAAmBI,GAEpD,GAAIG,GAAYx6C,KAAKy6C,aAAaJ,GAC9BK,EAAgB16C,KAAK26C,WAAWV,EAAmBO,GACnDI,EAAU,GAAIj1C,YAAW+0C,EAE7B,OAAOE,IAIf3B,EAAawB,aAAe,SAASJ,GAG7B,IAAK,GADDQ,GACKC,EAAI,EAAGA,EAAIT,EAAS30C,OAAQo1C,IAGjC,GADAD,EAAMR,EAASS,GACD,KAAVD,EAAI,GAAsB,KAAVA,EAAI,GAEpB,MAAOA,EAGf,WAIR5B,EAAa0B,WAAa,SAASV,EAAmBO,GAE9C,GAAIO,GAAYd,EAAkB/3C,QAAQ,0BAA2B,IACjE84C,EAAMh7C,KAAKo6C,SAASW,GACpBE,EAAgBD,EAAI11C,QAAQ,IAAI,GAChC41C,EAAMF,EAAInzC,MAAM,EAAGozC,GACnBE,EAAMH,EAAInzC,MAAMozC,GAChBG,EAAQF,CAIb,OAFCE,GAAQA,EAAMrrC,OAAOyqC,GACrBY,EAAQA,EAAMrrC,OAAOorC,IAM7BlC,EAAaqB,eAAiB,SAASe,GAKnC,IAHA,GAAIC,GAAO,EACPjB,OAGJ,CACI,GAA2B,KAAvBgB,EAAcC,GAA0C,KAA3BD,EAAcC,EAAO,GAAW,KACjE,IAA2B,KAAvBD,EAAcC,GAA0C,KAA3BD,EAAcC,EAAO,GAElDA,GAAQ,MAGZ,CACI,GAAI51C,GAAmC,IAA1B21C,EAAcC,EAAO,GAAWD,EAAcC,EAAO,GAC9DC,EAAWD,EAAO51C,EAAS,EAC3Bm1C,EAAMQ,EAAcxzC,MAAMyzC,EAAMC,EACpClB,GAASx3C,KAAKg4C,GACdS,EAAOC,EAEX,GAAID,EAAOD,EAAc31C,OAAQ,MAGrC,MAAO20C,IAKXpB,EAAamB,SAAW,SAAS7wC,GAE7B,GACIgwC,GAAMC,EACNC,EAAMC,EAAMC,EADAE,EAAO,GACDC,EAAO,GACzBrpC,EAAI,EACJuqC,KAGAQ,EAAa,qBACjB,IAAIA,EAAW53C,KAAK2F,GAChB,KAAM,IAAIpI,OAAM,uHAGpBoI,GAAQA,EAAMrH,QAAQ,sBAAuB,GAE7C,GACIu3C,GAAOz5C,KAAKq5C,QAAQ/zC,QAAQiE,EAAMmG,OAAOe,MACzCipC,EAAO15C,KAAKq5C,QAAQ/zC,QAAQiE,EAAMmG,OAAOe,MACzCkpC,EAAO35C,KAAKq5C,QAAQ/zC,QAAQiE,EAAMmG,OAAOe,MACzCqpC,EAAO95C,KAAKq5C,QAAQ/zC,QAAQiE,EAAMmG,OAAOe,MAEzC8oC,EAAQE,GAAQ,EAAMC,GAAQ,EAC9BF,GAAgB,GAAPE,IAAc,EAAMC,GAAQ,EACrCE,GAAgB,EAAPF,IAAa,EAAKG,EAE3BkB,EAAIn4C,KAAK02C,GAEG,IAARI,GACDqB,EAAIn4C,KAAK22C,GAEA,IAARM,GACDkB,EAAIn4C,KAAKg3C,GAGZN,EAAOC,EAAOK,EAAO,GACrBJ,EAAOC,EAAOC,EAAOG,EAAO,SAEvBrpC,EAAIlH,EAAM7D,OAEnB,OAAOs1C,IAIJ/B,KC7KXt5C,GAAGq5B,cAAgB,SAAS5pB,EAAUoT,GAClC,YAEA,IAAIi5B,MACAC,EAAc,EACdC,EAAY,EAEZC,GAAiB,EACjBC,GAAgB,EAChBC,EAAgB,SAAShxB,EAAQC,GACzBD,IAAW8wB,GAAkB7wB,IAAU8wB,GACvCzsC,EAAS0b,EAAQC,GAGrB6wB,EAAiB9wB,EACjB+wB,EAAgB9wB,GAQpBgxB,EAAmB,SAAS9pB,EAAQ+pB,GAChC,GAAIC,IAAO,CASX,OAPAt8C,IAAG+C,KAAKuvB,EAAQ,SAAStvB,EAAKu5C,GAC1B,GAAIv8C,GAAG2F,QAAQ02C,EAAWE,IAAa,EAEnC,MADAD,IAAO,GACA,IAIRA,GAGX9wB,EAAW,SAAS/Q,GAChB+hC,EAAoB/hC,GAAI,GAAI,SACrBqhC,GAAgBrhC,IAG3B8X,EAAgB,SAASF,EAAYC,EAAQ+pB,IACnB,IAAlB/pB,EAAOvsB,QAAgBq2C,EAAiB9pB,EAAQ+pB,MAChDF,EAAcH,EAAWA,GACzB37C,KAAK8Z,UAIbsiC,EAAQ,SAAShiC,GACb,GAAIoB,GAAOgH,EAAQpI,EAGfoB,GAAO,IACP2gC,EAAoB/hC,EAAI,EAAGoB,GAC3BigC,EAAgBrhC,IAAO0Q,OAAQ,EAAGC,MAAOvP,KAYjD2gC,EAAsB,SAAS/hC,EAAIiiC,EAAWC,GAC1C,GAAIC,GAAYd,EAAgBrhC,GAAMqhC,EAAgBrhC,GAAI0Q,OAAS,EAC/D0xB,EAAWf,EAAgBrhC,GAAMqhC,EAAgBrhC,GAAI2Q,MAAQ,CAE7DsxB,MAAc,GAAMC,KAAa,GACjCZ,GAAea,EACfZ,GAAaa,IAGTH,IACAX,GAAeW,EAAYE,GAE3BD,IACAX,GAAaW,EAAWE,IAIhCV,EAAcJ,EAAaC,GAGnCh8C,IAAG6B,OAAOxB,MAENkyB,cAAeA,EAGftW,eAAgB,SAASxB,EAAI6B,EAAWD,GAChCA,IAAcrc,GAAG+a,OAAOyC,UAAYnB,IAAcrc,GAAG+a,OAAOuC,SAC5DkO,EAAS/Q,GAEJ4B,IAAcrc,GAAG+a,OAAOY,YAC7B8gC,EAAMhiC,IAKdwY,qBAAsB,SAASxY,EAAI0Q,EAAQC,GACvCoxB,EAAoB/hC,EAAI0Q,EAAQC,GAChC0wB,EAAgBrhC,IAAO0Q,OAAQA,EAAQC,MAAOA,IAIlD6J,UAAW,SAASxa,GAChBgiC,EAAMhiC,IAGVN,MAAO,WACH2hC,KACAC,EAAc,EACdC,EAAY,MCzHxBh8C,GAAGkoB,aAAe,SAAS/P;AACvB,YAYA,SAAS2kC,GAAQx1C,GACb,MAAOA,GAAK/G,MACwB,IAAhC+G,EAAK/G,KAAKoF,QAAQ,UAG1B,QAASo3C,KACLC,EAAqBh9C,GAAGuY,EAAQ4P,eAAe7nB,OAAO,QAAS,SAASm0B,GACpE,GAAIwoB,GAAgBxoB,EAAMwoB,aAEtBA,IACAj9C,GAAG+C,KAAKk6C,EAAczyC,MAAO,SAASxH,EAAKsE,GACvC,GAAIw1C,EAAQx1C,GAAO,CACf,GAAImE,GAAOnE,EAAK41C,WAChB3kC,GAAQuO,UAAUuB,cAAc5c,QAOpD,QAAS0xC,KACDH,GACAA,IAhCR,GAAIzkC,GAASykC,CAEbzkC,IACI4P,cAAe,KACfrB,WACI3gB,IAAK,SAASC,EAASC,KACvBgiB,cAAe,SAAS5c,OA8BhCzL,GAAG6B,OAAO0W,EAASJ,GACnB4kC,IAEA/8C,GAAG6B,OAAOxB,MACN8Z,MAAO,WACHgjC,QCpCZn9C,GAAG0vB,YAAc,SAASnX,EAAS6kC,EAAaj3C,GAC5C,YAgCA,SAASk3C,GAAqBC,GACtBA,EAAOp5C,aAAa,YACpBuU,EAAKsX,YAAcutB,EAAOp5C,aAAa,WAM/C,QAASq5C,GAAaD,EAAQE,GAC1B,QAAIF,EAAOG,gBAAkBH,EAAOG,mBAChCt3C,EAAI,yDAA0D,aAC9Dq3C,MAQR,QAASE,GAAoBJ,GACzB,GAAIE,GAAeF,EAAOK,MAG1B39C,IAAGs9C,GAAQh9C,OAAO,SAAU,SAASm0B,GACjCA,EAAQA,GAASvvB,OAAOuvB,MAEpBA,EAAMxlB,eACNwlB,EAAMxlB,iBAGNwlB,EAAMtlB,aAAc,EAGxBouC,EAAaD,EAAQE,IAAiBJ,MAK1CE,EAAOK,OAAS,WACZJ,EAAaD,EAAQE,IAAiBJ,KAM9C,QAASQ,GAAgBN,GAarB,MAZIA,KACIt9C,GAAGwH,SAAS81C,KACZA,EAASzzC,SAASq7B,eAAeoY,IAGjCA,IACAn3C,EAAI,8BACJk3C,EAAqBC,GACrB7kB,GAAmBilB,EAAoBJ,KAIxCA,EAzFX,GAAI7kC,GAAQpY,KACRo4B,EAAkBlgB,EAAQkgB,gBAC1B6kB,EAAS/kC,EAAQtY,QACjB4vB,EAAatX,EAAQsX,UAGzB7vB,IAAG6B,OAAOxB,MAIN0vB,YAAa,KAIbD,cAAeD,EAGfF,gBAAgB,EAGhBC,sBAAuB,WAEnB,MAAc,OAAV0tB,EACO,KAGJ7kC,EAAKolC,UAAUP,MAkE9BA,EAASM,EAAgBN,GACzBj9C,KAAKsvB,iBAAmB2tB,GAG5Bt9C,GAAG6B,OAAO7B,GAAG0vB,YAAYhpB,WAGrBm3C,UAAW,SAASvsC,GAChB,YACA,IAAIf,MACAutC,EAAoB,SAASv9C,GACzB,GAAIw9C,IACA,SACA,QACA,QACA,SAGJ,OAAO/9C,IAAG2F,QAAQo4C,EAAiBx9C,EAAK+I,eAAiB,GAE7D00C,EAAkB,SAASz9C,GACvB,MAAOP,IAAG2F,SAAS,WAAY,SAAUpF,EAAK+I,gBAAkB,GAEpE20C,EAAc,SAAShP,GACnB,SAAI+O,EAAgB/O,EAAG1uC,OAAU0uC,EAAGiP,UAI7BjP,EAAG37B,UAAsC,WAA1B27B,EAAG1uC,KAAK+I,eAElC60C,EAAc,SAASC,GACnB,GAAIr3C,GAAQ,IASZ,OAPA/G,IAAG+C,KAAK/C,GAAGo+C,GAAQh7C,WAAY,SAASJ,EAAKK,GACzC,GAAoC,WAAhCA,EAAMmG,QAAQF,eAA8BjG,EAAMg7C,SAElD,MADAt3C,GAAQ1D,EAAM0D,OACP,IAIRA,EAmBf,OAhBA/G,IAAG+C,KAAKuO,EAAKgtC,SAAU,SAASt7C,EAAKisC,GACjC,IAAKjvC,GAAGiJ,QAAQgmC,GAAI,IAAsC,aAA7BA,EAAGzlC,QAAQF,gBACpCw0C,EAAkB7O,EAAG1uC,OACpB09C,EAAYhP,IAIZ,GAAiC,WAA7BA,EAAGzlC,QAAQF,gBAA+B20C,EAAYhP,GAAK,CAChE,GAAIloC,GAAQo3C,EAAYlP,EAEV,QAAVloC,IACAwJ,EAAI0+B,EAAGltC,MAAQgF,QANnBwJ,GAAI0+B,EAAGltC,MAAQktC,EAAGloC,QAWnBwJ,KCzJfvQ,GAAGkjC,YAAcljC,GAAGkjC,gBACpBljC,GAAGkjC,YAAYyB,kBAAoB,SAASpsB,EAAS0lB,GACjD,YAUA,SAASsgB,GAAqB9jC,EAAIwqB,GAG9B,GAAItT,GAAU6sB,EAAKC,CAGnB,KAEID,EAAMvZ,EAAOe,iBAAmBf,EAAOyZ,cAAc70C,SACrD40C,EAAYD,EAAIjZ,KAAKh2B,UAErBpJ,EAAI,yCACJA,EAAI,eAAiBs4C,GAEjBA,GAAaA,EAAUhrC,MAAM,YAC7BgrC,EAAYD,EAAIjZ,KAAKjiC,WAAWA,WAAWq7C,WAG/ChtB,EAAW7C,EAAQ6W,mBAAmB8Y,GAE1C,MAAOp0C,GACHlE,EAAI,wDAA0DkE,EAAMjE,QAAU,IAAK,SACnFurB,GAAY1lB,SAAS,GAGzB,MAAO0lB,GAMX,QAASitB,GAAWnkC,EAAIwqB,GACpB,GAAI7mB,GAAS7F,EAAQkP,YAAYlF,IAAI9H,GACjCyM,EAA0C,QAAjC3O,EAAQ2O,OAAO5d,cAA0B,MAAQ,OAC1D+U,EAAW9F,EAAQmP,cAAcnF,IAAI9H,GACrC1Y,EAAO4e,EAAQlG,EAKnB,OAHA2D,GAAO7F,EAAQgP,UAAYnE,EAAQ3I,GACnC2D,EAAO7F,EAAQ+d,eAAiBv0B,EAEzB+sB,EAAQoX,oBACXhf,OAAQA,EACR7I,SAAUA,EACVD,OAAQA,EACRoY,aAAcje,EAAQie,aACtB2P,WAAYlB,EAAOljC,OArD3B,GAAI+sB,GAAUzuB,KACVsgB,EAAUsd,EAAMtd,QAChByC,EAAU6a,EAAM7a,QAChBjd,EAAM83B,EAAM93B,GAsDhB9F,MAAKuiC,WAAa,SAASnoB,GACvB,GAGInJ,GAHA1H,EAAQklB,EAAQjV,SAASY,GACzBwqB,EAASnW,EAAQmX,cAAcxrB,GAC/B3O,EAAU,GAAI9L,IAAG+L,OA8BrB,OA3BAuF,GAAOstC,EAAWnkC,EAAIwqB,GACtB3zB,EAAKE,YAAY5H,GAEjBklB,EAAQgX,iBAAiBb,EAAQ,SAAS4Z,GACtC14C,EAAI,gBAEJ,IAAIwrB,GAAWktB,EAAsBA,EAAsBN,EAAqB9jC,EAAIwqB,EAEpFnW,GAAQ8W,iBAAiBnrB,GAGpBlC,EAAQoP,KAAKsI,UACdjwB,GAAGilC,GAAQ7jC,SAGXuwB,EAAS1lB,QACTH,EAAQG,QAAQ0lB,GAGhB7lB,EAAQK,QAAQwlB,KAIxBxrB,EAAI,8BAAgCsU,GACpCnJ,EAAKqsC,SACL39C,GAAGsR,GAAMlQ,SAEF0K,GAGX9L,GAAG6B,OAAOxB,KAAM,GAAIL,IAAG2kC,mBACnBpsB,SACIusB,OAAQvsB,EAAQoP,KAAKsI,SACrBzF,UAAWjS,EAAQiS,WAGvByT,OACIzS,SAAUjT,EAAQiT,SAClB7K,QAASA,EACTyC,QAASA,EACTjd,IAAKA,OC5GjBnG,GAAGkjC,YAAcljC,GAAGkjC,gBACpBljC,GAAGkjC,YAAYmD,iBAAmB,SAAS3qB,EAAMuiB,GAC7C,YAEA,IAAInP,GAAUzuB,KACVsgB,EAAUsd,EAAMtd,QAChBkC,EAAUob,EAAMpb,QAChBO,EAAU6a,EAAM7a,QAChBjd,EAAM83B,EAAM93B,IACZ24C,EAAYpjC,EAAK6a,gBAAkB7a,EAAK8a,aAExCuoB,EAA4B,SAAStkC,EAAI2D,EAAQ4N,GAC7C,GAAInQ,GAAOgH,EAAQpI,GACf1Y,EAAO4e,EAAQlG,EAEnB2D,GAAO1C,EAAK/F,SAASmiB,WAAWC,WAAa/L,EAAUuc,KACvDnqB,EAAO1C,EAAK/F,SAASmiB,WAAWE,gBAAkBhM,EAAUhhB,MAC5DoT,EAAO1C,EAAK/F,SAASmiB,WAAWG,WAAajM,EAAUnQ,KACvDuC,EAAO1C,EAAK/F,SAASmiB,WAAWK,YAAcnM,EAAUwc,MACxDpqB,EAAO1C,EAAK+a,mBAAqB5a,EAM7BijC,IACA1gC,EAAO1C,EAAK4a,eAAiBv0B,IAIrCi9C,EAAyB,GAAIh/C,IAAGkjC,YAAY+b,4BACxCt3B,KAAMjM,EAAKiM,KACXtJ,SAAU3C,EAAK/F,SAAS1J,QAAQoS,SAChClY,IAAKA,IAGT+4C,EAAiC,SAASzkC,EAAI7G,GAC1C,GAAI9H,GAAU,GAAI9L,IAAG+L,OAerB,OAbA6H,GAAIynB,mBAAqB,WACrB,GAAuB,IAAnBznB,EAAImoB,WAAkB,CACtB,GAAIp5B,GAASw8C,EAAwB1kC,EAAI7G,EAErCjR,GAAOsJ,QACPH,EAAQG,QAAQtJ,EAAOgvB,SAAU/d,GAGjC9H,EAAQK,QAAQxJ,EAAOgvB,SAAU/d,KAKtC9H,GAGXszC,EAA0B,SAAS3kC,GAC/B,GAAI2D,GAAS1C,EAAK+L,YAAYlF,IAAI9H,GAC9B1Y,EAAO4e,EAAQlG,GACfoB,EAAOgH,EAAQpI,EAOnB,OALA2D,GAAO1C,EAAK6L,UAAYnE,EAAQ3I,GAChC2D,EAAO1C,EAAK4a,eAAiBv0B,EAC7Bqc,EAAO1C,EAAK+a,mBAAqB5a,EACjCuC,EAAO1C,EAAK/F,SAASmiB,WAAWK,YAAcrJ,EAAQgS,gBAAgBrmB,GAE/D2D,GAGXihC,EAAwB,SAASzrC,EAAK+d,GAClC,MAAO3xB,IAAG2F,SAAS,IAAK,IAAK,IAAK,IAAK,KAAMiO,EAAImH,QAAU,IACtD4W,EAAS1lB,SACV0lB,EAASxX,OAGjBglC,EAA0B,SAAS1kC,EAAI7G,GACnC,GAAI+d,EAOJ,OALAxrB,GAAI,sCAAwCsU,GAC5CtU,EAAI,kBAAoByN,EAAIwiC,cAE5BzkB,EAAW2tB,GAAc,EAAM1rC,IAG3B3H,SAAUozC,EAAsBzrC,EAAK+d,GACrCA,SAAUA,IAKlB2tB,EAAgB,SAASp1C,EAAQ0J,GAC7B,GAAI+d,KAEJ,KACIxrB,EAAInG,GAAG8H,OAAO,4CAA6C8L,EAAImH,OAAQnH,EAAIwiC,eAC3EzkB,EAAW3xB,GAAGyR,UAAUmC,EAAIwiC,cAEhC,MAAO/rC,GACHH,GAAU/D,EAAI,qDAAuDkE,EAAMjE,QAAU,IAAK,SAG9F,MAAOurB,IAGX4tB,EAA4B,SAAS9kC,GACjC,GAAI3O,GAAU,GAAI9L,IAAG+L,OAcrB,OAZAizC,GAAuBQ,SACf/kC,EACAqU,EAAQkZ,WAAWvtB,GACnB2kC,EAAwB3kC,GACxBiB,EAAK8L,cAAcjF,IAAI9H,IAE1BrD,KAAK,SAASxD,GACX9H,EAAQG,QAAQqzC,GAAc,EAAO1rC,GAAMA,IAC5C,SAASA,GACR9H,EAAQK,QAAQmzC,GAAc,EAAO1rC,GAAMA,KAG5C9H,GAGX2zC,EAA8B,SAASrhC,EAAQxK,EAAK7I,EAAY0P,GAC5D,GAAItJ,GAAW,GAAInH,UACfkd,EAASxL,EAAKwL,OACd7I,EAAW3C,EAAKgM,cAAcnF,IAAI9H,GAClC1Y,EAAO4e,EAAQlG,GACfoB,EAAOgH,EAAQpI,EAuBnB,OArBA2D,GAAO1C,EAAK6L,UAAYnE,EAAQ3I,GAChC2D,EAAO1C,EAAK4a,eAAiBv0B,EAEzB+8C,IACA1gC,EAAO1C,EAAK+a,mBAAqB5a,GAIhCH,EAAK8a,eACDsoB,IACD1gC,EAAO1C,EAAK8O,WAAazoB,GAE7Bsc,EAAWre,GAAGsQ,QAAQ8N,EAAQC,IAGlCzK,EAAI4nB,KAAKtU,EAAQ7I,GAAU,GAEvB3C,EAAKiM,KAAKsI,UAAYvU,EAAKiM,KAAK6Q,kBAChC5kB,EAAIC,iBAAkB,GAGtBirC,GACIpjC,EAAK8a,cACLx2B,GAAGkR,aAAakN,EAAQjN,GAG5BA,EAAS5L,OAAOmW,EAAK8O,UAAWzf,GACzBoG,GAGJpG,GAGX20C,EAAmB,SAASjlC,EAAI7G,GAC5B,GAAI+rC,GAAejkC,EAAK8L,cAAcjF,IAAI9H,GACtC1P,EAAa+jB,EAAQjN,QAAQpH,EAEjC7G,GAAIyoB,iBAAiB,SAAU,oBAC/BzoB,EAAIyoB,iBAAiB,mBAAoB,kBACzCzoB,EAAIyoB,iBAAiB,gBAAiB,YAEjCyiB,IACDlrC,EAAIyoB,iBAAiB,eAAgB,4BAErCzoB,EAAIyoB,iBAAiB,cAAetxB,EAAWxK,OAGnDP,GAAG+C,KAAK48C,EAAc,SAAS59C,EAAMkB,GACjC2Q,EAAIyoB,iBAAiBt6B,EAAMkB,KAIvCjD,IAAG6B,OAAOxB,MACN8gC,YAAa,SAAS1mB,EAAIskB,EAAUzG,GAChC,GAGIxsB,GAAS8zC,EAAQxhC,EAHjB4N,EAAY8C,EAAQkQ,cAAcvkB,EAAIskB,GACtCnrB,EAAMkb,EAAQkZ,WAAWvtB,EAAIskB,EACtBlc,GAAQpI,EAgBnB,OAbA3O,GAAUozC,EAA+BzkC,EAAI7G,GAC7Ckb,EAAQua,yBAAyB5uB,EAAIskB,EAAU/S,EAAUnQ,MACzDuC,EAAS1C,EAAK+L,YAAYlF,IAAI9H,GAC9BskC,EAA0BtkC,EAAI2D,EAAQ4N,GAElCsM,IACAla,EAAO1C,EAAKjF,OAAOqhB,WAAWQ,WAAY,GAG9CsnB,EAASH,EAA4BrhC,EAAQxK,EAAKoY,EAAUvgB,KAAMgP,GAClEilC,EAAiBjlC,EAAI7G,GACrBA,EAAI8nB,KAAKkkB,GAEF9zC,GAGX82B,WAAY,SAASnoB,GACjB,GACI3O,GAAS8H,EAAKwK,EAAQwhC,EADtB70C,EAAa+jB,EAAQjN,QAAQpH,EAWjC,OARA7G,GAAMkb,EAAQkZ,WAAWvtB,GACzBqU,EAAQua,yBAAyB5uB,GACjC3O,EAAUozC,EAA+BzkC,EAAI7G,GAC7CwK,EAAS1C,EAAK+L,YAAYlF,IAAI9H,GAC9BmlC,EAASH,EAA4BrhC,EAAQxK,EAAK7I,EAAY0P,GAC9DilC,EAAiBjlC,EAAI7G,GACrBA,EAAI8nB,KAAKkkB,GAEF9zC,KAIf9L,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGqmC,kBACnB9tB,QAASvY,GAAG6B,QAAQipB,UAAW,eAAgBpP,GAC/CuiB,MAAOj+B,GAAG6B,QAAQwgB,YAAa3G,EAAKgM,cAAcnF,KAAM0b,MAG5Dj+B,GAAGwM,SAASnM,KAAM,SAASsM,GACvB,OACI0yB,eAAgB,SAAS5kB,GACrB,MAAIiB,GAAK/F,SAAS1J,QAAQoS,SACfkhC,EAA0B9kC,GAG1B9N,EAAO0yB,eAAe5kB,EAAIza,GAAGgQ,KAAKsvC,EAAej/C,MAAM,SCvOlFL,GAAGkjC,YAAY+b,2BAA6B,SAAS9mC,GACjD,YAEA,IAAIkyB,GACAnjB,EAAS,OACT3O,GACIoP,MACIuI,UAAU,EACVD,UAAU,EACVuI,iBAAiB,GAErBna,SAAU,KACVlY,IAAK,SAAS4B,EAAK1B,MAEvBw5C,KACAC,GACIv9B,IAAK,SAAS9H,GACV,MAAOlC,GAAQ8F,UAI3Bre,IAAG6B,OAAO0W,EAASJ,GAEnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/B6C,aAAc,mBACdM,cAAexV,GACfA,OAAQA,EACRQ,cAAeo4B,EACfxjB,oCAAoC,EACpC3U,KAAMpP,EAAQoP,KACdxhB,IAAKoS,EAAQpS,IACbmlB,WAAY,SAAS7Q,EAAI7G,EAAKoU,GAC1B,GAAIlc,GAAU+zC,EAASplC,SAEhBolC,GAASplC,GAEZuN,EACAlc,EAAQK,QAAQyH,GAGhB9H,EAAQG,QAAQ2H,OAK5B5T,GAAG6B,OAAOxB,MACNm/C,SAAU,SAAS/kC,EAAI7G,EAAKwK,EAAQwG,GAChC,GAAI9Y,GAAU,GAAI9L,IAAG+L,OAWrB,OATAwM,GAAQpS,IAAI,0CAA4CsU,GAExDolC,EAASplC,GAAM3O,EAEfu+B,EAAUrN,cAAcviB,GACnB4iB,WAAWjf,GACXof,YAAY5Y,GACZ8W,KAAK9nB,GAEH9H,MCjEnB9L,GAAG+/C,YAAc,SAAS5nC,GACtB,YAoBA,SAAS6nC,GAAmBpgC,EAAOqgC,GAE/B,GAAIC,GAAej4C,MAAMvB,UAAUwB,MAAMtB,KAAKgZ,EAE9CrH,GAAQuO,UAAUq5B,QAAQ,WAAavgC,EAAM7Z,OAAS,mBACtDk6C,EAAeG,cAAa,GAC5B7nC,EAAQuO,UAAUu5B,+BAA+BH,EAAcD,EAAeK,cAGlF,QAASC,GAAiBjnB,GACtB,GAAIknB,GAAoB,GAAIxgD,IAAG+L,OAoD/B,OAlDIutB,GAAM7wB,OACN6wB,EAAMzZ,KAAK,SAASA,GAChB,GAAI9d,GAAOu3B,EAAMv3B,KACb0+C,EAAWnnB,EAAMmnB,SACjBC,EAAwBD,EAAS96C,QAAQ5D,EAG7C0+C,GAAWA,EAASvuC,OAAO,EAAGwuC,GAGH,MAAvBD,EAAS1wC,OAAO,KAChB0wC,EAAWA,EAASvuC,OAAO,IAG/B2N,EAAK8gC,OAASF,EACdG,EAAa19C,KAAK2c,GAClB2gC,EAAkBv0C,WAEtB,SAAS40C,GACLtoC,EAAQuO,UAAUq5B,QAAQ,oBAAsB7mB,EAAMmnB,SAAW,sBAAwBI,EAAUtwB,KAAO,IAAK,SAC/GiwB,EAAkBr0C,YAGjBmtB,EAAMwnB,aACXC,EAAoBznB,GAAOliB,KACvB,SAAwBoD,GACpB,GAAIwmC,GAAcxmC,EAAQzU,MAE1B/F,IAAG+C,KAAKyX,EAAS,SAASxX,EAAKs2B,GAC3BinB,EAAiBjnB,GAAOzhB,KAAK,WACzBmpC,GAAe,EAEK,IAAhBA,GACAR,EAAkBv0C,cAKzBuO,EAAQzU,QACTy6C,EAAkBv0C,WAI1B,SAAqB40C,GACjBtoC,EAAQuO,UAAUq5B,QAAQ,oBAAsB7mB,EAAMmnB,SAAW,sBAAwBI,EAAUtwB,KAAO,IAAK,SAC/GiwB,EAAkBr0C,YAKvBq0C,EAIX,QAASO,GAAoBznB,EAAO6f,EAAQ8H,EAAcC,GACtD,GAAIp1C,GAAUo1C,GAAmB,GAAIlhD,IAAG+L,QACpCo1C,EAAYhI,GAAU7f,EAAM8nB,cAmBhC,OAjBAD,GAAUE,YACN,SAAqB7mC,GACjB,GAAI8mC,GAAaL,EAAeA,EAAa7wC,OAAOoK,GAAWA,CAE3DA,GAAQzU,OACR4jB,WAAW,WACPo3B,EAAoBznB,EAAO6nB,EAAWG,EAAYx1C,IACnD,GAGHA,EAAQG,QAAQq1C,IAIxBx1C,EAAQK,SAGLL,EAGX,QAASy1C,GAAmBh3C,EAAc01C,GACtC,GAAIuB,MACAC,EAA4B,GAAIzhD,IAAG+L,OA4CvC,OA1CAwM,GAAQuO,UAAU46B,yBAClBzB,EAAeG,cAAa,GAExB71C,EAAaqV,MAAM7Z,OAAS,IAAMwS,EAAQopC,oBAC1CppC,EAAQuO,UAAUu5B,mCAClB9nC,EAAQuO,UAAU86B,UAAU,oBAAqB,IACjD3B,EAAeG,cAAa,GAC5BqB,EAA0Bt1C,YAG1By0C,KAEI5gD,GAAGsK,sBAAsBC,GACzBvK,GAAG+C,KAAKwH,EAAaC,MAAO,SAASxH,EAAKsE,GACtC,GAAIgyB,GAAQhyB,EAAKmD,kBAEb6uB,KAEIA,EAAM7wB,OACNm4C,EAAa19C,KAAKoE,EAAK41C,aAIvBsE,EAAsBt+C,KAAKq9C,EAAiBjnB,GAAOzhB,KAAK,WACpD2pC,EAAsB/e,MACe,IAAjC+e,EAAsBz7C,QACtB07C,EAA0Bx1C,gBAQ9C20C,EAAer2C,EAAaqV,MAGK,IAAjC4hC,EAAsBz7C,QACtB07C,EAA0Bx1C,WAI3Bw1C,EAGX,QAASI,GAAcC,GACnB,GAAIC,GAAW,GAAI/hD,IAAGgiD,gBAClBC,sBAAuBA,EACvBhiD,QAAS6hD,EACTI,QAAS,SAAShzC,GACdlP,GAAG8hD,GAAUz/C,SAASkW,EAAQ6R,QAAQ+3B,YACtCjzC,EAAEkzC,mBAENC,sBAAuB,SAASnzC,GAC5BlP,GAAG8hD,GAAUx/C,YAAYiW,EAAQ6R,QAAQ+3B,aAE7CG,OAAQ,SAASpzC,GACbqyC,EAAmBryC,EAAE3E,aAAcw3C,GAAU3qC,KACzC,WACI4oC,EAAmBY,EAAcmB,IAErC,WACIxpC,EAAQuO,UAAUq5B,QAAQ,sEAAuE,aAcjH,OARA7mC,GAAe3G,YAAY,WACvBovC,EAASvvC,YAGbxS,GAAG8hD,GAAUh+C,aAAay+C,IAA2BviD,GAAG8hD,GAAU5hD,OAElEsiD,EAAgBt/C,KAAK6+C,GAEdA,EAGX,QAASU,GAAWC,GAChB,GAAIC,EASJ,OAPA3iD,IAAG+C,KAAK2/C,EAAUn4C,aAAaq4C,MAAO,SAAS/yC,EAAK5M,GAChD,GAAY,UAARA,EAEA,MADA0/C,IAAW,GACJ,IAIRA,EAWX,QAASE,GAAmB3zC,GACxB,MAAIlP,IAAGqO,WACKa,EAAE4zC,cAGV9iD,GAAGiO,SACIiB,EAAEisC,EAAI,GAAKjsC,EAAE6zC,EAAI,EAGb,IAAR7zC,EAAEisC,GAAmB,IAARjsC,EAAE6zC,EAG1B,QAASC,KACL,GAAIC,GAAY1qC,EAAQ2qC,iBAEpBC,EAAqB,WACjBx5B,WAAW,WACP3pB,GAAG+C,KAAKkgD,EAAW,SAASjgD,EAAK++C,GAC7B/hD,GAAG+hD,GAAUj+C,aAAay+C,IAA2BviD,GAAG+hD,GAAU7hD,OAClEF,GAAG+hD,GAAUz/C,YAAYiW,EAAQ6R,QAAQ+3B,eAE9C,IAGXniD,IAAG+C,KAAKkgD,EAAW,SAASjgD,EAAK++C,GAC7B,GAAI9B,GAAiB4B,EAAcE,EAG/BkB,GAAUl9C,QAAU/F,GAAGkT,kBAAkB+C,UACzCqD,EAAehZ,OAAOuJ,SAAU,YAAa,SAASqF,IAC7C+wC,EAAeG,gBAAkBqC,EAAWvzC,IAC7ClP,GAAG+C,KAAKkgD,EAAW,SAASjgD,EAAK++C,GAGzBA,YAAoBqB,cACpBpjD,GAAG+hD,GAAUj+C,aAAay+C,IAE1BviD,GAAG+hD,GAAUzgD,KAAKlB,QAAS,gBAQnDkZ,EAAehZ,OAAOuJ,SAAU,YAAa,SAASqF,GAC9C2zC,EAAmB3zC,IACnBi0C,MAOR7pC,EAAehZ,OAAON,GAAG6J,UAAUzG,WAAW,GAAI,aAAc,SAAS8L,GACrEi0C,MAGJ7pC,EAAehZ,OAAOuJ,SAAU,OAAQ,SAASqF,GAC7CA,EAAED,iBACFk0C,MAGJ7pC,EAAehZ,OAAOuJ,SAAUo4C,EAAuBkB,GAnR3D,GAAI5qC,GACA0pC,EAAwB,eACxBM,EAAyB,mBACzBC,KACA5B,KACAtnC,EAAiB,GAAItZ,IAAGsS,cAE5BiG,IACI2qC,oBACAvB,oBAAoB,EACpBv3B,SACI+3B,WAAY,MAEhBr7B,UAAW,GAAI9mB,IAAG+/C,YAAYj5B,WAGlC9mB,GAAG6B,OAAO0W,EAASJ,GAAG,GAsQtB6qC,IAEAhjD,GAAG6B,OAAOxB,MACNgjD,mBAAoB,SAASpjD,GACzBsY,EAAQ2qC,iBAAiBhgD,KAAKjD,GAC9B4hD,EAAc5hD,IAGlBqjD,eAAgB,SAASrjD,GACrB,GAAI6Q,GACAyyC,EAAMhrC,EAAQ2qC,gBAElB,KAAKpyC,IAAKyyC,GACN,GAAIA,EAAIzyC,KAAO7Q,EACX,MAAOsjD,GAAI/mC,OAAO1L,EAAG,IAKjC0B,QAAS,WACL8G,EAAe9G,UACfxS,GAAG+C,KAAKy/C,EAAiB,SAASx/C,EAAK++C,GACnCA,EAASvvC,gBAMzBxS,GAAG+/C,YAAYj5B,UAAY,WACvB,YAEA,QACI46B,uBAAwB,aACxBrB,+BAAgC,SAASzgC,EAAO4jC,KAChD5B,UAAW,SAASrxB,EAAMkzB,GACtBzjD,GAAGmG,IAAI,2BAA6BoqB,EAAO,2BAA6BkzB,EAAiB,IAAK,UAElGtD,QAAS,SAAS/5C,EAASC,GACvBrG,GAAGmG,IAAIC,EAASC,MAK5BrG,GAAGgiD,eAAiB,SAAS7pC,GACzB,YAiBA,SAASurC,KACL,MAAO1jD,IAAGiO,UAAajO,GAAGqO,WAAarO,GAAGsO,UAG9C,QAASq1C,GAAmBz0C,GAEnB00C,IAGGF,EACApqC,EAAehZ,OAAOuJ,SAAU,WAAY,SAASqF,GACjDA,EAAED,mBAGNqK,EAAehZ,OAAOuJ,SAAU,WAAY,SAASqF,GAC7CA,EAAE3E,eACF2E,EAAE3E,aAAas5C,WAAa,OAC5B30C,EAAED,oBAKd20C,GAAsB,GAI9B,QAASE,GAAgB50C,GAGrB,IAAKlP,GAAGkT,kBAAkB+C,SACtB,OAAO,CAGX,IAAI8tC,GAAYC,EAAK90C,EAAE3E,aAEvB05C,EAAWjkD,GAAGiO,QAQd,OADA81C,MAAa/jD,GAAGyN,OAAQzN,GAAGkT,kBAAkB+C,WAAuC,SAArB+tC,EAAGE,cAC3DF,GAAMD,IAAeC,EAAGpkC,QAAWqkC,GAAYD,EAAGpB,MAAM9hD,UAAYkjD,EAAGpB,MAAM9hD,SAAS,UAGjG,QAASqjD,GAAoBC,GAIzB,MAHmBjgD,UAAfigD,IACAC,EAAcD,GAEXC,EAGX,QAASC,KAGL,QAASC,KACLC,EAAiB36C,SAAS46C,YAAY,SACtCD,EAAeE,UAAUnsC,EAAQ0pC,uBAAuB,GAAM,GAJlE,GAAIuC,EAOJ,IAAIt/C,OAAOy/C,YACP,IACIH,EAAiB,GAAIG,aAAYpsC,EAAQ0pC,uBAE7C,MAAOnM,GACHyO,QAIJA,IAGJ16C,UAAS+6C,cAAcJ,GAG3B,QAASK,KACLvrC,EAAehZ,OAAOL,EAAS,WAAY,SAASiP,GAChD,GAAK40C,EAAgB50C,GAArB,CAMA,GAAI41C,GAAS9kD,GAAGyN,MAAQzN,GAAGkT,kBAAkB+C,SAAW,KAAO/G,EAAE3E,aAAa25C,aAC/D,UAAXY,GAAgC,aAAXA,EACrB51C,EAAE3E,aAAas5C,WAAa,OAE5B30C,EAAE3E,aAAas5C,WAAa,OAGhC30C,EAAEkzC,kBACFlzC,EAAED,oBAGNqK,EAAehZ,OAAOL,EAAS,YAAa,SAASiP,GACjD,IAAKi1C,IAAuB,CACxB,IAAKL,EAAgB50C,GACjB,MAEJqJ,GAAQ2pC,QAAQhzC,MAIxBoK,EAAehZ,OAAOL,EAAS,YAAa,SAASiP,GACjD,GAAK40C,EAAgB50C,GAArB,CAIAqJ,EAAQmc,QAAQxlB,EAEhB,IAAI4zC,GAAgBj5C,SAASk7C,iBAAiB71C,EAAE81C,QAAS91C,EAAE+1C,QAEvDjlD,IAAGK,MAAMS,SAASgiD,IAItBvqC,EAAQ8pC,sBAAsBnzC,MAGlCoK,EAAehZ,OAAOL,EAAS,OAAQ,SAASiP,GAC5C,IAAKi1C,IAAuB,CACxB,IAAKL,EAAgB50C,GACjB,MAGJA,GAAED,iBACFC,EAAEkzC,kBACF7pC,EAAQ+pC,OAAOpzC,GAEfo1C,OAjJZ,GACI/rC,GAAStY,EAASokD,EAAaT,EAD/BtqC,EAAiB,GAAItZ,IAAGsS,cAG5BiG,IACItY,QAAS,KACTiiD,QAAS,SAAShzC,KAClBwlB,QAAS,SAASxlB,KAElBmzC,sBAAuB,SAASnzC,KAChCozC,OAAQ,SAASpzC,MAGrBlP,GAAG6B,OAAO0W,EAASJ,GACnBlY,EAAUsY,EAAQtY,QAyIlB0jD,IACAkB,IAEA7kD,GAAG6B,OAAOxB,MACN+/C,aAAc,SAASgE,GACnB,MAAOD,GAAoBC,IAG/B5xC,QAAS,WACL8G,EAAe9G,WAGnB8tC,WAAY,WACR,MAAOrgD,OCvelB,WACG,YAEAD,IAAGklD,aACC3mC,gBAAiB,SAASC,GACtBne,KAAK8kD,QAAQz+C,UAAU6X,gBAAgBlO,MAAMhQ,KAAM8H,WACnD9H,KAAK+kD,YAAYC,iBAGrB/kC,iBAAkB,WACdjgB,KAAK8kD,QAAQz+C,UAAU4Z,iBAAiBjQ,MAAMhQ,KAAM8H,WACpD9H,KAAK+kD,YAAYE,cAGrBC,iBAAkB,SAAStlD,GACvBI,KAAKmlD,MAAQnlD,KAAKmlD,KAAKnC,mBAAmBpjD,IAG9CwlD,oBAAqB,SAASxlD,GAC1B,GAAII,KAAKmlD,KACL,MAAOnlD,MAAKmlD,KAAKlC,eAAerjD,IAIxCylD,gBAAiB,SAASjrC,GACtB,IAAKpa,KAAK+kD,YAAYO,gBAAgBlrC,GAClC,MAAOpa,MAAK+kD,YAAYQ,iBAAiBnrC,IAIjDN,MAAO,WACH9Z,KAAK8kD,QAAQz+C,UAAUyT,MAAM9J,MAAMhQ,KAAM8H,WACzC9H,KAAK+kD,YAAYjrC,SAEZ9Z,KAAK2e,SAAS6E,QAAUxjB,KAAK+kD,YAAYljC,cAC1C7hB,KAAKotB,iBAAmBptB,KAAKupB,qBACzB3pB,QAASI,KAAK+kD,YAAYljC,YAC1B1J,MAAOnY,KAAK2e,SAAStb,KAAKgnB,iBAC3B5Q,eAGHzZ,KAAKmlD,OACLnlD,KAAKmlD,KAAKhzC,UACVnS,KAAKmlD,KAAOnlD,KAAKwlD,qBAGrBxlD,KAAKylD,mBAAqB,EAC1BzlD,KAAK0lD,uBAAyB,EAE9B1lD,KAAK2lD,mCAGTrgC,QAAS,SAASlL,EAAIoC,GAClB,GAAIopC,GAAoB5lD,KAAK2e,SAASgS,eAAenU,EAErDxc,MAAK8kD,QAAQz+C,UAAUif,QAAQtV,MAAMhQ,KAAM8H,WAC3C9H,KAAK+kD,YAAYc,eAAezrC,EAAIwrC,IAGxC3iC,YAAa,SAAS7I,GAClB,GAAIktB,GAAStnC,KAAK8kD,QAAQz+C,UAAU4c,YAAYjT,MAAMhQ,KAAM8H,UAG5D,OADAw/B,IAAUtnC,KAAK+kD,YAAYe,aAAa1rC,GACjCktB,GAGXpnB,eAAgB,SAAS9F,GACrB,GAAI2rC,GAAY/lD,KAAK8kD,QAAQz+C,UAAU6Z,eAAelQ,MAAMhQ,KAAM8H,UAGlE,OADAi+C,IAAa/lD,KAAK+kD,YAAYiB,gBAAgB5rC,GACvC2rC,GAGXE,MAAO,SAASC,GACZ,MAAOlmD,MAAK+kD,YAAYoB,UAAUD,IAGtCE,cAAe,SAAStlC,GACpB,GAAItB,GAAOxf,KAAKwhB,QAAQV,EAExB,OAAOtB,GAAK6mC,eAOpB1mD,GAAG2mD,cACCxkC,WAAY,SAAS7J,GACjB,GAAIuL,GAASxjB,KAAK8kD,QAAQz+C,UAAUyb,WAAW9R,MAAMhQ,KAAM8H,UAQ3D,OANK0b,IACGvL,IAAajY,KAAKotB,mBAClB5J,EAASxjB,KAAK+kD,YAAYljC,aAI3B2B,GAGX+iC,gBAAiB,SAASzlC,GACtB9gB,KAAK+kD,YAAYyB,WAAW1lC,IAGhC6kC,gCAAiC,WAC7B3lD,KAAKymD,yBAA2B9mD,GAAG+mD,yBAA2B1mD,KAAK2mD,6BAInE3mD,KAAK4mD,wBAA0BjnD,GAAGqO,UAE9BhO,KAAK6mD,2BAEL7mD,KAAK8mD,sBAAwB9mD,KAAK+mD,0BAClC/mD,KAAKgnD,6BAA+BhnD,KAAKinD,iCACzCjnD,KAAKknD,2BAA6BlnD,KAAKmnD,iCAI/C3B,kBAAmB,WACf,GAAIptC,GAAOpY,KACP6iD,EAAmB7iD,KAAK2e,SAASyoC,YAAYC,eAC7CC,EAAatnD,KAAK+kD,YAClBwC,EAAkBD,EAAWE,aAIjC,OAFAD,IAAmB1E,EAAiBhgD,KAAK0kD,GAElC,GAAI5nD,IAAG+/C,aACVmD,iBAAkBA,EAClBvB,mBAAoBthD,KAAK2e,SAASjV,SAClCqgB,SACI+3B,WAAY9hD,KAAK2e,SAASoL,QAAQ+3B,YAEtCr7B,WACI46B,uBAAwB,WACpBiG,EAAWG,sBAEfzH,+BAAgC,SAASzgC,EAAO4jC,GAC5CmE,EAAWI,qBAEX/nD,GAAG+C,KAAK6c,EAAO,SAAS5c,EAAK6c,GACzBA,EAAK6mC,aAAelD,IAGpB5jC,EAAM7Z,QACN0S,EAAK6F,SAASsB,EAAO,KAAM,OAGnCgiC,UAAW,SAASrxB,EAAMy3B,GACtBvvC,EAAKyN,WAAWqK,EAAMy3B,IAE1B7H,QAAS,SAAS/5C,EAASC,GACvBoS,EAAKtS,IAAIC,EAASC,QAMlC2gD,2BAA4B,WACxB,GAAIvuC,GAAOpY,IAEX,OAAO,IAAIL,IAAG+mD,yBACVY,WAAYtnD,KAAK+kD,YAEjBj/C,IAAK,SAASC,EAAS6hD,GACnBxvC,EAAKtS,IAAIC,EAAS6hD,IAGtBC,aAAc,SAAS/mC,GACnB1I,EAAKoI,WAAWM,IAGpBqK,SAAU,SAASrK,GACf1I,EAAKwH,OAAOkB,IAGhBgnC,QAAS,SAAShnC,GACd1I,EAAK6L,MAAMnD,IAGfinC,QAAS,SAASjnC,GACd1I,EAAK6K,YAAYnC,IAGrBknC,WAAY,SAASlnC,GACjB1I,EAAK8H,eAAeY,IAGxBmnC,UAAW,SAASnnC,GAChB,MAAO1I,GAAKkI,QAAQQ,OAKhC+lC,uBAAwB,WAEpB,MAAO7mD,MAAK+kD,YAAYmD,2BAChBloD,KAAK2e,SAAS6Q,YACf7vB,GAAGwoD,sBACHxoD,GAAGyoD,2BACHzoD,GAAGyoD,2BAGdC,qBAAsB,WAClB,GAAIjwC,GAAOpY,KACPsnD,EAAatnD,KAAK+kD,WAEtB,QACIuC,WAAYA,EACZxhD,IAAK,SAASC,EAAS6hD,GACnBxvC,EAAKtS,IAAIC,EAAS6hD,IAEtBU,kBAAmB,SAASxnC,GACxB,MAAO1I,GAAKkK,YAAYlI,GAAI0G,IAASpG,QAEzCutC,UAAW,SAASnnC,GAChB,MAAO1I,GAAKkI,QAAQQ,IAExBynC,UAAW,SAASnuC,EAAIoC,GACpBpE,EAAKkN,QAAQlL,EAAIoC,IAErBgsC,sBAAuB,SAASpuC,EAAIquC,GAChC,GAAIC,GAAU/oD,GAAG2nD,EAAWqB,aAAavuC,IACrCwuC,EAAkBjpD,GAAG2nD,EAAW/B,iBAAiBnrC,GAEjDquC,IACAC,EAAQ1mD,SAAS,cACjBslD,EAAWuB,aAAazuC,GACxBktC,EAAWwB,aAAa1uC,KAGxBsuC,EAAQzmD,YAAY,cACpBqlD,EAAWyB,aAAa3uC,GACxBktC,EAAW0B,aAAa5uC,IAI5BwuC,EAAgB5mD,SAAS,WAAWC,YAAY,cAK5DmnB,sBAAuB,SAAShP,EAAI6B,EAAWD,GAC3Chc,KAAK8kD,QAAQz+C,UAAU+iB,sBAAsBpZ,MAAMhQ,KAAM8H,WAErD9H,KAAK6mD,0BAED7mD,KAAK+kD,YAAYQ,iBAAiBnrC,IAAO4B,IAAcrc,GAAG+a,OAAOsC,YACjEhd,KAAK+kD,YAAYkE,qBAAqB7uC,GACtCpa,KAAK+kD,YAAY+D,aAAa1uC,IAIlC6B,IAActc,GAAG+a,OAAO4C,iBAAmBtB,IAAcrc,GAAG+a,OAAO2C,WACnErd,KAAK+kD,YAAYmE,UAAU9uC,GAC3Bpa,KAAK+kD,YAAYoE,cAAc/uC,GAC/Bza,GAAGK,KAAK+kD,YAAYQ,iBAAiBnrC,IAAKnY,YAAYjC,KAAKopD,SAASC,WAE/DrtC,IAAcrc,GAAG+a,OAAO8C,eAC7Bxd,KAAK+kD,YAAYuE,UAAUlvC,IAInC6sC,+BAAgC,WAC5B,GAAI5rC,GAAO1b,GAAG6B,UAAWxB,KAAKqoD,uBAE9B,OAAO,IAAI1oD,IAAG4pD,4BAA4BluC,IAG9C8rC,6BAA8B,WAC1B,GAAI9rC,GAAO1b,GAAG6B,UAAWxB,KAAKqoD,uBAE9B,OAAO,IAAI1oD,IAAGyoD,0BAA0B/sC,IAG5C0rC,wBAAyB,WACrB,GAAI1rC,GAAO1b,GAAG6B,UAAWxB,KAAKqoD,uBAE9B,OAAO,IAAI1oD,IAAGwoD,qBAAqB9sC,IAGvC4X,eAAgB,SAAS7Y,GACrBpa,KAAK8kD,QAAQz+C,UAAU4sB,eAAejjB,MAAMhQ,KAAM8H,WAClD9H,KAAK+kD,YAAYyE,YAAYpvC,IAGjC6W,eAAgB,SAASe,EAAYC,GACjCjyB,KAAK8kD,QAAQz+C,UAAU4qB,eAAejhB,MAAMhQ,KAAM8H,WAClD9H,KAAK+kD,YAAY0E,sBAGrB52B,UAAW,SAASzY,EAAI1Y,GACpB,GAAI8d,GAAOxf,KAAKwhB,QAAQpH,EAEpBoF,IAAQA,EAAK8gC,QAAUtgD,KAAK2e,SAASyoC,YAAYsC,sBACjD1pD,KAAKyjB,aAAayF,YAAY9O,GAC1BuvC,OAAQnqC,EAAK8gC,SAIrBtgD,KAAK8kD,QAAQz+C,UAAUwsB,UAAU7iB,MAAMhQ,KAAM8H,WAC7C9H,KAAK4pD,WAAWxvC,EAAI1Y,IAIxBqxB,aAAc,SAAS3Y,GAEfpa,KAAK6mD,2BACL7mD,KAAK+kD,YAAYkE,qBAAqB7uC,GACtCpa,KAAK+kD,YAAYiE,aAAa5uC,GAGzBpa,KAAK4mD,wBACN5mD,KAAKknD,2BAA2B2C,WAAW7pD,KAAK+kD,YAAY4D,aAAavuC,MAMrF4Q,YAAa,SAAS5Q,EAAI1Y,EAAMopB,EAAQC,GACpC/qB,KAAK8kD,QAAQz+C,UAAU2kB,YAAYhb,MAAMhQ,KAAM8H,WAE/C9H,KAAK+kD,YAAY+E,eAAe1vC,EAAI0Q,EAAQC,GAE9B,IAAVA,GAAoD,MAArCzpB,KAAKC,MAAMupB,EAASC,EAAQ,MAC3C/qB,KAAK+kD,YAAYgF,WAAW3vC,GAC5Bpa,KAAK+kD,YAAYuE,UAAUlvC,GAC3Bpa,KAAK+kD,YAAYiF,aAAa5vC,GAC9Bpa,KAAK+kD,YAAYoE,cAAc/uC,EAAIpa,KAAK2e,SAAStb,KAAK4mD,oBAGtDjqD,KAAKkqD,iBAAiB9vC,IAItBpa,KAAKkqD,iBAAiB9vC,EAAI0Q,EAAQC,IAI1CyI,iBAAkB,SAAS1I,EAAQC,GAC/B/qB,KAAK8kD,QAAQz+C,UAAUmtB,iBAAiBxjB,MAAMhQ,KAAM8H,WACpD9H,KAAK+kD,YAAY5I,oBAAoBrxB,EAAQC,IAGjDG,YAAa,SAAS9Q,EAAI1Y,EAAMY,EAAQiR,GAMpC,QAAS42C,GAAe7nD,GAGfod,IAIL4nC,EAAW6B,cAAc/uC,GAEzBza,GAAG+f,GAAezd,YAAYmW,EAAKgxC,SAASC,UAC5C/B,EAAW0C,aAAa5vC,GAEpBhC,EAAKkK,YAAYlI,GAAIA,IAAKM,SAAW/a,GAAG+a,OAAO8C,eAC/C8pC,EAAWyC,WAAW3vC,GAE1BktC,EAAWkC,YAAYpvC,GAEnB9X,EAAOsJ,QACPwM,EAAKgyC,sBAAsBhwC,IAG3Bza,GAAG+f,GAAe1d,SAASoW,EAAKgxC,SAASiB,MACzC/C,EAAWgD,WAAWlwC,GAElBktC,EAAWiD,oBAAsBnyC,EAAKkL,gBAAgBlJ,KACtDza,GAAG+f,GAAe1d,SAASoW,EAAKgxC,SAASpN,WACzCsL,EAAWkD,UAAUpwC,IAEzBhC,EAAKqyC,2BAA2BrwC,EAAI9X,KAjC5C,GAAIooD,GAAe1qD,KAAK8kD,QAAQz+C,UAAU6kB,YAAYlb,MAAMhQ,KAAM8H,WAC9Dw/C,EAAatnD,KAAK+kD,YAClBrlC,EAAgB4nC,EAAW/B,iBAAiBnrC,GAC5ChC,EAAOpY,IA6CX,OAVI0qD,aAAwB/qD,IAAG+L,QAC3Bg/C,EAAalzC,KAAK,SAASmzC,GACvBR,EAAeQ,KAKnBR,EAAe7nD,GAGZooD,GAGXN,sBAAuB,SAAShwC,GAC5B,GAAIktC,GAAatnD,KAAK+kD,WAElB/kD,MAAK2vB,qBACL23B,EAAWsD,iBAAiBxwC,GAGhCza,GAAG2nD,EAAW/B,iBAAiBnrC,IAAKpY,SAAShC,KAAKopD,SAASx9C,SAE3D5L,KAAK6qD,sBAAsBzwC,IAG/BmR,cAAe,SAASnR,GACpBpa,KAAK8kD,QAAQz+C,UAAUklB,cAAcvb,MAAMhQ,KAAM8H,WACjD9H,KAAK+kD,YAAY+F,YAAY1wC,IAGjCqR,UAAW,SAASrR,EAAI1Y,GACpB,GAAIgpD,GAAe1qD,KAAK8kD,QAAQz+C,UAAUolB,UAAUzb,MAAMhQ,KAAM8H,UAIhE,OAFA9H,MAAK+kD,YAAY+F,YAAY1wC,GAEtBswC,GAGX9+B,eAAgB,SAASxR,EAAIuR,GACzB3rB,KAAK8kD,QAAQz+C,UAAUulB,eAAe5b,MAAMhQ,KAAM8H,WAI9C6jB,EAAU+L,UAAY,GAAK13B,KAAK6f,SAASkkB,YAAY3pB,IACrDpa,KAAK+kD,YAAYgG,WAAW3wC,IAIpCiR,UAAW,SAASjR,EAAI1Y,GACpB1B,KAAK8kD,QAAQz+C,UAAUglB,UAAUrb,MAAMhQ,KAAM8H,WAC7C9H,KAAKumD,gBAAgBnsC,GAEU,IAA3Bpa,KAAKytB,mBACLztB,KAAK+kD,YAAY0E,sBAIzBn3B,mBAAoB,SAASlY,GACzB,GAAI4wC,GAAoBC,EAASC,CAEjClrD,MAAK8kD,QAAQz+C,UAAUisB,mBAAmBtiB,MAAMhQ,KAAM8H,WAEtD9H,KAAKmrD,gBAAgB/wC,GAEjBpa,KAAK2e,SAASsF,MAAMmnC,oBACpBJ,EAAqBhrD,KAAKojB,aAAahJ,GACvC6wC,EAAUjrD,KAAK2e,SAASsF,MAAM6Q,gBAE9Bo2B,EAAYlrD,KAAK2e,SAASsF,MAAMonC,cAAcnpD,QAAQ,gBAAiB8oD,GACvEE,EAAYA,EAAUhpD,QAAQ,eAAgB+oD,GAE9CjrD,KAAK+kD,YAAYoE,cAAc/uC,EAAI8wC,GACnCvrD,GAAGK,KAAK+kD,YAAYQ,iBAAiBnrC,IAAKpY,SAAShC,KAAKopD,SAASC,YAKzEt4B,qBAAsB,SAAS3W,GAC3B,MAAIpa,MAAK8kD,QAAQz+C,UAAU0qB,qBAAqB/gB,MAAMhQ,KAAM8H,YACxD9H,KAAK+kD,YAAYuG,cAAclxC,GAC/Bza,GAAGK,KAAK+kD,YAAYQ,iBAAiBnrC,IAAKnY,YAAYjC,KAAKopD,SAASiB,MACpErqD,KAAK+kD,YAAYoE,cAAc/uC,GAC/Bpa,KAAK+kD,YAAY+F,YAAY1wC,GAC7Bpa,KAAKmrD,gBAAgB/wC,IACd,IAGPza,GAAGK,KAAK+kD,YAAYQ,iBAAiBnrC,IAAKpY,SAAShC,KAAKopD,SAASpN,WACjEh8C,KAAK+kD,YAAYyF,UAAUpwC,IACpB,IAIfqG,gBAAiB,SAASrG,GACtB,GAAI8Y,GAAoBvzB,GAAGgQ,KAAK3P,KAAKurD,uBAAwBvrD,KAE7DA,MAAK8kD,QAAQz+C,UAAUoa,gBAAgBla,KAAKvG,KAAMoa,EAAI8Y,IAG1Dq4B,uBAAwB,SAASnxC,EAAIG,EAAM4Y,GACnCnzB,KAAK2e,SAAS6B,WAAWgrC,aACzBxrD,KAAKyrD,mBAAmBz7C,MAAMhQ,KAAM8H,WAGpC9H,KAAK0rD,mBAAmB17C,MAAMhQ,KAAM8H,YAI5C4d,kBAAmB,SAAStL,EAAI7G,EAAKoU,GACjC3nB,KAAK8kD,QAAQz+C,UAAUqf,kBAAkB1V,MAAMhQ,KAAM8H,WAErD9H,KAAK+kD,YAAYyE,YAAYpvC,GAEzBuN,GACA3nB,KAAK+kD,YAAYoE,cAAc/uC,EAAIpa,KAAK2e,SAAS6B,WAAWmrC,oBAC5D3rD,KAAK+kD,YAAY6F,iBAAiBxwC,IAGlCpa,KAAKumD,gBAAgBnsC,IAI7BsxC,mBAAoB,SAAStxC,EAAIG,EAAM4Y,GACnCnzB,KAAK+kD,YAAY6G,iBAAiBxxC,GAClCpa,KAAK+kD,YAAY+F,YAAY1wC,GAC7Bpa,KAAK+kD,YAAYoE,cAAc/uC,EAAIpa,KAAK2e,SAAS6B,WAAWqrC,oBAC5D7rD,KAAKszB,eAAeC,WAAWvjB,MAAMhQ,KAAM8H,YAG/C2jD,mBAAoB,SAASrxC,EAAIG,EAAMggB,GAEnC,GAKIjrB,GALA0C,EAAWhS,KAAKsgB,QAAQlG,GACxB0xC,EAAiB9rD,KAAK2e,SAAS6B,WAAWsrC,eAAe5pD,QAAQ,gBAAiB8P,GAElF+5C,GADO/rD,KAAK+iB,QAAQ3I,GACAtS,WACpBsQ,EAAOpY,IAGXsP,GAAStP,KAAK2e,SAASqtC,YAAYF,GAE/BnsD,GAAGkX,iBAAiBvH,GACpBA,EAAOyH,KAAK,WACRqB,EAAKszC,mBAAmB17C,MAAMoI,EAAM2zC,KAGnCz8C,KAAW,GAChB8I,EAAKszC,mBAAmB17C,MAAMoI,EAAM2zC,IAI5CnC,WAAY,SAASxvC,EAAI1Y,EAAMuqD,GAC3B,GAAIC,GAGA9U,EAFA+U,EAAe,EACfC,EAAcpsD,KAAK6f,SAASikB,UAAU1pB,IAAOpa,KAAK2e,SAAStI,QAAQg2C,UAGnErsD,MAAK2e,SAAS5e,QAAQusD,eAClBtsD,KAAKylD,mBAAqB,GAAKzlD,KAAK0lD,uBAAyB,IAC7DyG,EAAensD,KAAK0lD,uBAAyB,GAGjDwG,GACIrxC,MAAOsxC,IAIVF,IACGjsD,KAAK2e,SAASqX,8BAAgCr2B,GAAGkT,kBAAkBsC,eACnEnV,KAAK+kD,YAAYwH,gBAMhBvsD,KAAK2e,SAASjV,WACf0tC,EAASp3C,KAAKsiB,YAAYlI,GAAIA,IAE9Bpa,KAAKwsD,mBAAqBxsD,KAAKwsD,oBAAsBpV,EAAO17B,aAExD07B,EAAO17B,eAAiB1b,KAAKwsD,oBAAuBpV,EAAO17B,eAC3D1b,KAAK6f,SAASC,YACd9f,KAAKysD,aACLzsD,KAAKwsD,mBAAqB,QAKlCP,GACAjsD,KAAK+kD,YAAY2H,eAAetyC,EAAIpa,KAAK2e,SAASgS,eAAejvB,GAAOwqD,EAAaE,GACrFpsD,KAAK+kD,YAAY4H,gBAAgBvyC,EAAIpa,KAAKshB,eAAelH,IAAK,EAAMpa,KAAK2e,SAASiuC,WAAWv0B,iBAG7Fr4B,KAAK+kD,YAAY3pC,QAAQhB,EAAIpa,KAAK2e,SAASgS,eAAejvB,GAAOwqD,EAAaE,GAC9EpsD,KAAK+kD,YAAY8H,gBAAgBzyC,EAAIpa,KAAKwhB,QAAQpH,GAAKpa,KAAK2e,SAASiuC,WAAWv0B,gBAGpFr4B,KAAK0lD,wBAA0B,GAE3BuG,GACCjsD,KAAK2e,SAAS5e,QAAQ+sD,kBAAoBntD,GAAGkT,kBAAkBsC,gBAEhEnV,KAAKkqD,iBAAiB9vC,IAI9BqyC,WAAY,WACRzsD,KAAK+kD,YAAYE,aACjBjlD,KAAKigB,oBAGTiqC,iBAAkB,SAAS9vC,EAAI2yC,EAAYpR,GACvC,GAAIngC,GAAOxb,KAAKwiB,QAAQpI,GACpB4yC,EAAiBhtD,KAAKysB,YAAYjR,EAElCA,IAAQ,IACW1X,SAAfipD,GAA0CjpD,SAAd63C,IAC5BqR,EAAiBhtD,KAAKitD,gBAAgBF,EAAYpR,IAGtD37C,KAAK+kD,YAAYtoC,WAAWrC,EAAI4yC,KAIxCC,gBAAiB,SAASC,EAAcvR,GAEpC,QAAS1uC,GAAEvL,EAAM0uB,GAAerqB,EAAUA,EAAQ7D,QAAQR,EAAM0uB,GADhE,GAAIrqB,GAAU/F,KAAK2e,SAAStb,KAAK8pD,cAKjC,OAFAlgD,GAAE,YAAa3L,KAAKC,MAAM2rD,EAAevR,EAAY,MACrD1uC,EAAE,eAAgBjN,KAAKysB,YAAYkvB,IAC5B51C,GAGX0kD,2BAA4B,SAASrwC,EAAIkX,GACrC,GAAI87B,GAAMC,EAAkBC,CAE5BF,GAAOptD,KAAK2e,SAAS4uC,wBAAwBH,KAC7CC,EAAmBrtD,KAAK2e,SAAS4uC,wBAAwBF,iBAE5C,WAATD,GACAE,EAAgBh8B,EAAS+7B,GACpBC,IACDA,EAAgBttD,KAAK2e,SAAStb,KAAKmqD,YAGvCxtD,KAAK+kD,YAAYoE,cAAc/uC,EAAIkzC,GAE/BttD,KAAK2e,SAAS4uC,wBAAwBE,eACtCztD,KAAK0tD,aAAatzC,EAAIkzC,IAGZ,YAATF,EACLptD,KAAK+kD,YAAYoE,cAAc/uC,EAAIpa,KAAK2e,SAAStb,KAAKmqD,YAExC,SAATJ,GACLptD,KAAK8F,IAAI,0CAA4CsnD,EAAO,iBAAkB,SAItFM,aAAc,SAAStzC,EAAI/W,GACvBrD,KAAK+kD,YAAYQ,iBAAiBnrC,GAAIjC,MAAQ9U,GAGlD8nD,gBAAiB,SAAS/wC,GACjBpa,KAAK2e,SAASqX,8BAA+Br2B,GAAGkT,kBAAkBsC,eACnEnV,KAAK+kD,YAAYuF,WAAWlwC,IAIpCyL,WAAY,SAASqK,EAAMxuB,EAAMuF,GAC7B,GAAIlB,GAAU/F,KAAK8kD,QAAQz+C,UAAUwf,WAAW7V,MAAMhQ,KAAM8H,UAC5D9H,MAAK2e,SAASgvC,YAAY5nD,IAG9BygB,YAAa,SAASzgB,GAClB/F,KAAK8kD,QAAQz+C,UAAUmgB,YAAYxW,MAAMhQ,KAAM8H,WAC/C9H,KAAK2e,SAASgvC,YAAY5nD,IAG9B6nD,kBAAmB,WACf,GAAIx1C,GAAOpY,IAEXA,MAAK2e,SAAS8H,UAAUyB,gBAAkB,WACtC,GAAIniB,GAAUqS,EAAKuG,SAASoJ,MAAM8lC,kBAC9BC,EAAa11C,EAAKuG,SAASoJ,MAAMlJ,WAErC,OAAOzG,GAAKuG,SAASovC,WAAWhoD,EAAS+nD,KAIjDthC,oBAAqB,SAASpS,EAAI1Y,GAC9B1B,KAAKylD,oBAAsB,EAC3BzlD,KAAK8kD,QAAQz+C,UAAUmmB,oBAAoBxc,MAAMhQ,KAAM8H,YAG3D6X,uBAAwB,SAASxV,EAAO4T,EAAQC,GAC5Che,KAAKylD,mBAAqBt7C,EAAMzE,OAChC1F,KAAK0lD,uBAAyB,EAC9B1lD,KAAK8kD,QAAQz+C,UAAUsZ,uBAAuB3P,MAAMhQ,KAAM8H,YAG9D+iD,sBAAuB,SAAS/pC,GAC5B,GAAIqF,GAAenmB,KAAKshB,eAAeR,GACnCktC,EAAahuD,KAAKsiB,YAAYlI,GAAI0G,IAASpG,MAE3CszC,KAAeruD,GAAG+a,OAAOiD,UACxBwI,IACDnmB,KAAK2e,SAASiuC,WAAWqB,aAAaC,mBACrCvuD,GAAGkT,kBAAkBkD,eAItB/V,KAAK+kD,YAAY4H,gBAAgB7rC,EAAQqF,EAAcnmB,KAAK2e,SAASiuC,WAAWv0B,gBAIxFha,eAAgB,SAAS2H,GACrB,GAAI5L,GAAKpa,KAAK8kD,QAAQz+C,UAAUgY,eAAerO,MAAMhQ,KAAM8H,UAO3D,OALA9H,MAAK4pD,WAAWxvC,EAAIpa,KAAKsgB,QAAQlG,IAAK,GACtCpa,KAAK+kD,YAAYyE,YAAYpvC,GAC7Bpa,KAAK+kD,YAAYgF,WAAW3vC,GAC5Bpa,KAAKoqD,sBAAsBhwC,GAEpBA,GAGXgS,SAAU,SAAShS,EAAIsC,GACnB1c,KAAK8kD,QAAQz+C,UAAU+lB,SAASpc,MAAMhQ,KAAM8H,WAE5C9H,KAAK+kD,YAAYtoC,WAAWrC,EAAIpa,KAAKysB,YAAY/P,KAGrDgY,wBAAyB,WACrB10B,KAAK+kD,YAAYC,gBACjBhlD,KAAK8kD,QAAQz+C,UAAUquB,wBAAwB1kB,MAAMhQ,KAAM8H,gBC7sBvEnI,GAAGwuD,aAAe,SAASr2C,EAAG2S,GAC1B,YAEA,IAAIrS,GAAOpY,IAKXA,MAAK8kD,QAAUr6B,EAAY9qB,GAAG8qB,GAAWsL,kBAAoBp2B,GAAGo2B,kBAChE/1B,KAAK8kD,QAAQ90C,MAAMhQ,KAAM8H,WAGzBnI,GAAG6B,OAAOxB,KAAK2e,UACX/e,QAAS,KAET4jB,OAAQ,KAER4qC,YAAa,KAEbhH,aACIC,kBACAqC,sBAAsB,GAG1BrmD,MACI8pD,eAAgB,6BAChBK,WAAY,gBACZvD,mBAAoB,gBACpB3iB,OAAQ,UAGZ+mB,SAAU,cAEVtkC,SACIs/B,SAAU,qBACVrN,UAAW,sBACXpwC,QAAS,oBACTy+C,KAAM,iBACNiE,SAAU,cACVzuD,KAAM,UACNiiD,WAAY,8BAGhByL,yBACIH,KAAM,UACNC,iBAAkB,QAClBI,eAAe,GAGnBl9B,UACIg+B,kBAAmB,6BACnBC,mBAAoB,kFAGxBvqC,OACImnC,mBAAmB,EACnBC,cAAe,oCAGnB7qC,YACIgrC,cAAc,EACdM,eAAgB,8CAChBD,mBAAoB,cACpBF,mBAAoB,iBAIxB5rD,SACI+sD,kBAAkB,EAClBR,cAAc,GAGlBvkC,OACI0mC,eAAe,EACfZ,kBAAmB,0BAGvBjB,YACIv0B,cAAe,KACfq2B,SAAU,EACVT,cACIC,mBAAmB,EACnBS,iBAAkB,KAClBC,YAAa,MAEjBC,kBAAmB,KAGvBx4C,SACIg2C,YAAY,GAGhBsB,YAAa,SAAS5nD,GAClB,MAAIqS,GAAK2sC,YAAY+J,UAAU,SACpB12C,EAAK2sC,YAAYgK,WAAW,QAAShpD,OAG5CujB,YAAW,WACPzkB,OAAOssB,MAAMprB,IACd,IAIXimD,YAAa,SAASjmD,GAClB,MAAIqS,GAAK2sC,YAAY+J,UAAU,WACpB12C,EAAK2sC,YAAYgK,WAAW,UAAWhpD,GAGvClB,OAAOmqD,QAAQjpD,IAI9BgoD,WAAY,SAAShoD,EAASkpD,GAC1B,MAAI72C,GAAK2sC,YAAY+J,UAAU,UACpB12C,EAAK2sC,YAAYgK,WAAW,SAAUhpD,EAASkpD,GAG/CpqD,OAAOqqD,OAAOnpD,EAASkpD,MAGvC,GAGHtvD,GAAG6B,OAAOxB,KAAK2e,SAAU7G,GAAG,GAE5B9X,KAAK+kD,YAAc,GAAIplD,IAAGwvD,YACtBrpD,IAAKnG,GAAGgQ,KAAK3P,KAAK8F,IAAK9F,MACvBovD,eAAgBpvD,KAAK2e,SAAS0vC,SAC9BgB,YAAarvD,KAAK2e,SAAS/e,QAC3B0vD,gBAAiBtvD,KAAK2e,SAASyvC,YAC/B5qC,OAAQxjB,KAAK2e,SAAS6E,OACtBg1B,eAAgBx4C,KAAKqhB,gBACrB0I,SACIlqB,KAAMG,KAAK2e,SAASoL,QAAQlqB,KAC5ByuD,SAAUtuD,KAAK2e,SAASoL,QAAQukC,UAEpC/Z,QACIgb,UAAWvvD,KAAK2e,SAASiuC,WAAW8B,SACpCG,kBAAmB7uD,KAAK2e,SAASiuC,WAAWiC,mBAEhDZ,cACIuB,gBAAiBxvD,KAAK2e,SAASiuC,WAAWqB,aAAaC,kBACvDuB,sBAAuBzvD,KAAK2e,SAASiuC,WAAWqB,aAAaU,iBAC7De,oBAAqB1vD,KAAK2e,SAASiuC,WAAWqB,aAAaW,aAE/DvrD,KAAMrD,KAAK2e,SAAStb,OAGpBrD,KAAK2e,SAAS8K,YAAYyH,mBAAqBvxB,GAAG6O,UAAY7O,GAAG+O,YACjE1O,KAAK+kD,YAAY4K,cAAc3vD,KAAK2e,SAAS4R,SAASa,+BAEhDzxB,GAAGkT,kBAAkB2D,WAAcxW,KAAK2e,SAAS2I,KAAKsI,WAAajwB,GAAGkT,kBAAkB4D,WAC9FzW,KAAK+kD,YAAY4K,cAAc3vD,KAAK2e,SAAS4R,SAASi+B,qBAGtDxuD,KAAKy1B,iBAELz1B,KAAK+kD,YAAY5W,SAEjBnuC,KAAKopD,SAAWppD,KAAK2e,SAASoL,SAEzB/pB,KAAK2e,SAAS6E,QAAUxjB,KAAK+kD,YAAYljC,cAC1C7hB,KAAKotB,iBAAmBptB,KAAKupB,qBACzB3pB,QAASI,KAAK+kD,YAAYljC,YAC1B1J,MAAOnY,KAAK2e,SAAStb,KAAKgnB,iBAC3B5Q,eAGPzZ,KAAK2lD,kCAEDhmD,GAAG+/C,aAAe//C,GAAGkT,kBAAkB+C,WACvC5V,KAAKmlD,KAAOnlD,KAAKwlD,qBAGjBxlD,KAAK2e,SAASoJ,MAAMD,eAAiB9nB,KAAK2e,SAASoJ,MAAM0mC,gBACrD9uD,GAAGkoB,aACH7nB,KAAK4tD,oBAGL5tD,KAAK8F,IAAI,kCAAmC,UAIpD9F,KAAKylD,mBAAqB,EAC1BzlD,KAAK0lD,uBAAyB,IAKtC/lD,GAAG6B,OAAO7B,GAAGwuD,aAAa9nD,UAAW1G,GAAGie,eACxCje,GAAG6B,OAAO7B,GAAGwuD,aAAa9nD,UAAW1G,GAAGomB,gBAGxCpmB,GAAG6B,OAAO7B,GAAGwuD,aAAa9nD,UAAW1G,GAAGklD,aACxCllD,GAAG6B,OAAO7B,GAAGwuD,aAAa9nD,UAAW1G,GAAG2mD,cC5LxC3mD,GAAGwvD,WAAa,SAAS9zC,GACrB,YAEA,IA4EIvV,GACA8pD,EACAC,EACAC,EACAruC,EACAqN,EACAihC,EACAC,EAnFAC,EAAe,aACfC,EAAoB,cACpBC,EAA0B,cAC1BC,EAA8B,kBAE9BC,EAAqB,mBACrBC,EAAsB,oBACtBC,EAAoB,iBACpBC,EAAuB,oBACvBC,GACIC,QAASlnD,SAASmnD,yBAClBC,QAEJC,GAAmB,EACnBC,EAAsB,EACtBC,GAA+B,EAC/BC,KACAC,GAAmB,EACnB/4C,GACIpS,IAAK,KACLyuC,QACIgb,UAAW,EACXV,kBAAmB,KAEvBO,eAAgB,cAChBC,YAAa,KACbC,gBAAiB,KACjB9rC,OAAQ,KACRg1B,eAAgB,KAChBzuB,SACIlqB,KAAM,UACNyuD,SAAU,eAEdL,cACIuB,iBAAiB,EACjBC,sBAAuB,KACvBC,oBAAqB,MAEzBrsD,MACIikC,OAAQ,WAGhB4pB,GACI1tC,OAAQ,4BACR2tC,YAAa,2BACbC,mBAAoB,4BACpBC,cAAe,6BACfC,cAAe,6BACfC,eAAgB,wBAChBC,aAAc,4BACdC,SAAU,uBACVC,KAAM,+BACNC,KAAM,0BACNC,qBAAsB,qCACtBz7C,YAAa,2BACb07C,0BAA2B,2CAC3BC,iBAAkB,iCAClBtyC,KAAM,0BACNuyC,QAAS,6BACTv2C,KAAM,0BACNoE,OAAQ,4BACR1J,MAAO,2BACP87C,eAAgB,8BAChBC,aAAc,4BACdhuC,MAAO,2BACPiuC,WAAY,iCACZC,kBAAmB,4BACnBC,aAAc,iCACdC,SAAU,oCACVC,eAAgB,8BAChBC,sBAAuB,sCACvBC,UAAW,yBAEfC,KACAC,EAAiC,GAAI/yD,IAAG+L,QACxCinD,EAA+B,GAAIhzD,IAAG+L,QAatCknD,EAA6B,WACzB,GAAIC,GAAmB36C,EAAQ+1C,aAAawB,sBACxCqD,EAAa56C,EAAQ+1C,aAAayB,oBAClCr0C,GACI2F,QAASiwC,EACT1vC,MAAOyuC,EAGXD,KACI8C,EACA36C,EAAQsgC,eAAe92B,SAASmxC,EAAiB,GAAIjlB,OAASvyB,GAAMtE,KAChE,SAASg8C,GACLL,EAA+B9mD,QAAQmnD,IAE3C,WACIL,EAA+B5mD,UAC/BhG,EAAI,wDAA0D+sD,EAAiB,WAKvFH,EAA+B5mD,UAG/BgnD,EACA56C,EAAQsgC,eAAe92B,SAASoxC,EAAY,GAAIllB,OAASvyB,GAAMtE,KAC3D,SAASg8C,GACLJ,EAA6B/mD,QAAQmnD,IAEzC,WACIJ,EAA6B7mD,UAC7BhG,EAAI,gEAAkEgtD,EAAY,WAK1FH,EAA6B7mD,YAOzCknD,EAAoB,SAASR,GACzB,GAAIS,GAAsB,GAAItzD,IAAG+L,OAwBjC,OAtBAinD,GAA6B57C,KAAK,SAASmzB,GACvCgpB,EAA4BhpB,EAAKsoB,GAE5BA,EAAUxkB,IASXilB,EAAoBrnD,WARpB4mD,EAAUxkB,IAAM9D,EAAI8D,IACpBwkB,EAAU7mD,OAAS,WACf6mD,EAAU7mD,OAAS,KACnBwnD,GAAKX,GACLS,EAAoBrnD,aAM7B,WAIC/L,EAAK2yD,GACLS,EAAoBrnD,YAGjBqnD,GAGXG,EAAqB,SAASh5C,EAAIhP,EAAMiQ,GACpC,GAAIm3C,GAAYa,EAAaj5C,EAK7B,OAHAtU,GAAI,gCAAkCsU,GACtChP,EAAKkoD,cAAgBl5C,EAEdlC,EAAQsgC,eAAe92B,SAAStW,EAAMonD,EAAWn3C,GAAMtE,KAC1D,WACI+5C,IACAqC,GAAKX,GACLC,EAAkBr4C,GAAIxO,WAE1B,WACI6mD,EAAkBr4C,GAAItO,UAIjBoM,EAAQ+1C,aAAauB,iBACtB+D,EAA+Bn5C,EAAIo4C,MAKnDgB,EAA4B,WACxB,GAAIxC,EAAqBtrD,OAAQ,CAC7BqrD,GAA+B,CAE/B,IAAI0C,GAAqBzC,EAAqB3+C,OAE1CohD,GAAmBC,OACnBC,EAAkCF,GAGlCG,EAA+BH,OAInC1C,IAA+B,GAIvC8C,EAAY,SAASz5C,GACjB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgBtxC,SAGtDm0C,EAAc,SAAS35C,GACnB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgBc;EAGtDgC,EAAY,SAAS9zD,GACjB,MAAO4zD,GAAcryC,EAAWyvC,EAAgBhxD,EAAO,YAG3D+zD,EAAY,SAAS75C,GACjB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgBe,eAGtDiC,EAAoB,WAChB,MAAOJ,GAAcryC,EAAWyvC,EAAgBoB,iBAGpD6B,EAAc,SAAS/5C,GACnB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgBkB,eAGtD5wC,EAAU,SAASpH,GACf,MAAOq2C,GAAUG,IAAIx2C,IAAOza,GAAGmvB,GAAUhsB,gBAAgBotD,EAAoB91C,IAGjFtI,EAAc,SAASsI,GACnB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgB1xC,OAGtD40C,EAAW,SAASh6C,GAChB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgBh7C,QAGtDm+C,EAAc,SAASj6C,GAGnB,MAAU,OAANA,EACO05C,EAAcryC,EAAWyvC,EAAgBW,4BAC5CiC,EAAcryC,EAAWyvC,EAAgBY,kBAI1CgC,EAActyC,EAAQpH,GAAK82C,EAAgBU,uBAC9CkC,EAActyC,EAAQpH,GAAK82C,EAAgB/6C,cAGnDm+C,EAAW,SAASl6C,GAChB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgBjtC,QAGtDzB,EAAU,SAASpI,GACf,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgB11C,OAGtD+4C,EAAa,SAASn6C,GAClB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgBa,UAGtD+B,EAAgB,SAASjkD,EAAS2kD,GAC9B,MAAO3kD,IAAWlQ,GAAGkQ,GAAS/M,gBAAgB0xD,IAGlDnB,EAAe,SAASj5C,GACpB,MAAO21C,IAAkB+D,EAActyC,EAAQpH,GAAK82C,EAAgBsB,YAGxE3yD,EAAO,SAAS+uC,GACZA,GAAMjvC,GAAGivC,GAAI5sC,SAASkW,EAAQ6R,QAAQlqB,OAM1CqzD,EAA8B,SAASpiC,EAAa0hC,GAChD,GAAIl8B,GAAWxF,EAAYhxB,MAAMw2B,SAC7BD,EAAYvF,EAAYhxB,MAAMu2B,SAE9BA,IAAaC,IAAak8B,EAAU1yD,MAAMw2B,WAAak8B,EAAU1yD,MAAMu2B,WACvE12B,GAAG6yD,GAAWvxD,KACVq1B,SAAUA,EACVD,UAAWA,KAQvBk9B,EAAiC,SAASn5C,EAAIo4C,GAC1C,GAAIiC,GAAahC,EAAkBr4C,KAAO,GAAIza,IAAG+L,SAAUI,UACvD4oD,EAA2B,GAAI/0D,IAAG+L,OAqBtC,OAnBAgnD,GAA+B37C,KAAK,SAASmzB,GACzCuqB,EAAW19C,KACP,WACI29C,EAAyB9oD,WAE7B,WACIsnD,EAA4BhpB,EAAKsoB,GAEjCA,EAAU7mD,OAAS,WACf6mD,EAAU7mD,OAAS,KACnB+oD,EAAyB9oD,WAG7B4mD,EAAUxkB,IAAM9D,EAAI8D,IACpBmlB,GAAKX,OAKVkC,GAWXC,EAAsB,WAClB,GAAIC,GACAC,EACAC,EACAC,EACAC,EACAC,EACAxT,EACA+Q,EACAF,EACA4C,EACAC,CAKJ,IAHArvD,EAAI,oBAG0B,MAA1BoS,EAAQk3C,eACR,KAAM,IAAIjuD,OAAM,oDAIpB,IAAIxB,GAAGwH,SAAS+Q,EAAQk3C,gBAAiB,CAGrC,GAFAwF,EAAWprD,SAASq7B,eAAe3sB,EAAQk3C,gBAE1B,OAAbwF,EACA,KAAM,IAAIzzD,OAAMxB,GAAG8H,OAAO,0CAA2CyQ,EAAQk3C,gBAGjFyF,GAAaD,EAAS1lD,cAErB,CACD,GAAyCpL,SAArCoU,EAAQk3C,eAAelgD,UACvB,KAAM,IAAI/N,OAAM,gGAIpB0zD,GAAa38C,EAAQk3C,eAAelgD,UA4ExC,GAzEA2lD,EAAal1D,GAAG0H,QAAQwtD,GACxBE,EAAiBvrD,SAASC,cAAc,OACxCsrD,EAAe5jD,YAAYxR,GAAGoP,UAAU8lD,IACxCM,EAAax1D,GAAGo1D,GAAgBjyD,gBAAgBouD,EAAgBO,UAI5Dv5C,EAAQsL,SACRyxC,EAAgBt1D,GAAGo1D,GAAgBjyD,gBAAgBouD,EAAgB1tC,QAC/DyxC,GACAt1D,GAAGs1D,GAAel0D,UASrBpB,GAAG+/C,aAAgB//C,GAAGkT,kBAAkB+C,WACzC08C,EAAiB3yD,GAAGo1D,GAAgBjyD,gBAAgBouD,EAAgBoB,gBAChEA,GACA3yD,GAAG2yD,GAAgBvxD,UAI3B0gD,EAAW9hD,GAAGo1D,GAAgBjyD,gBAAgBouD,EAAgBQ,MAI1DjQ,IAAa9hD,GAAG+/C,cAChB55C,EAAI,0BAA2B,QAC/BnG,GAAG8hD,GAAU1gD,UAGZpB,GAAGkT,kBAAkB+C,SAajBjW,GAAGw1D,GAAY1xD,aAAa6sD,IAAwB7O,IACzDyT,EAAav1D,GAAG8hD,GAAU3+C,gBAAgBouD,EAAgBmB,UAC1D6C,GAAcv1D,GAAGu1D,GAAYn0D,WAb7Bo0D,EAAWv7C,gBAAgB02C,GAEvB7O,GAAY9hD,GAAG8hD,GAAUh+C,aAAa4sD,IAItC1wD,GAAG8hD,GAAUxgD,KACTlB,QAAS,UAWrByyD,EAAY7yD,GAAGo1D,GAAgBjyD,gBAAgBouD,EAAgBsB,WAC1DzC,EAGIyC,IACLvB,EAAmBjvB,SAASwwB,EAAU3uD,aAAassD,IAEnDc,EAAmBA,EAAmB,EAAIA,EAAmB,KAE7DjB,EAAcrwD,GAAG6yD,GAAW/uD,aAAa2sD,IAPzCoC,GAAa7yD,GAAG6yD,GAAWzxD,SAS/BgvD,EAAiBA,GAAkByC,EAEnC5C,EAAsBjwD,GAAGo1D,GAAgB5yD,WAAW+uD,EAAgBiB,mBAAmBzsD,OAAS,EAChGmqD,EAAsBlwD,GAAGo1D,GAAgB5yD,WAAW+uD,EAAgBjtC,OAAOve,OAAS,EAEpFovD,EAAen1D,GAAGo1D,GAAgBjyD,gBAAgBouD,EAAgBS,MAE9C,MAAhBmD,EACA,KAAM,IAAI3zD,OAAM,0DAapB,OAVA6zD,GAAeF,EAAa5lD,UAC5B4lD,EAAa5lD,UAAY,GAGrB6lD,EAAetyD,qBAAqB,UAAUiD,QAC9C8D,SAASC,cAAc,UAG3B3D,EAAI,8BAGAuoD,SAAU1uD,GAAG0H,QAAQ0tD,EAAe7lD,WACpCkmD,aAAcz1D,GAAG0H,QAAQ2tD,KAIjCK,EAAc,SAASzmB,EAAI/zB,EAAOiU,GAC9B,GAAIwmC,GAAWxmC,EACXymC,EAAWD,EAASryD,UAEpB4X,GAAQ,IACR06C,EAAW51D,GAAG21D,GAAUvyD,WAAW8X,GAAO1X,aAI9CmyD,EAAS10D,aAAaguC,EAAI2mB,IAG9B3B,EAAiC,SAASH,GACtC,GAAIr5C,GAAKq5C,EAAmBr5C,GACxBo7C,EAAgB/B,EAAmB+B,cACnCC,EAAqBD,GAAiBA,EAAclC,cACpDd,EAAYa,EAAaj5C,GACzBiB,GACI6F,qBAAsBuyC,EAAmBvyC,qBACzCF,QAASiwC,EACT14B,QAAQ,EACRhX,OAAO,EAGX5hB,IAAGkT,kBAAkBkD,cACjBy8C,EACIt6C,EAAQq8B,OAAOgb,WAAar3C,EAAQq8B,OAAOgb,WAAauB,GACxDyC,EAA+Bn5C,EAAIo4C,GACnCgB,KAGAR,EAAkBR,GAAWh7C,KAAK,WAC9Bi7C,EAAkBr4C,GAAM,GAAIza,IAAG+L,QAE/B+mD,EAAkBr4C,GAAI5C,KAAK,WACvB8R,WAAWkqC,EAA2Bt7C,EAAQq8B,OAAOsa,qBAM/B,MAAtB4G,EACAC,GAAiBt7C,EAAIq7C,GAGrBrC,EAAmBh5C,EAAIo7C,EAAen6C,KAOlDm4C,IAGChB,IACLQ,EAAkBR,GAClBgB,MAIRG,EAAoC,SAASF,GACzC,GAAIr5C,GAAKq5C,EAAmBr5C,GACxB+L,EAAestC,EAAmBttC,aAClCwvC,EAAiBlC,EAAmBkC,eACpCnD,EAAYa,EAAaj5C,GACzBiB,GACI6F,qBAAsBuyC,EAAmBvyC,qBACzCK,MAAOyuC,EACPhvC,QAASiwC,EAGjB,IAAIuB,EACA,GAAIrsC,EAAc,CACd,KAAIjO,EAAQq8B,OAAOgb,WAAar3C,EAAQq8B,OAAOgb,WAAauB,GASxD,MAJI6E,IACA3C,EAAkBR,GAGft6C,EAAQsgC,eAAe92B,SAASyE,EAAcqsC,EAAWn3C,GAAMtE,KAClE,WACIo8C,GAAKX,GACL1B,IACAxnC,WAAWkqC,EAA2Bt7C,EAAQq8B,OAAOsa,oBAGzD,WACI0E,EAA+Bn5C,EAAIo4C,GACnClpC,WAAWkqC,EAA2Bt7C,EAAQq8B,OAAOsa,oBAjB7D0E,GAA+Bn5C,EAAIo4C,GACnCgB,QAsBJD,GAA+Bn5C,EAAIo4C,GACnCgB,KAKZoC,GAAsB,SAASx7C,EAAIy7C,GAC/B,GAAIC,GAAMzB,EAAYj6C,GAElB27C,EAA4B,MAAN37C,EAAa82C,EAAgBY,iBAAmBZ,EAAgB/6C,WAEtF2/C,KAAQn2D,GAAGm2D,GAAKr0D,SAASs0D,KACzBD,EAAMn2D,GAAGm2D,GAAKhzD,gBAAgBizD,IAG9BD,IACAn2D,GAAGm2D,GAAK70D,KAAKupC,MAAOqrB,EAAU,MAC9BC,EAAI5kD,aAAa,gBAAiB2kD,KAI1C1C,GAAO,SAASvkB,GACZA,GAAMjvC,GAAGivC,GAAI3sC,YAAYiW,EAAQ6R,QAAQlqB,OAG7C61D,GAAmB,SAASM,EAAmBC,GAC3C,GAAIC,GAAkB7C,EAAa2C,GAC/BG,EAAkB9C,EAAa4C,EAEnCnwD,GAAInG,GAAG8H,OAAO,qFAAsFuuD,EAAmBC,EAAmBA,IAG1IxD,EAAkBwD,GAAmBl/C,KAAK,WACtC+5C,IACA2B,EAAkBuD,GAAmBpqD,UACrC9F,EAAInG,GAAG8H,OAAO,uEAAwEwuD,EAAmBD,IACzGE,EAAgBloB,IAAMmoB,EAAgBnoB,IACtCmlB,GAAK+C,IAET,WACIzD,EAAkBuD,GAAmBlqD,UAChCoM,EAAQ+1C,aAAauB,iBACtB+D,EAA+ByC,EAAmBE,KAKlEv2D,IAAG6B,OAAO0W,EAASmD,GACnBvV,EAAMoS,EAAQpS,IAITnG,GAAGkT,kBAAkBkD,gBACtBmC,EAAQq8B,OAAOsa,kBAAoB,EACnC32C,EAAQq8B,OAAOgb,UAAY,GAG/B9tC,EAAYvJ,EAAQm3C,YACpBU,EAA4CjsD,SAA3BoU,EAAQsgC,eACzBsX,EAAe6E,IAEf/B,IAEAjzD,GAAG6B,OAAOxB,MACNmuC,OAAQ,WACJroC,EAAI,8BAEJgrD,EAAsB,EAEtBrvC,EAAUvS,UAAY4gD,EAAazB,SACnCxuD,EAAKq0D,KACLl0D,KAAKo2D,oBACLtnC,EAAW5W,EAAQo3C,iBAAmBwE,EAAcryC,EAAWyvC,EAAgBS,MAE/E7rD,EAAI,gCAGR6pD,cAAe,SAAS5pD,GACpB,GAAIswD,GAAe12D,GAAGoP,UAAUhJ,EAChC0b,GAAUvS,UAAY,GACtBuS,EAAUtQ,YAAYklD,IAG1Bv8C,MAAO,WACH9Z,KAAKmuC,UAGT8W,WAAY,WACRn2B,EAAS5f,UAAY,IAGzBq9C,cAAe,WACXsE,GAAmB,GAGvBz1C,QAAS,SAAShB,EAAI1Y,EAAM40D,EAAaC,EAAaC,GAClD,GAIIC,GAJAC,EAAS/2D,GAAGoP,UAAU+gD,EAAasF,cACnCuB,EAAa7C,EAAc4C,EAAQxF,EAAgB1xC,MACnD21C,EAAarB,EAAcryC,EAAWyvC,EAAgBO,UACtD/xC,EAAgB82C,EAAQ/F,EAAUC,QAAU5hC,CAG5C0nC,KACA/F,EAAUG,IAAIx2C,GAAMs8C,GAGxB/2D,GAAG+2D,GAAQ10D,SAASkuD,EAAoB91C,GACxC+6C,EAAWv7C,gBAAgB02C,GAEvBqG,IACAh3D,GAAGg3D,GAAYvzD,QAAQ1B,GACvBi1D,EAAWzlD,aAAa,QAASxP,IAGrCg1D,EAAOxlD,aAAa++C,EAAc71C,GAE9Bk8C,EACAjB,EAAYqB,EAAQJ,EAAYz7C,MAAO6E,GAGvCA,EAAcvO,YAAYulD,GAG1BH,GACAG,EAAO52D,MAAMC,QAAU,OACvBJ,GAAG+2D,GAAQ10D,SAASwuD,KAGpB3wD,EAAKw0D,EAAYj6C,IACjBva,EAAK2iB,EAAQpI,IACbva,EAAKo0D,EAAU75C,IACfva,EAAKy0D,EAASl6C,IACdva,EAAKu0D,EAASh6C,IACdva,EAAKk0D,EAAY35C,IAEby2C,GACA7wD,KAAK+pD,WAAW3vC,GAGpBq8C,EAAQpD,EAAaj5C,GACjBq8C,IAAUA,EAAMzoB,KAChB2kB,EAA6B57C,KAAK,SAAS6/C,GACvCH,EAAMzoB,IAAM4oB,EAAW5oB,IACnB4oB,EAAW92D,MAAMu2B,WAAaugC,EAAW92D,MAAMw2B,UAC/C32B,GAAG82D,GAAOx1D,KACNo1B,UAAWugC,EAAW92D,MAAMu2B,UAC5BC,SAAUsgC,EAAW92D,MAAMw2B,WAInC68B,GAAKsD,OAMrB/J,eAAgB,SAAStyC,EAAI1Y,EAAM40D,EAAaC,GAC5Cv2D,KAAKob,QAAQhB,EAAI1Y,EAAM40D,EAAaC,GAAa,IAGrDvR,cAAe,WACXl2B,EAAS3d,YAAYs/C,EAAUC,SAC/BD,EAAUC,QAAUlnD,SAASmnD,yBAC7BF,EAAUG,QAGdpK,WAAY,SAASpsC,GACjBza,GAAG6hB,EAAQpH,IAAKrZ,UAGpBolD,UAAW,SAASvX,GAChB,GAAIioB,GAAcjoB,CAElB,IAAIioB,EAAa,CAEb,KAAiD,MAA1CA,EAAYhzD,aAAaosD,IAC5B4G,EAAcA,EAAY/1D,UAG9B,OAAOkhC,UAAS60B,EAAYhzD,aAAaosD,MAIjD6G,YAAa,WACT,MAAOhoC,IAGXm6B,qBAAsB,SAAS7uC,GAC3B,GAAI1I,GAAWI,EAAYsI,EAE3B1I,IAAY/R,GAAG+R,GAAU1P,SAASkW,EAAQ6R,QAAQukC,WAGtDzI,eAAgB,SAASzrC,EAAI1Y,GACzB,GAAIq1D,GAAajlD,EAAYsI,EAEzB28C,KACAp3D,GAAGo3D,GAAY3zD,QAAQ1B,GACvBq1D,EAAW7lD,aAAa,QAASxP,KAIzCmnD,aAAc,SAASzuC,GACnBva,EAAKiS,EAAYsI,KAGrB2uC,aAAc,SAAS3uC,GACnB+4C,GAAKrhD,EAAYsI,KAGrB48C,WAAY,SAASpoB,GACjB,MAAOjvC,IAAGivC,GAAIntC,SAASyvD,EAAgB1xC,OAG3CqC,UAAW,WACP,MAAO3J,GAAQsL,QAAUswC,EAAcryC,EAAWyvC,EAAgB1tC,SAGtEkkC,mBAAoB,WAChB7nD,EAAKq0D,MAGTzM,mBAAoB,WAChB0L,GAAKe,MAGT1M,YAAa,WACT,MAAOsM,GAAcryC,EAAWyvC,EAAgBQ,OAGpDxJ,uBAAwB,WACpB,MAAO0H,IAGX1G,UAAW,SAAS9uC,GAChBva,EAAKy0D,EAASl6C,KAGlBmwC,gBAAiB,WACb,MAAOsF,IAGXrF,UAAW,SAASpwC,GAChB+4C,GAAKmB,EAASl6C,KAGlBmrC,iBAAkB,SAASnrC,GACvB,MAAOoH,GAAQpH,IAGnB4uC,aAAc,SAAS5uC,GACnB,GAAI68C,GAAO9C,EAAY/5C,EAEvB68C,IAAQt3D,GAAGs3D,GAAMj1D,SAASkW,EAAQ6R,QAAQukC,WAG9ChJ,gBAAiB,SAASlrC,GACtB,MAAOza,IAAG6hB,EAAQpH,IAAK3Y,SAAS+uD,IAGpC1H,aAAc,SAAS1uC,GACnB,GAAI68C,GAAO9C,EAAY/5C,EAEvB68C,IAAQt3D,GAAGs3D,GAAMh1D,YAAYiW,EAAQ6R,QAAQukC,WAGjD4I,WAAY,SAAStoB,GACjB,MAAOjvC,IAAGivC,GAAIntC,SAASyvD,EAAgBkB,cAAc,IAGzDzJ,aAAc,SAASvuC,GACnB,MAAO05C,GAActyC,EAAQpH,GAAK82C,EAAgBiB,oBAGtDgF,YAAa,SAASvoB,GAClB,MAAOjvC,IAAGivC,GAAIntC,SAASyvD,EAAgBiB,mBAAmB,IAG9DrI,eAAgB,SAAS1vC,EAAI0Q,EAAQC,GACjC,GACI8qC,GADAC,EAAMzB,EAAYj6C,EAGlB07C,IAAO/qC,EAAQ,IACf8qC,EAAUv0D,KAAKC,MAAMupB,EAASC,EAAQ,KAEtB,MAAZ8qC,EACAh2D,EAAKi2D,GAGL3C,GAAK2C,GAGTF,GAAoBx7C,EAAIy7C,KAIhC1Z,oBAAqB,SAASrxB,EAAQC,GAClC/qB,KAAK8pD,eAAe,KAAMh/B,EAAQC,IAGtCi/B,aAAc,SAAS5vC,GACnB,GAAI07C,GAAMzB,EAAYj6C,EAEtB07C,IAAOj2D,EAAKi2D,IAGhBM,kBAAmB,WACfp2D,KAAKgqD,gBAGTsB,cAAe,SAASlxC,GACpBw7C,GAAoBx7C,EAAI,GACxBpa,KAAKo2D,kBAAkBh8C,IAG3BqvC,mBAAoB,WAChBzpD,KAAKsrD,iBAGThB,WAAY,SAASlwC,GACjB,IAAKy2C,EAAkB,CACnB,GAAIjxC,GAASi0C,EAAUz5C,EAEvBwF,IAAUjgB,GAAGigB,GAAQ3d,YAAYiW,EAAQ6R,QAAQlqB,QAIzDkqD,WAAY,SAAS3vC,GACjBva,EAAKg0D,EAAUz5C,KAGnBg9C,SAAU,SAASxoB,GACf,MAAOjvC,IAAGivC,GAAIntC,SAASyvD,EAAgBtxC,QAAQ,IAGnDmrC,WAAY,SAAS3wC,GACjB+4C,GAAKiB,EAASh6C,IACdva,EAAKk0D,EAAY35C,KAGrB0rC,aAAc,SAAS1rC,GACnBpa,KAAKmpD,cAAc/uC,EAAIlC,EAAQ7U,KAAKikC,QACpCtnC,KAAKq3D,oBAAoBj9C,GACzBva,EAAK00D,EAAWn6C,KAGpBkvC,UAAW,SAASlvC,GAChBva,EAAKu0D,EAASh6C,KAGlBk9C,QAAS,SAAS1oB,GACd,MAAOjvC,IAAGivC,GAAIntC,SAASyvD,EAAgBh7C,OAAO,IAGlDqhD,iBAAkB,SAAS3oB,GACvB,MAAOjvC,IAAGivC,GAAIntC,SAASyvD,EAAgBc,gBAAgB,IAG3DqF,oBAAqB,SAASj9C,GAC1B+4C,GAAKY,EAAY35C,IACjBva,EAAKu0D,EAASh6C,KAGlB4rC,gBAAiB,SAAS5rC,GACtBpa,KAAKmpD,cAAc/uC,EAAI,IACvBpa,KAAK+qD,WAAW3wC,GAChB+4C,GAAKoB,EAAWn6C,KAGpBwwC,iBAAkB,SAASxwC,GACvB+4C,GAAKc,EAAU75C,KAGnBwxC,iBAAkB,SAASxxC,GACvBva,EAAKo0D,EAAU75C,KAGnBo9C,eAAgB,SAAS5oB,GACrB,MAAOjvC,IAAGivC,GAAIntC,SAASyvD,EAAgBe,cAAc,IAGzDwF,QAAS,SAAS7oB,GACd,MAAOjvC,IAAGivC,GAAIntC,SAASyvD,EAAgBjtC,OAAO,IAGlDxH,WAAY,SAASrC,EAAI/W,GACrB,GAAImY,GAAOgH,EAAQpI,EAEfoB,KACA23C,GAAK33C,GACL7b,GAAG6b,GAAMpY,QAAQC,KAIzB8lD,cAAe,SAAS/uC,EAAI/W,GACxB,GAAIq0D,GAAS5D,EAActyC,EAAQpH,GAAK82C,EAAgBgB,WAEpDwF,KAEY,MAARr0D,EACA1D,GAAG+3D,GAAQl0D,YAGX7D,GAAG+3D,GAAQt0D,QAAQC,KAK/BmmD,YAAa,SAASpvC,GAClBza,GAAG6hB,EAAQpH,IAAKnY,YAAYsuD,GAC5B1wD,EAAK00D,EAAWn6C,KAGpB0wC,YAAa,SAAS1wC,GAClBza,GAAG6hB,EAAQpH,IAAKpY,SAASuuD,GACzB4C,GAAKoB,EAAWn6C,KAGpByyC,gBAAiB,SAASzyC,EAAIo7C,EAAet0C,GACpClhB,KAAKslD,gBAAgBlrC,KACtB42C,EAAqBnuD,MAAMuX,GAAIA,EAAI8G,qBAAsBA,EAAsBs0C,cAAeA,KAC7FzE,GAAgCyC,MAIzC7G,gBAAiB,SAASvyC,EAAI+L,EAAcwvC,EAAgBz0C,GACnDlhB,KAAKslD,gBAAgBlrC,KACtB42C,EAAqBnuD,MAAMqe,qBAAsBA,EAAsBwyC,QAAQ,EAAMt5C,GAAIA,EAAI+L,aAAcA,EAAcwvC,eAAgBA,KACxI5E,GAAgCyC,MAIzC1E,UAAW,SAAS5uD,GAChB,MAAOP,IAAGkT,kBAAkB6C,iBAAmBs+C,EAAU9zD,IAG7D6uD,WAAY,SAAS7uD,EAAM6F,EAASkpD,GAChC,GAAI0I,GAAS3D,EAAU9zD,GACnB03D,EAAY9D,EAAc6D,EAAQzG,EAAgBI,eAClDuG,EAAUF,EAAOl1D,qBAAqB,SAAS,GAC/Cq1D,EAAYhE,EAAc6D,EAAQzG,EAAgBE,oBAClD2G,EAAQjE,EAAc6D,EAAQzG,EAAgBK,gBAC9C9lD,EAAU,GAAI9L,IAAG+L,QAEjBssD,EAAe,WACXF,EAAUv3D,oBAAoB,QAAS03D,GACvCF,GAASA,EAAMx3D,oBAAoB,QAAS23D,GAC5CzsD,EAAQK,WAGZmsD,EAAqB,WACjBH,EAAUv3D,oBAAoB,QAAS03D,GACvCN,EAAOQ,SAGXD,EAAiB,WACbP,EAAOp3D,oBAAoB,QAASy3D,GACpCD,EAAMx3D,oBAAoB,QAAS23D,GACnCP,EAAOQ,QAEP1sD,EAAQG,QAAQisD,GAAWA,EAAQnxD,OAc3C,OAXAixD,GAAOv3D,iBAAiB,QAAS43D,GACjCF,EAAU13D,iBAAiB,QAAS63D,GACpCF,GAASA,EAAM33D,iBAAiB,QAAS83D,GAErCL,IACAA,EAAQnxD,MAAQuoD,GAEpB2I,EAAUr0D,YAAcwC,EAExB4xD,EAAOS,YAEA3sD,MC/gCnB9L,GAAG04D,eAAiB,SAASC,EAAGC,GAC5B,YAqBA,SAAS1O,GAAWjqD,GAChBwS,EAASnS,OAAOL,EAASyb,EAAKm9C,UAAW,SAASpkC,GAE9CA,EAAQA,GAASvvB,OAAOuvB,KAGxB,IAAIhoB,GAASgoB,EAAMhoB,QAAUgoB,EAAMqkC,UAEnCp9C,GAAKq9C,UAAUtsD,EAAQgoB,KA3B/B,GAAIhiB,GAAW,GAAIzS,IAAGsS,eAClBoJ,GACIm9C,UAAW,QACXG,SAAU,KACVD,UAAW,SAAStsD,EAAQgoB,KAKpCz0B,IAAG6B,OAAOxB,MACN6pD,WAAY,SAASjqD,GACjBiqD,EAAWjqD,IAGfuS,QAAS,WACLC,EAASD,aAiBjBxS,GAAG6B,OAAO+2D,GACNK,kBAAmB,SAAS3xD,GACxB,MAAOA,GAAK4xD,UAGhBC,kBAAmB,WACf,MAAO1mD,MAIfzS,GAAG6B,OAAO6Z,EAAMi9C,GAEZj9C,EAAKs9C,UACL9O,EAAWxuC,EAAKs9C,WClDxBh5D,GAAG+mD,wBAA0B,SAAS4R,GAClC,YAqBA,SAASS,GAAa3sD,EAAQgoB,GAC1Bz0B,GAAG+C,KAAKs2D,EAAgB,SAASC,EAAYxqC,GACzC,GACI3N,GADAo4C,EAA2BD,EAAWvpD,OAAO,GAAGoX,cAAgBmyC,EAAWpxD,MAAM,EAGrF,IAAIwT,EAAKisC,WAAW,KAAO4R,GAA0B9sD,GAKjD,MAJA0U,GAASzF,EAAKisC,WAAWnB,UAAU/5C,GACnCzM,GAAGiP,eAAewlB,GAClB/Y,EAAKvV,IAAInG,GAAG8H,OAAO,+DAAgE4T,EAAK4sC,UAAUnnC,GAASA,IAC3G2N,EAAQ3N,IACD,IA7BnB,GAAIq4C,MACA99C,GACIisC,WAAY,KACZxhD,IAAK,SAASC,EAAS6hD,KACvBC,aAAc,SAAS/mC,KACvBqK,SAAU,SAASrK,KACnBgnC,QAAS,SAAShnC,KAClBinC,QAAS,SAASjnC,KAClBknC,WAAY,SAASlnC,KACrBmnC,UAAW,SAASnnC,MAExBk4C,GACIp5C,OAAQ,SAASxF,GAAMiB,EAAK8P,SAAS/Q,IACrC6J,MAAQ,SAAS7J,GAAMiB,EAAKysC,QAAQ1tC,IACpC63C,aAAc,SAAS73C,GAAMiB,EAAKwsC,aAAaztC,IAC/ClE,MAAO,SAASkE,GAAMiB,EAAK0sC,QAAQ3tC,IACnC43C,eAAgB,SAAS53C,GAAMiB,EAAK2sC,WAAW5tC,IAkBvDza,IAAG6B,OAAO6Z,EAAMi9C,GAEhBj9C,EAAKm9C,UAAY,QACjBn9C,EAAKq9C,UAAYK,EACjB19C,EAAKs9C,SAAWt9C,EAAKisC,WAAWwP,cAEhCn3D,GAAG6B,OAAOxB,KAAM,GAAIL,IAAG04D,eAAeh9C,EAAM89C,KC1ChDx5D,GAAGwoD,qBAAuB,SAASmQ,GAC/B,YAiBA,SAASS,GAAa3sD,EAAQgoB,GAC1B,GAAI/Y,EAAKisC,WAAW0P,WAAW5qD,IAAWiP,EAAKisC,WAAW4P,WAAW9qD,GAAS,CAC1E,GAAI0U,GAASzF,EAAKisC,WAAWnB,UAAU/5C,GACnCsO,EAASW,EAAKitC,kBAAkBxnC,EAGhCpG,KAAW/a,GAAG+a,OAAOsC,YACrB3B,EAAKvV,IAAInG,GAAG8H,OAAO,4DAA6D4T,EAAK4sC,UAAUnnC,GAASA,IACxGnhB,GAAGiP,eAAewlB,GAElB+kC,EAAqBC,mBAAmBt4C,EAAQ1U,GAAQ,KAzBpE,GAAI+sD,MACA99C,GACIisC,WAAY,KACZxhD,IAAK,SAASC,EAAS6hD,KACvB79B,SACIvK,KAAM,iBACN4yC,aAAc,yBAElB9J,kBAAmB,SAASxnC,KAC5BmnC,UAAW,SAASnnC,KAG5BnhB,IAAG6B,OAAO6Z,EAAMi9C,GAkBhBj9C,EAAKm9C,UAAY,QACjBn9C,EAAKq9C,UAAYK,EAEjBp5D,GAAG6B,OAAOxB,KAAM,GAAIL,IAAG05D,oBAAoBh+C,EAAM89C,KCpCrDx5D,GAAG4pD,4BAA8B,SAAS+O,EAAGa,GACzC,YAaA,SAASG,GAAiBltD,EAAQgoB,GAC9B,GAAI/Y,EAAKisC,WAAW6P,YAAY/qD,GAAS,CACrC,GAAI0U,GAASzF,EAAKisC,WAAWnB,UAAU/5C,GACnCsO,EAASW,EAAKitC,kBAAkBxnC,EAEhCpG,KAAW/a,GAAG+a,OAAOsC,YACrB3B,EAAKvV,IAAInG,GAAG8H,OAAO,kEAAmE4T,EAAK4sC,UAAUnnC,GAASA,IAC9Gq4C,EAAqBC,mBAAmBt4C,EAAQ1U,KAlB5D,GAAIiP,IACIisC,WAAY,KACZgB,kBAAmB,SAASxnC,KAC5Bhb,IAAK,SAASC,EAAS6hD,KAG1BuR,KACDA,MAgBJ99C,EAAKm9C,UAAY,UACjBn9C,EAAKq9C,UAAYY,EAEjB35D,GAAG6B,OAAO6Z,EAAMi9C,GAChB34D,GAAG6B,OAAOxB,KAAM,GAAIL,IAAG05D,oBAAoBh+C,EAAM89C,KCzBrDx5D,GAAGyoD,0BAA4B,SAAS/sC,GACpC,YAEAA,GAAKm9C,UAAY,QACjBn9C,EAAKs9C,SAAW,KAEhBh5D,GAAG6B,OAAOxB,KAAM,GAAIL,IAAG4pD,4BAA4BluC,QCVvD1b,GAAG05D,oBAAsB,SAASf,EAAGa,GACjC,YAWA,SAASI,GAAyBz4C,GAC9B,GAAI04C,GAAkBn+C,EAAK4sC,UAAUnnC,GACjCnP,EAAS6nD,EAAgB5nD,YAAY,IAMzC,OAJID,GAAS,IACT6nD,EAAkBA,EAAgB3nD,OAAO,EAAGF,IAGzC6nD,EAGX,QAASC,GAAqB34C,GAC1B,GAAI44C,GAAWr+C,EAAK4sC,UAAUnnC,EAC9B,OAAOnhB,IAAG8R,aAAaioD,GAI3B,QAASC,GAAiBC,EAAoB94C,GAC1C,GACI+4C,GADAr9C,EAAUo9C,EAAmBlzD,KAGjB5C,UAAZ0Y,GAAyB7c,GAAG0H,QAAQmV,GAAS9W,OAAS,IACtDm0D,EAAgBJ,EAAqB34C,GAEfhd,SAAlB+1D,IACAr9C,EAAUA,EAAU,IAAMq9C,GAG9Bx+C,EAAKktC,UAAUznC,EAAQtE,IAG3BnB,EAAKmtC,sBAAsB1nC,GAAQ,GAIvC,QAASg5C,GAAyBjC,EAAS/2C,GACvCq4C,EAAqBL,oBAAoB74D,OAAO43D,EAAS,OAAQ,WAC7D8B,EAAiB9B,EAAS/2C,KAKlC,QAASi5C,GAA6BlC,EAAS/2C,GAC3Cq4C,EAAqBL,oBAAoB74D,OAAO43D,EAAS,QAAS,SAASzjC,GAEvE,GAAIlE,GAAOkE,EAAM4lC,SAAW5lC,EAAM6lC,KAErB,MAAT/pC,GACAypC,EAAiB9B,EAAS/2C,KAzDtC,GAAIzF,IACIisC,WAAY,KACZxhD,IAAK,SAASC,EAAS6hD,KACvBU,kBAAmB,SAASxnC,KAC5BmnC,UAAW,SAASnnC,KACpBynC,UAAW,SAASznC,EAAQtE,KAC5BgsC,sBAAuB,SAAS1nC,EAAQ2nC,KAwDhD9oD,IAAG6B,OAAO6Z,EAAMi9C,GAEhBj9C,EAAKs9C,SAAWt9C,EAAKisC,WAAWwP,cAEhCn3D,GAAG6B,OAAOxB,KAAM,GAAIL,IAAG04D,eAAeh9C,EAAM89C,IAE5Cx5D,GAAG6B,OAAO23D,GACNC,mBAAoB,SAASh/C,EAAIhO,EAAQ8tD,GACrC,GAAIN,GAAqBv+C,EAAKisC,WAAWqB,aAAavuC,EAEtDiB,GAAKmtC,sBAAsBpuC,GAAI,GAE/Bw/C,EAAmBlzD,MAAQ6yD,EAAyBn/C,GAEhD8/C,GACAN,EAAmBO,QAGvBL,EAAyBF,EAAoBx/C,GAC7C2/C,EAA6BH,EAAoBx/C,OC9E7Dza,GAAGy6D,SAAY,SAAU94D,EAAMwC,GAI3B,GAAIu2D,MAKAC,EAAQD,EAAEE,OAKVC,EAAOF,EAAME,KAAQ,WACrB,QAASC,MAET,OAmBIj5D,OAAQ,SAAUk5D,GAEdD,EAAEp0D,UAAYrG,IACd,IAAI26D,GAAU,GAAIF,EAoBlB,OAjBIC,IACAC,EAAQC,MAAMF,GAIbC,EAAQ7tD,eAAe,UACxB6tD,EAAQE,KAAO,WACXF,EAAQG,OAAOD,KAAK7qD,MAAMhQ,KAAM8H,aAKxC6yD,EAAQE,KAAKx0D,UAAYs0D,EAGzBA,EAAQG,OAAS96D,KAEV26D,GAeX/iD,OAAQ,WACJ,GAAImjD,GAAW/6D,KAAKwB,QAGpB,OAFAu5D,GAASF,KAAK7qD,MAAM+qD,EAAUjzD,WAEvBizD,GAeXF,KAAM,aAcND,MAAO,SAAUI,GACb,IAAK,GAAIC,KAAgBD,GACjBA,EAAWluD,eAAemuD,KAC1Bj7D,KAAKi7D,GAAgBD,EAAWC,GAKpCD,GAAWluD,eAAe,cAC1B9M,KAAKsG,SAAW00D,EAAW10D,WAanC40D,MAAO,WACH,MAAOl7D,MAAK66D,KAAKx0D,UAAU7E,OAAOxB,WAW1Cm7D,EAAYb,EAAMa,UAAYX,EAAKh5D,QAanCq5D,KAAM,SAAUO,EAAOC,GACnBD,EAAQp7D,KAAKo7D,MAAQA,MAEjBC,GAAYv3D,EACZ9D,KAAKq7D,SAAWA,EAEhBr7D,KAAKq7D,SAA0B,EAAfD,EAAM11D,QAiB9BY,SAAU,SAAUg1D,GAChB,OAAQA,GAAWC,GAAK//B,UAAUx7B,OActC+P,OAAQ,SAAUyrD,GAEd,GAAIC,GAAYz7D,KAAKo7D,MACjBM,EAAYF,EAAUJ,MACtBO,EAAe37D,KAAKq7D,SACpBO,EAAeJ,EAAUH,QAM7B,IAHAr7D,KAAK67D,QAGDF,EAAe,EAEf,IAAK,GAAIlrD,GAAI,EAAGA,EAAImrD,EAAcnrD,IAAK,CACnC,GAAIqrD,GAAYJ,EAAUjrD,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,GAC7DgrD,GAAWE,EAAelrD,IAAO,IAAMqrD,GAAa,IAAOH,EAAelrD,GAAK,EAAK,MAErF,IAAIirD,EAAUh2D,OAAS,MAE1B,IAAK,GAAI+K,GAAI,EAAGA,EAAImrD,EAAcnrD,GAAK,EACnCgrD,EAAWE,EAAelrD,IAAO,GAAKirD,EAAUjrD,IAAM,OAI1DgrD,GAAU54D,KAAKmN,MAAMyrD,EAAWC,EAKpC,OAHA17D,MAAKq7D,UAAYO,EAGV57D,MAUX67D,MAAO,WAEH,GAAIT,GAAQp7D,KAAKo7D,MACbC,EAAWr7D,KAAKq7D,QAGpBD,GAAMC,IAAa,IAAM,YAAe,GAAMA,EAAW,EAAK,EAC9DD,EAAM11D,OAASpE,EAAKonC,KAAK2yB,EAAW,IAYxCH,MAAO,WACH,GAAIA,GAAQV,EAAKU,MAAM30D,KAAKvG,KAG5B,OAFAk7D,GAAME,MAAQp7D,KAAKo7D,MAAMvzD,MAAM,GAExBqzD,GAgBXhuD,OAAQ,SAAU6uD,GAEd,IAAK,GADDX,MACK3qD,EAAI,EAAGA,EAAIsrD,EAAQtrD,GAAK,EAC7B2qD,EAAMv4D,KAAsB,WAAhBvB,EAAK4L,SAA0B,EAG/C,OAAO,IAAIiuD,GAAUN,KAAKO,EAAOW,MAOrCC,EAAQ3B,EAAE4B,OAKVV,EAAMS,EAAMT,KAcZ//B,UAAW,SAAUggC,GAOjB,IAAK,GALDJ,GAAQI,EAAUJ,MAClBC,EAAWG,EAAUH,SAGrBa,KACKzrD,EAAI,EAAGA,EAAI4qD,EAAU5qD,IAAK,CAC/B,GAAI0rD,GAAQf,EAAM3qD,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,GACrDyrD,GAASr5D,MAAMs5D,IAAS,GAAG71D,SAAS,KACpC41D,EAASr5D,MAAa,GAAPs5D,GAAa71D,SAAS,KAGzC,MAAO41D,GAAStrD,KAAK,KAgBzBW,MAAO,SAAU6qD,GAMb,IAAK,GAJDC,GAAeD,EAAO12D,OAGtB01D,KACK3qD,EAAI,EAAGA,EAAI4rD,EAAc5rD,GAAK,EACnC2qD,EAAM3qD,IAAM,IAAMuxB,SAASo6B,EAAOvqD,OAAOpB,EAAG,GAAI,KAAQ,GAAMA,EAAI,EAAK,CAG3E,OAAO,IAAI0qD,GAAUN,KAAKO,EAAOiB,EAAe,KAOpDC,EAASN,EAAMM,QAcf9gC,UAAW,SAAUggC,GAOjB,IAAK,GALDJ,GAAQI,EAAUJ,MAClBC,EAAWG,EAAUH,SAGrBkB,KACK9rD,EAAI,EAAGA,EAAI4qD,EAAU5qD,IAAK,CAC/B,GAAI0rD,GAAQf,EAAM3qD,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,GACrD8rD,GAAY15D,KAAK0E,OAAOi1D,aAAaL,IAGzC,MAAOI,GAAY3rD,KAAK,KAgB5BW,MAAO,SAAUkrD,GAMb,IAAK,GAJDC,GAAkBD,EAAU/2D,OAG5B01D,KACK3qD,EAAI,EAAGA,EAAIisD,EAAiBjsD,IACjC2qD,EAAM3qD,IAAM,KAAiC,IAA1BgsD,EAAU52D,WAAW4K,KAAe,GAAMA,EAAI,EAAK,CAG1E,OAAO,IAAI0qD,GAAUN,KAAKO,EAAOsB,KAOrCC,EAAOX,EAAMW,MAcbnhC,UAAW,SAAUggC,GACjB,IACI,MAAOoB,oBAAmBC,OAAOP,EAAO9gC,UAAUggC,KACpD,MAAO3sD,GACL,KAAM,IAAI1N,OAAM,0BAiBxBoQ,MAAO,SAAUurD,GACb,MAAOR,GAAO/qD,MAAMwrD,SAASpsD,mBAAmBmsD,OAWpDE,EAAyB1C,EAAM0C,uBAAyBxC,EAAKh5D,QAQ7DsY,MAAO,WAEH9Z,KAAKi9D,MAAQ,GAAI9B,GAAUN,KAC3B76D,KAAKk9D,YAAc,GAavBC,QAAS,SAAUx4D,GAEI,gBAARA,KACPA,EAAOg4D,EAAKprD,MAAM5M,IAItB3E,KAAKi9D,MAAMltD,OAAOpL,GAClB3E,KAAKk9D,aAAev4D,EAAK02D,UAiB7B+B,SAAU,SAAUC,GAEhB,GAAI14D,GAAO3E,KAAKi9D,MACZK,EAAY34D,EAAKy2D,MACjBmC,EAAe54D,EAAK02D,SACpBmC,EAAYx9D,KAAKw9D,UACjBC,EAA6B,EAAZD,EAGjBE,EAAeH,EAAeE,CAG9BC,GAFAL,EAEe/7D,EAAKonC,KAAKg1B,GAIVp8D,EAAKqrB,KAAoB,EAAf+wC,GAAoB19D,KAAK29D,eAAgB,EAItE,IAAIC,GAAcF,EAAeF,EAG7BK,EAAcv8D,EAAKw8D,IAAkB,EAAdF,EAAiBL,EAG5C,IAAIK,EAAa,CACb,IAAK,GAAInsB,GAAS,EAAGA,EAASmsB,EAAansB,GAAU+rB,EAEjDx9D,KAAK+9D,gBAAgBT,EAAW7rB,EAIpC,IAAIusB,GAAiBV,EAAUnhD,OAAO,EAAGyhD,EACzCj5D,GAAK02D,UAAYwC,EAIrB,MAAO,IAAI1C,GAAUN,KAAKmD,EAAgBH,IAY9C3C,MAAO,WACH,GAAIA,GAAQV,EAAKU,MAAM30D,KAAKvG,KAG5B,OAFAk7D,GAAM+B,MAAQj9D,KAAKi9D,MAAM/B,QAElBA,GAGXyC,eAAgB,IA2IhBM,GAnIS3D,EAAM4D,OAASlB,EAAuBx7D,QAI/C28D,IAAK3D,EAAKh5D,SAWVq5D,KAAM,SAAUsD,GAEZn+D,KAAKm+D,IAAMn+D,KAAKm+D,IAAI38D,OAAO28D,GAG3Bn+D,KAAK8Z,SAUTA,MAAO,WAEHkjD,EAAuBljD,MAAMvT,KAAKvG,MAGlCA,KAAKo+D,YAeT1K,OAAQ,SAAU2K,GAQd,MANAr+D,MAAKm9D,QAAQkB,GAGbr+D,KAAKo9D,WAGEp9D,MAiBX++B,SAAU,SAAUs/B,GAEZA,GACAr+D,KAAKm9D,QAAQkB,EAIjB,IAAIC,GAAOt+D,KAAKu+D,aAEhB,OAAOD,IAGXd,UAAW,GAeXgB,cAAe,SAAUC,GACrB,MAAO,UAAU14D,EAASo4D,GACtB,MAAO,IAAIM,GAAO5D,KAAKsD,GAAKp/B,SAASh5B,KAiB7C24D,kBAAmB,SAAUD,GACzB,MAAO,UAAU14D,EAASyJ,GACtB,MAAO,IAAIyuD,GAAOU,KAAK9D,KAAK4D,EAAQjvD,GAAKuvB,SAASh5B,OAQjDs0D,EAAEuE,QAEf,OAAOvE,IACT/4D,MCjsBD,WAEG,GAAI+4D,GAAI16D,GAAGy6D,SACPE,EAAQD,EAAEE,IACVY,EAAYb,EAAMa,UAClBa,EAAQ3B,EAAE4B,GAKDD,GAAM6C,QAcfrjC,UAAW,SAAUggC,GAEjB,GAAIJ,GAAQI,EAAUJ,MAClBC,EAAWG,EAAUH,SACrBzK,EAAM5wD,KAAK8+D,IAGftD,GAAUK,OAIV,KAAK,GADDkD,MACKtuD,EAAI,EAAGA,EAAI4qD,EAAU5qD,GAAK,EAO/B,IAAK,GANDuuD,GAAS5D,EAAM3qD,IAAM,KAAc,GAAMA,EAAI,EAAK,EAAY,IAC9DwuD,EAAS7D,EAAO3qD,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAC9DyuD,EAAS9D,EAAO3qD,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAE9D0uD,EAAWH,GAAS,GAAOC,GAAS,EAAKC,EAEpCE,EAAI,EAAIA,EAAI,GAAO3uD,EAAQ,IAAJ2uD,EAAW/D,EAAW+D,IAClDL,EAAYl8D,KAAK+tD,EAAIlhD,OAAQyvD,IAAa,GAAK,EAAIC,GAAO,IAKlE,IAAIC,GAAczO,EAAIlhD,OAAO,GAC7B,IAAI2vD,EACA,KAAON,EAAYr5D,OAAS,GACxBq5D,EAAYl8D,KAAKw8D,EAIzB,OAAON,GAAYnuD,KAAK,KAgB5BW,MAAO,SAAU+tD,GAEb,GAAIC,GAAkBD,EAAU55D,OAC5BkrD,EAAM5wD,KAAK8+D,KAGXO,EAAczO,EAAIlhD,OAAO,GAC7B,IAAI2vD,EAAa,CACb,GAAIG,GAAeF,EAAUh6D,QAAQ+5D,EACjCG,KAAgB,IAChBD,EAAkBC,GAO1B,IAAK,GAFDpE,MACAW,EAAS,EACJtrD,EAAI,EAAGA,EAAI8uD,EAAiB9uD,IACjC,GAAIA,EAAI,EAAG,CACP,GAAIgvD,GAAQ7O,EAAItrD,QAAQg6D,EAAU5vD,OAAOe,EAAI,KAASA,EAAI,EAAK,EAC3DivD,EAAQ9O,EAAItrD,QAAQg6D,EAAU5vD,OAAOe,MAAS,EAAKA,EAAI,EAAK,CAChE2qD,GAAMW,IAAW,KAAO0D,EAAQC,IAAW,GAAM3D,EAAS,EAAK,EAC/DA,IAIR,MAAOZ,GAAUvjD,OAAOwjD,EAAOW,IAGnC+C,KAAM,wECpGb,WAEG,GAAIzE,GAAI16D,GAAGy6D,SACPE,EAAQD,EAAEE,IACVC,EAAOF,EAAME,KACbwB,EAAQ3B,EAAE4B,IACVU,EAAOX,EAAMW,KACbsB,EAAS5D,EAAEuE,IAKJX,GAAOU,KAAOnE,EAAKh5D,QAW1Bq5D,KAAM,SAAU4D,EAAQjvD,GAEpBivD,EAASz+D,KAAK2/D,QAAU,GAAIlB,GAAO5D,KAGjB,gBAAPrrD,KACPA,EAAMmtD,EAAKprD,MAAM/B,GAIrB,IAAIowD,GAAkBnB,EAAOjB,UACzBqC,EAAyC,EAAlBD,CAGvBpwD,GAAI6rD,SAAWwE,IACfrwD,EAAMivD,EAAO1/B,SAASvvB,IAI1BA,EAAIqsD,OAWJ,KAAK,GARDiE,GAAO9/D,KAAK+/D,MAAQvwD,EAAI0rD,QACxB8E,EAAOhgE,KAAKigE,MAAQzwD,EAAI0rD,QAGxBgF,EAAYJ,EAAK1E,MACjB+E,EAAYH,EAAK5E,MAGZ3qD,EAAI,EAAGA,EAAImvD,EAAiBnvD,IACjCyvD,EAAUzvD,IAAM,WAChB0vD,EAAU1vD,IAAM,SAEpBqvD,GAAKzE,SAAW2E,EAAK3E,SAAWwE,EAGhC7/D,KAAK8Z,SAUTA,MAAO,WAEH,GAAI2kD,GAASz+D,KAAK2/D,OAGlBlB,GAAO3kD,QACP2kD,EAAO/K,OAAO1zD,KAAKigE,QAevBvM,OAAQ,SAAU2K,GAId,MAHAr+D,MAAK2/D,QAAQjM,OAAO2K,GAGbr+D,MAiBX++B,SAAU,SAAUs/B,GAEhB,GAAII,GAASz+D,KAAK2/D,QAGdS,EAAY3B,EAAO1/B,SAASs/B,EAChCI,GAAO3kD,OACP,IAAIumD,GAAO5B,EAAO1/B,SAAS/+B,KAAK+/D,MAAM7E,QAAQnrD,OAAOqwD,GAErD,OAAOC,SCzHlB,WAEG,GAAIhG,GAAI16D,GAAGy6D,SACPE,EAAQD,EAAEE,IACVY,EAAYb,EAAMa,UAClB+C,EAAS5D,EAAM4D,OACfD,EAAS5D,EAAEuE,KAGX0B,KAKAC,EAAOtC,EAAOsC,KAAOrC,EAAO18D,QAC5B48D,SAAU,WACNp+D,KAAKwgE,MAAQ,GAAIrF,GAAUN,MACvB,WAAY,WACZ,WAAY,UACZ,cAIRkD,gBAAiB,SAAU0C,EAAGhvB,GAY1B,IAAK,GAVDivB,GAAI1gE,KAAKwgE,MAAMpF,MAGf/iB,EAAIqoB,EAAE,GACNpoB,EAAIooB,EAAE,GACN1zD,EAAI0zD,EAAE,GACNj0B,EAAIi0B,EAAE,GACN7xD,EAAI6xD,EAAE,GAGDjwD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIA,EAAI,GACJ6vD,EAAE7vD,GAAqB,EAAhBgwD,EAAEhvB,EAAShhC,OACf,CACH,GAAIkwD,GAAIL,EAAE7vD,EAAI,GAAK6vD,EAAE7vD,EAAI,GAAK6vD,EAAE7vD,EAAI,IAAM6vD,EAAE7vD,EAAI,GAChD6vD,GAAE7vD,GAAMkwD,GAAK,EAAMA,IAAM,GAG7B,GAAIC,IAAMvoB,GAAK,EAAMA,IAAM,IAAOxpC,EAAIyxD,EAAE7vD,EAEpCmwD,IADAnwD,EAAI,IACG6nC,EAAItrC,GAAOsrC,EAAI7L,GAAM,WACrBh8B,EAAI,IACL6nC,EAAItrC,EAAIy/B,GAAK,WACZh8B,EAAI,IACJ6nC,EAAItrC,EAAMsrC,EAAI7L,EAAMz/B,EAAIy/B,GAAM,YAE/B6L,EAAItrC,EAAIy/B,GAAK,UAGvB59B,EAAI49B,EACJA,EAAIz/B,EACJA,EAAKsrC,GAAK,GAAOA,IAAM,EACvBA,EAAID,EACJA,EAAIuoB,EAIRF,EAAE,GAAMA,EAAE,GAAKroB,EAAK,EACpBqoB,EAAE,GAAMA,EAAE,GAAKpoB,EAAK,EACpBooB,EAAE,GAAMA,EAAE,GAAK1zD,EAAK,EACpB0zD,EAAE,GAAMA,EAAE,GAAKj0B,EAAK,EACpBi0B,EAAE,GAAMA,EAAE,GAAK7xD,EAAK,GAGxB0vD,YAAa,WAET,GAAI55D,GAAO3E,KAAKi9D,MACZK,EAAY34D,EAAKy2D,MAEjByF,EAAgC,EAAnB7gE,KAAKk9D,YAClB4D,EAA4B,EAAhBn8D,EAAK02D,QAYrB,OATAiC,GAAUwD,IAAc,IAAM,KAAS,GAAKA,EAAY,GACxDxD,GAAawD,EAAY,KAAQ,GAAM,GAAK,IAAMx/D,KAAKy/D,MAAMF,EAAa,YAC1EvD,GAAawD,EAAY,KAAQ,GAAM,GAAK,IAAMD,EAClDl8D,EAAK02D,SAA8B,EAAnBiC,EAAU53D,OAG1B1F,KAAKo9D,WAGEp9D,KAAKwgE,OAGhBtF,MAAO,WACH,GAAIA,GAAQgD,EAAOhD,MAAM30D,KAAKvG,KAG9B,OAFAk7D,GAAMsF,MAAQxgE,KAAKwgE,MAAMtF,QAElBA,IAkBfb,GAAEkG,KAAOrC,EAAOM,cAAc+B,GAgB9BlG,EAAE2G,SAAW9C,EAAOQ,kBAAkB6B,MChIzC,SAAUj/D,GAEP,GAAI+4D,GAAI16D,GAAGy6D,SACPE,EAAQD,EAAEE,IACVY,EAAYb,EAAMa,UAClB+C,EAAS5D,EAAM4D,OACfD,EAAS5D,EAAEuE,KAGX8B,KACAO,MAGH,WACG,QAASC,GAAQP,GAEb,IAAK,GADDQ,GAAQ7/D,EAAKoqC,KAAKi1B,GACbS,EAAS,EAAGA,GAAUD,EAAOC,IAClC,KAAMT,EAAIS,GACN,OAAO,CAIf,QAAO,EAGX,QAASC,GAAkBV,GACvB,MAAwB,aAAfA,GAAS,EAAJA,IAAyB,EAK3C,IAFA,GAAIA,GAAI,EACJW,EAAS,EACNA,EAAS,IACRJ,EAAQP,KACJW,EAAS,IACTZ,EAAEY,GAAUD,EAAkB//D,EAAKiwC,IAAIovB,EAAG,MAE9CM,EAAEK,GAAUD,EAAkB//D,EAAKiwC,IAAIovB,EAAG,EAAI,IAE9CW,KAGJX,MAKR,IAAIL,MAKAiB,EAAStD,EAAOsD,OAASrD,EAAO18D,QAChC48D,SAAU,WACNp+D,KAAKwgE,MAAQ,GAAIrF,GAAUN,KAAK6F,EAAE74D,MAAM,KAG5Ck2D,gBAAiB,SAAU0C,EAAGhvB,GAe1B,IAAK,GAbDivB,GAAI1gE,KAAKwgE,MAAMpF,MAGf/iB,EAAIqoB,EAAE,GACNpoB,EAAIooB,EAAE,GACN1zD,EAAI0zD,EAAE,GACNj0B,EAAIi0B,EAAE,GACN7xD,EAAI6xD,EAAE,GACNc,EAAId,EAAE,GACNe,EAAIf,EAAE,GACNgB,EAAIhB,EAAE,GAGDjwD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIA,EAAI,GACJ6vD,EAAE7vD,GAAqB,EAAhBgwD,EAAEhvB,EAAShhC,OACf,CACH,GAAIkxD,GAAUrB,EAAE7vD,EAAI,IAChBmxD,GAAYD,GAAW,GAAOA,IAAY,IAC9BA,GAAW,GAAOA,IAAY,IAC9BA,IAAY,EAExBE,EAAUvB,EAAE7vD,EAAI,GAChBqxD,GAAYD,GAAW,GAAOA,IAAY,KAC9BA,GAAW,GAAOA,IAAY,IAC9BA,IAAY,EAE5BvB,GAAE7vD,GAAKmxD,EAAStB,EAAE7vD,EAAI,GAAKqxD,EAASxB,EAAE7vD,EAAI,IAG9C,GAAIsxD,GAAOlzD,EAAI2yD,GAAO3yD,EAAI4yD,EACtBO,EAAO3pB,EAAIC,EAAMD,EAAIrrC,EAAMsrC,EAAItrC,EAE/Bi1D,GAAW5pB,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,GAAOA,IAAM,IAClF6pB,GAAWrzD,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,EAAOA,IAAM,IAElFszD,EAAKT,EAAIQ,EAASH,EAAKd,EAAExwD,GAAK6vD,EAAE7vD,GAChC2xD,EAAKH,EAASD,CAElBN,GAAID,EACJA,EAAID,EACJA,EAAI3yD,EACJA,EAAK49B,EAAI01B,EAAM,EACf11B,EAAIz/B,EACJA,EAAIsrC,EACJA,EAAID,EACJA,EAAK8pB,EAAKC,EAAM,EAIpB1B,EAAE,GAAMA,EAAE,GAAKroB,EAAK,EACpBqoB,EAAE,GAAMA,EAAE,GAAKpoB,EAAK,EACpBooB,EAAE,GAAMA,EAAE,GAAK1zD,EAAK,EACpB0zD,EAAE,GAAMA,EAAE,GAAKj0B,EAAK,EACpBi0B,EAAE,GAAMA,EAAE,GAAK7xD,EAAK,EACpB6xD,EAAE,GAAMA,EAAE,GAAKc,EAAK,EACpBd,EAAE,GAAMA,EAAE,GAAKe,EAAK,EACpBf,EAAE,GAAMA,EAAE,GAAKgB,EAAK,GAGxBnD,YAAa,WAET,GAAI55D,GAAO3E,KAAKi9D,MACZK,EAAY34D,EAAKy2D,MAEjByF,EAAgC,EAAnB7gE,KAAKk9D,YAClB4D,EAA4B,EAAhBn8D,EAAK02D,QAYrB,OATAiC,GAAUwD,IAAc,IAAM,KAAS,GAAKA,EAAY,GACxDxD,GAAawD,EAAY,KAAQ,GAAM,GAAK,IAAMx/D,EAAKy/D,MAAMF,EAAa,YAC1EvD,GAAawD,EAAY,KAAQ,GAAM,GAAK,IAAMD,EAClDl8D,EAAK02D,SAA8B,EAAnBiC,EAAU53D,OAG1B1F,KAAKo9D,WAGEp9D,KAAKwgE,OAGhBtF,MAAO,WACH,GAAIA,GAAQgD,EAAOhD,MAAM30D,KAAKvG,KAG9B,OAFAk7D,GAAMsF,MAAQxgE,KAAKwgE,MAAMtF,QAElBA,IAkBfb,GAAEkH,OAASrD,EAAOM,cAAc+C,GAgBhClH,EAAEgI,WAAanE,EAAOQ,kBAAkB6C,IAC1CjgE,MClLD,WAEG,GAA0B,kBAAfmE,aAAX,CAKA,GAAI40D,GAAI16D,GAAGy6D,SACPE,EAAQD,EAAEE,IACVY,EAAYb,EAAMa,UAGlBmH,EAAYnH,EAAUN,KAGtB0H,EAAUpH,EAAUN,KAAO,SAAU2H,GAqBrC,GAnBIA,YAAsB/8D,eACtB+8D,EAAa,GAAI78D,YAAW68D,KAK5BA,YAAsBC,YACtBD,YAAsBE,oBACtBF,YAAsBG,aACtBH,YAAsBI,cACtBJ,YAAsBK,aACtBL,YAAsBM,cACtBN,YAAsBO,eACtBP,YAAsBQ,iBAEtBR,EAAa,GAAI78D,YAAW68D,EAAW77D,OAAQ67D,EAAWS,WAAYT,EAAWU,aAIjFV,YAAsB78D,YAAY,CAMlC,IAAK,GAJDw9D,GAAuBX,EAAWU,WAGlC9H,KACK3qD,EAAI,EAAGA,EAAI0yD,EAAsB1yD,IACtC2qD,EAAM3qD,IAAM,IAAM+xD,EAAW/xD,IAAO,GAAMA,EAAI,EAAK,CAIvD6xD,GAAU/7D,KAAKvG,KAAMo7D,EAAO+H,OAG5Bb,GAAUtyD,MAAMhQ,KAAM8H,WAI9By6D,GAAQl8D,UAAY80D,MC3DxBx7D,GAAGyjE,GAAKzjE,GAAGyjE,OAEXzjE,GAAGyjE,GAAGC,KAAO1jE,GAAGyjE,GAAGC,MAAS,WACxB,YAEA,QACIC,qBAAsB,kBAEtBC,iBAAkB,cAElBC,sBAAuB,mBAEvBC,gBAAiB,aAEjBC,8BAA+B,sBAC/BC,+BAAgC,qBAEhCC,kCAAmC,+BACnCC,mCAAoC,SAEpCC,yBAA0B,uBAE1BC,yBAA0B,mBAE1BC,wBAAyB,kBAEzBC,4BACI,gBACA,sBACA,mBACA,eAGJC,8BACI,gBACA,sBACA,mBACA,eAGJC,wBACI,gBACA,sBACA,mBACA,cACA,kDACA,4CACA,iDAkBJC,UAAW,SAASpmD,GAChB,GAQIqmD,GARAC,GAEI,yEAEA,yEAEA,oCAaR,OATA3kE,IAAG+C,KAAK4hE,EAAU,SAAS3hE,EAAK4hE,GAC5B,GAAInxD,GAAQmxD,EAAQ3gE,KAAKoa,EAEzB,IAAI5K,EAEA,MADAixD,GAASjxD,EAAM,IACR,IAIRixD,GAUXG,sBAAuB,SAAS9iE,GAC5B,MAAI/B,IAAG2F,QAAQ3F,GAAGyjE,GAAGC,KAAKc,uBAAwBziE,IAAS,EAChDA,EAEJ/B,GAAGyjE,GAAGC,KAAKE,iBAAmB7hE,GASzC+iE,UAAW,SAASppD,GAChB,GAAIqpD,MACAC,KACAN,EAAShpD,EAAKgpD,OACdO,EAAOvpD,EAAKupD,KACZC,EAAQxpD,EAAKypD,WACbt1D,EAAM6L,EAAK7L,IACXu1D,EAAY1pD,EAAK0pD,UACjBC,EAAM3pD,EAAK2pD,IACX9kE,EAAOmb,EAAKnb,KACZ+kE,EAAiB5pD,EAAK4pD,eACtBC,EAAe7pD,EAAK6pD,aACpBnnD,EAAS1C,EAAK0C,OACdonD,EAAqBxlE,GAAGyjE,GAAGC,KAAK+B,8BAA8B/pD,EAAK8pD,oBACnEE,EAAchqD,EAAKgqD,YACnBC,EAAcjqD,EAAKiqD,YACnBC,EAAoBlqD,EAAKkqD,kBACzBC,EAASnqD,EAAKmqD,OACdC,EAAuBpqD,EAAKoqD,qBAC5BC,EAAmBrqD,EAAKqqD,gBAyE5B,OAvEAhB,GAAOiB,WAAahmE,GAAGyjE,GAAGC,KAAKuC,wBAAwBhB,EAAMC,GAE7DF,EAAW9hE,MAAMmiE,IAAKA,IACtBL,EAAW9hE,MAAMwhE,OAAQA,IAErBnkE,GACAykE,EAAW9hE,MAAMgjE,eAAgB3lE,IAIjC+kE,GACAN,EAAW9hE,MAAMijE,sBAAuBb,EAAe3+D,aAGvD6+D,GACAR,EAAW9hE,MAAMkjE,wBAAyBZ,IAG1CI,IACAZ,EAAW9hE,SACX8hE,EAAWA,EAAWj/D,OAAS,GAAG/F,GAAGyjE,GAAGC,KAAKK,+BAAiC/jE,GAAGyjE,GAAGC,KAAKM,gCAGzFuB,IACAP,EAAW9hE,SACX8hE,EAAWA,EAAWj/D,OAAS,GAAG/F,GAAGyjE,GAAGC,KAAKS,0BAA4BoB,GAGzEO,IACAd,EAAW9hE,SACX8hE,EAAWA,EAAWj/D,OAAS,GAAG/F,GAAGyjE,GAAGC,KAAKO,mCAAqCjkE,GAAGyjE,GAAGC,KAAKQ,oCAGxE,IAArB6B,EACAf,EAAW9hE,MAAM2M,IAAKA,IAEI,IAArBk2D,IACLf,EAAW9hE,SACX8hE,EAAWA,EAAWj/D,OAAS,GAAG/F,GAAGyjE,GAAGC,KAAKC,sBAAwB3jE,GAAGyjE,GAAGC,KAAKU,yBAEhFY,EAAW9hE,SACX8hE,EAAWA,EAAWj/D,OAAS,GAAG8J,IAAMA,EAExCm1D,EAAW9hE,SACX8hE,EAAWA,EAAWj/D,OAAS,GAAG/F,GAAGyjE,GAAGC,KAAKG,uBACzC7jE,GAAGyjE,GAAGC,KAAK2C,wBAAwBpB,KAAMA,EAAMp1D,IAAKu1D,EAAWS,OAAQA,IAE3Eb,EAAW9hE,SACX8hE,EAAWA,EAAWj/D,OAAS,GAAG/F,GAAGyjE,GAAGC,KAAKI,iBACzC9jE,GAAGyjE,GAAGC,KAAK4C,gBAAgBrB,EAAMC,IAIzCllE,GAAG+C,KAAKqb,EAAQ,SAASrc,EAAMkB,GAC3B,GAAIsjE,GAAevmE,GAAGyjE,GAAGC,KAAKmB,sBAAsB9iE,GAChD+1C,IAEA93C,IAAG2F,QAAQ3F,GAAGyjE,GAAGC,KAAKc,uBAAwB+B,IAAiB,EAC/DzuB,EAAMyuB,GAAgBtjE,EAGtB60C,EAAMyuB,GAAgBv1D,mBAAmB/N,GAG7C+hE,EAAW9hE,KAAK40C,KAGpBitB,EAAOC,WAAaA,EAEpBhlE,GAAGyjE,GAAGC,KAAK8C,kBAAkBzB,EAAQW,EAAaC,GAE3CZ,GAUX0B,yBAA0B,SAAS1B,EAAQ2B,GACvC,GAAIC,IAAoB,CAExB3mE,IAAG+C,KAAKgiE,EAAOC,WAAY,SAAS4B,EAAYC,GAC5C7mE,GAAG+C,KAAK8jE,EAAY,SAASC,EAAaC,GAClCD,IAAgB9mE,GAAGyjE,GAAGC,KAAKS,2BAC3B0C,EAAWC,GAAeJ,EAC1BC,GAAoB,OAK3BA,IACD5B,EAAOC,WAAW9hE,SAClB6hE,EAAOC,WAAWD,EAAOC,WAAWj/D,OAAS,GAAG/F,GAAGyjE,GAAGC,KAAKS,0BAA4BuC,IAe/FM,kBAAmB,SAAStrD,EAAMurD,GAC9B,GAiBIC,GAjBAC,KACAC,EAAe1rD,EAAK0C,OACpBtS,EAAU,GAAI9L,IAAG+L,QACjBw5D,EAAe7pD,EAAK6pD,aACpBL,EAAQxpD,EAAKypD,WACb5kE,EAAOmb,EAAKnb,KACZsP,EAAM6L,EAAK7L,IACXu1D,EAAY1pD,EAAK0pD,UACjBC,EAAM3pD,EAAK2pD,IACXC,EAAiB5pD,EAAK4pD,eACtBE,EAAqBxlE,GAAGyjE,GAAGC,KAAK+B,8BAA8B/pD,EAAK8pD,oBACnEI,EAAoBlqD,EAAKkqD,kBACzBC,EAASnqD,EAAKmqD,OACdC,EAAuBpqD,EAAKoqD,qBAC5BC,EAAmBrqD,EAAKqqD,iBACxBjiC,EAAM,GAAIjG,MACV13B,EAAMuV,EAAKvV,GAyFf,OAtFAuV,GAAKupD,KAAOnhC,EACZojC,EAAalnE,GAAGyjE,GAAGC,KAAKoB,UAAUppD,GAElCyrD,EAAUt3D,IAAMA,EAEZtP,IACA4mE,EAAU,gBAAkB5mE,GAG5B+kE,IACA6B,EAAUhB,sBAAwBb,GAGlCE,IACA2B,EAAUf,wBAA0BZ,GAGpCI,IACAuB,EAAUnnE,GAAGyjE,GAAGC,KAAKK,+BAAiC/jE,GAAGyjE,GAAGC,KAAKM,gCAGjE8B,IACAqB,EAAUnnE,GAAGyjE,GAAGC,KAAKO,mCAAqCjkE,GAAGyjE,GAAGC,KAAKQ,oCAGrEqB,IACA4B,EAAUnnE,GAAGyjE,GAAGC,KAAKS,0BAA4BoB,GAGrD4B,EAAU9B,IAAMA,EAKhBrlE,GAAG+C,KAAKqkE,EAAc,SAASrlE,EAAMkB,GACjC,GAAIsjE,GAAevmE,GAAGyjE,GAAGC,KAAKmB,sBAAsB9iE,EAEhD/B,IAAG2F,QAAQ3F,GAAGyjE,GAAGC,KAAKc,uBAAwB+B,IAAiB,EAC/DY,EAAUZ,GAAgBtjE,EAG1BkkE,EAAUZ,GAAgBv1D,mBAAmB/N,KAI5B,IAArB8iE,EACAoB,EAAUE,eAAiBjC,EAED,IAArBW,IACLoB,EAAUnnE,GAAGyjE,GAAGC,KAAKC,sBAAwB3jE,GAAGyjE,GAAGC,KAAKU,yBACxD+C,EAAUnnE,GAAGyjE,GAAGC,KAAKG,uBAAyB7jE,GAAGyjE,GAAGC,KAAK2C,wBAAwBpB,KAAMnhC,EAAKj0B,IAAKu1D,EAAWS,OAAQA,IACpHsB,EAAUnnE,GAAGyjE,GAAGC,KAAKI,iBAAmB9jE,GAAGyjE,GAAGC,KAAK4C,gBAAgBxiC,EAAKohC,IAK5E+B,EAAmBC,GAAY9vD,KAC3B,SAASkwD,EAAoBC,EAAkBC,GAC3CL,EAAUpC,OAASuC,EAAmBvC,OAER,IAA1BrpD,EAAKqqD,kBACLoB,EAAUM,UAAYH,EAAmBG,UAErCF,IACAJ,EAAUE,eAAiBE,IAGA,IAA1B7rD,EAAKqqD,mBACVoB,EAAUnnE,GAAGyjE,GAAGC,KAAKW,yBAA2BiD,EAAmBG,WAGnED,IACAL,EAAUnnE,GAAGyjE,GAAGC,KAAKS,0BAA4BqD,GAGrD17D,EAAQG,QAAQk7D,IAEpB,SAASnhD,GACLA,EAAeA,GAAgB,gHAG/B7f,EAAI,2BAA6B6f,EAAc,SAC/Cla,EAAQK,QAAQ6Z,KAIjBla,GAYX06D,kBAAmB,SAASzB,EAAQ2C,EAASrmD,GACzC,GAAIsmD,GAAkBD,EAAU,EAAI,EAAIA,EAEpCE,EAAkBvmD,GAAW,EAAI,iBAAmBA,GAEpDqmD,EAAU,GAAKrmD,EAAU,IACzB0jD,EAAOC,WAAW9hE,MAAM,uBAAwBykE,EAAgBhhE,WAAYihE,EAAgBjhE,cAIpGs/D,wBAAyB,SAAShB,EAAMC,GACpC,GAAI2C,GAAe,GAAIhqC,MAAKonC,EAAKnnC,UAAYonC,EAC7C,OAAOllE,IAAGyjE,GAAGC,KAAKoE,cAAcD,EAAc,IAGlDE,mBAAoB,SAAS9C,GACzB,MAAOA,GAAK+C,iBAAmB,IAC1B,KAAO/C,EAAKgD,cAAgB,IAAI//D,OAAM,IACtC,IAAM+8D,EAAKiD,cAAchgE,OAAM,IAGxC4/D,cAAe,SAAS7C,EAAMkD,GAC1B,GACIC,GAAK96D,EADL+6D,EAAeF,GAAkB,CAOrC,OAFAlD,GAAKqD,WAAWrD,EAAKsD,cAAgBF,GAAgB,IAEjDxqC,KAAKn3B,UAAU8hE,YACRvD,EAAKuD,eAGZJ,EAAM,SAASK,GAOX,MANAn7D,GAAI1F,OAAO6gE,GAEM,IAAbn7D,EAAEvH,SACFuH,EAAI,IAAMA,GAGPA,GAGJ23D,EAAK+C,iBACN,IAAMI,EAAInD,EAAKgD,cAAgB,GAC/B,IAAMG,EAAInD,EAAKiD,cACf,IAAME,EAAInD,EAAKyD,eACf,IAAMN,EAAInD,EAAK0D,iBACf,IAAMP,EAAInD,EAAK2D,iBACf,IAAMhhE,QAAQq9D,EAAK4D,qBAAuB,KAAM57C,QAAQ,IAAI/kB,MAAM,EAAG,GACrE,MAWd4gE,oBAAqB,SAAS7jC,GAC1B,GAAIuZ,GAAMvZ,EAAOe,iBAAmBf,EAAOyZ,cAAc70C,SACrDk/D,EAAcvqB,EAAItO,SAAS84B,OAC3Bv1D,EAAQ,iCAAiCxP,KAAK8kE,EAElD,IAAIt1D,EACA,OACIixD,OAAQjxD,EAAM,GACd5D,IAAK4D,EAAM,GACXw1D,KAAMx1D,EAAM,GAAGlR,QAAQ,OAAQ,MAS3CkjE,8BAA+B,SAASD,GACpC,GAAIA,EAAoB,CACpB,GACI31B,GADAq5B,EAAwBr/D,SAASC,cAAc,MAGnD,OAAI9J,IAAG4N,OAIHs7D,EAAsB35D,UAAY,YAAci2D,EAAqB,SACrE31B,EAAeq5B,EAAsB5lE,WAC9BusC,EAAaC,OAOpBD,EAAehmC,SAASC,cAAc,KACtC+lC,EAAaC,KAAO01B,EACpB31B,EAAaC,KAAOD,EAAaC,KAC1BD,EAAaC,QAKhCu2B,uBAAwB,SAAS3qD,GAC7B,MAAOA,GAAK7L,IAAM,IACd7P,GAAGyjE,GAAGC,KAAKqE,mBAAmBrsD,EAAKupD,MAAQ,IAC3CvpD,EAAKmqD,OAAS,oBAGtBS,gBAAiB,SAASrB,EAAMC,GAC5B,GAAI2C,GAAe,GAAIhqC,MAAKonC,EAAKnnC,UAAYonC,EAE7C,OAAOllE,IAAGyjE,GAAGC,KAAKqE,mBAAmBF,GAAgB,KAC5C,IAAMA,EAAaa,eAAexgE,OAAM,IACxC,IAAM2/D,EAAac,iBAAiBzgE,OAAM,IAC1C,IAAM2/D,EAAae,iBAAiB1gE,OAAM,GAC3C,KAMZihE,uBAAwB,SAASrxB,GAC7B,GAAIsxB,GAAiBp4D,mBAAmB8mC,EASxC,OANAsxB,GAAiBA,EAAe7mE,QAAQ,UAAW26D,QAGnDkM,EAAiBA,EAAe7mE,QAAQ,MAAO,OAGxC6mE,EAAe7mE,QAAQ,OAAQ,MAM1C8mE,UAAW,SAAS1hE,GAChB,GAAIsyC,GAASjpC,mBAAmBrJ,EAKhC,OAJAsyC,GAASA,EAAO13C,QAAQ,uBAAwB26D,QAChDjjB,EAASA,EAAO13C,QAAQ,OAAQ,SAAS6/D,GACrC,MAAO,IAAMA,EAAGl8D,WAAW,GAAGS,SAAS,IAAIwgB,iBAQnDmiD,cAAe,SAASrsC,GACpB,GAAI4K,KAIJ,OAHA7nC,IAAG+C,KAAKk6B,EAAKv3B,MAAM,KAAM,SAAS1C,EAAKsE,GACnCugC,EAAM3kC,KAAKlD,GAAGyjE,GAAGC,KAAK2F,UAAU/hE,MAE7BugC,EAAM52B,KAAK,UC/f7B,WACG,YAEAjR,IAAGupE,6BACCC,uBAAwB,SAASprD,EAAQ3D,GACrCpa,KAAKopE,0BAA0B3kD,IAAI1G,EAAQ3D,IAE/CivD,yBAA0B,SAASrrD,EAAU5D,GACzCpa,KAAKspE,4BAA4B7kD,IAAIzG,EAAU5D,KAIvDza,GAAG4pE,8BAcCr+C,YAAa,SAAS9Q,EAAI1Y,EAAMY,EAAQiR,GACpC,GA6CIi2D,GACAC,EA9CA79D,IAAUtJ,EAAOsJ,QACjBwM,EAAOpY,KACP0pE,EAAiB5hE,UACjB6hE,EAAkB3pE,KAAKspE,4BAA4BpnD,IAAI9H,GACvDwvD,EAAuB5pE,KAAK2e,SAASkrD,cAAc1iD,cACnD2iD,EAAgB9pE,KAAK2e,SAASkrD,cAAchjD,OAC5CS,EAAOtnB,KAAK2e,SAAS2I,KACrB7b,EAAU,GAAI9L,IAAG+L,QACjBq+D,EAAsB/pE,KAAKopE,0BAA0BlnD,IAAI9H,GACzD4vD,EAAahqE,KAAKyjB,aAAavB,IAAI9H,GAMnC6vD,EAAsB,SAASC,SACpB9xD,GAAK+xD,+BAA+B/vD,GAC3Cza,GAAG6B,OAAOc,EAAQ4nE,GAClBvqE,GAAGo2B,kBAAkB1vB,UAAU6kB,YAAYlb,MAAMoI,EAAMsxD,GACvDj+D,EAAQG,QAAQs+D,IAKpBE,EAAsB,SAASF,GAC3B,GAAI96D,GAAWo6D,CAEf7pE,IAAG6B,OAAOc,EAAQ4nE,GAEd5nE,GAAUA,EAAOwX,QACjB1K,EAAW,MAGVA,EAIDgJ,EAAK+xD,+BAA+B/vD,GAAMhL,QAHnCgJ,GAAK+xD,+BAA+B/vD,GAM1ChC,EAAK6T,aAAa7R,EAAI1Y,EAAMY,EAAQiR,EAAKnE,KAC1CzP,GAAGo2B,kBAAkB1vB,UAAU6kB,YAAYlb,MAAMoI,EAAMsxD,GACvDj+D,EAAQK,QAAQo+D,IAO5B,OAAIt+D,IAAW+9D,GACXF,EAAuB,GAAI9pE,IAAG0qE,4BAC1BrsD,SAAU2rD,EACV9iD,OAAQijD,EACR3iD,cAAeyiD,EACftiD,KAAMA,EACNxhB,IAAKnG,GAAGgQ,KAAK3P,KAAK8F,IAAK9F,QAI3BL,GAAG6B,OAAOuoE,EAAqB3xD,EAAKkyD,2BAA2BlwD,EAAI9X,EAAQiR,IAAM,GAGjFy2D,GAAcrqE,GAAG6B,OAAOuoE,EAAqBC,GAAY,GAEzDR,EAAuB7pE,GAAGgQ,KAAK,WAC3B85D,EAAqBc,mBAAmBnwD,EAAI2vD,GACvChzD,KAAKkzD,EAAqBG,IAChChyD,GAEHoxD,IAEO/9D,GAIJ9L,GAAGo2B,kBAAkB1vB,UAAU6kB,YAAYlb,MAAMhQ,KAAM8H,YAIlEoc,aAAc,SAAS9J,GACnB,GAAIowD,GAAyBxqE,KAAKmqE,+BAA+B/vD,EAEjE,OAAOza,IAAGo2B,kBAAkB1vB,UAAU6d,aAAa3d,KAAKvG,KAAMoa,EAAIowD,QC3G7E,WACG,YAEA7qE,IAAGyjE,GAAGrtC,kBAAoB,SAASje,GAC/B,GAAII,IACA+O,SAEI89C,UAAW,KAGXD,WAAY,GAGhB2F,kBACIzF,IAAK,UAGLX,OAAQ1kE,GAAGgQ,KAAK,SAASyK,GACrB,MAAOza,IAAGyjE,GAAGC,KAAKe,UAAUpkE,KAAKgiB,YAAY5H,KAC9Cpa,MAGH0qE,KAAM/qE,GAAGgQ,KAAK,SAASyK,GACnB,MAAO,mCAAqCxW,KAAK5D,KAAKiiB,eAAeC,IAAI9H,IAAK,IAC/Epa,MAGHwP,IAAK,OAEL+1D,mBAAmB,EAGnBC,OAAQ,YAERC,sBAAsB,GAG1BkF,aAEI5F,UAAW,KAEX6F,UAAW,KAEXjF,WAAY,KAGZT,aAAc,MAIlBkC,WACIjgD,iBACAnJ,SAAU,KACVpL,QAAS,GAGbi3D,eACI7rD,SAAU,KAEV6I,OAAQ,OAGR9I,UAEAoJ,kBAIJ0jD,eACIC,mBAAoB,MAGxBx1D,UAEIyiB,SAAU,SAGdzQ,MACIuI,UAAU,GAGdpJ,WACIskD,qBAAsB,cAK9BprE,IAAG6B,OAAO0W,EAASJ,GAAG,GAEjB9X,KAAKgrE,eAAe9yD,EAAQyyD,aAAa,KAC1C3qE,KAAKirE,oBAAoBlG,UAAY7sD,EAAQ+O,QAAQ89C,WAGzD/kE,KAAKkrE,UAAYlrE,KAAKqoB,aAAanQ,EAAQuyD,iBAAiBzF,KAG5DrlE,GAAGo2B,kBAAkBxvB,KAAKvG,KAAMkY,GAEhClY,KAAKopE,0BAA4BppE,KAAKqoB,aAAaroB,KAAK2e,SAASkrD,cAAc9rD,QAC/E/d,KAAKspE,4BAA8BtpE,KAAKqoB,aAAaroB,KAAK2e,SAASkrD,cAAc7rD,UAIjFhe,KAAKmqE,kCAGLnqE,KAAKmrE,eAELnrE,KAAKorE,kBAELprE,KAAKqrE,YACLrrE,KAAKsrE,WAIT3rE,GAAG6B,OAAO7B,GAAGyjE,GAAGrtC,kBAAkB1vB,UAAW1G,GAAGie,eAChDje,GAAG6B,OAAO7B,GAAGyjE,GAAGrtC,kBAAkB1vB,UAAW1G,GAAGomB,gBAChDpmB,GAAG6B,OAAO7B,GAAGyjE,GAAGrtC,kBAAkB1vB,UAAW1G,GAAGupE,6BAChDvpE,GAAG6B,OAAO7B,GAAGyjE,GAAGrtC,kBAAkB1vB,UAAW1G,GAAG4pE,8BAGhD5pE,GAAG6B,OAAO7B,GAAGyjE,GAAGrtC,kBAAkB1vB,WAC9B+9D,UAAW,SAAShqD,GAChB,MAA+B,OAA3Bpa,KAAKorE,eAAehxD,GACbpa,KAAKqrE,SAASjxD,GAElBpa,KAAKorE,eAAehxD,IAO/BmxD,OAAQ,SAASnxD,GAEb,MAA4B,OAAxBpa,KAAKmrE,YAAY/wD,GACVpa,KAAK6f,SAASme,oBAAoB5jB,GAGtCpa,KAAKmrE,YAAY/wD,IAM5BN,MAAO,WACHna,GAAGo2B,kBAAkB1vB,UAAUyT,MAAMvT,KAAKvG,MAC1CA,KAAKmqE,kCACLnqE,KAAKqrE,YACLrrE,KAAKsrE,WAGTN,eAAgB,SAASL,EAAaa,GAClC,GAAIb,GAAeA,EAAYC,UAAW,CACtC,IAAKD,EAAY5F,UACb,KAAM,IAAIplE,IAAGwB,MAAM,oCAElB,KAAKwpE,EAAYhF,WAClB,KAAM,IAAIhmE,IAAGwB,MAAM,qCAWvB,OARInB,MAAKirE,oBAAsBtrE,GAAG6B,UAAWmpE,GAGrChrE,GAAGwH,SAASwjE,EAAYhF,cACxB3lE,KAAKirE,oBAAoBtF,WAAa,GAAInoC,MAAKmtC,EAAYhF,cAI5D,EAEN,IAAK6F,EACN,KAAM,IAAI7rE,IAAGwB,MAAM,iCAGnBnB,MAAKirE,wBAIbQ,OAAQ,SAASzG,EAAK5qD,GAClBpa,KAAKkrE,UAAUzmD,IAAIugD,EAAK5qD,IAU5BmQ,qBAAsB,WAClB,GAAInS,GAAOpY,KACPwqB,GACIkhD,SAAU1rE,KAAKkrE,UACf9G,UAAWzkE,GAAGgQ,KAAK3P,KAAK2rE,iBAAkB3rE,MAC1C4rE,QAASjsE,GAAGgQ,KAAK3P,KAAK6rE,eAAgB7rE,MACtC8rE,WAAYnsE,GAAGgQ,KAAK3P,KAAK+rE,kBAAmB/rE,MAC5C6qE,cAAe7qE,KAAK2e,SAASksD,cAC7BJ,iBAAkBzqE,KAAK2e,SAAS8rD,iBAChCrD,UAAWpnE,KAAK2e,SAASyoD,UACzBtC,WAAY9kE,KAAK2e,SAASsI,QAAQ69C,WAElCh7C,YACI+G,aAAc7wB,KAAK2e,SAASmL,WAAW+G,aACvCm7C,aAAchsE,KAAK2e,SAASmL,WAAW8G,WA4EnD,OAvEAjxB,IAAGwM,SAASnM,KAAKiiB,eAAgB,SAAS3V,GACtC,OACI4V,IAAK,SAAS9H,GACV,GAAI4D,GAAW1R,EAAO4V,IAAI9H,EAI1B,OAHwB,kBAAb4D,KACPA,EAAWA,EAAS5D,IAEpB4D,EAAS1Y,QAAQ,QAAU,EACpB,UAAY0Y,EAGhBA,MAMnBre,GAAGwM,SAASnM,KAAKyjB,aAAc,SAASnX,GACpC,OACI4V,IAAK,SAAS9H,GACV,GAAI6xD,GAAY3/D,EAAO4V,IAAI9H,GACvB8xD,IAYJ,OAVAvsE,IAAG+C,KAAKupE,EAAW,SAASvqE,EAAMkB,GAC9B,GAAIupE,GAAYzqE,CAEZ/B,IAAG2F,QAAQ3F,GAAGyjE,GAAGC,KAAKY,2BAA4BkI,GAAa,IAC/DA,EAAYA,EAAUljE,eAG1BijE,EAAeC,GAAaxsE,GAAG6G,WAAW5D,GAAOA,IAAQA,IAGtDspE,MAKnB1hD,EAAkB48C,UAAUgF,qBACxBlqD,IAAK,WACD,MAAO9J,GAAK6yD,qBAGhBoB,UAAW,WACP,GAAIC,GAAoB,GAAI3sE,IAAG+L,QAC3B2iB,EAAiBjW,EAAKuG,SAAS8H,UAAUskD,sBAsB7C,OApBIprE,IAAGkX,iBAAiBwX,GACpBA,EAAetX,KAAK,SAAS4zD,GACzB,IACIvyD,EAAK4yD,eAAeL,GACpB2B,EAAkB1gE,UAEtB,MAAO5B,GACHoO,EAAKtS,IAAI,qEAAuEkE,EAAMjE,QAAU,IAAK,SACrGumE,EAAkBxgE,QAAQ,4DAE/B,SAAS6pB,GACRvd,EAAKtS,IAAI,qDAAuD6vB,EAAW,IAAK;AAChF22C,EAAkBxgE,QAAQ,4CAI9BsM,EAAKtS,IAAI,0DAA2D,SACpEwmE,EAAkBxgE,QAAQ,sDAGvBwgE,IAIR3sE,GAAGo2B,kBAAkB1vB,UAAUkkB,qBAAqBhkB,KAAKvG,KAAMwqB,EAAmB,OAG7F+hD,8BAA+B,SAASnyD,EAAIoyD,GACxC,GAAIC,GAAQzsE,KAAK2e,SAAS8rD,iBAAiB+B,GACvC/gE,EAAU,GAAI9L,IAAG+L,QACjB0M,EAAOpY,IAyBX,OAvBIL,IAAG6G,WAAWimE,IACdA,EAAQA,EAAMryD,GACVza,GAAGkX,iBAAiB41D,GACpBhhE,EAAUghE,EAGVhhE,EAAQG,QAAQ6gE,IAGf9sE,GAAGwH,SAASslE,IACjBhhE,EAAQG,QAAQ6gE,GAGpBhhE,EAAQsL,KACJ,SAAiBrQ,GACb0R,EAAK,IAAMo0D,EAAW,KAAKpyD,GAAM1T,GAGrC,SAAiBivB,GACbh2B,GAAGmG,IAAI,uBAAyB0mE,EAAW,WAAapyD,EAAK,KAAOub,EAAW,IAAK,WAIrFlqB,GAGXkgE,iBAAkB,SAASvxD,GACvB,MAAOpa,MAAKusE,8BAA8BnyD,EAAI,WAGlDyxD,eAAgB,SAASzxD,GACrB,MAAOpa,MAAKusE,8BAA8BnyD,EAAI,SAalD2xD,kBAAmB,SAAS3xD,EAAI1I,GAE5B,GAAIjG,GAAU,GAAI9L,IAAG+L,QACjBghE,EAAe1sE,KAAK2e,SAAS8rD,iBAAiBj7D,IAC9Cwf,EAAYrvB,GAAG8R,aAAaC,GAC5Bi7D,EAAsBlhE,EAAQK,QAC9B8gE,EAAsB,SAASC,EAAS79C,GACpC,GAAI89C,GAAeD,CAED/oE,UAAdkrB,IACA89C,GAAgB,IAAM99C,GAG1BvjB,EAAQG,QAAQkhE,GAGxB,QAAQJ,GACJ,IAAK,OACDE,EAAoB5sE,KAAK+iB,QAAQ3I,GAAK4U,EACtC,MACJ,KAAK,WACD49C,EAAoBl7D,EACpB,MACJ,SACQ/R,GAAG6G,WAAWkmE,GACd1sE,KAAK+sE,uBAAuBL,EAActyD,EAAIwyD,EAAqBD,IAGnE3sE,KAAK8F,IAAI4mE,EAAe,mDAAoD,SAC5EC,KAIZ,MAAOlhE,IAcXshE,uBAAwB,SAASC,EAAa5yD,EAAI6yD,EAAiBC,GAC/D,GAAI90D,GAAOpY,KACPsX,EAAY,SAASu1D,GACjBI,EAAgBJ,IAEpBt1D,EAAY,SAASqK,GACjBxJ,EAAKtS,IAAInG,GAAG8H,OAAO,kDAAmD2S,EAAIwH,GAAU,QAAS,SAC7FsrD,EAAgBtrD,IAEpBirD,EAAUG,EAAYzmE,KAAKvG,KAAMoa,EAEjCza,IAAGkX,iBAAiBg2D,GACpBA,EAAQ91D,KAAKO,EAAWC,GAGR,MAAXs1D,EACLt1D,IAGAD,EAAUu1D,IAIlBvC,2BAA4B,SAASlwD,EAAIkX,EAAUmF,GAC/C,GAAI1Y,IACAvO,IAAKxP,KAAKurE,OAAOnxD,GACjBG,KAAMva,KAAK+iB,QAAQ3I,GACnB1Y,KAAM1B,KAAKsgB,QAAQlG,GACnBiqD,OAAQrkE,KAAKokE,UAAUhqD,GAU3B,OAPIqc,IAAYA,EAAS02C,kBAAkB,QACvCpvD,EAAO6qD,KAAOnyC,EAAS02C,kBAAkB,QAEpC77C,EAASs3C,OACd7qD,EAAO6qD,KAAOt3C,EAASs3C,MAGpB7qD,GAIX0C,gBAAiB,SAASrG,EAAI8Y,GAC1B,GAAIC,IACA3jB,IAAKxP,KAAKurE,OAAOnxD,GACjBiqD,OAAQrkE,KAAKokE,UAAUhqD,GAG3B,OAAOza,IAAGo2B,kBAAkB1vB,UAAUoa,gBAAgBla,KAAKvG,KAAMoa,EAAI8Y,EAAmBC,IAG5F9U,eAAgB,SAAS2H,GACrB,GAAI5L,EAGJ,IAAyB,MAArB4L,EAAYonD,MACZ,KAAM,IAAIztE,IAAGwB,MAAM,6EAQvB,OALIiZ,GAAKza,GAAGo2B,kBAAkB1vB,UAAUgY,eAAerO,MAAMhQ,KAAM8H,WAC/D9H,KAAKmrE,YAAY/wD,GAAM4L,EAAYonD,MACnCptE,KAAKorE,eAAehxD,GAAM4L,EAAYqnD,SAGnCjzD,QC5bnBza,GAAGyjE,GAAGkK,2BAA6B,SAAUx1D,GACzC,YASA,SAAS+iD,KACL,GAAI0S,EACJ,cAAer1D,GAAQq1D,WACnB,IAAK,SAEGA,EADsB,WAAtBr1D,EAAQq1D,UACIr1D,EAAQq1D,UAER5tE,GAAGyjE,GAAGoK,yBAEtB,MACJ,KAAK,WACDD,EAAYr1D,EAAQq1D,YAK5B,GAAKA,EAGL,IACIE,EAAS,GAAIC,QAAOH,GACpBE,EAAO5hE,QAAU,SAAUgD,GAEvBA,EAAED,iBAEFsJ,EAAQpS,IAAI,2CAA6C+I,EAAE9I,QAAS,QACpE0nE,EAAS,IACT,IACIh9D,GADAk9D,EAAsBvnE,OAAOy5B,KAAK+tC,EAEtC,KAAKn9D,EAAI,EAAGA,EAAIk9D,EAAoBjoE,OAAQ+K,IACxCm9D,EAAeD,EAAoBl9D,IAAI3E,QAAQ+C,SACxC++D,GAAeD,EAAoBl9D,KAGlDg9D,EAAOI,UAAY,SAAUh/D,GACzB,MAAK++D,GAAe/+D,EAAElK,KAAKyV,KAIvBvL,EAAElK,KAAK8wC,IACPm4B,EAAe/+D,EAAElK,KAAKyV,IAAItO,QAAQ+C,EAAElK,KAAK8wC,KAEzCm4B,EAAe/+D,EAAElK,KAAKyV,IAAIxO,QAAQiD,EAAElK,KAAKmpE,iBAEtCF,GAAe/+D,EAAElK,KAAKyV,SARzBlC,GAAQpS,IAAI,8DAA+D,SAUpF,MAAOoN,GAENgF,EAAQpS,IAAI,0EAA4EoN,EAAI,QAC5Fu6D,EAAS,MAzDjB,GAAIA,GAAS,KACTG,KACA11D,GACIq1D,UAAW,KACXznE,IAAK,SAAS4B,EAAK1B,KAE3BrG,IAAG6B,OAAO0W,EAASJ,GAAG,GAsDtB+iD,IAMA76D,KAAK+tE,kBAAoB,SAAUvuD,GAC/B,IAAKiuD,EACD,MAAO,KAEX,IAAIhiE,GAAU,GAAI9L,IAAG+L,QACjBsiE,GAAQxuD,KAAMA,EAAMpF,GAAIza,GAAGoN,cAG/B,OAFA6gE,GAAeI,EAAK5zD,IAAM3O,EAC1BgiE,EAAOv4D,YAAY84D,GACZviE,IC7EV5G,OAAO69D,oBACR79D,OAAO69D,kBAAoB,cAgB/B/iE,GAAGyjE,GAAG6K,cAAgB,SAASn2D,GAC3B,YA2PA,SAASo2D,GAAwB9zD,EAAIsN,EAAUC,GAC3C,GAEIlc,GACA0iE,EACAxoD,EAAc2L,EAJd88C,EAAe1mD,EAASquB,aACxBs4B,EAAuBC,EAAkBl0D,EAK7C,IAAKi0D,EAAL,CASA,GANA5iE,EAAU4iE,EAAqB5iE,QAC/B0iE,EAAuBE,EAAqBF,2BAErCG,GAAkBl0D,GAGrBg0D,EACA,IACI98C,EAAW3xB,GAAGyR,UAAUg9D,GAE5B,MAAOpkE,GACHkO,EAAQpS,IAAI,iDAAmDkE,EAAO,SAK1EsnB,GAAYA,EAAStnB,OACrB2d,GAAU,EACVhC,EAAe2L,EAAStnB,OAInBsnB,GAAYA,EAASi9C,SAC1B5mD,GAAU,EACVhC,EAAe,+CAGV2L,EACDpZ,EAAQs2D,kBAAoBl9C,EAASozC,QACrC/8C,GAAU,EACVhC,EAAe,wDAET2L,EAAS81C,YACfz/C,GAAU,EACVhC,EAAe,6CAKnBgC,GAAU,EACVhC,EAAe,0DAEfgC,GACIhC,GACAzN,EAAQpS,IAAI6f,EAAc,SAG9Bla,EAAQK,QAAQ6Z,IAEXwoD,EACLM,EAAgBN,EAAsB78C,EAAS81C,UAAW37D,GAG1DA,EAAQG,QAAQ0lB,IAIxB,QAASo9C,GAAyBt0D,EAAIxH,EAAS+7D,GAC3C,GAKIC,GAAUC,EAAeC,EALzBrjE,EAAU,GAAI9L,IAAG+L,QACjBmb,EAAS,OACTkoD,KACAC,EAAa,GACbvrC,EAAM,GAAIjG,MAGVyxC,EAAuB,SAASN,GAC5B,GAAIO,GACAC,IAsCJ,OApCAxvE,IAAG+C,KAAKisE,EAAYpqD,QAAS,SAAS7iB,GAClCqtE,EAAYlsE,KAAKnB,KAErBqtE,EAAY32B,OAEZz4C,GAAG+C,KAAKqsE,EAAa,SAASpsE,EAAKysE,GAC3BzvE,GAAG2F,QAAQ3F,GAAGyjE,GAAGC,KAAKa,6BAA8BkL,GAAc,EAClEJ,GAAcI,EAAWnmE,cAAgB,IAAM0lE,EAAYpqD,QAAQ6qD,GAAY5nE,OAAS,KAEpE,gBAAf4nE,EACLF,EAAaP,EAAYpqD,QAAQ6qD,GAGjCD,EAAsBxvC,QAAQh9B,KAItChD,GAAG+C,KAAKysE,EAAuB,SAASxsE,EAAK0sE,GACzCN,EAAY5yD,OAAOkzD,EAAW,KAGlCR,GACIxK,OAAQsK,EAAYtK,OACpB6K,WAAYA,EACZ3zC,YAAaozC,EAAYpzC,YACzBqpC,KAAMnhC,EACNohC,MAAO3sD,EAAQ22D,cAAchK,MAC7B+J,SAAUA,EACVU,cAAeX,EAAYW,cAC3BP,YAAaA,EACbC,WAAYA,EACZnoD,OAAQA,GAGZioD,EAAqB,IAAZl8D,EAAgB28D,EAAGC,gBAAgBX,GAAiBY,EAAGD,gBAAgBX,IAG5EjK,KAAMnhC,EACNmrC,SAAUA,EACVc,cAA2B,IAAZ98D,EAAgB68D,EAAGE,iBAAiBd,EAAcE,aAAe,KAChFD,OAAoB,IAAZl8D,EAAgBk8D,EAAOc,OAASd,EACxCe,UAAuB,IAAZj9D,EAAgBk8D,EAAOgB,IAAMhB,GAKpD,QAAQH,EAAYzuE,MAChB,IAAK6vE,GAAuBC,aAAaC,gBACrCppD,EAAS,SACT+nD,EAAWjvE,GAAG8H,OAAO,cAAeknE,EAAYuB,SAChD,MACJ,KAAKH,GAAuBC,aAAaG,mBACrCvB,EAAW,SACX,MACJ,KAAKmB,GAAuBC,aAAaI,mBACrCxB,EAAWjvE,GAAG8H,OAAO,cAAeknE,EAAYuB,SAChD,MACJ,KAAKH,GAAuBC,aAAaK,iBACrCxpD,EAAS,MACT+nD,EAAWjvE,GAAG8H,OAAO,4BAA6BknE,EAAY2B,QAAS3B,EAAYuB,UAqB3F,MAjBAtB,GAAWD,EAAYn/D,IAAM,IAAMo/D,EACnB,IAAZh8D,EACA68D,EAAGc,wBAAwB5B,EAAYje,SAAS35C,KAAK,SAASu4D,GAC1DX,EAAYpqD,QAAQ,wBAA0B+qD,EAC9CX,EAAYpqD,QAAQisD,KAAO7B,EAAYjE,KACvCiE,EAAYpqD,QAAQ,cAAgB5kB,GAAGyjE,GAAGC,KAAK4C,gBAAgBxiC,EAAKvrB,EAAQ22D,cAAchK,OAC1F8J,EAAYW,cAAgBA,EAE5B7jE,EAAQG,QAAQqjE,EAAqBN,KACtC,SAAUl5B,GACThqC,EAAQK,QAAQ2pC,KAIpBhqC,EAAQG,QAAQqjE,EAAqBN,IAGlCljE,EAGX,QAASglE,GAA6Br2D,EAAIs2D,EAAYC,EAAiBzJ,EAAkBC,GACrF,GAAIyJ,EAGAF,GAAWvC,sBACPhH,IACAyJ,EAAiBF,EAAWvC,qBAAqB0C,aACjDD,EAAejxE,GAAGyjE,GAAGC,KAAKS,0BAA4BqD,EACtDuJ,EAAWvC,qBAAqBhxC,YAAYyzC,IAGhDF,EAAWvC,qBAAqB2C,UAAU12D,GAAIrD,KAAK,SAASg6D,GACxDC,EAAeN,EAAWvC,qBAAsB4C,EAAmBE,aAAcN,IAClF,SAAUl7B,GACTk7B,EAAgB7kE,QAAQ2pC,OAK5B0xB,GAAuBxnE,GAAGyjE,GAAGC,KAAK+C,yBAAyBsK,EAAYvJ,GACvE+J,EAAWR,EAAYC,EAAiBzJ,EAAkBC,IAIlE,QAAS+J,GAAWxM,EAAQiM,EAAiBzJ,EAAkBC,GACrB,IAAlCjvD,EAAQ22D,cAAcj8D,QACtB68D,EAAGyB,WAAWxM,EAAQiM,EAAiBzJ,EAAkBC,GAGzDoI,EAAG2B,WAAWxM,EAAQiM,EAAiBzJ,EAAkBC,GAIjE,QAAS6J,GAAe7C,EAAsBa,EAAY2B,GAChB,IAAlCz4D,EAAQ22D,cAAcj8D,QACtB68D,EAAGuB,eAAe7C,EAAsBa,EAAY2B,GAGpDpB,EAAGyB,eAAe7C,EAAsBa,EAAY2B,GAjc5D,GAAI3mC,GAsBAoiC,EArBA2D,EAAyB/vE,KACzBsuE,KACAp2D,GACIs2D,iBAAiB,EACjB3nD,OAAQ,OACRgoD,eACIhK,MAAO,EACPuH,uBACApuD,SAAU,KACVmJ,iBACAvU,QAAS,GAEbmU,eAAgB,EAChBM,iBACAD,eACAE,MACIsI,UAAU,EACVuI,iBAAiB,GAErBryB,IAAK,SAAS4B,EAAK1B,MAIvByoE,EAAkB,SAASN,EAAsB/G,EAAW37D,GACxD,GAAI8Y,GAAU4pD,EAAqB0C,YAEG,KAAlC34D,EAAQ22D,cAAcj8D,QACtBu7D,EAAqBgD,iBAAiBp6D,KAAK,WACvCwN,EAAQ6sD,cAAgBzxE,GAAGyjE,GAAGC,KAAKU,yBAC/B,eAAiB7rD,EAAQ22D,cAAczC,oBAAoBlqD,MAAM6iD,UAAY,IAC7EplE,GAAGyjE,GAAGC,KAAKqE,mBAAmByG,EAAqBkD,kBAAoB,IACvEn5D,EAAQ22D,cAAcrJ,OAAS,kCAEZ2I,EAAqBwB,mBAAqB,cAC9CvI,EACnB37D,EAAQG,QAAQ2Y,EAAS4pD,EAAqBmD,gBAC/C,WACC7lE,EAAQK,QAAQ,2BAIpByY,EAAQ6sD,cAAgB,OAASl5D,EAAQ22D,cAAczC,oBAAoBlqD,MAAM6iD,UAAY,IAAMqC,EACnG37D,EAAQG,QAAQ2Y,EAAS4pD,EAAqBmD,iBAKtD/B,GACIC,gBAAiB,SAASX,GACtB,MAAOlvE,IAAG8H,OAAO,yBACbonE,EAAchoD,OACdgoD,EAAcK,YAAc,GAC5BL,EAActzC,aAAe,GAC7BszC,EAAcG,YAAc,KAC5BH,EAAcxK,OACdwK,EAAcD,WAGtBoC,eAAgB,SAAS7C,EAAsBa,EAAY2B,GACvD,GAAIY,GAAmB5xE,GAAGy6D,SAAS6B,IAAIU,KAAKprD,MAAMy9D,GAC9CwC,EAAkB7xE,GAAGy6D,SAAS4G,SAASuQ,EAAkBnF,EAAoBlqD,MAAM0oD,WACnF6G,EAAwB9xE,GAAGy6D,SAAS6B,IAAI4C,OAAOrjC,UAAUg2C,EAE7D/C,GAAgBN,EAAsBsD,EAAuBd,IAGjEO,WAAY,SAASxM,EAAQiM,EAAiBzJ,EAAkBC,GAC5D,GAAIuK,GAAYpgE,KAAKkqB,UAAUkpC,GAC3BiN,EAAkBhyE,GAAGy6D,SAAS6B,IAAIU,KAAKprD,MAAMmgE,GAC7CE,EAAejyE,GAAGy6D,SAAS6B,IAAI4C,OAAOrjC,UAAUm2C,GAChDE,EAAiBlyE,GAAGy6D,SAAS4G,SAAS4Q,EAAcxF,EAAoBlqD,MAAM0oD,WAC9EkH,EAAuBnyE,GAAGy6D,SAAS6B,IAAI4C,OAAOrjC,UAAUq2C,EAE5DlB,GAAgB/kE,SACZ84D,OAAQkN,EACRxK,UAAW0K,GACZ5K,EAAkBC,KAI7BsI,GACIsC,wBAAyB,SAASC,GAC9B,GAEIC,GAAoBC,EAAwBC,EAF5CC,EAAgBJ,EAAS1sE,QAAQ,KACjC+sE,EAAuB,EA2B3B,OAxBID,IAAiB,IACjBH,KACAE,EAAeH,EAASngE,OAAOugE,EAAgB,GAAG/sE,MAAM,KAExD1F,GAAG+C,KAAKyvE,EAAc,SAASxvE,EAAK+lE,GAChC,GAAI4J,GAAa5J,EAAYrjE,MAAM,KAC/BktE,EAAWD,EAAW,EAEV,OAAZC,IACAA,EAAW,IAGfN,EAAmBthE,mBAAmB2hE,EAAW,KAAO3hE,mBAAmB4hE,KAG/EL,EAAyB9rE,OAAOy5B,KAAKoyC,GAAoB75B,OACzD85B,EAAuBM,QAAQ,SAASC,EAAuB9vE,GAC3D0vE,GAAwBI,EAAwB,IAAMR,EAAmBQ,GACrE9vE,EAAMuvE,EAAuBxsE,OAAS,IACtC2sE,GAAwB,QAK7BA,GAGXK,oBAAqB,SAAS7D,GAC1B,MAAOlvE,IAAG8H,OAAO,yBACbonE,EAAchoD,OACd4oD,EAAGkD,gBAAgB9D,EAAcD,UACjCa,EAAGsC,wBAAwBlD,EAAcD,UACzCC,EAAcG,YAAc,KAC5BS,EAAGE,iBAAiBd,EAAcE,aAClCF,EAAcS,gBAGtBqD,gBAAiB,SAASX,GACtB,GAAIp1C,GAAOo1C,EACPI,EAAgBJ,EAAS1sE,QAAQ,IAKrC,OAHI8sE,GAAgB,IAChBx1C,EAAOo1C,EAASngE,OAAO,EAAGugE,IAEvB,IAAMx1C,GAGjB2zC,wBAAyB,SAASrrC,GAC9B,GAAIz5B,GACAqtC,CACJ,OAAIn5C,IAAGyJ,OAAO87B,GAGNhtB,EAAQ22D,cAAc+D,gBACtBnnE,EAAUyM,EAAQ22D,cAAc+D,cAAc7E,kBAAkB7oC,GAChD,OAAZz5B,GACOA,GAGfA,EAAU,GAAI9L,IAAG+L,QACjBotC,EAAS,GAAIttC,YACbstC,EAAO+5B,UAAY,SAAShkE,GACxB,GAAIA,EAAEzC,OAAOsvB,aAAelwB,WAAWsnE,KACnC,GAAIjkE,EAAEzC,OAAOpC,MACTyB,EAAQK,QAAQ+C,EAAEzC,OAAOpC,WAExB,CACD,GAAIwxD,GAAY77D,GAAGy6D,SAASG,IAAIY,UAAUvjD,OAAO/I,EAAEzC,OAAO9J,OAC1DmJ,GAAQG,QAAQjM,GAAGy6D,SAASmH,OAAO/F,GAAWl1D,cAI1DwyC,EAAO/sC,kBAAkBm5B,GAClBz5B,IAEXA,EAAU,GAAI9L,IAAG+L,QACjBw5B,EAAOA,GAAQ,GACfz5B,EAAQG,QAAQjM,GAAGy6D,SAASmH,OAAOr8B,GAAM5+B,YAClCmF,IAGXsnE,SAAU,SAASnO,EAAMY,GACrB,MAAO7lE,IAAGyjE,GAAGC,KAAKqE,mBAAmB9C,GAAQ,IACzCY,EAAS,oBAGjBgK,gBAAiB,SAASX,GACtB,GAAImE,GAAmBvD,EAAGiD,oBAAoB7D,GAC1CjK,EAAOjlE,GAAGyjE,GAAGC,KAAK4C,gBAAgB4I,EAAcjK,KAAMiK,EAAchK,OACpEoO,EAAgBtzE,GAAGy6D,SAASmH,OAAOyR,GAAkB1sE,WACrD4sE,EAAQzD,EAAGsD,SAASlE,EAAcjK,KAAM1sD,EAAQ22D,cAAcrJ,QAC9D2N,EAAuB,8BAE3B,QACIvD,OAAQjwE,GAAG8H,OAAO0rE,EAAsBvO,EAAMsO,EAAOD,GACrDnD,IAAKnwE,GAAG8H,OAAO0rE,EAAsBvO,EAAMsO,EAAOF,KAI1DrD,iBAAkB,SAASZ,GACvB,GAAIW,GAAgB,EAUpB,OARAX,GAAYyD,QAAQ,SAASpD,EAAYzsE,GACrC+sE,GAAiBN,EAAWnmE,cAExBtG,EAAMosE,EAAYrpE,OAAS,IAC3BgqE,GAAiB,OAIlBA,GAGXsB,eAAgB,SAAS7C,EAAsBa,EAAY2B,GACvD,GAGIyC,GAASC,EAAeC,EAAsBC,EAH9C3I,EAAYwB,EAAoBlqD,MAAM0oD,UACtC4I,EAAiB,oCACjBC,EAAUD,EAAe5vE,KAAKorE,EAGlCoE,GAAUzzE,GAAGy6D,SAASiI,WAAWoR,EAAQ,GAAI,OAAS7I,GACtDyI,EAAgB1zE,GAAGy6D,SAASiI,WAAWoR,EAAQ,GAAIL,GACnDE,EAAuB3zE,GAAGy6D,SAASiI,WAAW,KAAMgR,GACpDE,EAAa5zE,GAAGy6D,SAASiI,WAAW,eAAgBiR,GAEpD7E,EAAgBN,EAAsBxuE,GAAGy6D,SAASiI,WAAW2M,EAAYuE,GAAa5C,IAG1FO,WAAY,SAASxM,EAAQiM,EAAiBzJ,EAAkBC,GAC5D,GAgBIsM,GAASL,EAASC,EAAeC,EAAsBC,EAhBvD7B,EAAYpgE,KAAKkqB,UAAUkpC,GAC3BiN,EAAkBhyE,GAAGy6D,SAAS6B,IAAIU,KAAKprD,MAAMmgE,GAC7CE,EAAejyE,GAAGy6D,SAAS6B,IAAI4C,OAAOrjC,UAAUm2C,GAChD/G,EAAYwB,EAAoBlqD,MAAM0oD,UACtC8I,EAAoB,mCACpBC,EAAuB,WACnB,GAAIC,GAAa,IAQjB,OAPAj0E,IAAG+C,KAAKgiE,EAAOC,WAAY,SAASn1D,EAAKqkE,GACrC,GAAIjxE,GAAMixE,EAAU,mBACpB,IAAIjxE,EAEA,MADAgxE,GAAahxE,GACN,IAGRgxE,IAIfH,GAAUC,EAAkB9vE,KAAK+vE,GACjCP,EAAUzzE,GAAGy6D,SAASiI,WAAWoR,EAAQ,GAAI,OAAS7I,GACtDyI,EAAgB1zE,GAAGy6D,SAASiI,WAAWoR,EAAQ,GAAIL,GACnDE,EAAuB3zE,GAAGy6D,SAASiI,WAAW,KAAMgR,GACpDE,EAAa5zE,GAAGy6D,SAASiI,WAAW,eAAgBiR,GAEpD3C,EAAgB/kE,SACZ84D,OAAQkN,EACRxK,UAAWznE,GAAGy6D,SAASiI,WAAWuP,EAAc2B,GAAYjtE,YAC7D4gE,EAAkBC,IAIjCxnE,IAAG6B,OAAO0W,EAASJ,GAAG,GACtBs0D,EAAsBl0D,EAAQ22D,cAAczC,oBA8M5CpiC,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/B6C,aAAc,mBACdlV,OAAQ3O,EAAQ2O,OAChB0U,YAAa,kCACblU,eACInF,IAAK,WACD,MAA8C,kBAAnChK,GAAQ22D,cAAc7wD,SACtB9F,EAAQ22D,cAAc7wD,WAE1B9F,EAAQ22D,cAAc7wD,WAGrCoJ,YAAalP,EAAQkP,YACrBL,eAAgB7O,EAAQ6O,eACxBI,cAAejP,EAAQ22D,cAAc1nD,cACrCrhB,IAAKoS,EAAQpS,IACbmlB,WAAYijD,EACZ5mD,KAAMpP,EAAQoP,QAGlB3nB,GAAG6B,OAAOxB,MASN8zE,aAAc,SAAS15D,EAAIs2D,GACvB,GAGIqD,GAHAh2D,EAAS2yD,EACTvC,EAAuBuC,EAAWvC,qBAClCwC,EAAkB,GAAIhxE,IAAG+L,OAqD7B,OAlDsC,KAAlCwM,EAAQ22D,cAAcj8D,UACtBmhE,GAAetE,IAAI,IAGnBrD,EAAoBlqD,MAAM0oD,WAAajrE,GAAGy6D,SACtCgS,EAAoBlqD,MAAMyjD,WAAWloC,UAAYD,KAAKiG,MACtDgtC,EAA6Br2D,EAAIs2D,EAAYC,GAI7CvE,EAAoBC,YAAYt1D,KAAK,WACjC05D,EAA6Br2D,EAAIs2D,EAC7BC,EACAvE,EAAoBlqD,MAAM6iD,UAC1BqH,EAAoBlqD,MAAMgjD,eAC/B,SAASvvC,GACRzd,EAAQpS,IAAI,qFAAsF,SAClG6qE,EAAgB7kE,QAAQ,oDAKhCoM,EAAQpS,IAAI,uCAAyCsU,GAGrDk0D,EAAkBl0D,IACd3O,QAASklE,EACTxC,qBAAsBA,GAGtBA,EACAA,EAAqB2C,UAAU12D,GAAIrD,KAAK,SAASg6D,GAC7ChzD,GAAUwG,QAASwsD,EAAmBiD,iBACtChqC,EAAUrN,cAAcviB,GACnB4iB,WAAWjf,GACXkf,gBAAgB82C,GAChB14C,QACN,SAAUoa,GACTv9B,EAAQpS,IAAI,kCAAmC,SAC/C6qE,EAAgB7kE,QAAQ,oCAI5Bk+B,EAAUrN,cAAcviB,GACnB4iB,WAAWjf,GACXkf,gBAAgB82C,GAChB14C,QAINs1C,GAGXsD,sBAAuB,SAAS/zE,EAAMmkE,EAAQqG,EAAMl7D,GAChD,GACI0gE,GAAUxf,EAASn1B,EAAa+0C,EAAS4D,EADzC3vD,IAGJ,QACI4Y,YAAa,SAASg3C,GAElB,MADA5vD,GAAU4vD,EACHn0E,MAGXo0E,aAAc,SAASC,GAEnB,MADAnE,GAAWmE,EACJr0E,MAGXs0E,YAAa,SAASC,GAElB,MADA7jB,GAAU6jB,EACHv0E,MAGXw0E,gBAAiB,SAASC,GAEtB,MADAl5C,GAAck5C,EACPz0E,MAGX00E,YAAa,SAASC,GAElB,MADArE,GAAUqE,EACH30E,MAGX8wE,UAAW,SAAS12D,GAChB,GAAI8qD,GAAekH,EAAoBlqD,MAAMgjD,aACzCz5D,EAAU,GAAI9L,IAAG+L,QACjB87D,EAAe,GAAIhqC,MAAKA,KAAKiG,MAAQvrB,EAAQ22D,cAAchK,MAwC/D,OAtCAtgD,GAAQ,cAAgBijD,EAAaoN,cAEjC1P,IACA3gD,EAAQ5kB,GAAGyjE,GAAGC,KAAKS,0BAA4BoB,GAEnDllE,KAAKmxE,iBAAmB1lE,EAExBijE,EAAyBt0D,EAAIlC,EAAQ22D,cAAcj8D,SAC/CyxD,OAAQA,EACR3T,QAASA,EACTn1B,YAAaA,EACbhX,QAASA,EACTmmD,KAAMA,EACNl7D,IAAKA,EACL8gE,QAASA,EACTpwE,KAAMA,EACNgwE,SAAUA,IACXn5D,KAAK,SAAS89D,GACbX,EAAYW,EACZppE,EAAQG,SACJ2Y,QAAU,WAMN,MALIgX,KACAhX,EAAQ,gBAAkBgX,SAGvBhX,GAAQisD,KACRjsD,KAEXqgD,KAAMsP,EAAUtP,KAChBgK,SAAUsF,EAAUtF,SACpBc,cAAewE,EAAUxE,cACzBuB,aAAciD,EAAUpF,OACxBkF,gBAAiBE,EAAUrE,aAEhC,SAAUp6B,GACThqC,EAAQK,QAAQ2pC,KAGbhqC,GAGXolE,WAAY,WACR,MAAOlxE,IAAG6B,UAAW+iB,IAGzB+sD,YAAa,WACT,MAAO4C,IAAaA,EAAUtF,UAGlCyC,eAAgB,WACZ,MAAO6C,IAAaA,EAAUtP,MAGlC+K,iBAAkB,WACd,MAAOuE,IAAaA,EAAUxE,oBAOlD/vE,GAAGyjE,GAAG6K,cAAc5nE,UAAU2pE,cAC1BG,mBAAoB,qBACpBC,mBAAoB,qBACpBH,gBAAiB,kBACjBI,iBAAkB,oBChpBtB1wE,GAAG0qE,2BAA6B,SAASvyD,GACrC,YAmBA,SAASg9D,GAAsB16D,EAAIsN,EAAUC,GACzC,GAIIotD,GAJAtpE,EAAUupE,EAAgB56D,GAC1Bg0D,EAAe1mD,EAASquB,aACxBk/B,GAAoBrpE,SAAS,GAC7BspE,GAAoBtpE,SAAS,SAG1BopE,GAAgB56D,GAEvBlC,EAAQpS,IAAInG,GAAG8H,OAAO,kFAAmF2S,EAAIg0D,GAE7G,KACI2G,EAAiBp1E,GAAGyR,UAAUg9D,GAM1BzmD,GAAYotD,IAAmBA,EAAe/qE,OAAS+qE,EAAenpE,WAAY,IAClFsM,EAAQpS,IAAI,qDAAsD,SAClE2F,EAAQK,QAAQnM,GAAG6B,OAAOuzE,EAAgBG,MAG1Ch9D,EAAQpS,IAAI,kDACZ2F,EAAQG,QAAQjM,GAAG6B,OAAOuzE,EAAgBE,KAGlD,MAAOjrE,GAEC2d,GACAzP,EAAQpS,IAAInG,GAAG8H,OAAO,kFAAmF2S,GAAK,SAC9G3O,EAAQK,QAAQopE,KAGhBh9D,EAAQpS,IAAI,kDACZ2F,EAAQG,QAAQqpE,KApD5B,GAAIjrC,GACAgrC,KACA98D,GACI2O,OAAQ,OACR7I,SAAU,KACV+I,eAAgB,EAChBI,iBACAC,eACAE,MACIsI,UAAU,EACVuI,iBAAiB,GAErBryB,IAAK,SAAS4B,EAAK1B,KAG3BrG,IAAG6B,OAAO0W,EAASJ,GA0CnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/B6C,aAAc,mBACdlV,OAAQ3O,EAAQ2O,OAChBQ,eACInF,IAAK,WACD,MAAOhK,GAAQ8F,WAGvBoJ,YAAalP,EAAQkP,YACrBL,eAAgB7O,EAAQ6O,eACxBI,cAAejP,EAAQiP,cACvBrhB,IAAKoS,EAAQpS,IACbmlB,WAAY6pD,EACZxtD,KAAMpP,EAAQoP,QAGlB3nB,GAAG6B,OAAOxB,MAUNuqE,mBAAoB,SAASnwD,EAAIiB,GAC7B,GAAI5P,GAAU,GAAI9L,IAAG+L,OAUrB,OARAwM,GAAQpS,IAAI,sDAAwDsU,GAEpE4vB,EAAUrN,cAAcviB,GACnB4iB,WAAW3hB,GACXggB,OAEL25C,EAAgB56D,GAAM3O,EAEfA,MClGnB9L,GAAGyjE,GAAG+R,+BAAiC,SAASr9D,GAC5C,YAyCA,SAAS+4D,GAAWz2D,GAChB,GAKI+zD,GALA9J,EAASnsD,EAAQksD,UAAUhqD,GAC3BswD,EAAOxyD,EAAQ0zD,QAAQxxD,GACvBmK,KACA9Y,EAAU,GAAI9L,IAAG+L,QACjB8D,EAAM0I,EAAQqzD,OAAOnxD,EAgCzB,OA7BAmK,GAAQ,aAAerM,EAAQwzD,SAASxpD,IAAI9H,GAExClC,EAAQqtD,oBACRhhD,EAAQ5kB,GAAGyjE,GAAGC,KAAKK,+BAAiC/jE,GAAGyjE,GAAGC,KAAKM,gCAG/DzrD,EAAQutD,uBACRlhD,EAAQ5kB,GAAGyjE,GAAGC,KAAKO,mCAAqCjkE,GAAGyjE,GAAGC,KAAKQ,oCAGvEt/C,EAAQ5kB,GAAGyjE,GAAGC,KAAKE,iBAAmBrrD,EAAQ+d,eAAiBtlB,mBAAmBuH,EAAQoI,QAAQlG,IAElGza,GAAG+C,KAAKwV,EAAQkP,YAAYlF,IAAI9H,GAAK,SAAS1Y,EAAMkB,GAC5CjD,GAAG2F,QAAQ3F,GAAGyjE,GAAGC,KAAKc,uBAAwBziE,IAAS,EACvD6iB,EAAQ7iB,GAAQkB,EAGhB2hB,EAAQ5kB,GAAGyjE,GAAGC,KAAKE,iBAAmB7hE,GAAQiP,mBAAmB/N,KAIzEurE,EAAuBiH,EAA0BnB,sBAC5CmB,EAA0BpF,aAAaG,mBAAoB9L,EAAQqG,EAAMl7D,GACzEglE,gBAAgBt8D,EAAQm9D,eAAej7D,IACvC+iB,YAAY5Y,GAGjB6wD,EAA0BtB,aAAa15D,GAAK+zD,qBAAsBA,IAAuBp3D,KAAKtL,EAAQG,QAASH,EAAQK,SAEhHL,EAWX,QAAS6pE,GAA8Bl7D,EAAI7G,EAAKoU,GAC5C,GAGI4tD,GAAkBC,EAAiBtF,EAAUvqD,EAAcjL,EAH3DjP,EAAUgqE,EAAwBr7D,GAClCs7D,EAAY,GAAIC,WAChBC,EAAcF,EAAUG,gBAAgBtiE,EAAIwiC,aAAc,yBAGvD0/B,GAAwBr7D,GAG3BuN,GACAjN,EAASnH,EAAImH,OAEb86D,EAAkBI,EAAYnzE,qBAAqB,WAC/C+yE,EAAgB9vE,OAAS,IACzBigB,EAAe6vD,EAAgB,GAAGjyE,eAKtCgyE,EAAmBK,EAAYnzE,qBAAqB,YAChD8yE,EAAiB7vE,OAAS,EAC1BwqE,EAAWqF,EAAiB,GAAGhyE,YAG/BoiB,EAAe,kCAKN7hB,SAAbosE,GACIvqD,EACAzN,EAAQpS,IAAInG,GAAG8H,OAAO,8EAA+E2S,EAAIuL,GAAe,SAGxHzN,EAAQpS,IAAInG,GAAG8H,OAAO,oFAAqF2S,EAAIM,GAAS,SAG5HjP,EAAQK,QAAQ,qCAAsCyH,KAGtD2E,EAAQpS,IAAInG,GAAG8H,OAAO,wEAAyE2S,EAAI81D,IACnGzkE,EAAQG,QAAQskE,EAAU38D,IAhIlC,GAAIy2B,GAmBAorC,EAlBAK,KACAv9D,GACI+d,cAAe,aACfpP,OAAQ,OACRQ,cAAe,KACfD,YAAa,KACbynD,cAAe,KACfnD,SAAU,KACVnG,mBAAmB,EACnBE,sBAAsB,EACtB1+C,eAAgB,EAChBsuD,eAAgB,SAASj7D,KACzBgqD,UAAW,SAAShqD,KACpBwxD,QAAS,SAASxxD,KAClBmxD,OAAQ,SAASnxD,KACjBkG,QAAS,SAASlG,KAClBtU,IAAK,SAAS4B,EAAK1B,KAI3BrG,IAAG6B,OAAO0W,EAASJ,GAEnBs9D,EAA4B,GAAIz1E,IAAGyjE,GAAG6K,eAClC5mD,cAAenP,EAAQmP,cACvBwnD,cAAe32D,EAAQ22D,cACvBvnD,KAAMpP,EAAQoP,KACdxhB,IAAKoS,EAAQpS,MAyGjBkkC,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/BrS,OAAQ3O,EAAQ2O,OAChB0U,YAAa,KACblU,cAAenP,EAAQmP,cACvBN,eAAgB7O,EAAQ6O,eACxBkV,oCAAoC,EACpCn2B,IAAKoS,EAAQpS,IACbmlB,WAAYqqD,EACZn5C,yBACIK,MAAO,SAIf78B,GAAG6B,OAAOxB,MASNq7B,KAAM,SAASjhB,GACX,GAAI3O,GAAU,GAAI9L,IAAG+L,OAYrB,OAVAmlE,GAAWz2D,GAAIrD,KAAK,SAASwN,EAASqqD,GAClC12D,EAAQpS,IAAI,uDAAyDsU,GAErEq7D,EAAwBr7D,GAAM3O,EAC9Bu+B,EAAUrN,cAAcviB,GACnB0iB,SAAS8xC,GACTzxC,YAAY5Y,GACZ8W,QACN5vB,EAAQK,SAEJL,MC1KnB9L,GAAGyjE,GAAG0S,+BAAiC,SAASh+D,GAC5C,YAkCA,SAAS+4D,GAAWz2D,EAAI81D,EAAUhrC,GAC9B,GACIz5B,GAAU,GAAI9L,IAAG+L,QACjB24D,EAASnsD,EAAQksD,UAAUhqD,GAC3BswD,EAAOxyD,EAAQ0zD,QAAQxxD,GACvB+zD,EAAuBiH,EAA0BnB,sBAC5CmB,EAA0BpF,aAAaI,mBAAoB/L,EAAQqG,EAAMxyD,EAAQqzD,OAAOnxD,IACxFg6D,aAAalE,GACboE,YAAYpvC,GACZsvC,gBAAgB,iCAKzB,OAFAY,GAA0BtB,aAAa15D,GAAK+zD,qBAAsBA,IAAuBp3D,KAAKtL,EAAQG,QAASH,EAAQK,SAEhHL,EAWX,QAASsqE,GAA8B37D,EAAI7G,EAAKoU,GAC5C,GAAIlc,GAAUuqE,EAAwB57D,GAClCs7D,EAAY,GAAIC,WAChBtR,EAASnsD,EAAQksD,UAAUhqD,GAE3Bw7D,GADM19D,EAAQqzD,OAAOnxD,GACPs7D,EAAUG,gBAAgBtiE,EAAIwiC,aAAc,oBAC1DkgC,EAAYL,EAAYnzE,qBAAqB,UAC7CyzE,EAASN,EAAYnzE,qBAAqB,aAEvCuzE,GAAwB57D,GAE/BlC,EAAQpS,IAAInG,GAAG8H,OAAO,yCAA0C8L,EAAImH,OAAQnH,EAAIwiC,eAG5EpuB,EACAzP,EAAQpS,IAAInG,GAAG8H,OAAO,kEAAmE2S,EAAI7G,EAAImH,QAAS,SAItGu7D,EAAUvwE,QAAUwwE,EAAOxwE,OACvBuwE,EAAU,GAAG1yE,cAAgB8gE,IAC7B18C,GAAU,EACVzP,EAAQpS,IAAInG,GAAG8H,OAAO,wEAAyE2S,GAAK,WAMxGuN,GAAU,EACVzP,EAAQpS,IAAInG,GAAG8H,OAAO,qFAAsF2S,GAAK,UAIrHuN,EACAlc,EAAQK,QAAQ,oCAAqCyH,GAGrD9H,EAAQG,WAAY2H,GAQ5B,QAAS4iE,GAAuBC,GAC5B,GAAIj4B,GAAM30C,SAAS6sE,eAAeC,eAAe,KAAM,0BAA2B,KAyBlF,OAtBAF,GAAYh+B,KAAK,SAASC,EAAGC,GACzB,MAAOD,GAAEnQ,KAAOoQ,EAAEpQ,OAItBvoC,GAAG+C,KAAK0zE,EAAa,SAASzzE,EAAK4zE,GAC/B,GAAIruC,GAAOquC,EAAUruC,KACjB0gC,EAAO2N,EAAU3N,KACjB4N,EAASr4B,EAAI10C,cAAc,QAC3BgtE,EAAYt4B,EAAI10C,cAAc,cAC9BitE,EAAgBv4B,EAAIw4B,eAAezuC,GACnC0uC,EAAaz4B,EAAIw4B,eAAe/N,GAChCiO,EAAS14B,EAAI10C,cAAc,OAE/BotE,GAAO1lE,YAAYylE,GACnBH,EAAUtlE,YAAYulE,GACtBF,EAAOrlE,YAAYslE,GACnBD,EAAOrlE,YAAY0lE,GACnBl3E,GAAGw+C,GAAKp7C,WAAW,GAAGoO,YAAYqlE,MAI/B,GAAIM,gBAAgBC,kBAAkB54B,GAhIjD,GAAInU,GAaAorC,EAZAY,KACA99D,GACI2O,OAAQ,OACR0U,YAAa,WACblU,cAAe,KACfwnD,cAAe,KACf9nD,eAAgB,EAChBq9C,UAAW,SAAShqD,KACpBwxD,QAAS,SAASxxD,KAClBmxD,OAAQ,SAASnxD,KACjBtU,IAAK,SAAS4B,EAAK1B,KAI3BrG,IAAG6B,OAAO0W,EAASJ,GAGnBs9D,EAA4B,GAAIz1E,IAAGyjE,GAAG6K,eAClC5mD,cAAenP,EAAQmP,cACvBwnD,cAAe32D,EAAQ22D,cACvBvnD,KAAMpP,EAAQoP,KACdxhB,IAAKoS,EAAQpS,MA6GjBkkC,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/BrS,OAAQ3O,EAAQ2O,OAChB0U,YAAa,iCACblU,cAAenP,EAAQmP,cACvBN,eAAgB7O,EAAQ6O,eACxBkV,oCAAoC,EACpCn2B,IAAKoS,EAAQpS,IACbmlB,WAAY8qD,EACZ55C,yBACIK,MAAO,SAIf78B,GAAG6B,OAAOxB,MASNq7B,KAAM,SAASjhB,EAAI81D,EAAUkG,GACzB,GAAI3qE,GAAU,GAAI9L,IAAG+L,QACjBw5B,EAAOixC,EAAuBC,EAelC,OAbAvF,GAAWz2D,EAAI81D,EAAUhrC,GAAMnuB,KAAK,SAASwN,EAASqqD,GAClD12D,EAAQpS,IAAI,uDAAyDsU,GAErE47D,EAAwB57D,GAAM3O,QACvB8Y,GAAQ,gBAEfylB,EAAUrN,cAAcviB,GACnB0iB,SAAS8xC,GACTzxC,YAAY5Y,GACZ6Y,YAAY8H,GACZ7J,QACN5vB,EAAQK,SAEJL,MC7KnB9L,GAAGyjE,GAAG4T,4BAA8B,SAASl/D,GACzC,YAkCA,SAAS+4D,GAAWz2D,EAAI81D,GACpB,GACIzkE,GAAU,GAAI9L,IAAG+L,QACjB24D,EAASnsD,EAAQksD,UAAUhqD,GAC3BswD,EAAOxyD,EAAQ0zD,QAAQxxD,GACvB+zD,EAAuBiH,EAA0BnB,sBAC5CmB,EAA0BpF,aAAaC,gBAAiB5L,EAAQqG,EAAMxyD,EAAQqzD,OAAOnxD,IACrFg6D,aAAalE,EAKtB,OAFAkF,GAA0BtB,aAAa15D,GAAK+zD,qBAAsBA,IAAuBp3D,KAAKtL,EAAQG,QAASH,EAAQK,SAEhHL,EAWX,QAASwrE,GAA2B78D,EAAI7G,EAAKoU,GACzC,GAGIuvD,GAHAxB,EAAY,GAAIC,WAChBC,EAAcF,EAAUG,gBAAgBtiE,EAAIwiC,aAAc,mBAC1DohC,EAAWvB,EAAYnzE,qBAAqB,QAGhDyV,GAAQpS,IAAInG,GAAG8H,OAAO,sCAAuC8L,EAAImH,OAAQnH,EAAIwiC,eAGzEpuB,EACAzP,EAAQpS,IAAInG,GAAG8H,OAAO,+DAAgE2S,EAAI7G,EAAImH,QAAS,SAInGy8D,EAASzxE,QACTiiB,GAAU,EACVuvD,EAActB,EAAYnzE,qBAAqB,WAAW,GAAGc,YAC7D2U,EAAQpS,IAAInG,GAAG8H,OAAO,8DAA+D2S,EAAI88D,GAAc,UAGvGh/D,EAAQpS,IAAInG,GAAG8H,OAAO,8CAA+C2S,IA3EjF,GAAI4vB,GAWAorC,EAVAl9D,GACI2O,OAAQ,SACRQ,cAAe,KACfwnD,cAAe,KACf9nD,eAAgB,EAChBq9C,UAAW,SAAShqD,KACpBwxD,QAAS,SAASxxD,KAClBmxD,OAAQ,SAASnxD,KACjBtU,IAAK,SAAS4B,EAAK1B,KAI3BrG,IAAG6B,OAAO0W,EAASJ,GAGnBs9D,EAA4B,GAAIz1E,IAAGyjE,GAAG6K,eAClC5mD,cAAenP,EAAQmP,cACvBwnD,cAAe32D,EAAQ22D,cACvBvnD,KAAMpP,EAAQoP,KACdxhB,IAAKoS,EAAQpS,MA4DjBkkC,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/BmD,cAAe,UACfxV,OAAQ3O,EAAQ2O,OAChB0U,YAAa,KACblU,cAAenP,EAAQmP,cACvBN,eAAgB7O,EAAQ6O,eACxBkV,oCAAoC,EACpCn2B,IAAKoS,EAAQpS,IACbmlB,WAAYgsD,EACZ96C,yBACIG,QAAS,SAIjB38B,GAAG6B,OAAOxB,MAONq7B,KAAM,SAASjhB,EAAI81D,GACfW,EAAWz2D,EAAI81D,GAAUn5D,KAAK,SAASwN,EAASqqD,GAC5C12D,EAAQpS,IAAI,oDAAsDsU,GAClE4vB,EAAUrN,cAAcviB,GACnB0iB,SAAS8xC,GACTzxC,YAAY5Y,GACZ8W,aC5GrB17B,GAAGyjE,GAAGp9B,iBAAmB,SAAS3qB,EAAMuiB,GACpC,YAGA,IAAIg1C,EACAv3D,GAAK+rD,UAAUmG,YACfqF,EAAgB,GAAIjzE,IAAGyjE,GAAGkK,4BACtBC,UAAWlyD,EAAK+rD,UAAUmG,UAC1BznE,IAAK83B,EAAM93B,MAInB,IAAIwa,GAAUsd,EAAMtd,QAChBxa,EAAM83B,EAAM93B,IACZg/D,EAAazpD,EAAKypD,WAClBG,EAAiB,IACjBmS,EAAc/7D,EAAK+oD,UACnBiT,EAAYh8D,EAAKuwD,QACjB0L,EAAej8D,EAAKywD,WACpB71C,EAAgB5a,EAAK4a,cACrB7O,EAAc/L,EAAK+L,YACnBC,EAAgBhM,EAAKgM,cACrBqkD,EAAWrwD,EAAKqwD,SAChBnG,EAAoBlqD,EAAKovD,iBAAiBlF,kBAC1CC,EAASnqD,EAAKovD,iBAAiBjF,OAC/BC,EAAuBpqD,EAAKovD,iBAAiBhF,qBAC7C37C,EAAazO,EAAKyO,WAClBs9C,EAAYznE,GAAG6B,QAAQgkE,OAAQA,EAAQX,MAAOC,EAAY8N,cAAeA,GAAgBv3D,EAAK+rD,WAC9F34C,EAAUzuB,KACVosE,EAAsB/wD,EAAK+rD,UAAUgF,oBAErC3tC,GAGI84C,QAAS,SAASn9D,GACd,GAAI81D,GAAWzhD,EAAQga,oBAAoBruB,GAAI81D,SAC3CsH,EAAU/oD,EAAQga,oBAAoBruB,GAAIq9D,MAC1Cn1E,EAAS,GAAI3C,IAAG+L,OAUpB,OARAgsE,GAAWC,kBAAkBt8C,KAAKjhB,EAAI81D,EAAUsH,GAASzgE,KACrDzU,EAAOsJ,QAEP,SAAiBgW,EAAQrO,GACrBjR,EAAOwJ,QAAQjC,EAAO2N,KAAK4C,EAAI7G,GAAK+d,SAAU/d,KAI/CjR,GAOXkV,KAAM,SAAS4C,EAAI7G,EAAKmrB,GACpB,GACIkqC,GADAt3C,EAAWznB,EAAOynB,SAAS/f,MAAM6I,EAAI7G,EAGrC+d,GAAS1lB,UACTg9D,EAAOr1D,EAAI45D,kBAAkB,QAExB1+C,EAAQga,oBAAoBruB,GAAIq9D,QACjChpD,EAAQga,oBAAoBruB,GAAIq9D,UAEpChpD,EAAQga,oBAAoBruB,GAAIq9D,MAAM50E,MAAMqlC,KAAMxJ,EAAW,EAAGkqC,KAAMA,MAe9EgP,YAAa,SAASx9D,EAAIskB,EAAUtzB,GAChC,GACIi5D,GAASx6D,EAAOw6D,OAAO/jD,QAAQlG,GAC/BswD,EAAO7gE,EAAO6gE,KAAKpqD,QAAQlG,GAC3B5K,EAAM3F,EAAO2F,IAAIqoE,QAAQz9D,GACzB3O,EAAU,GAAI9L,IAAG+L,QACjByiE,EAAuBuJ,EAAWI,cAAc7D,sBAC3CyD,EAAWI,cAAc9H,aAAaK,iBAAkBhM,EAAQqG,EAAMl7D,GACtEklE,YAAYh2C,EAAW,GACvB41C,YAAYlpE,GACZgpE,aAAa3lD,EAAQga,oBAAoBruB,GAAI81D,SAKtD,OAFAwH,GAAWI,cAAchE,aAAa15D,EAAK,IAAMskB,GAAWyvC,qBAAsBA,IAAuBp3D,KAAKtL,EAAQG,QAASH,EAAQK,SAEhIL,GAGXssE,IAAK,SAAS39D,EAAIskB,GACd,GAAInrB,GAAMkb,EAAQkZ,WAAWvtB,EAAIskB,GAC7B/S,EAAY8C,EAAQkQ,cAAcvkB,EAAIskB,GACtCs5C,EAAS38D,EAAKgM,cAAcnF,IAAI9H,GAChC3O,EAAU,GAAI9L,IAAG+L,OAyBrB,OArBA+yB,GAAQm5C,YAAYx9D,EAAIskB,EAAU/S,EAAUvgB,MAAM2L,KAAK,SAASwN,EAASqqD,GACrE,GAAIr7D,EAAI2sB,WACJp6B,EAAInG,GAAG8H,OAAO,4FAA6F2S,EAAIskB,IAC/GjzB,EAAQK,SAAS9B,MAAO,+BAEvB,CACD,GAAIywB,GAAMu9C,EAAS,IAAMpJ,CACzBngD,GAAQua,yBAAyB5uB,EAAIskB,EAAU/S,EAAUnQ,MACzD3R,EAAOouE,MAAM79D,EAAI7G,EAAKmrB,GAAU3nB,KAAKtL,EAAQG,QAASH,EAAQK,SAC9DyH,EAAI4nB,KAAK,MAAOV,GAAK,GAErB96B,GAAG+C,KAAK6hB,EAAS,SAAS7iB,EAAMkB,GAC5B2Q,EAAIyoB,iBAAiBt6B,EAAMkB,KAG/B2Q,EAAI8nB,KAAK1P,EAAUvgB,QAExB,WACCK,EAAQK,SAAS9B,MAAO,8BAA+BuJ,KAGpD9H,GAGX4vB,KAAM,SAASjhB,EAAIskB,GACf,GAAIjzB,GAAU,GAAI9L,IAAG+L,OAcrB,OAZA+yB,GAAQy5C,MAAM99D,GAAIrD,KAEd,WACI0nB,EAAQs5C,IAAI39D,EAAIskB,GAAU3nB,KAAKtL,EAAQG,QAASH,EAAQK,UAI5D,SAAS6Z,EAAcpS,GACnB9H,EAAQK,SAAS9B,MAAO2b,GAAepS,KAIxC9H,GAUXysE,MAAO,SAAS99D,GACZ,GAAI3O,GAAU,GAAI9L,IAAG+L,QACjBwkE,EAAWzhD,EAAQga,oBAAoBruB,GAAI81D,SAC3CiI,EAAkB,GAAIx4E,IAAG+L,OA0B7B,OAxBKwkE,GAeIA,YAAoBvwE,IAAG+L,QAC5BwkE,EAASn5D,KAAK,SAASm5D,GACnBzkE,EAAQG,QAAQskE,KAIpBzkE,EAAQG,QAAQskE,IApBhBzhD,EAAQga,oBAAoBruB,GAAI81D,SAAWiI,EAC3CT,EAAWU,kBAAkB/8C,KAAKjhB,GAAIrD,KAClC,SAASm5D,GACLzhD,EAAQga,oBAAoBruB,GAAI81D,SAAWA,EAC3CiI,EAAgBvsE,QAAQskE,GACxBzkE,EAAQG,QAAQskE,IAEpB,SAASv6C,EAAUpiB,GACfkb,EAAQga,oBAAoBruB,GAAI81D,SAAW,KAC3CzkE,EAAQK,QAAQ6pB,EAAUpiB,GAC1B4kE,EAAgBrsE,QAAQ6pB,EAAUpiB,MAavC9H,IAIfisE,GACIW,eAAgB,GAAI14E,IAAGyjE,GAAG4T,6BACtB3vD,cAAeA,EACfwnD,cAAezH,EACf9/C,KAAMjM,EAAKiM,KACXxhB,IAAKA,EACLs+D,UAAW,SAAShqD,GAChB,MAAOvQ,GAAOw6D,OAAO/jD,QAAQlG,IAEjCwxD,QAAS,SAASxxD,GACd,MAAOvQ,GAAO6gE,KAAKpqD,QAAQlG,IAE/BmxD,OAAQ,SAASnxD,GACb,MAAOvQ,GAAO2F,IAAIqoE,QAAQz9D,MAIlCu9D,kBAAmB,GAAIh4E,IAAGyjE,GAAG0S,gCACzBzuD,cAAeA,EACfwnD,cAAezH,EACf9/C,KAAMjM,EAAKiM,KACXxhB,IAAKA,EACLs+D,UAAW,SAAShqD,GAChB,MAAOvQ,GAAOw6D,OAAO/jD,QAAQlG,IAEjCwxD,QAAS,SAASxxD,GACd,MAAOvQ,GAAO6gE,KAAKpqD,QAAQlG,IAE/BmxD,OAAQ,SAASnxD,GACb,MAAOvQ,GAAO2F,IAAIqoE,QAAQz9D,MAIlCg+D,kBAAmB,GAAIz4E,IAAGyjE,GAAG+R,gCACzBl/C,cAAeA,EACf5O,cAAeA,EACfD,YAAaA,EACbynD,cAAezH,EACfsE,SAAUA,EACVnG,kBAAmBA,EACnBE,qBAAsBA,EACtBn+C,KAAMjM,EAAKiM,KACXxhB,IAAKA,EACLuvE,eAAgB,SAASj7D,GACrB,MAAOqU,GAAQ+Z,aAAapuB,IAEhCgqD,UAAW,SAAShqD,GAChB,MAAOvQ,GAAOw6D,OAAO/jD,QAAQlG,IAEjCwxD,QAAS,SAASxxD,GACd,MAAOvQ,GAAO6gE,KAAKpqD,QAAQlG,IAE/BmxD,OAAQ,SAASnxD,GACb,MAAOvQ,GAAO2F,IAAIqoE,QAAQz9D,IAE9BkG,QAAS,SAASlG,GACd,MAAOkG,GAAQlG,MAIvBk+D,gBAAiB,GAAI34E,IAAGyjE,GAAG6K,eACvBO,iBAAiB,EACjBK,cAAezH,EACf9/C,KAAMjM,EAAKiM,KACXxhB,IAAKA,IAGTgyE,cAAe,GAAIn4E,IAAGyjE,GAAG6K,eACrB5mD,cAAeA,EACfwnD,cAAezH,EACf9/C,KAAMjM,EAAKiM,KACXxhB,IAAKA,KAIbw8B,GAUIi2C,WAAY,SAASn+D,GAEjB,GAAI2sD,GAAe3/C,EAAYlF,IAAI9H,EAGnC,OAFA2sD,GAAa9wC,GAAiB3V,EAAQlG,GAE/Bza,GAAGyjE,GAAGC,KAAKsD,mBACd3oD,SAAUqJ,EAAcnF,IAAI9H,GAC5B0qD,WAAYA,EACZ/mD,OAAQgpD,EACR7mE,KAAMuuB,EAAQ+Z,aAAapuB,GAC3BiqD,OAAQx6D,EAAOw6D,OAAO/jD,QAAQlG,GAC9B5K,IAAKif,EAAQuP,oBAAoB5jB,GACjC2qD,UAAWqH,EAAoBlqD,MAAM6iD,UACrCG,aAAckH,EAAoBlqD,MAAMgjD,aACxCF,IAAK0G,EAASxpD,IAAI9H,GAClB6qD,eAAgBA,EAChBI,YAAav7C,EAAW+G,aACxBy0C,YAAax7C,EAAWkiD,aACxBzG,kBAAmBA,EACnBC,OAAQA,EACRC,qBAAsBA,EACtBC,iBAAkB0B,EAAUx0D,QAC5B9M,IAAKA,GAETnG,GAAGgQ,KAAK+nE,EAAWY,gBAAgBxE,aAAc9zE,KAAMoa,KAG3DihB,KAAM,SAASjhB,GACX,GAAI3O,GAAU,GAAI9L,IAAG+L,QACjB6H,EAAMkb,EAAQkZ,WAAWvtB,GACzB1P,EAAa+jB,EAAQjN,QAAQpH,EAWjC,OATAqU,GAAQua,yBAAyB5uB,GACjCvQ,EAAOouE,MAAM79D,EAAI7G,GAAKwD,KAAKtL,EAAQG,QAASH,EAAQK,SAGpDw2B,EAAO41C,MAAM99D,EAAI7G,EAAK7I,GAAYqM,KAAK,SAASwoC,GAC5Cz5C,EAAI,8BAAgCsU,GACpC7G,EAAI8nB,KAAKkkB,IACV9zC,EAAQK,SAEJL,GAgBXysE,MAAO,SAAS99D,EAAI7G,EAAK7I,GACrB,GAAIoG,GAAW,GAAInH,UACfqU,EAAWqJ,EAAcnF,IAAI9H,GAC7BqgB,EAAMzc,EACNvS,EAAU,GAAI9L,IAAG+L,OAqBrB,OAnBA42B,GAAOi2C,WAAWn+D,GAAIrD,KAElB,SAAS+vD,GACLvzD,EAAI4nB,KAAK,OAAQV,GAAK,GAEtB96B,GAAGkR,aAAai2D,EAAWh2D,GAG3BA,EAAS5L,OAAO,OAAQwF,GAExBe,EAAQG,QAAQkF,IAIpB,SAAS6U,GACLla,EAAQK,SAAS9B,MAAO2b,MAIzBla,IAIf5B,GAQIw6D,QACI54D,QAAS,SAAS2O,GACd,GAAI3O,GAAU,GAAI9L,IAAG+L,QACjB8sE,EAAe/pD,EAAQwP,cAAc7jB,GAAIiqD,MAY7C,OAVImU,GACA/sE,EAAQG,QAAQ4sE,GAGhBpB,EAAYh9D,GAAIrD,KAAK,SAASstD,GAC1B51C,EAAQwP,cAAc7jB,GAAIiqD,OAASA,EACnC54D,EAAQG,QAAQy4D,IACjB54D,EAAQK,SAGRL,GAGX6U,QAAS,SAASlG,GACd,MAAOqU,GAAQwP,cAAc7jB,GAAIiqD,SAIzCqG,MACIj/D,QAAS,SAAS2O,GACd,GAAI3O,GAAU,GAAI9L,IAAG+L,QACjB+sE,EAAahqD,EAAQwP,cAAc7jB,GAAIswD,IAY3C,OAVI+N,GACAhtE,EAAQG,QAAQ6sE,GAGhBpB,EAAUj9D,GAAIrD,KAAK,SAAS2zD,GACxBj8C,EAAQwP,cAAc7jB,GAAIswD,KAAOA,EACjCj/D,EAAQG,QAAQ8+D,IACjBj/D,EAAQK,SAGRL,GAGX6U,QAAS,SAASlG,GACd,MAAOqU,GAAQwP,cAAc7jB,GAAIswD,OAIzClzD,KAAM,SAAS4C,EAAI7G,GACf,GAAI+d,GAAWznB,EAAOynB,SAAS/f,MAAM6I,EAAI7G,GACrCoU,EAAU2J,EAAS1lB,WAAY,CAOnC,OALI+b,IAAW9d,EAAOynB,SAASonD,YAAYpnD,EAASpB,QAChDpqB,EAAI,iGAAkG,SACtGwrB,EAASxX,OAAQ,IAIjBlO,SAAU+b,EACV2J,SAAUA,IAIlB9hB,KACI/D,QAAS,SAAS2O,GACd,GAAI3O,GAAU,GAAI9L,IAAG+L,QACjB8D,EAAMif,EAAQuP,oBAAoB5jB,EAuBtC,OApBW,OAAP5K,GACAif,EAAQyP,qBAAqB9jB,EAAI3O,GACjC6rE,EAAal9D,EAAIkG,EAAQlG,IAAKrD,KAC1B,SAAS4hE,GACLlqD,EAAQyP,qBAAqB9jB,EAAIu+D,GACjCltE,EAAQG,QAAQ+sE,IAEpB,SAASpnD,GACL9C,EAAQyP,qBAAqB9jB,EAAI,MACjC3O,EAAQK,QAAQylB,MAInB5xB,GAAGkX,iBAAiBrH,GACzBA,EAAIuH,KAAKtL,EAAQG,QAASH,EAAQK,SAGlCL,EAAQG,QAAQ4D,GAGb/D,GAGXosE,QAAS,SAASz9D,GACd,GAAIw+D,GAAanqD,EAAQuP,oBAAoB5jB,EAC7C,OAAOza,IAAGyjE,GAAGC,KAAK4F,cAAc2P,KAIxCtnD,UACI/f,MAAO,SAAS6I,EAAI7G,GAChB,GACIslE,GADAvnD,IAGJ,KACIxrB,EAAInG,GAAG8H,OAAO,4CAA6C8L,EAAImH,OAAQnH,EAAIwiC,eAEvExiC,EAAImH,SAAWuqD,EACf3zC,EAAS1lB,SAAU,GAGnBitE,EAAmBhvE,EAAOynB,SAASwnD,WAAWvlE,EAAIwiC,cAE9C8iC,IACAvnD,EAAStnB,MAAQ6uE,EAAiB9yE,QAClCurB,EAASpB,KAAO2oD,EAAiB3oD,OAI7C,MAAOlmB,GACHlE,EAAI,qDAAuDkE,EAAMjE,QAAU,IAAK,SAGpF,MAAOurB,IASXwnD,WAAY,SAASC,GACjB,GAIIC,GAASC,EAJThmC,EAAS,GAAI0iC,WACbuD,EAAYjmC,EAAO4iC,gBAAgBkD,EAAgB,mBACnD5B,EAAW+B,EAAUz2E,qBAAqB,SAC1C02E,IAGJ,IAAIhC,EAASzxE,OAYT,MAXAszE,GAAUE,EAAUz2E,qBAAqB,QACzCw2E,EAAaC,EAAUz2E,qBAAqB,WAExCw2E,EAAWvzE,SACXyzE,EAAapzE,QAAUkzE,EAAW,GAAG11E,aAGrCy1E,EAAQtzE,SACRyzE,EAAajpD,KAAO8oD,EAAQ,GAAGz1E,aAG5B41E,GAMfT,YAAa,SAASljD,GAElB,MAAqB,mBAAdA,GACc,gBAAdA,GACc,qBAAdA,GACc,iBAAdA,IAIf7qB,MAAO,SAASyP,EAAIwtB,GAChB,GAAIn8B,GAAU,GAAI9L,IAAG+L,OAmBrB,OAjBA7B,GAAO2F,IAAI/D,QAAQ2O,GAAIrD,KAAK,WACxBlN,EAAOw6D,OAAO54D,QAAQ2O,GAAIrD,KAAK,WAC3BlN,EAAO6gE,KAAKj/D,QAAQ2O,GAAIrD,KAAK,WAEN,MAAf6wB,EACAtF,EAAOjH,KAAKjhB,GAAIrD,KAAKtL,EAAQG,QAASH,EAAQK,SAG9C2yB,EAAQpD,KAAKjhB,EAAIwtB,GAAa7wB,KAAKtL,EAAQG,QAASH,EAAQK,cAK5E,SAASylB,GACL9lB,EAAQK,SAAS9B,MAAOunB,MAGrB9lB,GAGXwsE,MAAO,SAAS79D,EAAI7G,EAAKq0B,GACrB,GAAIn8B,GAAU,GAAI9L,IAAG+L,OAmBrB,OAjBA6H,GAAIynB,mBAAqB,WACrB,GAAuB,IAAnBznB,EAAImoB,WAAkB,CACtB,GAAIp5B,EAGe,OAAfslC,GACAtlC,EAASuH,EAAO2N,KAAK4C,EAAI7G,GACzB9H,EAAQnJ,EAAOsJ,QAAU,UAAY,WAAWtJ,EAAOgvB,SAAU/d,KAGjEkrB,EAAQjnB,KAAK4C,EAAI7G,EAAKq0B,GACtBtlC,EAASuH,EAAO2N,KAAK4C,EAAI7G,GACzB9H,EAAQnJ,EAAOsJ,QAAU,UAAY,WAAWtJ,EAAOgvB,SAAU/d,MAKtE9H,GAInB9L,IAAG6B,OAAOxB,MACN8gC,YAAaj3B,EAAOc,MACpB43B,WAAY14B,EAAOc,QAGvBhL,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGqmC,kBACnB9tB,QAASvY,GAAG6B,QAAQipB,UAAW,MAAOpP,GACtCuiB,MAAOj+B,GAAG6B,QAAQwgB,YAAa3G,EAAKgM,cAAcnF,KAAM0b,MAG5Dj+B,GAAGwM,SAASnM,KAAM,SAASsM,GACvB,OACI6W,QAAS,SAAS/I,GACd,GAAI81D,GAAWzhD,EAAQga,oBAAoBruB,IAAOqU,EAAQga,oBAAoBruB,GAAI81D,SAC9EkJ,EAAwB3qD,EAAQ0Q,+BAA+B/kB,EAElDtW,UAAbosE,GAA0BkJ,GAC1B1B,EAAWW,eAAeh9C,KAAKjhB,EAAI81D,GAGvC5jE,EAAO6W,QAAQ/I,IAGnB4kB,eAAgB,SAAS5kB,GACrB,MAAOqkB,GAAQ84C,QAAQn9D,IAG3BkuB,mBAAoB,SAASluB,GACzB,GAAIi/D,GAAgB/sE,EAAOg8B,mBAAmBluB,GAC1Ck/D,EAAazvE,EAAOw6D,OAAO/jD,QAAQlG,EAEvC,OAAOi/D,GAAgB,IAAMC,OChmB7C35E,GAAGyjE,GAAG9+B,kBAAoB,SAASpsB,EAAS0lB,GACxC,YAwCA,SAAS27C,GAAgBn/D,EAAIwqB,GACzB,GAGIuZ,GACAC,EACAo7B,EAHAnV,GADWnsD,EAAQmP,cAAcnF,IAAI9H,GAC5BqU,EAAQwP,cAAc7jB,GAAIiqD,OAMvC,KAMI,GAJAlmB,EAAMvZ,EAAOe,iBAAmBf,EAAOyZ,cAAc70C,SACrD40C,EAAYD,EAAIjZ,KAAKh2B,UAErBsqE,EAAe75E,GAAGyjE,GAAGC,KAAKoF,oBAAoB7jC,GAC1C40C,EAAanV,SAAWA,GACxBmV,EAAahqE,MAAQ7P,GAAGyjE,GAAGC,KAAKyF,uBAAuBr6C,EAAQuP,oBAAoB5jB,IAEnF,OAAO,CAGXtU,GAAI,+DAAgE,SAGxE,MAAOkE,GACHlE,EAAI,wDAA0DkE,EAAMjE,QAAU,IAAK,SAGvF,OAAO,EAGX,QAAS4gE,GAAkBvsD,GAEvB,GAAI2sD,GAAe3/C,EAAYlF,IAAI9H,EAInC,OAFA2sD,GAAa9wC,GAAiB3V,EAAQlG,GAE/Bza,GAAGyjE,GAAGC,KAAKsD,mBACd3oD,SAAUqJ,EAAcnF,IAAI9H,GAC5B0qD,WAAYA,EACZ/mD,OAAQgpD,EACR1C,OAAQ51C,EAAQwP,cAAc7jB,GAAIiqD,OAClC70D,IAAKif,EAAQuP,oBAAoB5jB,GACjC2qD,UAAWqH,EAAoBlqD,MAAM6iD,UACrCG,aAAckH,EAAoBlqD,MAAMgjD,aACxCF,IAAK0G,EAASxpD,IAAI9H,GAClBirD,YAAav7C,EAAW+G,aACxBy0C,YAAax7C,EAAWkiD,aACxB7G,mBAAoBA,EACpBI,kBAAmBA,EACnBC,OAAQA,EACRC,qBAAsBA,EACtBC,iBAAkB0B,EAAUx0D,QAC5B9M,IAAKA,GAETnG,GAAGgQ,KAAKylE,EAA0BtB,aAAc9zE,KAAMoa,IAM1D,QAASmkC,GAAWnkC,EAAIwqB,GACpB,GAAIn5B,GAAU,GAAI9L,IAAG+L,QACjBmb,EAAS,OACT7I,EAAW9F,EAAQmP,cAAcnF,IAAI9H,GACrCpI,EAAWsO,EAAQlG,EAiBvB,OAfAusD,GAAkBvsD,GAAIrD,KAAK,SAASgH,GAChC,GAAI9M,GAAOwd,EAAQoX,oBACfhf,OAAQA,EACR7I,SAAUA,EACVD,OAAQA,EACRoY,cAAc,EACd2P,WAAYlB,EAAOljC,MAGvB+J,GAAQG,QAAQqF,IACjB,SAAS0U,GACRla,EAAQK,QAAQ6Z,GAChB8zD,EAAqBr/D,EAAIwqB,EAAQ5yB,GAAWhI,MAAO2b,MAGhDla,EAGX,QAASiuE,GAAat/D,GAClB,GAAIwqB,GAASnW,EAAQmX,cAAcxrB,GAC/B7Q,EAAQklB,EAAQjV,SAASY,GACzB3O,EAAU,GAAI9L,IAAG+L,OAyCrB,OAvCA6yC,GAAWnkC,EAAIwqB,GAAQ7tB,KAAK,SAAS9F,GACjCA,EAAKE,YAAY5H,GAGjBklB,EAAQgX,iBAAiBb,EAAQ,SAAStT,GACtCxrB,EAAI,iBAGAwrB,EAEIA,EAAS1lB,WAAY,IACrB9F,EAAI,4CAA6C,SACjD2F,EAAQK,QAAQwlB,KAKpBA,KACAA,EAAS1lB,QAAU2tE,EAAgBn/D,EAAIwqB,GAGnCtT,EAAS1lB,WAAY,GACrB9F,EAAI,6EAA8E,SAClF2F,EAAQK,QAAQwlB,KAGhB3xB,GAAG6B,OAAO8vB,EAAU3xB,GAAGyjE,GAAGC,KAAKoF,oBAAoB7jC,IACnDn5B,EAAQG,QAAQ0lB,KAIxBmoD,EAAqBr/D,EAAIwqB,KAG7B9+B,EAAI,8BAAgCsU,GACpCnJ,EAAKqsC,SACL39C,GAAGsR,GAAMlQ,UACV0K,EAAQK,SAEJL,EAGX,QAASguE,GAAqBr/D,EAAIwqB,GAC9BnW,EAAQ8W,iBAAiBnrB,GACzBwqB,GAAUjlC,GAAGilC,GAAQ7jC,SA5KzB,GAAI0tB,GAAUzuB,KACV8kE,EAAa5sD,EAAQ4sD,WACrB54C,EAAgB0R,EAAM1R,cACtB5L,EAAUsd,EAAMtd,QAChByC,EAAU6a,EAAM7a,QAChBjd,EAAM83B,EAAM93B,IACZsxE,EAAcl/D,EAAQksD,UACtBkT,EAAep/D,EAAQ4zD,WACvB71C,EAAgB/d,EAAQ+d,cACxB7O,EAAclP,EAAQkP,YACtBC,EAAgBnP,EAAQmP,cACxBqkD,EAAWxzD,EAAQwzD,SACnBnG,EAAoBrtD,EAAQuyD,iBAAiBlF,kBAC7CC,EAASttD,EAAQuyD,iBAAiBjF,OAClCC,EAAuBvtD,EAAQuyD,iBAAiBhF,qBAChD37C,EAAa5R,EAAQ4R,WACrBs9C,EAAYlvD,EAAQkvD,UACpBjC,EAAqBjtD,EAAQ2yD,cAAcC,mBAC3CsB,EAAsBl0D,EAAQkvD,UAAUgF,oBACxCgJ,EAA4B,GAAIz1E,IAAGyjE,GAAG6K,eAClCY,cAAezH,EACf9/C,KAAMpP,EAAQoP,KACdxhB,IAAKA,GAGb,IAA2BhC,SAAvBqhE,EACA,KAAM,IAAIhkE,OAAM,0GAqJpBxB,IAAG6B,OAAOxB,KAAM,GAAIL,IAAG2kC,mBACnBpsB,SACIusB,QAAQ,EACRta,UAAW,QAGfyT,OACIzS,SAAUjT,EAAQiT,SAClBe,cAAeA,EACf5L,QAASA,EACTyC,QAASA,EACTjd,IAAKA,MAIbnG,GAAG6B,OAAOxB,MACNuiC,WAAY,SAASnoB,GACjB,GAAI1Y,GAAO4e,EAAQlG,GACf3O,EAAU,GAAI9L,IAAG+L,OA6BrB,OA3BI+iB,GAAQuP,oBAAoB5jB,GACxBqU,EAAQwP,cAAc7jB,GAAIiqD,OAC1BqV,EAAat/D,GAAIrD,KAAKtL,EAAQG,QAASH,EAAQK,SAG/CsrE,EAAYh9D,GAAIrD,KAAK,SAASstD,GAC1B51C,EAAQwP,cAAc7jB,GAAIiqD,OAASA,EACnCqV,EAAat/D,GAAIrD,KAAKtL,EAAQG,QAASH,EAAQK,WAOvDwrE,EAAal9D,EAAI1Y,GAAMqV,KAAK,SAASvH,GACjC4nE,EAAYh9D,GAAIrD,KAAK,SAASstD,GAC1B51C,EAAQwP,cAAc7jB,GAAIiqD,OAASA,EACnC51C,EAAQyP,qBAAqB9jB,EAAI5K,GACjCkqE,EAAat/D,GAAIrD,KAAKtL,EAAQG,QAASH,EAAQK,UAChD,SAASylB,GACR9lB,EAAQK,SAAS9B,MAAOunB,OAE7B,SAASA,GACR9lB,EAAQK,SAAS9B,MAAOunB,MAIzB9lB,MCzOX9L,GAAGyjE,GAAGoK,wBAA0B,WAC5B,MAAO3/B,KAAIC,gBAAgB,GAAI1oC,OAAM;AAAw7PlF,KAAM,6BCM9+P,WACG,YAEAP,IAAGyjE,GAAGjV,aAAe,SAASr2C,GAC1B,GAAII,IACAq1C,yBACIH,KAAM,UAKdztD,IAAG6B,OAAO0W,EAASJ,GAAG,GAGtBnY,GAAGwuD,aAAa5nD,KAAKvG,KAAMkY,EAAS,MAE/BvY,GAAGkT,kBAAkBsC,eAA8DrR,SAA7CoU,EAAQ2yD,cAAcC,qBAC7D9qE,KAAK2e,SAAS/e,QAAQsP,UAAY,oKAM1CvP,GAAG6B,OAAO7B,GAAGyjE,GAAGjV,aAAa9nD,UAAW1G,GAAGyjE,GAAGrtC,kBAAkB1vB,WAGhE1G,GAAG6B,OAAO7B,GAAGyjE,GAAGjV,aAAa9nD,UAAW1G,GAAGklD,aAC3CllD,GAAG6B,OAAO7B,GAAGyjE,GAAGjV,aAAa9nD,UAAW1G,GAAG2mD,iBClC/C3mD,GAAGg6E,MAAQh6E,GAAGg6E,UACdh6E,GAAGg6E,MAAMtW,KAAO1jE,GAAGg6E,MAAMtW,MAAS,WAC9B,YAEA,QACIuW,mBAAoB,aAOpBC,gCAAiC,SAASn4E,GACtC,OAAQA,GACJ,IAAK,gBACL,IAAK,sBACL,IAAK,mBACL,IAAK,cACL,IAAK,6BACL,IAAK,gCACL,IAAK,wBACL,IAAK,0BACD,OAAO,CACX,SACI,OAAO,IAanB8iE,sBAAuB,SAAS9iE,GAC5B,MAAI/B,IAAGg6E,MAAMtW,KAAKwW,gCAAgCn4E,GACvCA,EAGA/B,GAAGg6E,MAAMtW,KAAKuW,mBAAqBl4E,GAIlDo4E,mBAAoB,SAAS/7D,GACzB,GAAIwG,KAyBJ,OAvBA5kB,IAAG+C,KAAKqb,EAAQ,SAASrc,EAAMkB,GAC3B,GAAIwsE,GAAazvE,GAAGg6E,MAAMtW,KAAKmB,sBAAsB9iE,GACjDgF,EAAQ,IAER/G,IAAG6G,WAAW5D,GACd8D,EAAQa,OAAO3E,KAEVjD,GAAGuG,SAAStD,GACjBjD,GAAG6B,OAAO+iB,EAAS5kB,GAAGg6E,MAAMtW,KAAKyW,mBAAmBl3E,IAGpD8D,EAAQa,OAAO3E,GAGL,OAAV8D,IACI/G,GAAGg6E,MAAMtW,KAAKwW,gCAAgCn4E,GAC9C6iB,EAAQ6qD,GAAc1oE,EAEtB6d,EAAQ6qD,GAAcz+D,mBAAmBjK,MAK9C6d,GAGXw1D,gBAAiB,SAAShkC,EAAcjwC,GACpC,GAIIk0E,GAASC,EAJTvE,EAAY,GAAIC,WAChBC,EAAcF,EAAUG,gBAAgB9/B,EAAc,mBACtDmkC,EAAWtE,EAAYnzE,qBAAqB,SAAS,GACrD02E,IAKJ,IAFArzE,EAAI,4BAA8BiwC,EAAc,SAE5CmkC,EAaA,MAZAD,GAAaC,EAASz3E,qBAAqB,WAAW,GAClDw3E,IACAd,EAAapzE,QAAUk0E,EAAW12E,aAGtCy2E,EAAUE,EAASz3E,qBAAqB,QAAQ,GAC5Cu3E,IACAb,EAAajpD,KAAO8pD,EAAQz2E,aAGhCuC,EAAI,uBAAyBwL,KAAKkqB,UAAU29C,GAAe,SAEpDA,OZ9FtB,WACG,YAEAx5E,IAAGupE,6BACCC,uBAAwB,SAASprD,EAAQ3D,GACrCpa,KAAKopE,0BAA0B3kD,IAAI1G,EAAQ3D,IAE/CivD,yBAA0B,SAASrrD,EAAU5D,GACzCpa,KAAKspE,4BAA4B7kD,IAAIzG,EAAU5D,KAIvDza,GAAG4pE,8BAcCr+C,YAAa,SAAS9Q,EAAI1Y,EAAMY,EAAQiR,GACpC,GA6CIi2D,GACAC,EA9CA79D,IAAUtJ,EAAOsJ,QACjBwM,EAAOpY,KACP0pE,EAAiB5hE,UACjB6hE,EAAkB3pE,KAAKspE,4BAA4BpnD,IAAI9H,GACvDwvD,EAAuB5pE,KAAK2e,SAASkrD,cAAc1iD,cACnD2iD,EAAgB9pE,KAAK2e,SAASkrD,cAAchjD,OAC5CS,EAAOtnB,KAAK2e,SAAS2I,KACrB7b,EAAU,GAAI9L,IAAG+L,QACjBq+D,EAAsB/pE,KAAKopE,0BAA0BlnD,IAAI9H,GACzD4vD,EAAahqE,KAAKyjB,aAAavB,IAAI9H,GAMnC6vD,EAAsB,SAASC,SACpB9xD,GAAK+xD,+BAA+B/vD,GAC3Cza,GAAG6B,OAAOc,EAAQ4nE,GAClBvqE,GAAGo2B,kBAAkB1vB,UAAU6kB,YAAYlb,MAAMoI,EAAMsxD,GACvDj+D,EAAQG,QAAQs+D,IAKpBE,EAAsB,SAASF,GAC3B,GAAI96D,GAAWo6D,CAEf7pE,IAAG6B,OAAOc,EAAQ4nE,GAEd5nE,GAAUA,EAAOwX,QACjB1K,EAAW,MAGVA,EAIDgJ,EAAK+xD,+BAA+B/vD,GAAMhL,QAHnCgJ,GAAK+xD,+BAA+B/vD,GAM1ChC,EAAK6T,aAAa7R,EAAI1Y,EAAMY,EAAQiR,EAAKnE,KAC1CzP,GAAGo2B,kBAAkB1vB,UAAU6kB,YAAYlb,MAAMoI,EAAMsxD,GACvDj+D,EAAQK,QAAQo+D,IAO5B,OAAIt+D,IAAW+9D,GACXF,EAAuB,GAAI9pE,IAAG0qE,4BAC1BrsD,SAAU2rD,EACV9iD,OAAQijD,EACR3iD,cAAeyiD,EACftiD,KAAMA,EACNxhB,IAAKnG,GAAGgQ,KAAK3P,KAAK8F,IAAK9F,QAI3BL,GAAG6B,OAAOuoE,EAAqB3xD,EAAKkyD,2BAA2BlwD,EAAI9X,EAAQiR,IAAM,GAGjFy2D,GAAcrqE,GAAG6B,OAAOuoE,EAAqBC,GAAY,GAEzDR,EAAuB7pE,GAAGgQ,KAAK,WAC3B85D,EAAqBc,mBAAmBnwD,EAAI2vD,GACvChzD,KAAKkzD,EAAqBG,IAChChyD,GAEHoxD,IAEO/9D,GAIJ9L,GAAGo2B,kBAAkB1vB,UAAU6kB,YAAYlb,MAAMhQ,KAAM8H,YAIlEoc,aAAc,SAAS9J,GACnB,GAAIowD,GAAyBxqE,KAAKmqE,+BAA+B/vD,EAEjE,OAAOza,IAAGo2B,kBAAkB1vB,UAAU6d,aAAa3d,KAAKvG,KAAMoa,EAAIowD,Qa3G7E,WACG,YAEA7qE,IAAGg6E,MAAM5jD,kBAAoB,SAASje,GAClC,IAAKnY,GAAGkT,kBAAkBsC,cACtB,KAAM,IAAIxV,IAAGwB,MAAM,+DAGvB,IAAI+W,IACAkvD,WACIppD,SAAU,KAEVmJ,kBAIJgzD,gBACIz4E,KAAM,QAGVmoE,eACI7rD,SAAU,KAEV6I,OAAQ,OAGR9I,UAEAoJ,kBAGJ7R,UAEIyiB,SAAU,IAEVstC,YAAa,SAKrB1lE,IAAG6B,OAAO0W,EAASJ,GAAG,GAGtBnY,GAAGo2B,kBAAkBxvB,KAAKvG,KAAMkY,GAEhClY,KAAKopE,0BAA4BppE,KAAKqoB,aAAaroB,KAAK2e,SAASkrD,cAAc9rD,QAC/E/d,KAAKspE,4BAA8BtpE,KAAKqoB,aAAaroB,KAAK2e,SAASkrD,cAAc7rD,UAIjFhe,KAAKmqE,kCAGLnqE,KAAKo6E,qBAITz6E,GAAG6B,OAAO7B,GAAGg6E,MAAM5jD,kBAAkB1vB,UAAW1G,GAAGie,eACnDje,GAAG6B,OAAO7B,GAAGg6E,MAAM5jD,kBAAkB1vB,UAAW1G,GAAGomB,gBACnDpmB,GAAG6B,OAAO7B,GAAGg6E,MAAM5jD,kBAAkB1vB,UAAW1G,GAAGupE,6BACnDvpE,GAAG6B,OAAO7B,GAAGg6E,MAAM5jD,kBAAkB1vB,UAAW1G,GAAG4pE,8BAGnD5pE,GAAG6B,OAAO7B,GAAGg6E,MAAM5jD,kBAAkB1vB,WACjCg0E,YAAa,SAASjgE,GAElB,MAAiC,OAA7Bpa,KAAKo6E,iBAAiBhgE,GACfpa,KAAK6f,SAASme,oBAAoB5jB,GAEtCpa,KAAKo6E,iBAAiBhgE,IAGjCkwD,2BAA4B,SAASlwD,GACjC,OACIhP,KAAMpL,KAAKq6E,YAAYjgE,GACvBG,KAAMva,KAAK+iB,QAAQ3I,GACnB1Y,KAAM1B,KAAKsgB,QAAQlG,GACnBqH,UAAWzhB,KAAKiiB,eAAeC,IAAI9H,KAI3CmQ,qBAAsB,WAClB,MAAO5qB,IAAGo2B,kBAAkB1vB,UAAUkkB,qBAAqBhkB,KAAKvG,MAExDonE,UAAWpnE,KAAK2e,SAASyoD,UACzBkT,cAAe36E,GAAGgQ,KAAK3P,KAAKu6E,mBAAoBv6E,MAChDw6E,WAAY76E,GAAGgQ,KAAK3P,KAAKy6E,YAAaz6E,MAAM,IAEhD,UAGRu6E,mBAAoB,SAASngE,GACzB,GACIsgE,GAAsB16E,KAAK2e,SAASw7D,eAAez4E,KACnD6Y,EAAOva,KAAK+iB,QAAQ3I,GACpB1I,EAAW1R,KAAKsgB,QAAQlG,GACxBugE,EAAgBh7E,GAAG8R,aAAaC,GAChCkpE,EAAgBrgE,CAEpB,KAAI5a,GAAGwH,SAASuzE,GAcZ,MAAOA,GAAoBn0E,KAAKvG,KAAMoa,EAbtC,QAAQsgE,GACJ,IAAK,OAID,MAHsB52E,UAAlB62E,IACAC,GAAiB,IAAMD,IAEpB,GAAIh7E,IAAG+L,SAAUE,QAAQgvE,EACpC,KAAK,WACD,OAAO,GAAIj7E,IAAG+L,SAAUE,QAAQ8F,EACpC,SACI,MAAO,IAAI/R,IAAG+L,QAAQI,QAAQ,mCAAqC4uE,KAQnFr8D,eAAgB,SAAS2H,GACrB,GAAI5L,EAGJ,IAA4B,MAAxB4L,EAAY60D,SACZ,KAAM,IAAIl7E,IAAGwB,MAAM,iFAOvB,OAJIiZ,GAAKza,GAAGo2B,kBAAkB1vB,UAAUgY,eAAerO,MAAMhQ,KAAM8H,WAC/D9H,KAAKo6E,iBAAiBhgE,GAAM4L,EAAY60D,SAGrCzgE,GAGXqgE,YAAa,SAASK,EAAiB1gE,GACnC,GAAIhC,GAAOpY,KACP+6E,KACAC,GACI94D,IAAK,SAAS9H,GACV,MAAOhC,GAAK6J,eAAeC,IAAI9H,GAAM,IAAMhC,EAAKiiE,YAAYjgE,KAGpE6gE,GACI/4D,IAAK,SAAS9H,GACV,MAAO2gE,GAAiB3gE,KAGhC8gE,EAAgB,SAAS9gE,EAAI+gE,GACzBJ,EAAiB3gE,GAAM+gE,EACvBX,EAAWn/C,KAAKjhB,IAEpBghE,EAAgB,SAAShhE,EAAIwH,EAAQrO,GAC7BunE,GACA1iE,EAAKtS,IAAI,iGAAkG,SAC3GnG,GAAGo2B,kBAAkB1vB,UAAUglB,UAAU9kB,KAAK6R,EAAMgC,EAAIhC,EAAKkI,QAAQlG,MAGrEhC,EAAKsN,kBAAkBtL,EAAI7G,GAAK,GAChC6E,EAAKuG,SAAS8H,UAAUgB,iBAAiBrN,EAAI7G,GAAK,KAG1DinE,EAAa,GAAI76E,IAAGg6E,MAAM0B,YACtBh0D,cAAe4zD,EACfn1E,IAAKnG,GAAGgQ,KAAKyI,EAAKtS,IAAKsS,GACvBmP,SAAU,SAASnN,GACfhC,EAAKoP,UAAUpN,GACfhC,EAAKuG,SAAS8H,UAAUc,SAASnN,IAErCqN,iBAAkB,SAASrN,EAAIsN,EAAUC,SAC9BozD,GAAiB3gE,GAEpBuN,IACImzD,EACA1iE,EAAKtS,IAAI,yEAA0E,SAGnFnG,GAAGg6E,MAAMtW,KAAK0W,gBAAgBryD,EAASquB,aAAcp2C,GAAGgQ,KAAKyI,EAAKtS,IAAKsS,KAI3E0iE,GACAn7E,GAAGo2B,kBAAkB1vB,UAAUglB,UAAU9kB,KAAK6R,EAAMgC,EAAIhC,EAAKkI,QAAQlG,IACrEhC,EAAKtS,IAAI,uCAAyCsU,KAGlDhC,EAAKsN,kBAAkBtL,EAAIsN,EAAUC,GACrCvP,EAAKuG,SAAS8H,UAAUgB,iBAAiBrN,EAAIsN,EAAUC,OAInE2zD,EAAS,GAAI37E,IAAGg6E,MAAM4B,QAClBj0D,KAAMtnB,KAAK2e,SAAS2I,KACpBH,cAAennB,KAAK2e,SAASyoD,UAAUjgD,cACvCE,eACInF,IAAK,WACD,MAAO9J,GAAKuG,SAASyoD,UAAUppD,WAGvCw9D,gBAAiBhB,EAAW3zD,OAC5B/gB,IAAKnG,GAAGgQ,KAAKyI,EAAKtS,IAAKsS,IAG/BkjE,GAAOr0D,QAAQ7M,EAAI4gE,EAAa94D,IAAI9H,IAAKrD,KACrCpX,GAAGgQ,KAAKurE,EAAe9iE,EAAMgC,GAC7Bza,GAAGgQ,KAAKyrE,EAAehjE,EAAMgC,KAGrCuM,qBAAsB,WAClB,GAAIvO,GAAOpY,IAEX,QACIuzB,WAAY,SAASnZ,EAAIG,GACrBnC,EAAKqiE,aAAY,EAAOrgE,WC9M5Cza,GAAGg6E,MAAM3zC,iBAAmB,SAAS3qB,EAAMuiB,GACvC,YAiDA,SAAS69C,GAAcrhE,GACnB,GAAI3O,GAAU,GAAI9L,IAAG+L,OAoBrB,OAlBAgwE,GAAathE,GAAIrD,KAAK,SAASokE,GAC3B,GAAIQ,GAAWltD,EAAQ+Z,aAAapuB,GAChCwhE,EAAiBntD,EAAQga,oBAAoBruB,GAAIwhE,cAErD3kC,GAAI4kC,aAAaxgD,KAAKjhB,EAAI+gE,EAAQS,EAAgBD,EAAU,SAASpoE,GACjEkb,EAAQoZ,aAAaztB,EAAI,KAAM7G,EAAK0jC,EAAI4kC,gBAEvC9kE,KAAK,SAASxD,GACXzN,EAAI,mCAAqCsU,GACzC3O,EAAQG,WAAY2H,IACrB,SAASA,GACRzN,EAAI,2CAA6CsU,EAAI,SACrDilB,EAAc9rB,EAAK9H,MAI/BA,EAAQK,SAEDL,EAGX,QAASqwE,GAAiB1hE,GACtB,GAAI2hE,GAAe10D,EAAcnF,IAAI9H,GACjC3O,EAAU,GAAI9L,IAAG+L,QACjBswE,EAAqB,SAASnB,GAC1BpsD,EAAQyP,qBAAqB9jB,EAAIygE,GACjCpvE,EAAQG,QAAQmwE,EAAe,IAAMlB,IAEzCoB,EAAqB,SAASr6D,GAC1BnW,EAAQK,QAAQ8V,GAKxB,OAFA04D,GAAclgE,GAAIrD,KAAKilE,EAAoBC,GAEpCxwE,EAGX,QAASiwE,GAAathE,EAAIwtB,GAGtB,GAAIs0C,GAA0B,MAAft0C,EAAsBxtB,EAAKA,EAAK,IAAMwtB,EAEjDn8B,EAAU,GAAI9L,IAAG+L,QACjBwvE,EAAgB,SAASC,GACrBr1E,EAAI,8BACJ2F,EAAQG,QAAQuvE,IAEpBC,EAAgB,SAASx5D,EAAQu6D,GAC7Br2E,EAAI,2BAA6B8b,EAAQ,SACzCnW,EAAQK,SAAS9B,MAAO,2CAA4CmyE,IAExEC,EAA0B,SAASC,GAC/BplC,EAAIqlC,wBAAwBr1D,QAAQi1D,EAAUG,GAAStlE,KACnDmkE,EACAE,IAGRmB,EAA0B,SAAS36D,GAC/B9b,EAAInG,GAAG8H,OAAO,+CAAgD2S,EAAIwH,GAAS,SAC3EnW,EAAQK,SAAS9B,MAAO4X,IAKhC,OAFAk6D,GAAiB1hE,GAAIrD,KAAKqlE,EAAyBG,GAE5C9wE,EAGX,QAAS4zB,GAAc9rB,EAAK9H,GACxB,GAAI+wE,GAAa78E,GAAGg6E,MAAMtW,KAAK0W,gBAAgBxmE,EAAIwiC,aAAcjwC,GAC7D6vB,EAAW,+BAEflqB,GAAQK,SAAS9B,MAAO2rB,EACpB6mD,WAAYA,GAAcA,EAAWz2E,QACrC+T,MAAsB,MAAfvG,EAAImH,SA3HnB,GAAI+T,GAAUzuB,KACV8F,EAAM83B,EAAM93B,IACZwhB,EAAOjM,EAAKiM,KACZD,EAAgBhM,EAAKgM,cACrBD,EAAc/L,EAAK+L,YACnBggD,EAAY/rD,EAAK+rD,UACjBnxC,EAAgB5a,EAAK4a,cACrBwmD,EAAyBphE,EAAK/F,SAAS+vD,YACvCmV,EAAan/D,EAAKm/D,WAClBF,EAAgBj/D,EAAKi/D,cACrBh6D,EAAUsd,EAAMtd,QAChBkC,EAAUob,EAAMpb,QAEhBk6D,EAAkB,SAAStiE,GACvB,GAAI2D,GAASqJ,EAAYlF,IAAI9H,EAE7B,OADA2D,GAAOkY,GAAiB3V,EAAQlG,GACzB2D,GAGXk5B,GACI0lC,QAAS,GAAIh9E,IAAGg6E,MAAMiD,SAClBF,gBAAiBA,EACjB52E,IAAKA,IAGT+2E,SAAU,GAAIl9E,IAAGg6E,MAAMmD,UACnBh3E,IAAKA,IAGT+1E,aAAc,GAAIl8E,IAAGg6E,MAAMoD,cACvBL,gBAAiBA,EACjB52E,IAAKA,IAGTw2E,wBAAyB,GAAI38E,IAAGg6E,MAAM4B,QAClCj0D,KAAMA,EACNH,cAAeigD,EAAUjgD,cACzBE,eACInF,IAAK,WACD,MAAOklD,GAAUppD,WAGzBlY,IAAKA,EACL01E,gBAAiB,QAoF7B77E,IAAG6B,OAAOxB,MACN8gC,YAAa,SAAS1mB,EAAIskB,GACtB,GAAIjzB,GAAU,GAAI9L,IAAG+L,OA+BrB,OA7BAgwE,GAAathE,EAAIskB,GAAU3nB,KACvB,SAASokE,GACL,GAAI5nE,GAAMkb,EAAQkZ,WAAWvtB,EAAIskB,GACjC/S,EAAY8C,EAAQkQ,cAAcvkB,EAAIskB,EAEtCjQ,GAAQua,yBAAyB5uB,EAAIskB,EAAU/S,EAAUnQ,MACzDiT,EAAQoZ,aAAaztB,EAAIskB,EAAUnrB,EAAK0jC,EAAI4lC,UAI5C5lC,EAAI4lC,SAAShzE,OAAOuQ,EAAK,IAAMskB,EAAUnrB,EAAK4nE,EAAQz8C,EAAU/S,EAAUvgB,MAAM2L,KAC5E,SAASimE,GACAvuD,EAAQga,oBAAoBruB,GAAIwhE,iBACjCntD,EAAQga,oBAAoBruB,GAAIwhE,mBAGpCntD,EAAQga,oBAAoBruB,GAAIwhE,eAAe/4E,KAAKm6E,GACpDl3E,EAAI,gCAAkCsU,GACtC3O,EAAQG,WAAY2H,IAExB,WACIzN,EAAInG,GAAG8H,OAAO,6CAA8C2S,EAAIskB,GAAW,SAC3EW,EAAc9rB,EAAK9H,MAI/BA,EAAQK,SAGLL,GAGX82B,WAAY,SAASnoB,GACjB,GAAI3O,GAAU,GAAI9L,IAAG+L,QACjBhB,EAAa+jB,EAAQjN,QAAQpH,EAoBjC,OAlBAshE,GAAathE,GAAIrD,KAAK,SAASokE,GAC3B,GAAI5nE,GAAMkb,EAAQkZ,WAAWvtB,EAE7BqU,GAAQua,yBAAyB5uB,GAEjC68B,EAAI0lC,QAAQ9yE,OAAOuQ,EAAI7G,EAAK4nE,EAAQzwE,GAAYqM,KAC5C,WACIjR,EAAI,+BAAiCsU,GACrC3O,EAAQG,WAAY2H,IAExB,WACIzN,EAAI,4BAA8BsU,EAAI,SACtCilB,EAAc9rB,EAAK9H,MAI/BA,EAAQK,SAEDL,KAIf9L,GAAG6B,OAAOxB,KACN,GAAIL,IAAGqmC,kBACH9tB,QAASvY,GAAG6B,QAAQipB,UAAW,SAAUpP,GACzCuiB,MAAOj+B,GAAG6B,QAAQwgB,YAAa3G,EAAKgM,cAAcnF,KAAM0b,MAIhEj+B,GAAGwM,SAASnM,KAAM,SAASsM,GACvB,OACI6W,QAAS,SAAS/I,GACd,GAAI0gE,GAAkBrsD,EAAQ2P,aAAahkB,GACvC6iE,EAAexuD,EAAQga,oBAAoBruB,GAC3CwhE,EAAkBqB,GAAgBA,EAAarB,kBAE/Cd,IAAmBc,EAAel2E,OAAS,GAC3C80E,EAAWpgE,GAGf9N,EAAO6W,QAAQ/I,IAGnB4kB,eAAgB,SAAS5kB,GACrB,MAAOqhE,GAAcrhE,IAGzBupB,qBAAsB,SAASvpB,GAC3B,GAAI8iE,GAAgB5wE,EAAOq3B,qBAAqBvpB,EAChD,OAAO8iE,IAAiB16D,EAAQpI,IAAOqiE,OChOvD98E,GAAGg6E,MAAM4B,OAAS,SAASzjE,GACvB,YAiBA,SAASqlE,GAAoB/iE,EAAI7G,EAAKoU,GAClC,GAAIlc,GAAU2xE,EAAgBhjE,EAE1BuN,GACAlc,EAAQK,QAAQ,0BAA4ByH,EAAImH,OAAQnH,GAGpDA,EAAIwiC,aAAarwC,OACjB+F,EAAQG,QAAQ2H,EAAIwiC,cAGpBtqC,EAAQK,QAAQ,kBAAmByH,SAIpC6pE,GAAgBhjE,GA9B3B,GAAI4vB,GACA9xB,GACIoP,MACIsI,UAAU,EACVuI,iBAAiB,GAErBhR,iBACAq0D,gBAAiB,MACjBn0D,cAAe,KACfvhB,IAAK,SAAS4B,EAAK1B,MAEvBo3E,IAEJz9E,IAAG6B,OAAO0W,EAASJ,GAoBnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/B6C,aAAc,mBACdM,cAAe,OACfxV,OAAQ,MACRsV,yBACIO,KAAM,MAEVnB,YAAa,KACbpU,cAAejP,EAAQiP,cACvBE,cAAenP,EAAQmP,cACvBC,KAAMpP,EAAQoP,KACdxhB,IAAKoS,EAAQpS,IACbmlB,WAAYkyD,KAGhBx9E,GAAG6B,OAAOxB,MACNinB,QAAS,SAAS7M,EAAIijE,GAClB,GAAIC,GAAiB,GAAI39E,IAAG+L,QACxB6xE,EAAWrlE,EAAQsjE,eAcvB,OAZAtjE,GAAQpS,IAAInG,GAAG8H,OAAO,0EAA2E81E,EAAUnjE,IAE3GgjE,EAAgBhjE,GAAMkjE,EAEtBtzC,EAAUrN,cAAcviB,GACnB4iB,YACGwgD,QAASH,EACTtzC,QAASwzC,IAEZjgD,kBACAjC,OAEEiiD,MXhEnB39E,GAAG0qE,2BAA6B,SAASvyD,GACrC,YAmBA,SAASg9D,GAAsB16D,EAAIsN,EAAUC,GACzC,GAIIotD,GAJAtpE,EAAUupE,EAAgB56D,GAC1Bg0D,EAAe1mD,EAASquB,aACxBk/B,GAAoBrpE,SAAS,GAC7BspE,GAAoBtpE,SAAS,SAG1BopE,GAAgB56D,GAEvBlC,EAAQpS,IAAInG,GAAG8H,OAAO,kFAAmF2S,EAAIg0D,GAE7G,KACI2G,EAAiBp1E,GAAGyR,UAAUg9D,GAM1BzmD,GAAYotD,IAAmBA,EAAe/qE,OAAS+qE,EAAenpE,WAAY,IAClFsM,EAAQpS,IAAI,qDAAsD,SAClE2F,EAAQK,QAAQnM,GAAG6B,OAAOuzE,EAAgBG,MAG1Ch9D,EAAQpS,IAAI,kDACZ2F,EAAQG,QAAQjM,GAAG6B,OAAOuzE,EAAgBE,KAGlD,MAAOjrE,GAEC2d,GACAzP,EAAQpS,IAAInG,GAAG8H,OAAO,kFAAmF2S,GAAK,SAC9G3O,EAAQK,QAAQopE,KAGhBh9D,EAAQpS,IAAI,kDACZ2F,EAAQG,QAAQqpE,KApD5B,GAAIjrC,GACAgrC,KACA98D,GACI2O,OAAQ,OACR7I,SAAU,KACV+I,eAAgB,EAChBI,iBACAC,eACAE,MACIsI,UAAU,EACVuI,iBAAiB,GAErBryB,IAAK,SAAS4B,EAAK1B,KAG3BrG,IAAG6B,OAAO0W,EAASJ,GA0CnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/B6C,aAAc,mBACdlV,OAAQ3O,EAAQ2O,OAChBQ,eACInF,IAAK,WACD,MAAOhK,GAAQ8F,WAGvBoJ,YAAalP,EAAQkP,YACrBL,eAAgB7O,EAAQ6O,eACxBI,cAAejP,EAAQiP,cACvBrhB,IAAKoS,EAAQpS,IACbmlB,WAAY6pD,EACZxtD,KAAMpP,EAAQoP,QAGlB3nB,GAAG6B,OAAOxB,MAUNuqE,mBAAoB,SAASnwD,EAAIiB,GAC7B,GAAI5P,GAAU,GAAI9L,IAAG+L,OAUrB,OARAwM,GAAQpS,IAAI,sDAAwDsU,GAEpE4vB,EAAUrN,cAAcviB,GACnB4iB,WAAW3hB,GACXggB,OAEL25C,EAAgB56D,GAAM3O,EAEfA,MYtGnB9L,GAAGg6E,MAAM0B,WAAa,SAASvjE,GAC3B,YAEA,IAAIkyB,GACAnjB,EAAS,SACT3O,GACImP,iBACAE,SAAU,SAASnN,KACnBqN,iBAAkB,SAASrN,EAAI7G,EAAKoU,KACpC7hB,IAAK,SAAS4B,EAAK1B,KAG3BrG,IAAG6B,OAAO0W,EAASJ,GAEnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/BmD,cAAexV,GACfA,OAAQA,EACRsV,wBAA0B,WACtB,GAAIshD,KAEJ,OADAA,GAAM52D,IAAW,KACV42D,KAEXliD,YAAa,KACblU,cAAenP,EAAQmP,cACvB4U,oCAAoC,EACpC3U,MACIsI,UAAU,GAEd9pB,IAAKoS,EAAQpS,IACb60B,OAAQziB,EAAQqP,SAChB0D,WAAY/S,EAAQuP,oBAGxB9nB,GAAG6B,OAAOxB,MACN6mB,OAAQA,EACRwU,KAAM,SAASjhB,GAGX,MAFAlC,GAAQpS,IAAI,sCAAwCsU,GAE7C4vB,EAAUrN,cAAcviB,GAC1BihB,WCvCjB17B,GAAGg6E,MAAMiD,QAAU,SAAS9kE,GACxB,YAEA,IAAIkyB,GACAnjB,EAAS,MACT3O,GACIwkE,gBAAiB,SAAStiE,KAC1BtU,IAAK,SAAS4B,EAAK1B,MAEvB03E,KACAl+B,KACAC,GACIv9B,IAAK,SAAS9H,GACV,MAAOsjE,GAAUtjE,IAI7Bza,IAAG6B,OAAO0W,EAASJ,GAEnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/BmD,cAAexV,GACfA,OAAQA,EACRsV,wBAA0B,WACtB,GAAIshD,KAEJ,OADAA,GAAM52D,IAAW,KACV42D,KAEXliD,YAAa,KACbpU,cAAe,SAAS/M,GACpB,GAAI2D,GAAS7F,EAAQwkE,gBAAgBtiE,GACjCmK,EAAU5kB,GAAGg6E,MAAMtW,KAAKyW,mBAAmB/7D,EAI/C,OAFAwG,GAAQ,kBAAoB,YAErBA,GAEX8C,cAAeo4B,EACfxjB,oCAAoC,EACpC3U,MACIsI,UAAU,GAEd9pB,IAAKoS,EAAQpS,IACbmlB,WAAY,SAAS7Q,EAAI7G,EAAKoU,GAC1B,GAAIlc,GAAU+zC,EAASplC,SAEhBsjE,GAAUtjE,SACVolC,GAASplC,GAEZuN,EACAlc,EAAQK,UAGRL,EAAQG,cAKpBjM,GAAG6B,OAAOxB,MACN6mB,OAAQA,EACRhd,OAAQ,SAASuQ,EAAI7G,EAAKknB,EAAKjb,GAC3B,GAAI/T,GAAU,GAAI9L,IAAG+L,OAYrB,OAVAwM,GAAQpS,IAAI,mCAAqCsU,GAEjDolC,EAASplC,GAAM3O,EACfiyE,EAAUtjE,GAAMqgB,EAEhBuP,EAAUrN,cAAcviB,GACnBgjB,YAAY5d,GACZ2d,aAAa0oC,eAAgBrmD,EAAKtf,OAClCm7B,KAAK9nB,GAEH9H,MCxEnB9L,GAAGg6E,MAAMmD,SAAW,SAAShlE,GACzB,YAkDA,SAAS6lE,GAAcrN,GACnB,GAAIsN,GAAS,EACTC,EAAQ,GAAIj2E,OAAMg2E,EAAS,GAAGhtE,KAAK,KACnCktE,GAAiBD,EAAQvN,GAASzoE,OAAO+1E,EAE7C,OAAOG,MAAKD,GArDhB,GAAI9zC,GACAnjB,EAAS,MACT+0D,KACAp8B,KACAtnC,GACIpS,IAAK,SAAS4B,EAAK1B,MAEvB03E,KACAj+B,GACIv9B,IAAK,SAAS9H,GACV,MAAOsjE,GAAUtjE,IAI7Bza,IAAG6B,OAAO0W,EAASJ,GAEnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/BmD,cAAexV,GACfA,OAAQA,EACRsV,wBAA0B,WACtB,GAAIshD,KAEJ,OADAA,GAAM52D,IAAW,KACV42D,KAEXliD,YAAa,KACblU,cAAeo4B,EACfxjB,oCAAoC,EACpC3U,MACIsI,UAAU,GAEd9pB,IAAKoS,EAAQpS,IACbmlB,WAAY,SAAS7Q,EAAI7G,EAAKoU,GAC1B,GAAIlc,GAAU+zC,EAASplC,GACnB4iE,EAAepB,EAAexhE,SAE3BsjE,GAAUtjE,SACVolC,GAASplC,SACTwhE,GAAexhE,GAElBuN,EACAlc,EAAQK,UAGRL,EAAQG,QAAQoxE,OAa5Br9E,GAAG6B,OAAOxB,MACN6mB,OAAQA,EACRhd,OAAQ,SAASuQ,EAAI7G,EAAK4nE,EAAQ7K,EAASllE,GACvC,GAAIK,GAAU,GAAI9L,IAAG+L,QACjBsyE,EAAUL,EAAcrN,EAa5B,OAXA9wB,GAASplC,GAAM3O,EAEfyM,EAAQpS,IAAInG,GAAG8H,OAAO,gDAAiD2S,EAAIk2D,IAE3EoN,EAAUtjE,GAAMza,GAAG8H,OAAO,2BAA4B0zE,EAAQxqE,mBAAmBqtE,IACjFpC,EAAexhE,IAAO8tB,KAAMooC,EAASl2D,GAAI4jE,GAEzCh0C,EAAUrN,cAAcviB,GACnBgjB,YAAYhyB,GACZiwB,KAAK9nB,GAEH9H,MC5EnB9L,GAAGg6E,MAAMoD,aAAe,SAASjlE,GAC7B,YAuDA,SAASmmE,GAAkBrC,GACvB,GAAIz9B,GAAM30C,SAAS6sE,eAAeC,eAAe,KAAM,YAAa,KAiBpE,OAdAsF,GAAexjC,KAAK,SAASC,EAAGC,GAC5B,MAAOD,GAAEnQ,KAAOoQ,EAAEpQ,OAItBvoC,GAAG+C,KAAKk5E,EAAgB,SAASj5E,EAAKq6E,GAClC,GAAIkB,GAAW//B,EAAI10C,cAAc,UAC7B00E,EAAehgC,EAAIw4B,eAAeqG,EAAa5iE,GAEnD8jE,GAAS/sE,YAAYgtE,GACrBx+E,GAAGw+C,GAAKp7C,WAAW,GAAGoO,YAAY+sE,MAI/B,GAAIpH,gBAAgBC,kBAAkB54B,GAvEjD,GAAInU,GACAnjB,EAAS,MACT24B,KACAtnC,GACIwkE,gBAAiB,SAAStiE,KAC1BtU,IAAK,SAAS4B,EAAK1B,MAEvB03E,KACAj+B,GACIv9B,IAAK,SAAS9H,GACV,MAAOsjE,GAAUtjE,IAI7Bza,IAAG6B,OAAO0W,EAASJ,GAEnBkyB,EAAYrqC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGu5B,eAC/BmD,cAAexV,GACfA,OAAQA,EACRsV,wBAA0B,WACtB,GAAIshD,KAEJ,OADAA,GAAM52D,IAAW,KACV42D,KAEXt2D,cAAe,SAAS/M,GACpB,GAAI2D,GAAS7F,EAAQwkE,gBAAgBtiE,EAErC,OAAOza,IAAGg6E,MAAMtW,KAAKyW,mBAAmB/7D,IAE5Cwd,YAAa,aACblU,cAAeo4B,EACfxjB,oCAAoC,EACpC3U,MACIsI,UAAU,GAEd9pB,IAAKoS,EAAQpS,IACb60B,OAAQ,aACR1P,WAAY,SAAS7Q,EAAI7G,EAAKoU,GAC1B,GAAIlc,GAAU+zC,EAASplC,SAEhBsjE,GAAUtjE,SACVolC,GAASplC,GAEZuN,EACAlc,EAAQK,QAAQyH,GAGhB9H,EAAQG,QAAQ2H,OA2B5B5T,GAAG6B,OAAOxB,MACN6mB,OAAQA,EACRwU,KAAM,SAASjhB,EAAI+gE,EAAQS,EAAgBwC,EAAcC,GACrD,GAEI9qE,GAFA9H,EAAU,GAAI9L,IAAG+L,QACjB4yE,EAAcL,EAAkBrC,EAepC,OAZAp8B,GAASplC,GAAM3O,EAEfyM,EAAQpS,IAAInG,GAAG8H,OAAO,2CAA4C2S,IAElEsjE,EAAUtjE,GAAMza,GAAG8H,OAAO,oBAAqB0zE,GAE/C5nE,EAAMy2B,EAAUrN,cAAcviB,GACzBgjB,YAAYkhD,GACZnhD,aAAaohD,yBAA0BH,IACvC/iD,OACLgjD,EAAoB9qE,GAEb9H,MC5FlB,WACG,YAEA9L,IAAGg6E,MAAMxrB,aAAe,SAASr2C,GAC7B,GAAII,IACAq1C,yBACIH,KAAM,UAKdztD,IAAG6B,OAAO0W,EAASJ,GAAG,GAGtBnY,GAAGwuD,aAAa5nD,KAAKvG,KAAMkY,EAAS,UAIxCvY,GAAG6B,OAAO7B,GAAGg6E,MAAMxrB,aAAa9nD,UAAW1G,GAAGg6E,MAAM5jD,kBAAkB1vB,WAGtE1G,GAAG6B,OAAO7B,GAAGg6E,MAAMxrB,aAAa9nD,UAAW1G,GAAGklD,aAC9CllD,GAAG6B,OAAO7B,GAAGg6E,MAAMxrB,aAAa9nD,UAAW1G,GAAG2mD,cAG9C3mD,GAAG6B,OAAO7B,GAAGg6E,MAAMxrB,aAAa9nD,kBvEjCLxB","file":"all.fine-uploader.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\r\nqq.version = \"5.14.4\";\r\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\r\nqq.UploadData = function(uploaderProxy) {\r\n    \"use strict\";\r\n\r\n    var data = [],\r\n        byUuid = {},\r\n        byStatus = {},\r\n        byProxyGroupId = {},\r\n        byBatchId = {};\r\n\r\n    function getDataByIds(idOrIds) {\r\n        if (qq.isArray(idOrIds)) {\r\n            var entries = [];\r\n\r\n            qq.each(idOrIds, function(idx, id) {\r\n                entries.push(data[id]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[idOrIds];\r\n    }\r\n\r\n    function getDataByUuids(uuids) {\r\n        if (qq.isArray(uuids)) {\r\n            var entries = [];\r\n\r\n            qq.each(uuids, function(idx, uuid) {\r\n                entries.push(data[byUuid[uuid]]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[byUuid[uuids]];\r\n    }\r\n\r\n    function getDataByStatus(status) {\r\n        var statusResults = [],\r\n            statuses = [].concat(status);\r\n\r\n        qq.each(statuses, function(index, statusEnum) {\r\n            var statusResultIndexes = byStatus[statusEnum];\r\n\r\n            if (statusResultIndexes !== undefined) {\r\n                qq.each(statusResultIndexes, function(i, dataIndex) {\r\n                    statusResults.push(data[dataIndex]);\r\n                });\r\n            }\r\n        });\r\n\r\n        return statusResults;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds a new file to the data cache for tracking purposes.\r\n         *\r\n         * @param spec Data that describes this file.  Possible properties are:\r\n         *\r\n         * - uuid: Initial UUID for this file.\r\n         * - name: Initial name of this file.\r\n         * - size: Size of this file, omit if this cannot be determined\r\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\r\n         * - batchId: ID of the batch this file belongs to\r\n         * - proxyGroupId: ID of the proxy group associated with this file\r\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\r\n         *\r\n         * @returns {number} Internal ID for this file.\r\n         */\r\n        addFile: function(spec) {\r\n            var status = spec.status || qq.status.SUBMITTING,\r\n                id = data.push({\r\n                    name: spec.name,\r\n                    originalName: spec.name,\r\n                    uuid: spec.uuid,\r\n                    size: spec.size == null ? -1 : spec.size,\r\n                    status: status\r\n                }) - 1;\r\n\r\n            if (spec.batchId) {\r\n                data[id].batchId = spec.batchId;\r\n\r\n                if (byBatchId[spec.batchId] === undefined) {\r\n                    byBatchId[spec.batchId] = [];\r\n                }\r\n                byBatchId[spec.batchId].push(id);\r\n            }\r\n\r\n            if (spec.proxyGroupId) {\r\n                data[id].proxyGroupId = spec.proxyGroupId;\r\n\r\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\r\n                    byProxyGroupId[spec.proxyGroupId] = [];\r\n                }\r\n                byProxyGroupId[spec.proxyGroupId].push(id);\r\n            }\r\n\r\n            data[id].id = id;\r\n            byUuid[spec.uuid] = id;\r\n\r\n            if (byStatus[status] === undefined) {\r\n                byStatus[status] = [];\r\n            }\r\n            byStatus[status].push(id);\r\n\r\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\r\n            uploaderProxy.onStatusChange(id, null, status);\r\n\r\n            return id;\r\n        },\r\n\r\n        retrieve: function(optionalFilter) {\r\n            if (qq.isObject(optionalFilter) && data.length)  {\r\n                if (optionalFilter.id !== undefined) {\r\n                    return getDataByIds(optionalFilter.id);\r\n                }\r\n\r\n                else if (optionalFilter.uuid !== undefined) {\r\n                    return getDataByUuids(optionalFilter.uuid);\r\n                }\r\n\r\n                else if (optionalFilter.status) {\r\n                    return getDataByStatus(optionalFilter.status);\r\n                }\r\n            }\r\n            else {\r\n                return qq.extend([], data, true);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            data = [];\r\n            byUuid = {};\r\n            byStatus = {};\r\n            byBatchId = {};\r\n        },\r\n\r\n        setStatus: function(id, newStatus) {\r\n            var oldStatus = data[id].status,\r\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\r\n\r\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\r\n\r\n            data[id].status = newStatus;\r\n\r\n            if (byStatus[newStatus] === undefined) {\r\n                byStatus[newStatus] = [];\r\n            }\r\n            byStatus[newStatus].push(id);\r\n\r\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\r\n        },\r\n\r\n        uuidChanged: function(id, newUuid) {\r\n            var oldUuid = data[id].uuid;\r\n\r\n            data[id].uuid = newUuid;\r\n            byUuid[newUuid] = id;\r\n            delete byUuid[oldUuid];\r\n        },\r\n\r\n        updateName: function(id, newName) {\r\n            data[id].name = newName;\r\n        },\r\n\r\n        updateSize: function(id, newSize) {\r\n            data[id].size = newSize;\r\n        },\r\n\r\n        // Only applicable if this file has a parent that we may want to reference later.\r\n        setParentId: function(targetId, parentId) {\r\n            data[targetId].parentId = parentId;\r\n        },\r\n\r\n        getIdsInProxyGroup: function(id) {\r\n            var proxyGroupId = data[id].proxyGroupId;\r\n\r\n            if (proxyGroupId) {\r\n                return byProxyGroupId[proxyGroupId];\r\n            }\r\n            return [];\r\n        },\r\n\r\n        getIdsInBatch: function(id) {\r\n            var batchId = data[id].batchId;\r\n\r\n            return byBatchId[batchId];\r\n        }\r\n    });\r\n};\r\n\r\nqq.status = {\r\n    SUBMITTING: \"submitting\",\r\n    SUBMITTED: \"submitted\",\r\n    REJECTED: \"rejected\",\r\n    QUEUED: \"queued\",\r\n    CANCELED: \"canceled\",\r\n    PAUSED: \"paused\",\r\n    UPLOADING: \"uploading\",\r\n    UPLOAD_RETRYING: \"retrying upload\",\r\n    UPLOAD_SUCCESSFUL: \"upload successful\",\r\n    UPLOAD_FAILED: \"upload failed\",\r\n    DELETE_FAILED: \"delete failed\",\r\n    DELETING: \"deleting\",\r\n    DELETED: \"deleted\"\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Defines the public API for FineUploaderBasic mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.basePublicApi = {\r\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\r\n        addBlobs: function(blobDataOrArray, params, endpoint) {\r\n            this.addFiles(blobDataOrArray, params, endpoint);\r\n        },\r\n\r\n        addInitialFiles: function(cannedFileList) {\r\n            var self = this;\r\n\r\n            qq.each(cannedFileList, function(index, cannedFile) {\r\n                self._addCannedFile(cannedFile);\r\n            });\r\n        },\r\n\r\n        addFiles: function(data, params, endpoint) {\r\n            this._maybeHandleIos8SafariWorkaround();\r\n\r\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\r\n\r\n                processBlob = qq.bind(function(blob) {\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processBlobData = qq.bind(function(blobData) {\r\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvas = qq.bind(function(canvas) {\r\n                    var blob = qq.canvasToBlob(canvas);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName + \".png\"\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvasData = qq.bind(function(canvasData) {\r\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\r\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: canvasData.name\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processFileOrInput = qq.bind(function(fileOrInput) {\r\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\r\n                        var files = Array.prototype.slice.call(fileOrInput.files),\r\n                            self = this;\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            self._handleNewFile(file, batchId, verifiedFiles);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\r\n                    }\r\n                }, this),\r\n\r\n                normalizeData = function() {\r\n                    if (qq.isFileList(data)) {\r\n                        data = Array.prototype.slice.call(data);\r\n                    }\r\n                    data = [].concat(data);\r\n                },\r\n\r\n                self = this,\r\n                verifiedFiles = [];\r\n\r\n            this._currentBatchId = batchId;\r\n\r\n            if (data) {\r\n                normalizeData();\r\n\r\n                qq.each(data, function(idx, fileContainer) {\r\n                    if (qq.isFileOrInput(fileContainer)) {\r\n                        processFileOrInput(fileContainer);\r\n                    }\r\n                    else if (qq.isBlob(fileContainer)) {\r\n                        processBlob(fileContainer);\r\n                    }\r\n                    else if (qq.isObject(fileContainer)) {\r\n                        if (fileContainer.blob && fileContainer.name) {\r\n                            processBlobData(fileContainer);\r\n                        }\r\n                        else if (fileContainer.canvas && fileContainer.name) {\r\n                            processCanvasData(fileContainer);\r\n                        }\r\n                    }\r\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\r\n                        processCanvas(fileContainer);\r\n                    }\r\n                    else {\r\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\r\n                    }\r\n                });\r\n\r\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\r\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\r\n            }\r\n        },\r\n\r\n        cancel: function(id) {\r\n            this._handler.cancel(id);\r\n        },\r\n\r\n        cancelAll: function() {\r\n            var storedIdsCopy = [],\r\n                self = this;\r\n\r\n            qq.extend(storedIdsCopy, this._storedIds);\r\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\r\n                self.cancel(storedFileId);\r\n            });\r\n\r\n            this._handler.cancelAll();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._storedIds = [];\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (uploadData.status === qq.status.PAUSED) {\r\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\r\n                this._uploadFile(id);\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        deleteFile: function(id) {\r\n            return this._onSubmitDelete(id);\r\n        },\r\n\r\n        // TODO document?\r\n        doesExist: function(fileOrBlobId) {\r\n            return this._handler.isValid(fileOrBlobId);\r\n        },\r\n\r\n        // Generate a variable size thumbnail on an img or canvas,\r\n        // returning a promise that is fulfilled when the attempt completes.\r\n        // Thumbnail can either be based off of a URL for an image returned\r\n        // by the server in the upload response, or the associated `Blob`.\r\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\r\n            var promiseToReturn = new qq.Promise(),\r\n                fileOrUrl, options;\r\n\r\n            if (this._imageGenerator) {\r\n                fileOrUrl = this._thumbnailUrls[fileId];\r\n                options = {\r\n                    customResizeFunction: customResizeFunction,\r\n                    maxSize: maxSize > 0 ? maxSize : null,\r\n                    scale: maxSize > 0\r\n                };\r\n\r\n                // If client-side preview generation is possible\r\n                // and we are not specifically looking for the image URl returned by the server...\r\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\r\n                    fileOrUrl = this.getFile(fileId);\r\n                }\r\n\r\n                /* jshint eqeqeq:false,eqnull:true */\r\n                if (fileOrUrl == null) {\r\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\r\n                }\r\n                else {\r\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\r\n                        function success(modifiedContainer) {\r\n                            promiseToReturn.success(modifiedContainer);\r\n                        },\r\n\r\n                        function failure(container, reason) {\r\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\r\n            }\r\n\r\n            return promiseToReturn;\r\n        },\r\n\r\n        getButton: function(fileId) {\r\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\r\n        },\r\n\r\n        getEndpoint: function(fileId) {\r\n            return this._endpointStore.get(fileId);\r\n        },\r\n\r\n        getFile: function(fileOrBlobId) {\r\n            return this._handler.getFile(fileOrBlobId) || null;\r\n        },\r\n\r\n        getInProgress: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        getName: function(id) {\r\n            return this._uploadData.retrieve({id: id}).name;\r\n        },\r\n\r\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\r\n        getParentId: function(id) {\r\n            var uploadDataEntry = this.getUploads({id: id}),\r\n                parentId = null;\r\n\r\n            if (uploadDataEntry) {\r\n                if (uploadDataEntry.parentId !== undefined) {\r\n                    parentId = uploadDataEntry.parentId;\r\n                }\r\n            }\r\n\r\n            return parentId;\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            return this._handler.getResumableFilesData();\r\n        },\r\n\r\n        getSize: function(id) {\r\n            return this._uploadData.retrieve({id: id}).size;\r\n        },\r\n\r\n        getNetUploads: function() {\r\n            return this._netUploaded;\r\n        },\r\n\r\n        getRemainingAllowedItems: function() {\r\n            var allowedItems = this._currentItemLimit;\r\n\r\n            if (allowedItems > 0) {\r\n                return allowedItems - this._netUploadedOrQueued;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        getUploads: function(optionalFilter) {\r\n            return this._uploadData.retrieve(optionalFilter);\r\n        },\r\n\r\n        getUuid: function(id) {\r\n            return this._uploadData.retrieve({id: id}).uuid;\r\n        },\r\n\r\n        log: function(str, level) {\r\n            if (this._options.debug && (!level || level === \"info\")) {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\r\n            }\r\n            else if (level && level !== \"info\") {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\r\n\r\n            }\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            // Pause only really makes sense if the file is uploading or retrying\r\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\r\n                if (this._handler.pause(id)) {\r\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\r\n                }\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        removeFileRef: function(id) {\r\n            this._handler.expunge(id);\r\n        },\r\n\r\n        reset: function() {\r\n            this.log(\"Resetting uploader...\");\r\n\r\n            this._handler.reset();\r\n            this._storedIds = [];\r\n            this._autoRetries = [];\r\n            this._retryTimeouts = [];\r\n            this._preventRetries = [];\r\n            this._thumbnailUrls = [];\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n\r\n            this._paramsStore.reset();\r\n            this._endpointStore.reset();\r\n            this._netUploadedOrQueued = 0;\r\n            this._netUploaded = 0;\r\n            this._uploadData.reset();\r\n            this._buttonIdsForFileIds = [];\r\n\r\n            this._pasteHandler && this._pasteHandler.reset();\r\n            this._options.session.refreshOnReset && this._refreshSessionData();\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n\r\n            this._totalProgress && this._totalProgress.reset();\r\n        },\r\n\r\n        retry: function(id) {\r\n            return this._manualRetry(id);\r\n        },\r\n\r\n        scaleImage: function(id, specs) {\r\n            var self = this;\r\n\r\n            return qq.Scaler.prototype.scaleImage(id, specs, {\r\n                log: qq.bind(self.log, self),\r\n                getFile: qq.bind(self.getFile, self),\r\n                uploadData: self._uploadData\r\n            });\r\n        },\r\n\r\n        setCustomHeaders: function(headers, id) {\r\n            this._customHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileCustomHeaders: function(headers, id) {\r\n            this._deleteFileCustomHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileEndpoint: function(endpoint, id) {\r\n            this._deleteFileEndpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setDeleteFileParams: function(params, id) {\r\n            this._deleteFileParamsStore.set(params, id);\r\n        },\r\n\r\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\r\n        setEndpoint: function(endpoint, id) {\r\n            this._endpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setForm: function(elementOrId) {\r\n            this._updateFormSupportAndParams(elementOrId);\r\n        },\r\n\r\n        setItemLimit: function(newItemLimit) {\r\n            this._currentItemLimit = newItemLimit;\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            this._uploadData.updateName(id, newName);\r\n        },\r\n\r\n        setParams: function(params, id) {\r\n            this._paramsStore.set(params, id);\r\n        },\r\n\r\n        setUuid: function(id, newUuid) {\r\n            return this._uploadData.uuidChanged(id, newUuid);\r\n        },\r\n\r\n        /**\r\n         * Expose the internal status of a file id to the public api for manual state changes\r\n         * @public\r\n         *\r\n         * @param {Number} id,\r\n         * @param {String} newStatus\r\n         *\r\n         * @todo Implement the remaining methods\r\n         */\r\n        setStatus: function(id, newStatus) {\r\n            var fileRecord = this.getUploads({id: id});\r\n            if (!fileRecord) {\r\n                throw new qq.Error(id + \" is not a valid file ID.\");\r\n            }\r\n\r\n            switch (newStatus) {\r\n                case qq.status.DELETED:\r\n                    this._onDeleteComplete(id, null, false);\r\n                    break;\r\n                case qq.status.DELETE_FAILED:\r\n                    this._onDeleteComplete(id, null, true);\r\n                    break;\r\n                default:\r\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\r\n                    this.log(errorMessage);\r\n                    throw new qq.Error(errorMessage);\r\n            }\r\n        },\r\n\r\n        uploadStoredFiles: function() {\r\n            if (this._storedIds.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n            }\r\n            else {\r\n                this._uploadStoredFiles();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploaderBasic mode.\r\n     */\r\n    qq.basePrivateApi = {\r\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\r\n        _addCannedFile: function(sessionData) {\r\n            var self = this;\r\n\r\n            return this._uploadData.addFile({\r\n                uuid: sessionData.uuid,\r\n                name: sessionData.name,\r\n                size: sessionData.size,\r\n                status: qq.status.UPLOAD_SUCCESSFUL,\r\n                onBeforeStatusChange: function(id) {\r\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\r\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\r\n\r\n                    if (sessionData.thumbnailUrl) {\r\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\r\n                    }\r\n\r\n                    self._netUploaded++;\r\n                    self._netUploadedOrQueued++;\r\n                }\r\n            });\r\n        },\r\n\r\n        _annotateWithButtonId: function(file, associatedInput) {\r\n            if (qq.isFile(file)) {\r\n                file.qqButtonId = this._getButtonId(associatedInput);\r\n            }\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._options.callbacks.onError(null, null, message, undefined);\r\n        },\r\n\r\n        _createDeleteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.DeleteFileAjaxRequester({\r\n                method: this._options.deleteFile.method.toUpperCase(),\r\n                maxConnections: this._options.maxConnections,\r\n                uuidParamName: this._options.request.uuidName,\r\n                customHeaders: this._deleteFileCustomHeadersStore,\r\n                paramsStore: this._deleteFileParamsStore,\r\n                endpointStore: this._deleteFileEndpointStore,\r\n                cors: this._options.cors,\r\n                log: qq.bind(self.log, self),\r\n                onDelete: function(id) {\r\n                    self._onDelete(id);\r\n                    self._options.callbacks.onDelete(id);\r\n                },\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\r\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        _createPasteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.PasteSupport({\r\n                targetElement: this._options.paste.targetElement,\r\n                callbacks: {\r\n                    log: qq.bind(self.log, self),\r\n                    pasteReceived: function(blob) {\r\n                        self._handleCheckedCallback({\r\n                            name: \"onPasteReceived\",\r\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\r\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\r\n                            identifier: \"pasted image\"\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _createStore: function(initialValue, _readOnlyValues_) {\r\n            var store = {},\r\n                catchall = initialValue,\r\n                perIdReadOnlyValues = {},\r\n                readOnlyValues = _readOnlyValues_,\r\n                copy = function(orig) {\r\n                    if (qq.isObject(orig)) {\r\n                        return qq.extend({}, orig);\r\n                    }\r\n                    return orig;\r\n                },\r\n                getReadOnlyValues = function() {\r\n                    if (qq.isFunction(readOnlyValues)) {\r\n                        return readOnlyValues();\r\n                    }\r\n                    return readOnlyValues;\r\n                },\r\n                includeReadOnlyValues = function(id, existing) {\r\n                    if (readOnlyValues && qq.isObject(existing)) {\r\n                        qq.extend(existing, getReadOnlyValues());\r\n                    }\r\n\r\n                    if (perIdReadOnlyValues[id]) {\r\n                        qq.extend(existing, perIdReadOnlyValues[id]);\r\n                    }\r\n                };\r\n\r\n            return {\r\n                set: function(val, id) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id == null) {\r\n                        store = {};\r\n                        catchall = copy(val);\r\n                    }\r\n                    else {\r\n                        store[id] = copy(val);\r\n                    }\r\n                },\r\n\r\n                get: function(id) {\r\n                    var values;\r\n\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id != null && store[id]) {\r\n                        values = store[id];\r\n                    }\r\n                    else {\r\n                        values = copy(catchall);\r\n                    }\r\n\r\n                    includeReadOnlyValues(id, values);\r\n\r\n                    return copy(values);\r\n                },\r\n\r\n                addReadOnly: function(id, values) {\r\n                    // Only applicable to Object stores\r\n                    if (qq.isObject(store)) {\r\n                        // If null ID, apply readonly values to all files\r\n                        if (id === null) {\r\n                            if (qq.isFunction(values)) {\r\n                                readOnlyValues = values;\r\n                            }\r\n                            else {\r\n                                readOnlyValues = readOnlyValues || {};\r\n                                qq.extend(readOnlyValues, values);\r\n                            }\r\n                        }\r\n                        else {\r\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\r\n                            qq.extend(perIdReadOnlyValues[id], values);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                remove: function(fileId) {\r\n                    return delete store[fileId];\r\n                },\r\n\r\n                reset: function() {\r\n                    store = {};\r\n                    perIdReadOnlyValues = {};\r\n                    catchall = initialValue;\r\n                }\r\n            };\r\n        },\r\n\r\n        _createUploadDataTracker: function() {\r\n            var self = this;\r\n\r\n            return new qq.UploadData({\r\n                getName: function(id) {\r\n                    return self.getName(id);\r\n                },\r\n                getUuid: function(id) {\r\n                    return self.getUuid(id);\r\n                },\r\n                getSize: function(id) {\r\n                    return self.getSize(id);\r\n                },\r\n                onStatusChange: function(id, oldStatus, newStatus) {\r\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\r\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\r\n                    self._maybeAllComplete(id, newStatus);\r\n\r\n                    if (self._totalProgress) {\r\n                        setTimeout(function() {\r\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Generate a tracked upload button.\r\n         *\r\n         * @param spec Object containing a required `element` property\r\n         * along with optional `multiple`, `accept`, and `folders`.\r\n         * @returns {qq.UploadButton}\r\n         * @private\r\n         */\r\n        _createUploadButton: function(spec) {\r\n            var self = this,\r\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\r\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\r\n                button;\r\n\r\n            function allowMultiple() {\r\n                if (qq.supportedFeatures.ajaxUploading) {\r\n                    // Workaround for bug in iOS7+ (see #1039)\r\n                    if (self._options.workarounds.iosEmptyVideos &&\r\n                        qq.ios() &&\r\n                        !qq.ios6() &&\r\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    if (spec.multiple === undefined) {\r\n                        return self._options.multiple;\r\n                    }\r\n\r\n                    return spec.multiple;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            button = new qq.UploadButton({\r\n                acceptFiles: acceptFiles,\r\n                element: spec.element,\r\n                focusClass: this._options.classes.buttonFocus,\r\n                folders: spec.folders,\r\n                hoverClass: this._options.classes.buttonHover,\r\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\r\n                multiple: allowMultiple(),\r\n                name: this._options.request.inputName,\r\n                onChange: function(input) {\r\n                    self._onInputChange(input);\r\n                },\r\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\r\n            });\r\n\r\n            this._disposeSupport.addDisposer(function() {\r\n                button.dispose();\r\n            });\r\n\r\n            self._buttons.push(button);\r\n\r\n            return button;\r\n        },\r\n\r\n        _createUploadHandler: function(additionalOptions, namespace) {\r\n            var self = this,\r\n                lastOnProgress = {},\r\n                options = {\r\n                    debug: this._options.debug,\r\n                    maxConnections: this._options.maxConnections,\r\n                    cors: this._options.cors,\r\n                    paramsStore: this._paramsStore,\r\n                    endpointStore: this._endpointStore,\r\n                    chunking: this._options.chunking,\r\n                    resume: this._options.resume,\r\n                    blobs: this._options.blobs,\r\n                    log: qq.bind(self.log, self),\r\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\r\n                    onProgress: function(id, name, loaded, total) {\r\n                        if (loaded < 0 || total < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        if (lastOnProgress[id]) {\r\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\r\n                                self._onProgress(id, name, loaded, total);\r\n                                self._options.callbacks.onProgress(id, name, loaded, total);\r\n                            }\r\n                        }\r\n                        else {\r\n                            self._onProgress(id, name, loaded, total);\r\n                            self._options.callbacks.onProgress(id, name, loaded, total);\r\n                        }\r\n\r\n                        lastOnProgress[id] = {loaded: loaded, total: total};\r\n\r\n                    },\r\n                    onComplete: function(id, name, result, xhr) {\r\n                        delete lastOnProgress[id];\r\n\r\n                        var status = self.getUploads({id: id}).status,\r\n                            retVal;\r\n\r\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\r\n                        // invoked by the browser multiple times for the same XHR instance with the same state\r\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\r\n                        // done this.\r\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\r\n                            return;\r\n                        }\r\n\r\n                        retVal = self._onComplete(id, name, result, xhr);\r\n\r\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\r\n                        // until the promise has been fulfilled.\r\n                        if (retVal instanceof  qq.Promise) {\r\n                            retVal.done(function() {\r\n                                self._options.callbacks.onComplete(id, name, result, xhr);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self._options.callbacks.onComplete(id, name, result, xhr);\r\n                        }\r\n                    },\r\n                    onCancel: function(id, name, cancelFinalizationEffort) {\r\n                        var promise = new qq.Promise();\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onCancel\",\r\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\r\n                            onFailure: promise.failure,\r\n                            onSuccess: function() {\r\n                                cancelFinalizationEffort.then(function() {\r\n                                    self._onCancel(id, name);\r\n                                });\r\n\r\n                                promise.success();\r\n                            },\r\n                            identifier: id\r\n                        });\r\n\r\n                        return promise;\r\n                    },\r\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\r\n                    onUpload: function(id, name) {\r\n                        self._onUpload(id, name);\r\n                        self._options.callbacks.onUpload(id, name);\r\n                    },\r\n                    onUploadChunk: function(id, name, chunkData) {\r\n                        self._onUploadChunk(id, chunkData);\r\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\r\n                    },\r\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\r\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\r\n                    },\r\n                    onResume: function(id, name, chunkData) {\r\n                        return self._options.callbacks.onResume(id, name, chunkData);\r\n                    },\r\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\r\n                        return self._onAutoRetry.apply(self, arguments);\r\n                    },\r\n                    onUuidChanged: function(id, newUuid) {\r\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\r\n                        self.setUuid(id, newUuid);\r\n                    },\r\n                    getName: qq.bind(self.getName, self),\r\n                    getUuid: qq.bind(self.getUuid, self),\r\n                    getSize: qq.bind(self.getSize, self),\r\n                    setSize: qq.bind(self._setSize, self),\r\n                    getDataByUuid: function(uuid) {\r\n                        return self.getUploads({uuid: uuid});\r\n                    },\r\n                    isQueued: function(id) {\r\n                        var status = self.getUploads({id: id}).status;\r\n                        return status === qq.status.QUEUED ||\r\n                            status === qq.status.SUBMITTED ||\r\n                            status === qq.status.UPLOAD_RETRYING ||\r\n                            status === qq.status.PAUSED;\r\n                    },\r\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\r\n                    getIdsInBatch: self._uploadData.getIdsInBatch\r\n                };\r\n\r\n            qq.each(this._options.request, function(prop, val) {\r\n                options[prop] = val;\r\n            });\r\n\r\n            options.customHeaders = this._customHeadersStore;\r\n\r\n            if (additionalOptions) {\r\n                qq.each(additionalOptions, function(key, val) {\r\n                    options[key] = val;\r\n                });\r\n            }\r\n\r\n            return new qq.UploadHandlerController(options, namespace);\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id) {\r\n            this._netUploadedOrQueued--;\r\n            this._uploadData.setStatus(id, qq.status.REJECTED);\r\n        },\r\n\r\n        _formatSize: function(bytes) {\r\n            if (bytes === 0) {\r\n                return bytes + this._options.text.sizeSymbols[0];\r\n            }\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1000;\r\n                i++;\r\n            } while (bytes > 999);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\r\n        },\r\n\r\n        // Creates an internal object that tracks various properties of each extra button,\r\n        // and then actually creates the extra button.\r\n        _generateExtraButtonSpecs: function() {\r\n            var self = this;\r\n\r\n            this._extraButtonSpecs = {};\r\n\r\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\r\n                var multiple = extraButtonOptionEntry.multiple,\r\n                    validation = qq.extend({}, self._options.validation, true),\r\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\r\n\r\n                if (multiple === undefined) {\r\n                    multiple = self._options.multiple;\r\n                }\r\n\r\n                if (extraButtonSpec.validation) {\r\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\r\n                }\r\n\r\n                qq.extend(extraButtonSpec, {\r\n                    multiple: multiple,\r\n                    validation: validation\r\n                }, true);\r\n\r\n                self._initExtraButton(extraButtonSpec);\r\n            });\r\n        },\r\n\r\n        _getButton: function(buttonId) {\r\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            if (extraButtonsSpec) {\r\n                return extraButtonsSpec.element;\r\n            }\r\n            else if (buttonId === this._defaultButtonId) {\r\n                return this._options.button;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the internally used tracking ID for a button.\r\n         *\r\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\r\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\r\n         * @private\r\n         */\r\n        _getButtonId: function(buttonOrFileInputOrFile) {\r\n            var inputs, fileInput,\r\n                fileBlobOrInput = buttonOrFileInputOrFile;\r\n\r\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\r\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\r\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\r\n            }\r\n\r\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\r\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\r\n                if (qq.isFile(fileBlobOrInput)) {\r\n                    return fileBlobOrInput.qqButtonId;\r\n                }\r\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\r\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\r\n\r\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n\r\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\r\n\r\n                qq.each(inputs, function(idx, input) {\r\n                    if (input.getAttribute(\"type\") === \"file\") {\r\n                        fileInput = input;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (fileInput) {\r\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n            }\r\n        },\r\n\r\n        _getNotFinished: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED,\r\n                    qq.status.SUBMITTING,\r\n                    qq.status.SUBMITTED,\r\n                    qq.status.PAUSED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        // Get the validation options for this button.  Could be the default validation option\r\n        // or a specific one assigned to this particular button.\r\n        _getValidationBase: function(buttonId) {\r\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\r\n        },\r\n\r\n        _getValidationDescriptor: function(fileWrapper) {\r\n            if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                return {\r\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\r\n                    size: fileWrapper.file.referenceBlob.size\r\n                };\r\n            }\r\n\r\n            return {\r\n                name: this.getUploads({id: fileWrapper.id}).name,\r\n                size: this.getUploads({id: fileWrapper.id}).size\r\n            };\r\n        },\r\n\r\n        _getValidationDescriptors: function(fileWrappers) {\r\n            var self = this,\r\n                fileDescriptors = [];\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\r\n            });\r\n\r\n            return fileDescriptors;\r\n        },\r\n\r\n        // Allows camera access on either the default or an extra button for iOS devices.\r\n        _handleCameraAccess: function() {\r\n            if (this._options.camera.ios && qq.ios()) {\r\n                var acceptIosCamera = \"image/*;capture=camera\",\r\n                    button = this._options.camera.button,\r\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\r\n                    optionRoot = this._options;\r\n\r\n                // If we are not targeting the default button, it is an \"extra\" button\r\n                if (buttonId && buttonId !== this._defaultButtonId) {\r\n                    optionRoot = this._extraButtonSpecs[buttonId];\r\n                }\r\n\r\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\r\n                optionRoot.multiple = false;\r\n\r\n                // update the options\r\n                if (optionRoot.validation.acceptFiles === null) {\r\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\r\n                }\r\n                else {\r\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\r\n                }\r\n\r\n                // update the already-created button\r\n                qq.each(this._buttons, function(idx, button) {\r\n                    if (button.getButtonId() === buttonId) {\r\n                        button.setMultiple(optionRoot.multiple);\r\n                        button.setAcceptFiles(optionRoot.acceptFiles);\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _handleCheckedCallback: function(details) {\r\n            var self = this,\r\n                callbackRetVal = details.callback();\r\n\r\n            if (qq.isGenericPromise(callbackRetVal)) {\r\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\r\n                return callbackRetVal.then(\r\n                    function(successParam) {\r\n                        self.log(details.name + \" promise success for \" + details.identifier);\r\n                        details.onSuccess(successParam);\r\n                    },\r\n                    function() {\r\n                        if (details.onFailure) {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                            details.onFailure();\r\n                        }\r\n                        else {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            if (callbackRetVal !== false) {\r\n                details.onSuccess(callbackRetVal);\r\n            }\r\n            else {\r\n                if (details.onFailure) {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\r\n                    details.onFailure();\r\n                }\r\n                else {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\r\n                }\r\n            }\r\n\r\n            return callbackRetVal;\r\n        },\r\n\r\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\r\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\r\n            var self = this,\r\n                uuid = qq.getUniqueId(),\r\n                size = -1,\r\n                name = qq.getFilename(file),\r\n                actualFile = file.blob || file,\r\n                handler = this._customNewFileHandler ?\r\n                    this._customNewFileHandler :\r\n                    qq.bind(self._handleNewFileGeneric, self);\r\n\r\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\r\n                size = actualFile.size;\r\n            }\r\n\r\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\r\n                uploadData: self._uploadData,\r\n                paramsStore: self._paramsStore,\r\n                addFileToHandler: function(id, file) {\r\n                    self._handler.add(id, file);\r\n                    self._netUploadedOrQueued++;\r\n                    self._trackButton(id);\r\n                }\r\n            });\r\n        },\r\n\r\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\r\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\r\n\r\n            this._handler.add(id, file);\r\n            this._trackButton(id);\r\n\r\n            this._netUploadedOrQueued++;\r\n\r\n            fileList.push({id: id, file: file});\r\n        },\r\n\r\n        _handlePasteSuccess: function(blob, extSuppliedName) {\r\n            var extension = blob.type.split(\"/\")[1],\r\n                name = extSuppliedName;\r\n\r\n            /*jshint eqeqeq: true, eqnull: true*/\r\n            if (name == null) {\r\n                name = this._options.paste.defaultName;\r\n            }\r\n\r\n            name += \".\" + extension;\r\n\r\n            this.addFiles({\r\n                name: name,\r\n                blob: blob\r\n            });\r\n        },\r\n\r\n        _handleDeleteSuccess: function(id) {\r\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\r\n                var name = this.getName(id);\r\n\r\n                this._netUploadedOrQueued--;\r\n                this._netUploaded--;\r\n                this._handler.expunge(id);\r\n                this._uploadData.setStatus(id, qq.status.DELETED);\r\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\r\n            }\r\n        },\r\n\r\n        _handleDeleteFailed: function(id, xhrOrXdr) {\r\n            var name = this.getName(id);\r\n\r\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\r\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\r\n\r\n            // Check first if xhrOrXdr is actually passed or valid\r\n            // For error reporting, we only have access to the response status if this is not\r\n            // an `XDomainRequest`.\r\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\r\n            }\r\n            else {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\r\n            }\r\n        },\r\n\r\n        // Creates an extra button element\r\n        _initExtraButton: function(spec) {\r\n            var button = this._createUploadButton({\r\n                accept: spec.validation.acceptFiles,\r\n                allowedExtensions: spec.validation.allowedExtensions,\r\n                element: spec.element,\r\n                folders: spec.folders,\r\n                multiple: spec.multiple,\r\n                title: spec.fileInputTitle\r\n            });\r\n\r\n            this._extraButtonSpecs[button.getButtonId()] = spec;\r\n        },\r\n\r\n        _initFormSupportAndParams: function() {\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n            );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore = this._createStore(\r\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\r\n                );\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\r\n                }\r\n            }\r\n            else {\r\n                this._paramsStore = this._createStore(this._options.request.params);\r\n            }\r\n        },\r\n\r\n        _isDeletePossible: function() {\r\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (this._options.cors.expected) {\r\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\r\n                    return true;\r\n                }\r\n\r\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _isAllowedExtension: function(allowed, fileName) {\r\n            var valid = false;\r\n\r\n            if (!allowed.length) {\r\n                return true;\r\n            }\r\n\r\n            qq.each(allowed, function(idx, allowedExt) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExt)) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\r\n\r\n                    if (fileName.match(extRegex) != null) {\r\n                        valid = true;\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return valid;\r\n        },\r\n\r\n        /**\r\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\r\n         *\r\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\r\n         * @param maybeNameOrNames names of the items that have failed, if applicable\r\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\r\n         * @private\r\n         */\r\n        _itemError: function(code, maybeNameOrNames, item) {\r\n            var message = this._options.messages[code],\r\n                allowedExtensions = [],\r\n                names = [].concat(maybeNameOrNames),\r\n                name = names[0],\r\n                buttonId = this._getButtonId(item),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                extensionsForMessage, placeholderMatch;\r\n\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExtension)) {\r\n                    allowedExtensions.push(allowedExtension);\r\n                }\r\n            });\r\n\r\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\r\n\r\n            r(\"{file}\", this._options.formatFileName(name));\r\n            r(\"{extensions}\", extensionsForMessage);\r\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\r\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\r\n\r\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\r\n            if (placeholderMatch !== null) {\r\n                qq.each(placeholderMatch, function(idx, placeholder) {\r\n                    r(placeholder, names[idx]);\r\n                });\r\n            }\r\n\r\n            this._options.callbacks.onError(null, name, message, undefined);\r\n\r\n            return message;\r\n        },\r\n\r\n        /**\r\n         * Conditionally orders a manual retry of a failed upload.\r\n         *\r\n         * @param id File ID of the failed upload\r\n         * @param callback Optional callback to invoke if a retry is prudent.\r\n         * In lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if a manual retry will occur\r\n         * @private\r\n         */\r\n        _manualRetry: function(id, callback) {\r\n            if (this._onBeforeManualRetry(id)) {\r\n                this._netUploadedOrQueued++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n\r\n                if (callback) {\r\n                    callback(id);\r\n                }\r\n                else {\r\n                    this._handler.retry(id);\r\n                }\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _maybeAllComplete: function(id, status) {\r\n            var self = this,\r\n                notFinished = this._getNotFinished();\r\n\r\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\r\n                this._succeededSinceLastAllComplete.push(id);\r\n            }\r\n            else if (status === qq.status.UPLOAD_FAILED) {\r\n                this._failedSinceLastAllComplete.push(id);\r\n            }\r\n\r\n            if (notFinished === 0 &&\r\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\r\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\r\n                setTimeout(function() {\r\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _maybeHandleIos8SafariWorkaround: function() {\r\n            var self = this;\r\n\r\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n                setTimeout(function() {\r\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\r\n                }, 0);\r\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\r\n            }\r\n        },\r\n\r\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\r\n            // Assuming no one will actually set the response code to something other than 200\r\n            // and still set 'success' to true...\r\n            if (!response.success) {\r\n                if (xhr && xhr.status !== 200 && !response.error) {\r\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\r\n                }\r\n                else {\r\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\r\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\r\n            var self = this;\r\n\r\n            if (items.length > index) {\r\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\r\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\r\n                    setTimeout(function() {\r\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\r\n                            buttonId = self._getButtonId(items[index].file),\r\n                            button = self._getButton(buttonId);\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onValidate\",\r\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\r\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\r\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\r\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\r\n                        });\r\n                    }, 0);\r\n                }\r\n                else if (!validItem) {\r\n                    for (; index < items.length; index++) {\r\n                        self._fileOrBlobRejected(items[index].id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\r\n\r\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n        },\r\n\r\n        /**\r\n         * Attempt to automatically retry a failed upload.\r\n         *\r\n         * @param id The file ID of the failed upload\r\n         * @param name The name of the file associated with the failed upload\r\n         * @param responseJSON Response from the server, parsed into a javascript object\r\n         * @param xhr Ajax transport used to send the failed request\r\n         * @param callback Optional callback to be invoked if a retry is prudent.\r\n         * Invoked in lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if an auto-retry will occur\r\n         * @private\r\n         */\r\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\r\n            var self = this;\r\n\r\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\r\n\r\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\r\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\r\n\r\n                self._maybeParseAndSendUploadError.apply(self, arguments);\r\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\r\n                self._onBeforeAutoRetry(id, name);\r\n\r\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n                self._retryTimeouts[id] = setTimeout(function() {\r\n                    self.log(\"Starting retry for \" + name + \"...\");\r\n\r\n                    if (callback) {\r\n                        callback(id);\r\n                    }\r\n                    else {\r\n                        self._handler.retry(id);\r\n                    }\r\n                }, retryWaitPeriod);\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id, name) {\r\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            var itemLimit = this._currentItemLimit,\r\n                fileName;\r\n\r\n            if (this._preventRetries[id]) {\r\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\r\n                return false;\r\n            }\r\n            else if (this._handler.isValid(id)) {\r\n                fileName = this.getName(id);\r\n\r\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\r\n                    return false;\r\n                }\r\n\r\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\r\n                    this._itemError(\"retryFailTooManyItems\");\r\n                    return false;\r\n                }\r\n\r\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._netUploadedOrQueued--;\r\n\r\n            clearTimeout(this._retryTimeouts[id]);\r\n\r\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\r\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\r\n                this._storedIds.splice(storedItemIndex, 1);\r\n            }\r\n\r\n            this._uploadData.setStatus(id, qq.status.CANCELED);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            if (!result.success) {\r\n                this._netUploadedOrQueued--;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\r\n\r\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\r\n                    this._preventRetries[id] = true;\r\n                }\r\n            }\r\n            else {\r\n                if (result.thumbnailUrl) {\r\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\r\n                }\r\n\r\n                this._netUploaded++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\r\n            }\r\n\r\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\r\n\r\n            return result.success ? true : false;\r\n        },\r\n\r\n        _onDelete: function(id) {\r\n            this._uploadData.setStatus(id, qq.status.DELETING);\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n            var name = this.getName(id);\r\n\r\n            if (isError) {\r\n                this._handleDeleteFailed(id, xhrOrXdr);\r\n            }\r\n            else {\r\n                this._handleDeleteSuccess(id);\r\n            }\r\n        },\r\n\r\n        _onInputChange: function(input) {\r\n            var fileIndex;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\r\n                    this._annotateWithButtonId(input.files[fileIndex], input);\r\n                }\r\n\r\n                this.addFiles(input.files);\r\n            }\r\n            // Android 2.3.x will fire `onchange` even if no file has been selected\r\n            else if (input.value.length > 0) {\r\n                this.addFiles(input);\r\n            }\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n        },\r\n\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            //nothing to do yet in core uploader\r\n        },\r\n\r\n        _onSubmitCallbackSuccess: function(id, name) {\r\n            this._onSubmit.apply(this, arguments);\r\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\r\n            this._onSubmitted.apply(this, arguments);\r\n\r\n            if (this._options.autoUpload) {\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n                this._uploadFile(id);\r\n            }\r\n            else {\r\n                this._storeForLater(id);\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\r\n            var uuid = this.getUuid(id),\r\n                adjustedOnSuccessCallback;\r\n\r\n            if (onSuccessCallback) {\r\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\r\n            }\r\n\r\n            if (this._isDeletePossible()) {\r\n                this._handleCheckedCallback({\r\n                    name: \"onSubmitDelete\",\r\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\r\n                    onSuccess: adjustedOnSuccessCallback ||\r\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\r\n                    identifier: id\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\r\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitted: function(id) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._options.callbacks.onTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            // nothing to do in the core uploader for now\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\r\n            if (newStatus === qq.status.PAUSED) {\r\n                clearTimeout(this._retryTimeouts[id]);\r\n            }\r\n        },\r\n\r\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\r\n            var self = this;\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                self._fileOrBlobRejected(fileWrapper.id);\r\n            });\r\n        },\r\n\r\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\r\n            var errorMessage,\r\n                itemLimit = this._currentItemLimit,\r\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\r\n\r\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\r\n                if (items.length > 0) {\r\n                    this._handleCheckedCallback({\r\n                        name: \"onValidate\",\r\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\r\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\r\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\r\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\r\n                    });\r\n                }\r\n                else {\r\n                    this._itemError(\"noFilesError\");\r\n                }\r\n            }\r\n            else {\r\n                this._onValidateBatchCallbackFailure(items);\r\n                errorMessage = this._options.messages.tooManyItemsError\r\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\r\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\r\n                this._batchError(errorMessage);\r\n            }\r\n        },\r\n\r\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\r\n            var nextIndex = index + 1;\r\n\r\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\r\n\r\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n        },\r\n\r\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\r\n            var self = this,\r\n                nextIndex = index + 1,\r\n                validationDescriptor = this._getValidationDescriptor(items[index]);\r\n\r\n            this._validateFileOrBlobData(items[index], validationDescriptor)\r\n                .then(\r\n                function() {\r\n                    self._upload(items[index].id, params, endpoint);\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\r\n                },\r\n                function() {\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n                }\r\n            );\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            if (items.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n                return;\r\n            }\r\n\r\n            var validationDescriptors = this._getValidationDescriptors(items),\r\n                buttonId = this._getButtonId(items[0].file),\r\n                button = this._getButton(buttonId);\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onValidateBatch\",\r\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\r\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\r\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\r\n                identifier: \"batch validation\"\r\n            });\r\n        },\r\n\r\n        _preventLeaveInProgress: function() {\r\n            var self = this;\r\n\r\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\r\n                if (self.getInProgress()) {\r\n                    e = e || window.event;\r\n                    // for ie, ff\r\n                    e.returnValue = self._options.messages.onLeave;\r\n                    // for webkit\r\n                    return self._options.messages.onLeave;\r\n                }\r\n            });\r\n        },\r\n\r\n        // Attempts to refresh session data only if the `qq.Session` module exists\r\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\r\n        // callback will be invoked once the refresh is complete.\r\n        _refreshSessionData: function() {\r\n            var self = this,\r\n                options = this._options.session;\r\n\r\n            /* jshint eqnull:true */\r\n            if (qq.Session && this._options.session.endpoint != null) {\r\n                if (!this._session) {\r\n                    qq.extend(options, {cors: this._options.cors});\r\n\r\n                    options.log = qq.bind(this.log, this);\r\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\r\n\r\n                    this._session = new qq.Session(options);\r\n                }\r\n\r\n                setTimeout(function() {\r\n                    self._session.refresh().then(function(response, xhrOrXdr) {\r\n                        self._sessionRequestComplete();\r\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\r\n\r\n                    }, function(response, xhrOrXdr) {\r\n\r\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\r\n                    });\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _sessionRequestComplete: function() {},\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._uploadData.updateSize(id, newSize);\r\n            this._totalProgress && this._totalProgress.onNewSize(id);\r\n        },\r\n\r\n        _shouldAutoRetry: function(id, name, responseJSON) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            /*jshint laxbreak: true */\r\n            if (!this._preventRetries[id]\r\n                && this._options.retry.enableAuto\r\n                && uploadData.status !== qq.status.PAUSED) {\r\n\r\n                if (this._autoRetries[id] === undefined) {\r\n                    this._autoRetries[id] = 0;\r\n                }\r\n\r\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\r\n                    this._autoRetries[id] += 1;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._storedIds.push(id);\r\n        },\r\n\r\n        // Maps a file with the button that was used to select it.\r\n        _trackButton: function(id) {\r\n            var buttonId;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                buttonId = this._handler.getFile(id).qqButtonId;\r\n            }\r\n            else {\r\n                buttonId = this._getButtonId(this._handler.getInput(id));\r\n            }\r\n\r\n            if (buttonId) {\r\n                this._buttonIdsForFileIds[id] = buttonId;\r\n            }\r\n        },\r\n\r\n        _updateFormSupportAndParams: function(formElementOrId) {\r\n            this._options.form.element = formElementOrId;\r\n\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n                );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this.setEndpoint(this._formSupport.newEndpoint);\r\n                }\r\n            }\r\n        },\r\n\r\n        _upload: function(id, params, endpoint) {\r\n            var name = this.getName(id);\r\n\r\n            if (params) {\r\n                this.setParams(params, id);\r\n            }\r\n\r\n            if (endpoint) {\r\n                this.setEndpoint(endpoint, id);\r\n            }\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onSubmit\",\r\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\r\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\r\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\r\n                identifier: id\r\n            });\r\n        },\r\n\r\n        _uploadFile: function(id) {\r\n            if (!this._handler.upload(id)) {\r\n                this._uploadData.setStatus(id, qq.status.QUEUED);\r\n            }\r\n        },\r\n\r\n        _uploadStoredFiles: function() {\r\n            var idToUpload, stillSubmitting,\r\n                self = this;\r\n\r\n            while (this._storedIds.length) {\r\n                idToUpload = this._storedIds.shift();\r\n                this._uploadFile(idToUpload);\r\n            }\r\n\r\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\r\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\r\n            if (stillSubmitting) {\r\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\r\n                setTimeout(function() {\r\n                    self._uploadStoredFiles();\r\n                }, 1000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Performs some internal validation checks on an item, defined in the `validation` option.\r\n         *\r\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\r\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\r\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\r\n         * @private\r\n         */\r\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\r\n            var self = this,\r\n                file = (function() {\r\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                        return fileWrapper.file.referenceBlob;\r\n                    }\r\n                    return fileWrapper.file;\r\n                }()),\r\n                name = validationDescriptor.name,\r\n                size = validationDescriptor.size,\r\n                buttonId = this._getButtonId(fileWrapper.file),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                validityChecker = new qq.Promise();\r\n\r\n            validityChecker.then(\r\n                function() {},\r\n                function() {\r\n                    self._fileOrBlobRejected(fileWrapper.id, name);\r\n                });\r\n\r\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\r\n                this._itemError(\"typeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (!this._options.validation.allowEmpty && size === 0) {\r\n                this._itemError(\"emptyError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\r\n                this._itemError(\"sizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && size < validationBase.minSizeLimit) {\r\n                this._itemError(\"minSizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\r\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\r\n                    validityChecker.success,\r\n                    function(errorCode) {\r\n                        self._itemError(errorCode + \"ImageError\", name, file);\r\n                        validityChecker.failure();\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                validityChecker.success();\r\n            }\r\n\r\n            return validityChecker;\r\n        },\r\n\r\n        _wrapCallbacks: function() {\r\n            var self, safeCallback, prop;\r\n\r\n            self = this;\r\n\r\n            safeCallback = function(name, callback, args) {\r\n                var errorMsg;\r\n\r\n                try {\r\n                    return callback.apply(self, args);\r\n                }\r\n                catch (exception) {\r\n                    errorMsg = exception.message || exception.toString();\r\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\r\n                }\r\n            };\r\n\r\n            /* jshint forin: false, loopfunc: true */\r\n            for (prop in this._options.callbacks) {\r\n                (function() {\r\n                    var callbackName, callbackFunc;\r\n                    callbackName = prop;\r\n                    callbackFunc = self._options.callbacks[callbackName];\r\n                    self._options.callbacks[callbackName] = function() {\r\n                        return safeCallback(callbackName, callbackFunc, arguments);\r\n                    };\r\n                }());\r\n            }\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.FineUploaderBasic = function(o) {\r\n        var self = this;\r\n\r\n        // These options define FineUploaderBasic mode.\r\n        this._options = {\r\n            debug: false,\r\n            button: null,\r\n            multiple: true,\r\n            maxConnections: 3,\r\n            disableCancelForFormUploads: false,\r\n            autoUpload: true,\r\n\r\n            request: {\r\n                customHeaders: {},\r\n                endpoint: \"/server/upload\",\r\n                filenameParam: \"qqfilename\",\r\n                forceMultipart: true,\r\n                inputName: \"qqfile\",\r\n                method: \"POST\",\r\n                params: {},\r\n                paramsInBody: true,\r\n                totalFileSizeName: \"qqtotalfilesize\",\r\n                uuidName: \"qquuid\"\r\n            },\r\n\r\n            validation: {\r\n                allowedExtensions: [],\r\n                sizeLimit: 0,\r\n                minSizeLimit: 0,\r\n                itemLimit: 0,\r\n                stopOnFirstInvalidFile: true,\r\n                acceptFiles: null,\r\n                image: {\r\n                    maxHeight: 0,\r\n                    maxWidth: 0,\r\n                    minHeight: 0,\r\n                    minWidth: 0\r\n                },\r\n                allowEmpty: false\r\n            },\r\n\r\n            callbacks: {\r\n                onSubmit: function(id, name) {},\r\n                onSubmitted: function(id, name) {},\r\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\r\n                onAllComplete: function(successful, failed) {},\r\n                onCancel: function(id, name) {},\r\n                onUpload: function(id, name) {},\r\n                onUploadChunk: function(id, name, chunkData) {},\r\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\r\n                onResume: function(id, fileName, chunkData) {},\r\n                onProgress: function(id, name, loaded, total) {},\r\n                onTotalProgress: function(loaded, total) {},\r\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\r\n                onAutoRetry: function(id, name, attemptNumber) {},\r\n                onManualRetry: function(id, name) {},\r\n                onValidateBatch: function(fileOrBlobData) {},\r\n                onValidate: function(fileOrBlobData) {},\r\n                onSubmitDelete: function(id) {},\r\n                onDelete: function(id) {},\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\r\n                onPasteReceived: function(blob) {},\r\n                onStatusChange: function(id, oldStatus, newStatus) {},\r\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\r\n            },\r\n\r\n            messages: {\r\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\r\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\r\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\r\n                emptyError: \"{file} is empty, please select files again without it.\",\r\n                noFilesError: \"No files to upload.\",\r\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\r\n                maxHeightImageError: \"Image is too tall.\",\r\n                maxWidthImageError: \"Image is too wide.\",\r\n                minHeightImageError: \"Image is not tall enough.\",\r\n                minWidthImageError: \"Image is not wide enough.\",\r\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\r\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\r\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\r\n            },\r\n\r\n            retry: {\r\n                enableAuto: false,\r\n                maxAutoAttempts: 3,\r\n                autoAttemptDelay: 5,\r\n                preventRetryResponseProperty: \"preventRetry\"\r\n            },\r\n\r\n            classes: {\r\n                buttonHover: \"qq-upload-button-hover\",\r\n                buttonFocus: \"qq-upload-button-focus\"\r\n            },\r\n\r\n            chunking: {\r\n                enabled: false,\r\n                concurrent: {\r\n                    enabled: false\r\n                },\r\n                mandatory: false,\r\n                paramNames: {\r\n                    partIndex: \"qqpartindex\",\r\n                    partByteOffset: \"qqpartbyteoffset\",\r\n                    chunkSize: \"qqchunksize\",\r\n                    totalFileSize: \"qqtotalfilesize\",\r\n                    totalParts: \"qqtotalparts\"\r\n                },\r\n                partSize: 2000000,\r\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\r\n                success: {\r\n                    endpoint: null\r\n                }\r\n            },\r\n\r\n            resume: {\r\n                enabled: false,\r\n                recordsExpireIn: 7, //days\r\n                paramNames: {\r\n                    resuming: \"qqresume\"\r\n                }\r\n            },\r\n\r\n            formatFileName: function(fileOrBlobName) {\r\n                return fileOrBlobName;\r\n            },\r\n\r\n            text: {\r\n                defaultResponseError: \"Upload failure reason unknown\",\r\n                fileInputTitle: \"file input\",\r\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\r\n            },\r\n\r\n            deleteFile: {\r\n                enabled: false,\r\n                method: \"DELETE\",\r\n                endpoint: \"/server/upload\",\r\n                customHeaders: {},\r\n                params: {}\r\n            },\r\n\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false,\r\n                allowXdr: false\r\n            },\r\n\r\n            blobs: {\r\n                defaultName: \"misc_data\"\r\n            },\r\n\r\n            paste: {\r\n                targetElement: null,\r\n                defaultName: \"pasted_image\"\r\n            },\r\n\r\n            camera: {\r\n                ios: false,\r\n\r\n                // if ios is true: button is null means target the default button, otherwise target the button specified\r\n                button: null\r\n            },\r\n\r\n            // This refers to additional upload buttons to be handled by Fine Uploader.\r\n            // Each element is an object, containing `element` as the only required\r\n            // property.  The `element` must be a container that will ultimately\r\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\r\n            // Optional properties of each object include `multiple`, `validation`,\r\n            // and `folders`.\r\n            extraButtons: [],\r\n\r\n            // Depends on the session module.  Used to query the server for an initial file list\r\n            // during initialization and optionally after a `reset`.\r\n            session: {\r\n                endpoint: null,\r\n                params: {},\r\n                customHeaders: {},\r\n                refreshOnReset: true\r\n            },\r\n\r\n            // Send parameters associated with an existing form along with the files\r\n            form: {\r\n                // Element ID, HTMLElement, or null\r\n                element: \"qq-form\",\r\n\r\n                // Overrides the base `autoUpload`, unless `element` is null.\r\n                autoUpload: false,\r\n\r\n                // true = upload files on form submission (and squelch submit event)\r\n                interceptSubmit: true\r\n            },\r\n\r\n            // scale images client side, upload a new file for each scaled version\r\n            scaling: {\r\n                customResizer: null,\r\n\r\n                // send the original file as well\r\n                sendOriginal: true,\r\n\r\n                // fox orientation for scaled images\r\n                orient: true,\r\n\r\n                // If null, scaled image type will match reference image type.  This value will be referred to\r\n                // for any size record that does not specific a type.\r\n                defaultType: null,\r\n\r\n                defaultQuality: 80,\r\n\r\n                failureText: \"Failed to scale\",\r\n\r\n                includeExif: false,\r\n\r\n                // metadata about each requested scaled version\r\n                sizes: []\r\n            },\r\n\r\n            workarounds: {\r\n                iosEmptyVideos: true,\r\n                ios8SafariUploads: true,\r\n                ios8BrowserCrash: false\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(this._options, o, true);\r\n\r\n        this._buttons = [];\r\n        this._extraButtonSpecs = {};\r\n        this._buttonIdsForFileIds = [];\r\n\r\n        this._wrapCallbacks();\r\n        this._disposeSupport =  new qq.DisposeSupport();\r\n\r\n        this._storedIds = [];\r\n        this._autoRetries = [];\r\n        this._retryTimeouts = [];\r\n        this._preventRetries = [];\r\n        this._thumbnailUrls = [];\r\n\r\n        this._netUploadedOrQueued = 0;\r\n        this._netUploaded = 0;\r\n        this._uploadData = this._createUploadDataTracker();\r\n\r\n        this._initFormSupportAndParams();\r\n\r\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\r\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\r\n\r\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\r\n\r\n        this._endpointStore = this._createStore(this._options.request.endpoint);\r\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\r\n\r\n        this._handler = this._createUploadHandler();\r\n\r\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\r\n\r\n        if (this._options.button) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._options.button,\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._generateExtraButtonSpecs();\r\n\r\n        this._handleCameraAccess();\r\n\r\n        if (this._options.paste.targetElement) {\r\n            if (qq.PasteSupport) {\r\n                this._pasteHandler = this._createPasteHandler();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._preventLeaveInProgress();\r\n\r\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\r\n        this._refreshSessionData();\r\n\r\n        this._succeededSinceLastAllComplete = [];\r\n        this._failedSinceLastAllComplete = [];\r\n\r\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\r\n        if (this._scaler.enabled) {\r\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\r\n        }\r\n\r\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\r\n            this._totalProgress = new qq.TotalProgress(\r\n                qq.bind(this._onTotalProgress, this),\r\n\r\n                function(id) {\r\n                    var entry = self._uploadData.retrieve({id: id});\r\n                    return (entry && entry.size) || 0;\r\n                }\r\n            );\r\n        }\r\n\r\n        this._currentItemLimit = this._options.validation.itemLimit;\r\n    };\r\n\r\n    // Define the private & public API methods.\r\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\r\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n}());\r\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\r\n/**\r\n * Base upload handler module.  Controls more specific handlers.\r\n *\r\n * @param o Options.  Passed along to the specific handler submodule as well.\r\n * @param namespace [optional] Namespace for the specific handler.\r\n */\r\nqq.UploadHandlerController = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var controller = this,\r\n        chunkingPossible = false,\r\n        concurrentChunkingPossible = false,\r\n        chunking, preventRetryResponse, log, handler,\r\n\r\n    options = {\r\n        paramsStore: {},\r\n        maxConnections: 3, // maximum number of concurrent uploads\r\n        chunking: {\r\n            enabled: false,\r\n            multiple: {\r\n                enabled: false\r\n            }\r\n        },\r\n        log: function(str, level) {},\r\n        onProgress: function(id, fileName, loaded, total) {},\r\n        onComplete: function(id, fileName, response, xhr) {},\r\n        onCancel: function(id, fileName) {},\r\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\r\n        onUpload: function(id, fileName) {},\r\n        onUploadChunk: function(id, fileName, chunkData) {},\r\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\r\n        onAutoRetry: function(id, fileName, response, xhr) {},\r\n        onResume: function(id, fileName, chunkData) {},\r\n        onUuidChanged: function(id, newUuid) {},\r\n        getName: function(id) {},\r\n        setSize: function(id, newSize) {},\r\n        isQueued: function(id) {},\r\n        getIdsInProxyGroup: function(id) {},\r\n        getIdsInBatch: function(id) {}\r\n    },\r\n\r\n    chunked = {\r\n        // Called when each chunk has uploaded successfully\r\n        done: function(id, chunkIdx, response, xhr) {\r\n            var chunkData = handler._getChunkData(id, chunkIdx);\r\n\r\n            handler._getFileState(id).attemptingResume = false;\r\n\r\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\r\n            handler._getFileState(id).loaded += chunkData.size;\r\n\r\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\r\n        // logic associated with closing out the file, such as combining the chunks.\r\n        finalize: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id);\r\n\r\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\r\n            handler.finalizeChunks(id).then(\r\n                function(response, xhr) {\r\n                    log(\"Finalize successful for \" + id);\r\n\r\n                    var normaizedResponse = upload.normalizeResponse(response, true);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    handler._maybeDeletePersistedChunkData(id);\r\n                    upload.cleanup(id, normaizedResponse, xhr);\r\n                },\r\n                function(response, xhr) {\r\n                    var normaizedResponse = upload.normalizeResponse(response, false);\r\n\r\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\r\n\r\n                    if (normaizedResponse.reset) {\r\n                        chunked.reset(id);\r\n                    }\r\n\r\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\r\n                        upload.cleanup(id, normaizedResponse, xhr);\r\n                    }\r\n                }\r\n            );\r\n        },\r\n\r\n        handleFailure: function(chunkIdx, id, response, xhr) {\r\n            var name = options.getName(id);\r\n\r\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\r\n\r\n            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n            var responseToReport = upload.normalizeResponse(response, false),\r\n                inProgressIdx;\r\n\r\n            if (responseToReport.reset) {\r\n                chunked.reset(id);\r\n            }\r\n            else {\r\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\r\n                if (inProgressIdx >= 0) {\r\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\r\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\r\n                }\r\n            }\r\n\r\n            // We may have aborted all other in-progress chunks for this file due to a failure.\r\n            // If so, ignore the failures associated with those aborts.\r\n            if (!handler._getFileState(id).temp.ignoreFailure) {\r\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\r\n                // chunks since they will be explicitly aborted\r\n                if (concurrentChunkingPossible) {\r\n                    handler._getFileState(id).temp.ignoreFailure = true;\r\n\r\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\r\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\r\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\r\n                        ckXhr.abort();\r\n                        // Flag the transport, in case we are waiting for some other async operation\r\n                        // to complete before attempting to upload the chunk\r\n                        ckXhr._cancelled = true;\r\n                    });\r\n\r\n                    // We must indicate that all aborted chunks are no longer in progress\r\n                    handler.moveInProgressToRemaining(id);\r\n\r\n                    // Free up any connections used by these chunks, but don't allow any\r\n                    // other files to take up the connections (until we have exhausted all auto-retries)\r\n                    connectionManager.free(id, true);\r\n                }\r\n\r\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\r\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\r\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\r\n                    // is a failure or not.\r\n                    upload.cleanup(id, responseToReport, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        hasMoreParts: function(id) {\r\n            return !!handler._getFileState(id).chunking.remaining.length;\r\n        },\r\n\r\n        nextPart: function(id) {\r\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\r\n\r\n            if (nextIdx >= handler._getTotalChunks(id)) {\r\n                nextIdx = null;\r\n            }\r\n\r\n            return nextIdx;\r\n        },\r\n\r\n        reset: function(id) {\r\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\r\n\r\n            handler._maybeDeletePersistedChunkData(id);\r\n            handler.reevaluateChunking(id);\r\n            handler._getFileState(id).loaded = 0;\r\n        },\r\n\r\n        sendNext: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id),\r\n                chunkIdx = chunked.nextPart(id),\r\n                chunkData = handler._getChunkData(id, chunkIdx),\r\n                resuming = handler._getFileState(id).attemptingResume,\r\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\r\n\r\n            if (handler._getFileState(id).loaded == null) {\r\n                handler._getFileState(id).loaded = 0;\r\n            }\r\n\r\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\r\n            if (resuming && options.onResume(id, name, chunkData) === false) {\r\n                chunked.reset(id);\r\n                chunkIdx = chunked.nextPart(id);\r\n                chunkData = handler._getChunkData(id, chunkIdx);\r\n                resuming = false;\r\n            }\r\n\r\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\r\n            if (chunkIdx == null && inProgressChunks.length === 0) {\r\n                chunked.finalize(id);\r\n            }\r\n\r\n            // Send the next chunk\r\n            else {\r\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\r\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\r\n                inProgressChunks.push(chunkIdx);\r\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\r\n\r\n                if (concurrentChunkingPossible) {\r\n                    connectionManager.open(id, chunkIdx);\r\n                }\r\n\r\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\r\n                    chunked.sendNext(id);\r\n                }\r\n\r\n                if (chunkData.blob.size === 0) {\r\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\r\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\r\n                }\r\n                else {\r\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\r\n                        // upload chunk success\r\n                        function success(response, xhr) {\r\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\r\n\r\n                            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\r\n                                responseToReport = upload.normalizeResponse(response, true),\r\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\r\n\r\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\r\n\r\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\r\n\r\n                            if (inProgressChunkIdx >= 0) {\r\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\r\n                            }\r\n\r\n                            handler._maybePersistChunkedState(id);\r\n\r\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\r\n                                chunked.finalize(id);\r\n                            }\r\n                            else if (chunked.hasMoreParts(id)) {\r\n                                chunked.sendNext(id);\r\n                            }\r\n                            else {\r\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\r\n                            }\r\n                        },\r\n\r\n                        // upload chunk failure\r\n                        function failure(response, xhr) {\r\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\r\n                        }\r\n                        )\r\n                        .done(function() {\r\n                            handler.clearXhr(id, chunkIdx);\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    connectionManager = {\r\n        _open: [],\r\n        _openChunks: {},\r\n        _waiting: [],\r\n\r\n        available: function() {\r\n            var max = options.maxConnections,\r\n                openChunkEntriesCount = 0,\r\n                openChunksCount = 0;\r\n\r\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\r\n                openChunkEntriesCount++;\r\n                openChunksCount += openChunkIndexes.length;\r\n            });\r\n\r\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\r\n        },\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        free: function(id, dontAllowNext) {\r\n            var allowNext = !dontAllowNext,\r\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\r\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\r\n                nextId;\r\n\r\n            delete connectionManager._openChunks[id];\r\n\r\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\r\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\r\n                delete handler._getFileState(id).file;\r\n            }\r\n\r\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\r\n            if (waitingIndex >= 0) {\r\n                connectionManager._waiting.splice(waitingIndex, 1);\r\n            }\r\n            // If this file was consuming a connection, allow the next file to be uploaded\r\n            else if (allowNext && connectionsIndex >= 0) {\r\n                connectionManager._open.splice(connectionsIndex, 1);\r\n\r\n                nextId = connectionManager._waiting.shift();\r\n                if (nextId >= 0) {\r\n                    connectionManager._open.push(nextId);\r\n                    upload.start(nextId);\r\n                }\r\n            }\r\n        },\r\n\r\n        getWaitingOrConnected: function() {\r\n            var waitingOrConnected = [];\r\n\r\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\r\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\r\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\r\n                if (chunks && chunks.length) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // For non-chunked files, only one connection will be consumed per file.\r\n            // This is where we aggregate those file IDs.\r\n            qq.each(connectionManager._open, function(idx, fileId) {\r\n                if (!connectionManager._openChunks[fileId]) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // There may be files waiting for a connection.\r\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\r\n\r\n            return waitingOrConnected;\r\n        },\r\n\r\n        isUsingConnection: function(id) {\r\n            return qq.indexOf(connectionManager._open, id) >= 0;\r\n        },\r\n\r\n        open: function(id, chunkIdx) {\r\n            if (chunkIdx == null) {\r\n                var alreadyInWaiting = qq.indexOf(connectionManager._waiting, id);\r\n                var alreadyInOpen = qq.indexOf(connectionManager._open, id);\r\n                if (alreadyInWaiting === -1 && alreadyInOpen === -1) {\r\n                    connectionManager._waiting.push(id);\r\n                }\r\n            }\r\n\r\n            if (connectionManager.available()) {\r\n                if (chunkIdx == null) {\r\n                    connectionManager._waiting.pop();\r\n                    connectionManager._open.push(id);\r\n                }\r\n                else {\r\n                    (function() {\r\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\r\n                        openChunksEntry.push(chunkIdx);\r\n                        connectionManager._openChunks[id] = openChunksEntry;\r\n                    }());\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        reset: function() {\r\n            connectionManager._waiting = [];\r\n            connectionManager._open = [];\r\n        }\r\n    },\r\n\r\n    simple = {\r\n        send: function(id, name) {\r\n            handler._getFileState(id).loaded = 0;\r\n\r\n            log(\"Sending simple upload request for \" + id);\r\n            handler.uploadFile(id).then(\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request succeeded for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, true),\r\n                        size = options.getSize(id);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    upload.maybeNewUuid(id, responseToReport);\r\n                    upload.cleanup(id, responseToReport, optXhr);\r\n                },\r\n\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request failed for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, false);\r\n\r\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\r\n                        upload.cleanup(id, responseToReport, optXhr);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    upload = {\r\n        cancel: function(id) {\r\n            log(\"Cancelling \" + id);\r\n            options.paramsStore.remove(id);\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        cleanup: function(id, response, optXhr) {\r\n            var name = options.getName(id);\r\n\r\n            options.onComplete(id, name, response, optXhr);\r\n\r\n            if (handler._getFileState(id)) {\r\n                handler._clearXhrs && handler._clearXhrs(id);\r\n            }\r\n\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\r\n        // if none of these are available for the ID\r\n        getProxyOrBlob: function(id) {\r\n            return (handler.getProxy && handler.getProxy(id)) ||\r\n                (handler.getFile && handler.getFile(id));\r\n        },\r\n\r\n        initHandler: function() {\r\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\r\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\r\n\r\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\r\n                options,\r\n                {\r\n                    getDataByUuid: options.getDataByUuid,\r\n                    getName: options.getName,\r\n                    getSize: options.getSize,\r\n                    getUuid: options.getUuid,\r\n                    log: log,\r\n                    onCancel: options.onCancel,\r\n                    onProgress: options.onProgress,\r\n                    onUuidChanged: options.onUuidChanged\r\n                }\r\n            );\r\n\r\n            if (handler._removeExpiredChunkingRecords) {\r\n                handler._removeExpiredChunkingRecords();\r\n            }\r\n        },\r\n\r\n        isDeferredEligibleForUpload: function(id) {\r\n            return options.isQueued(id);\r\n        },\r\n\r\n        // For Blobs that are part of a group of generated images, along with a reference image,\r\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\r\n        // even if some async processing must be completed on one or more Blobs first.\r\n        maybeDefer: function(id, blob) {\r\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\r\n            // and then submit the upload to the specific handler once the blob is available.\r\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\r\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\r\n\r\n                // Blob creation may take some time, so the caller may want to update the\r\n                // UI to indicate that an operation is in progress, even before the actual\r\n                // upload begins and an onUpload callback is invoked.\r\n                options.onUploadPrep(id);\r\n\r\n                log(\"Attempting to generate a blob on-demand for \" + id);\r\n                blob.create().then(function(generatedBlob) {\r\n                    log(\"Generated an on-demand blob for \" + id);\r\n\r\n                    // Update record associated with this file by providing the generated Blob\r\n                    handler.updateBlob(id, generatedBlob);\r\n\r\n                    // Propagate the size for this generated Blob\r\n                    options.setSize(id, generatedBlob.size);\r\n\r\n                    // Order handler to recalculate chunking possibility, if applicable\r\n                    handler.reevaluateChunking(id);\r\n\r\n                    upload.maybeSendDeferredFiles(id);\r\n                },\r\n\r\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\r\n                function(errorMessage) {\r\n                    var errorResponse = {};\r\n\r\n                    if (errorMessage) {\r\n                        errorResponse.error = errorMessage;\r\n                    }\r\n\r\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\r\n\r\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\r\n                    upload.maybeSendDeferredFiles(id);\r\n                    connectionManager.free(id);\r\n                });\r\n            }\r\n            else {\r\n                return upload.maybeSendDeferredFiles(id);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\r\n        maybeSendDeferredFiles: function(id) {\r\n            var idsInGroup = options.getIdsInProxyGroup(id),\r\n                uploadedThisId = false;\r\n\r\n            if (idsInGroup && idsInGroup.length) {\r\n                log(\"Maybe ready to upload proxy group file \" + id);\r\n\r\n                qq.each(idsInGroup, function(idx, idInGroup) {\r\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\r\n                        uploadedThisId = idInGroup === id;\r\n                        upload.now(idInGroup);\r\n                    }\r\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                uploadedThisId = true;\r\n                upload.now(id);\r\n            }\r\n\r\n            return uploadedThisId;\r\n        },\r\n\r\n        maybeNewUuid: function(id, response) {\r\n            if (response.newUuid !== undefined) {\r\n                options.onUuidChanged(id, response.newUuid);\r\n            }\r\n        },\r\n\r\n        // The response coming from handler implementations may be in various formats.\r\n        // Instead of hoping a promise nested 5 levels deep will always return an object\r\n        // as its first param, let's just normalize the response here.\r\n        normalizeResponse: function(originalResponse, successful) {\r\n            var response = originalResponse;\r\n\r\n            // The passed \"response\" param may not be a response at all.\r\n            // It could be a string, detailing the error, for example.\r\n            if (!qq.isObject(originalResponse)) {\r\n                response = {};\r\n\r\n                if (qq.isString(originalResponse) && !successful) {\r\n                    response.error = originalResponse;\r\n                }\r\n            }\r\n\r\n            response.success = successful;\r\n\r\n            return response;\r\n        },\r\n\r\n        now: function(id) {\r\n            var name = options.getName(id);\r\n\r\n            if (!controller.isValid(id)) {\r\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\r\n            }\r\n\r\n            options.onUpload(id, name);\r\n\r\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\r\n                chunked.sendNext(id);\r\n            }\r\n            else {\r\n                simple.send(id, name);\r\n            }\r\n        },\r\n\r\n        start: function(id) {\r\n            var blobToUpload = upload.getProxyOrBlob(id);\r\n\r\n            if (blobToUpload) {\r\n                return upload.maybeDefer(id, blobToUpload);\r\n            }\r\n            else {\r\n                upload.now(id);\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds file or file input to the queue\r\n         **/\r\n        add: function(id, file) {\r\n            handler.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id\r\n         */\r\n        upload: function(id) {\r\n            if (connectionManager.open(id)) {\r\n                return upload.start(id);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        retry: function(id) {\r\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\r\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\r\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\r\n            // any more failures at this point.\r\n            if (concurrentChunkingPossible) {\r\n                handler._getFileState(id).temp.ignoreFailure = false;\r\n            }\r\n\r\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\r\n            // Just go ahead and ask the handler to upload again.\r\n            if (connectionManager.isUsingConnection(id)) {\r\n                return upload.start(id);\r\n            }\r\n\r\n            // If we are attempting to retry a file that is not currently consuming a connection,\r\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\r\n            // before the retry commences.\r\n            else {\r\n                return controller.upload(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id) {\r\n            var cancelRetVal = handler.cancel(id);\r\n\r\n            if (qq.isGenericPromise(cancelRetVal)) {\r\n                cancelRetVal.then(function() {\r\n                    upload.cancel(id);\r\n                });\r\n            }\r\n            else if (cancelRetVal !== false) {\r\n                upload.cancel(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels all queued or in-progress uploads\r\n         */\r\n        cancelAll: function() {\r\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\r\n                i;\r\n\r\n            // ensure files are cancelled in reverse order which they were added\r\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\r\n            if (waitingOrConnected.length) {\r\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\r\n                    controller.cancel(waitingOrConnected[i]);\r\n                }\r\n            }\r\n\r\n            connectionManager.reset();\r\n        },\r\n\r\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\r\n        // Undefined if no file record is available.\r\n        getFile: function(id) {\r\n            if (handler.getProxy && handler.getProxy(id)) {\r\n                return handler.getProxy(id).referenceBlob;\r\n            }\r\n\r\n            return handler.getFile && handler.getFile(id);\r\n        },\r\n\r\n        // Returns true if the Blob associated with the ID is related to a proxy s\r\n        isProxied: function(id) {\r\n            return !!(handler.getProxy && handler.getProxy(id));\r\n        },\r\n\r\n        getInput: function(id) {\r\n            if (handler.getInput) {\r\n                return handler.getInput(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            log(\"Resetting upload handler\");\r\n            controller.cancelAll();\r\n            connectionManager.reset();\r\n            handler.reset();\r\n        },\r\n\r\n        expunge: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.expunge(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Determine if the file exists.\r\n         */\r\n        isValid: function(id) {\r\n            return handler.isValid(id);\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            if (handler.getResumableFilesData) {\r\n                return handler.getResumableFilesData();\r\n            }\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\r\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\r\n         * will be undefined.\r\n         *\r\n         * @param id Internal file ID\r\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\r\n         */\r\n        getThirdPartyFileId: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.getThirdPartyFileId(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\r\n         * @param id ID of the upload/file to pause\r\n         * @returns {boolean} true if the upload was paused\r\n         */\r\n        pause: function(id) {\r\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\r\n                connectionManager.free(id);\r\n                handler.moveInProgressToRemaining(id);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // True if the file is eligible for pause/resume.\r\n        isResumable: function(id) {\r\n            return !!handler.isResumable && handler.isResumable(id);\r\n        }\r\n    });\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\r\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\r\n\r\n    preventRetryResponse = (function() {\r\n        var response = {};\r\n\r\n        response[options.preventRetryParam] = true;\r\n\r\n        return response;\r\n    }());\r\n\r\n    upload.initHandler();\r\n};\r\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            params[spec.chunking.paramNames.partIndex] = chunkData.part;\n            params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n            params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n            params[spec.chunking.paramNames.totalParts] = chunkData.count;\n            params[spec.totalFileSizeName] = size;\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            log: log\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                !response.success ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(params, xhr, fileOrBlob, id) {\n            var formData = new FormData(),\n                method = spec.method,\n                endpoint = spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n\n            if (multipart) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(id, xhr) {\n            var extraHeaders = spec.customHeaders.get(id),\n                fileOrBlob = handler.getFile(id);\n\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n            if (!multipart) {\n                xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n            }\n\n            qq.each(extraHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx, resuming) {\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                size = getSize(id),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend(params, xhr, chunkData.blob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n            toSend = setParamsAndGetEntityToSend(params, xhr, fileOrBlob, id);\n            setUploadHeaders(id, xhr);\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"POST\",\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {}\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [method],\n        method: method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(params)\n                .withHeaders(headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Defines the public API for FineUploader mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.uiPublicApi = {\r\n        addInitialFiles: function(cannedFileList) {\r\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\r\n            this._templating.addCacheToDom();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\r\n            this._templating.clearFiles();\r\n        },\r\n\r\n        addExtraDropzone: function(element) {\r\n            this._dnd && this._dnd.setupExtraDropzone(element);\r\n        },\r\n\r\n        removeExtraDropzone: function(element) {\r\n            if (this._dnd) {\r\n                return this._dnd.removeDropzone(element);\r\n            }\r\n        },\r\n\r\n        getItemByFileId: function(id) {\r\n            if (!this._templating.isHiddenForever(id)) {\r\n                return this._templating.getFileContainer(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            this._parent.prototype.reset.apply(this, arguments);\r\n            this._templating.reset();\r\n\r\n            if (!this._options.button && this._templating.getButton()) {\r\n                this._defaultButtonId = this._createUploadButton({\r\n                    element: this._templating.getButton(),\r\n                    title: this._options.text.fileInputTitle\r\n                }).getButtonId();\r\n            }\r\n\r\n            if (this._dnd) {\r\n                this._dnd.dispose();\r\n                this._dnd = this._setupDragAndDrop();\r\n            }\r\n\r\n            this._totalFilesInBatch = 0;\r\n            this._filesInBatchAddedToUi = 0;\r\n\r\n            this._setupClickAndEditEventHandlers();\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            var formattedFilename = this._options.formatFileName(newName);\r\n\r\n            this._parent.prototype.setName.apply(this, arguments);\r\n            this._templating.updateFilename(id, formattedFilename);\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\r\n\r\n            paused && this._templating.uploadPaused(id);\r\n            return paused;\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\r\n\r\n            continued && this._templating.uploadContinued(id);\r\n            return continued;\r\n        },\r\n\r\n        getId: function(fileContainerOrChildEl) {\r\n            return this._templating.getFileId(fileContainerOrChildEl);\r\n        },\r\n\r\n        getDropTarget: function(fileId) {\r\n            var file = this.getFile(fileId);\r\n\r\n            return file.qqDropTarget;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploader mode.\r\n     */\r\n    qq.uiPrivateApi = {\r\n        _getButton: function(buttonId) {\r\n            var button = this._parent.prototype._getButton.apply(this, arguments);\r\n\r\n            if (!button) {\r\n                if (buttonId === this._defaultButtonId) {\r\n                    button = this._templating.getButton();\r\n                }\r\n            }\r\n\r\n            return button;\r\n        },\r\n\r\n        _removeFileItem: function(fileId) {\r\n            this._templating.removeFile(fileId);\r\n        },\r\n\r\n        _setupClickAndEditEventHandlers: function() {\r\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\r\n\r\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\r\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\r\n            this._focusinEventSupported = !qq.firefox();\r\n\r\n            if (this._isEditFilenameEnabled())\r\n            {\r\n                this._filenameClickHandler = this._bindFilenameClickEvent();\r\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\r\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\r\n            }\r\n        },\r\n\r\n        _setupDragAndDrop: function() {\r\n            var self = this,\r\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\r\n                templating = this._templating,\r\n                defaultDropZone = templating.getDropZone();\r\n\r\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\r\n\r\n            return new qq.DragAndDrop({\r\n                dropZoneElements: dropZoneElements,\r\n                allowMultipleItems: this._options.multiple,\r\n                classes: {\r\n                    dropActive: this._options.classes.dropActive\r\n                },\r\n                callbacks: {\r\n                    processingDroppedFiles: function() {\r\n                        templating.showDropProcessing();\r\n                    },\r\n                    processingDroppedFilesComplete: function(files, targetEl) {\r\n                        templating.hideDropProcessing();\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            file.qqDropTarget = targetEl;\r\n                        });\r\n\r\n                        if (files.length) {\r\n                            self.addFiles(files, null, null);\r\n                        }\r\n                    },\r\n                    dropError: function(code, errorData) {\r\n                        self._itemError(code, errorData);\r\n                    },\r\n                    dropLog: function(message, level) {\r\n                        self.log(message, level);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _bindFileButtonsClickEvent: function() {\r\n            var self = this;\r\n\r\n            return new qq.FileButtonsClickHandler({\r\n                templating: this._templating,\r\n\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n\r\n                onDeleteFile: function(fileId) {\r\n                    self.deleteFile(fileId);\r\n                },\r\n\r\n                onCancel: function(fileId) {\r\n                    self.cancel(fileId);\r\n                },\r\n\r\n                onRetry: function(fileId) {\r\n                    self.retry(fileId);\r\n                },\r\n\r\n                onPause: function(fileId) {\r\n                    self.pauseUpload(fileId);\r\n                },\r\n\r\n                onContinue: function(fileId) {\r\n                    self.continueUpload(fileId);\r\n                },\r\n\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                }\r\n            });\r\n        },\r\n\r\n        _isEditFilenameEnabled: function() {\r\n            /*jshint -W014 */\r\n            return this._templating.isEditFilenamePossible()\r\n                && !this._options.autoUpload\r\n                && qq.FilenameClickHandler\r\n                && qq.FilenameInputFocusHandler\r\n                && qq.FilenameInputFocusHandler;\r\n        },\r\n\r\n        _filenameEditHandler: function() {\r\n            var self = this,\r\n                templating = this._templating;\r\n\r\n            return {\r\n                templating: templating,\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n                onGetUploadStatus: function(fileId) {\r\n                    return self.getUploads({id: fileId}).status;\r\n                },\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                },\r\n                onSetName: function(id, newName) {\r\n                    self.setName(id, newName);\r\n                },\r\n                onEditingStatusChange: function(id, isEditing) {\r\n                    var qqInput = qq(templating.getEditInput(id)),\r\n                        qqFileContainer = qq(templating.getFileContainer(id));\r\n\r\n                    if (isEditing) {\r\n                        qqInput.addClass(\"qq-editing\");\r\n                        templating.hideFilename(id);\r\n                        templating.hideEditIcon(id);\r\n                    }\r\n                    else {\r\n                        qqInput.removeClass(\"qq-editing\");\r\n                        templating.showFilename(id);\r\n                        templating.showEditIcon(id);\r\n                    }\r\n\r\n                    // Force IE8 and older to repaint\r\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\r\n                }\r\n            };\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\r\n\r\n            if (this._isEditFilenameEnabled()) {\r\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\r\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\r\n                    this._templating.markFilenameEditable(id);\r\n                    this._templating.hideEditIcon(id);\r\n                }\r\n            }\r\n\r\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\r\n                this._templating.hideRetry(id);\r\n                this._templating.setStatusText(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\r\n            }\r\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\r\n                this._templating.hidePause(id);\r\n            }\r\n        },\r\n\r\n        _bindFilenameInputFocusInEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusInHandler(spec);\r\n        },\r\n\r\n        _bindFilenameInputFocusEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusHandler(spec);\r\n        },\r\n\r\n        _bindFilenameClickEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameClickHandler(spec);\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._parent.prototype._storeForLater.apply(this, arguments);\r\n            this._templating.hideSpinner(id);\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._parent.prototype._onAllComplete.apply(this, arguments);\r\n            this._templating.resetTotalProgress();\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            var file = this.getFile(id);\r\n\r\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\r\n                this._paramsStore.addReadOnly(id, {\r\n                    qqpath: file.qqPath\r\n                });\r\n            }\r\n\r\n            this._parent.prototype._onSubmit.apply(this, arguments);\r\n            this._addToList(id, name);\r\n        },\r\n\r\n        // The file item has been added to the DOM.\r\n        _onSubmitted: function(id) {\r\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\r\n            if (this._isEditFilenameEnabled()) {\r\n                this._templating.markFilenameEditable(id);\r\n                this._templating.showEditIcon(id);\r\n\r\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\r\n                if (!this._focusinEventSupported) {\r\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\r\n                }\r\n            }\r\n        },\r\n\r\n        // Update the progress bar & percentage as the file is uploaded\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._parent.prototype._onProgress.apply(this, arguments);\r\n\r\n            this._templating.updateProgress(id, loaded, total);\r\n\r\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\r\n                this._templating.hideCancel(id);\r\n                this._templating.hidePause(id);\r\n                this._templating.hideProgress(id);\r\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\r\n\r\n                // If ~last byte was sent, display total file size\r\n                this._displayFileSize(id);\r\n            }\r\n            else {\r\n                // If still uploading, display percentage - total size is actually the total request(s) size\r\n                this._displayFileSize(id, loaded, total);\r\n            }\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\r\n            this._templating.updateTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\r\n                templating = this._templating,\r\n                fileContainer = templating.getFileContainer(id),\r\n                self = this;\r\n\r\n            function completeUpload(result) {\r\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\r\n                // If so, don't perform any UI-related tasks related to this file.\r\n                if (!fileContainer) {\r\n                    return;\r\n                }\r\n\r\n                templating.setStatusText(id);\r\n\r\n                qq(fileContainer).removeClass(self._classes.retrying);\r\n                templating.hideProgress(id);\r\n\r\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\r\n                    templating.hideCancel(id);\r\n                }\r\n                templating.hideSpinner(id);\r\n\r\n                if (result.success) {\r\n                    self._markFileAsSuccessful(id);\r\n                }\r\n                else {\r\n                    qq(fileContainer).addClass(self._classes.fail);\r\n                    templating.showCancel(id);\r\n\r\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\r\n                        qq(fileContainer).addClass(self._classes.retryable);\r\n                        templating.showRetry(id);\r\n                    }\r\n                    self._controlFailureTextDisplay(id, result);\r\n                }\r\n            }\r\n\r\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\r\n            if (parentRetVal instanceof qq.Promise) {\r\n                parentRetVal.done(function(newResult) {\r\n                    completeUpload(newResult);\r\n                });\r\n\r\n            }\r\n            else {\r\n                completeUpload(result);\r\n            }\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _markFileAsSuccessful: function(id) {\r\n            var templating = this._templating;\r\n\r\n            if (this._isDeletePossible()) {\r\n                templating.showDeleteButton(id);\r\n            }\r\n\r\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\r\n\r\n            this._maybeUpdateThumbnail(id);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\r\n            this._templating.showSpinner(id);\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\r\n\r\n            this._templating.showSpinner(id);\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\r\n\r\n            // Only display the pause button if we have finished uploading at least one chunk\r\n            // & this file can be resumed\r\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\r\n                this._templating.allowPause(id);\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._parent.prototype._onCancel.apply(this, arguments);\r\n            this._removeFileItem(id);\r\n\r\n            if (this._getNotFinished() === 0) {\r\n                this._templating.resetTotalProgress();\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id) {\r\n            var retryNumForDisplay, maxAuto, retryNote;\r\n\r\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\r\n\r\n            this._showCancelLink(id);\r\n\r\n            if (this._options.retry.showAutoRetryNote) {\r\n                retryNumForDisplay = this._autoRetries[id];\r\n                maxAuto = this._options.retry.maxAutoAttempts;\r\n\r\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\r\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\r\n\r\n                this._templating.setStatusText(id, retryNote);\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\r\n            }\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\r\n                this._templating.resetProgress(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\r\n                this._templating.setStatusText(id);\r\n                this._templating.showSpinner(id);\r\n                this._showCancelLink(id);\r\n                return true;\r\n            }\r\n            else {\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\r\n                this._templating.showRetry(id);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id) {\r\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\r\n\r\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\r\n        },\r\n\r\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\r\n            if (this._options.deleteFile.forceConfirm) {\r\n                this._showDeleteConfirm.apply(this, arguments);\r\n            }\r\n            else {\r\n                this._sendDeleteRequest.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhr, isError) {\r\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\r\n\r\n            this._templating.hideSpinner(id);\r\n\r\n            if (isError) {\r\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\r\n                this._templating.showDeleteButton(id);\r\n            }\r\n            else {\r\n                this._removeFileItem(id);\r\n            }\r\n        },\r\n\r\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\r\n            this._templating.hideDeleteButton(id);\r\n            this._templating.showSpinner(id);\r\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\r\n            this._deleteHandler.sendDelete.apply(this, arguments);\r\n        },\r\n\r\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\r\n            /*jshint -W004 */\r\n            var fileName = this.getName(id),\r\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\r\n                uuid = this.getUuid(id),\r\n                deleteRequestArgs = arguments,\r\n                self = this,\r\n                retVal;\r\n\r\n            retVal = this._options.showConfirm(confirmMessage);\r\n\r\n            if (qq.isGenericPromise(retVal)) {\r\n                retVal.then(function() {\r\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n                });\r\n            }\r\n            else if (retVal !== false) {\r\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n            }\r\n        },\r\n\r\n        _addToList: function(id, name, canned) {\r\n            var prependData,\r\n                prependIndex = 0,\r\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\r\n                record;\r\n\r\n            if (this._options.display.prependFiles) {\r\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\r\n                    prependIndex = this._filesInBatchAddedToUi - 1;\r\n                }\r\n\r\n                prependData = {\r\n                    index: prependIndex\r\n                };\r\n            }\r\n\r\n            if (!canned) {\r\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\r\n                    this._templating.disableCancel();\r\n                }\r\n\r\n                // Cancel all existing (previous) files and clear the list if this file is not part of\r\n                // a scaled file group that has already been accepted, or if this file is not part of\r\n                // a scaled file group at all.\r\n                if (!this._options.multiple) {\r\n                    record = this.getUploads({id: id});\r\n\r\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\r\n\r\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\r\n                        this._handler.cancelAll();\r\n                        this._clearList();\r\n                        this._handledProxyGroup = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (canned) {\r\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\r\n            }\r\n            else {\r\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\r\n            }\r\n\r\n            this._filesInBatchAddedToUi += 1;\r\n\r\n            if (canned ||\r\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\r\n\r\n                this._displayFileSize(id);\r\n            }\r\n        },\r\n\r\n        _clearList: function() {\r\n            this._templating.clearFiles();\r\n            this.clearStoredFiles();\r\n        },\r\n\r\n        _displayFileSize: function(id, loadedSize, totalSize) {\r\n            var size = this.getSize(id),\r\n                sizeForDisplay = this._formatSize(size);\r\n\r\n            if (size >= 0) {\r\n                if (loadedSize !== undefined && totalSize !== undefined) {\r\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\r\n                }\r\n\r\n                this._templating.updateSize(id, sizeForDisplay);\r\n            }\r\n        },\r\n\r\n        _formatProgress: function(uploadedSize, totalSize) {\r\n            var message = this._options.text.formatProgress;\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\r\n            r(\"{total_size}\", this._formatSize(totalSize));\r\n            return message;\r\n        },\r\n\r\n        _controlFailureTextDisplay: function(id, response) {\r\n            var mode, responseProperty, failureReason;\r\n\r\n            mode = this._options.failedUploadTextDisplay.mode;\r\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\r\n\r\n            if (mode === \"custom\") {\r\n                failureReason = response[responseProperty];\r\n                if (!failureReason) {\r\n                    failureReason = this._options.text.failUpload;\r\n                }\r\n\r\n                this._templating.setStatusText(id, failureReason);\r\n\r\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\r\n                    this._showTooltip(id, failureReason);\r\n                }\r\n            }\r\n            else if (mode === \"default\") {\r\n                this._templating.setStatusText(id, this._options.text.failUpload);\r\n            }\r\n            else if (mode !== \"none\") {\r\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\r\n            }\r\n        },\r\n\r\n        _showTooltip: function(id, text) {\r\n            this._templating.getFileContainer(id).title = text;\r\n        },\r\n\r\n        _showCancelLink: function(id) {\r\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\r\n                this._templating.showCancel(id);\r\n            }\r\n        },\r\n\r\n        _itemError: function(code, name, item) {\r\n            var message = this._parent.prototype._itemError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._parent.prototype._batchError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _setupPastePrompt: function() {\r\n            var self = this;\r\n\r\n            this._options.callbacks.onPasteReceived = function() {\r\n                var message = self._options.paste.namePromptMessage,\r\n                    defaultVal = self._options.paste.defaultName;\r\n\r\n                return self._options.showPrompt(message, defaultVal);\r\n            };\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id, name) {\r\n            this._totalFilesInBatch -= 1;\r\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            this._totalFilesInBatch = items.length;\r\n            this._filesInBatchAddedToUi = 0;\r\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\r\n        },\r\n\r\n        _maybeUpdateThumbnail: function(fileId) {\r\n            var thumbnailUrl = this._thumbnailUrls[fileId],\r\n                fileStatus = this.getUploads({id: fileId}).status;\r\n\r\n            if (fileStatus !== qq.status.DELETED &&\r\n                (thumbnailUrl ||\r\n                this._options.thumbnails.placeholders.waitUntilResponse ||\r\n                !qq.supportedFeatures.imagePreviews)) {\r\n\r\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\r\n                // if called with a null thumbnailUrl.\r\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\r\n            }\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\r\n\r\n            this._addToList(id, this.getName(id), true);\r\n            this._templating.hideSpinner(id);\r\n            this._templating.hideCancel(id);\r\n            this._markFileAsSuccessful(id);\r\n\r\n            return id;\r\n        },\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._parent.prototype._setSize.apply(this, arguments);\r\n\r\n            this._templating.updateSize(id, this._formatSize(newSize));\r\n        },\r\n\r\n        _sessionRequestComplete: function() {\r\n            this._templating.addCacheToDom();\r\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n/**\r\n * CryptoJS core components.\r\n */\r\nqq.CryptoJS = (function (Math, undefined) {\r\n    /**\r\n     * CryptoJS namespace.\r\n     */\r\n    var C = {};\r\n\r\n    /**\r\n     * Library namespace.\r\n     */\r\n    var C_lib = C.lib = {};\r\n\r\n    /**\r\n     * Base object for prototypal inheritance.\r\n     */\r\n    var Base = C_lib.Base = (function () {\r\n        function F() {}\r\n\r\n        return {\r\n            /**\r\n             * Creates a new object that inherits from this object.\r\n             *\r\n             * @param {Object} overrides Properties to copy into the new object.\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         field: 'value',\r\n             *\r\n             *         method: function () {\r\n             *         }\r\n             *     });\r\n             */\r\n            extend: function (overrides) {\r\n                // Spawn\r\n                F.prototype = this;\r\n                var subtype = new F();\r\n\r\n                // Augment\r\n                if (overrides) {\r\n                    subtype.mixIn(overrides);\r\n                }\r\n\r\n                // Create default initializer\r\n                if (!subtype.hasOwnProperty('init')) {\r\n                    subtype.init = function () {\r\n                        subtype.$super.init.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                // Initializer's prototype is the subtype object\r\n                subtype.init.prototype = subtype;\r\n\r\n                // Reference supertype\r\n                subtype.$super = this;\r\n\r\n                return subtype;\r\n            },\r\n\r\n            /**\r\n             * Extends this object and runs the init method.\r\n             * Arguments to create() will be passed to init().\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var instance = MyType.create();\r\n             */\r\n            create: function () {\r\n                var instance = this.extend();\r\n                instance.init.apply(instance, arguments);\r\n\r\n                return instance;\r\n            },\r\n\r\n            /**\r\n             * Initializes a newly created object.\r\n             * Override this method to add some logic when your objects are created.\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         init: function () {\r\n             *             // ...\r\n             *         }\r\n             *     });\r\n             */\r\n            init: function () {\r\n            },\r\n\r\n            /**\r\n             * Copies properties into this object.\r\n             *\r\n             * @param {Object} properties The properties to mix in.\r\n             *\r\n             * @example\r\n             *\r\n             *     MyType.mixIn({\r\n             *         field: 'value'\r\n             *     });\r\n             */\r\n            mixIn: function (properties) {\r\n                for (var propertyName in properties) {\r\n                    if (properties.hasOwnProperty(propertyName)) {\r\n                        this[propertyName] = properties[propertyName];\r\n                    }\r\n                }\r\n\r\n                // IE won't copy toString using the loop above\r\n                if (properties.hasOwnProperty('toString')) {\r\n                    this.toString = properties.toString;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Creates a copy of this object.\r\n             *\r\n             * @return {Object} The clone.\r\n             *\r\n             * @example\r\n             *\r\n             *     var clone = instance.clone();\r\n             */\r\n            clone: function () {\r\n                return this.init.prototype.extend(this);\r\n            }\r\n        };\r\n    }());\r\n\r\n    /**\r\n     * An array of 32-bit words.\r\n     *\r\n     * @property {Array} words The array of 32-bit words.\r\n     * @property {number} sigBytes The number of significant bytes in this word array.\r\n     */\r\n    var WordArray = C_lib.WordArray = Base.extend({\r\n        /**\r\n         * Initializes a newly created word array.\r\n         *\r\n         * @param {Array} words (Optional) An array of 32-bit words.\r\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.create();\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n         */\r\n        init: function (words, sigBytes) {\r\n            words = this.words = words || [];\r\n\r\n            if (sigBytes != undefined) {\r\n                this.sigBytes = sigBytes;\r\n            } else {\r\n                this.sigBytes = words.length * 4;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts this word array to a string.\r\n         *\r\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n         *\r\n         * @return {string} The stringified word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     var string = wordArray + '';\r\n         *     var string = wordArray.toString();\r\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n         */\r\n        toString: function (encoder) {\r\n            return (encoder || Hex).stringify(this);\r\n        },\r\n\r\n        /**\r\n         * Concatenates a word array to this word array.\r\n         *\r\n         * @param {WordArray} wordArray The word array to append.\r\n         *\r\n         * @return {WordArray} This word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray1.concat(wordArray2);\r\n         */\r\n        concat: function (wordArray) {\r\n            // Shortcuts\r\n            var thisWords = this.words;\r\n            var thatWords = wordArray.words;\r\n            var thisSigBytes = this.sigBytes;\r\n            var thatSigBytes = wordArray.sigBytes;\r\n\r\n            // Clamp excess bits\r\n            this.clamp();\r\n\r\n            // Concat\r\n            if (thisSigBytes % 4) {\r\n                // Copy one byte at a time\r\n                for (var i = 0; i < thatSigBytes; i++) {\r\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n                }\r\n            } else if (thatWords.length > 0xffff) {\r\n                // Copy one word at a time\r\n                for (var i = 0; i < thatSigBytes; i += 4) {\r\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n                }\r\n            } else {\r\n                // Copy all words at once\r\n                thisWords.push.apply(thisWords, thatWords);\r\n            }\r\n            this.sigBytes += thatSigBytes;\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes insignificant bits.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray.clamp();\r\n         */\r\n        clamp: function () {\r\n            // Shortcuts\r\n            var words = this.words;\r\n            var sigBytes = this.sigBytes;\r\n\r\n            // Clamp\r\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n            words.length = Math.ceil(sigBytes / 4);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this word array.\r\n         *\r\n         * @return {WordArray} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = wordArray.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone.words = this.words.slice(0);\r\n\r\n            return clone;\r\n        },\r\n\r\n        /**\r\n         * Creates a word array filled with random bytes.\r\n         *\r\n         * @param {number} nBytes The number of random bytes to generate.\r\n         *\r\n         * @return {WordArray} The random word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n         */\r\n        random: function (nBytes) {\r\n            var words = [];\r\n            for (var i = 0; i < nBytes; i += 4) {\r\n                words.push((Math.random() * 0x100000000) | 0);\r\n            }\r\n\r\n            return new WordArray.init(words, nBytes);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Encoder namespace.\r\n     */\r\n    var C_enc = C.enc = {};\r\n\r\n    /**\r\n     * Hex encoding strategy.\r\n     */\r\n    var Hex = C_enc.Hex = {\r\n        /**\r\n         * Converts a word array to a hex string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The hex string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var hexChars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                hexChars.push((bite >>> 4).toString(16));\r\n                hexChars.push((bite & 0x0f).toString(16));\r\n            }\r\n\r\n            return hexChars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a hex string to a word array.\r\n         *\r\n         * @param {string} hexStr The hex string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n         */\r\n        parse: function (hexStr) {\r\n            // Shortcut\r\n            var hexStrLength = hexStr.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < hexStrLength; i += 2) {\r\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n            }\r\n\r\n            return new WordArray.init(words, hexStrLength / 2);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Latin1 encoding strategy.\r\n     */\r\n    var Latin1 = C_enc.Latin1 = {\r\n        /**\r\n         * Converts a word array to a Latin1 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Latin1 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var latin1Chars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                latin1Chars.push(String.fromCharCode(bite));\r\n            }\r\n\r\n            return latin1Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Latin1 string to a word array.\r\n         *\r\n         * @param {string} latin1Str The Latin1 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n         */\r\n        parse: function (latin1Str) {\r\n            // Shortcut\r\n            var latin1StrLength = latin1Str.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < latin1StrLength; i++) {\r\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            return new WordArray.init(words, latin1StrLength);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * UTF-8 encoding strategy.\r\n     */\r\n    var Utf8 = C_enc.Utf8 = {\r\n        /**\r\n         * Converts a word array to a UTF-8 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The UTF-8 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            try {\r\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n            } catch (e) {\r\n                throw new Error('Malformed UTF-8 data');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts a UTF-8 string to a word array.\r\n         *\r\n         * @param {string} utf8Str The UTF-8 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n         */\r\n        parse: function (utf8Str) {\r\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Abstract buffered block algorithm template.\r\n     *\r\n     * The property blockSize must be implemented in a concrete subtype.\r\n     *\r\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n     */\r\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n        /**\r\n         * Resets this block algorithm's data buffer to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm.reset();\r\n         */\r\n        reset: function () {\r\n            // Initial values\r\n            this._data = new WordArray.init();\r\n            this._nDataBytes = 0;\r\n        },\r\n\r\n        /**\r\n         * Adds new data to this block algorithm's buffer.\r\n         *\r\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm._append('data');\r\n         *     bufferedBlockAlgorithm._append(wordArray);\r\n         */\r\n        _append: function (data) {\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof data == 'string') {\r\n                data = Utf8.parse(data);\r\n            }\r\n\r\n            // Append\r\n            this._data.concat(data);\r\n            this._nDataBytes += data.sigBytes;\r\n        },\r\n\r\n        /**\r\n         * Processes available data blocks.\r\n         *\r\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n         *\r\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n         *\r\n         * @return {WordArray} The processed data.\r\n         *\r\n         * @example\r\n         *\r\n         *     var processedData = bufferedBlockAlgorithm._process();\r\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n         */\r\n        _process: function (doFlush) {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n            var dataSigBytes = data.sigBytes;\r\n            var blockSize = this.blockSize;\r\n            var blockSizeBytes = blockSize * 4;\r\n\r\n            // Count blocks ready\r\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\r\n            if (doFlush) {\r\n                // Round up to include partial blocks\r\n                nBlocksReady = Math.ceil(nBlocksReady);\r\n            } else {\r\n                // Round down to include only full blocks,\r\n                // less the number of blocks that must remain in the buffer\r\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n            }\r\n\r\n            // Count words ready\r\n            var nWordsReady = nBlocksReady * blockSize;\r\n\r\n            // Count bytes ready\r\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n            // Process blocks\r\n            if (nWordsReady) {\r\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n                    // Perform concrete-algorithm logic\r\n                    this._doProcessBlock(dataWords, offset);\r\n                }\r\n\r\n                // Remove processed words\r\n                var processedWords = dataWords.splice(0, nWordsReady);\r\n                data.sigBytes -= nBytesReady;\r\n            }\r\n\r\n            // Return processed words\r\n            return new WordArray.init(processedWords, nBytesReady);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this object.\r\n         *\r\n         * @return {Object} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = bufferedBlockAlgorithm.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone._data = this._data.clone();\r\n\r\n            return clone;\r\n        },\r\n\r\n        _minBufferSize: 0\r\n    });\r\n\r\n    /**\r\n     * Abstract hasher template.\r\n     *\r\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n     */\r\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n        /**\r\n         * Configuration options.\r\n         */\r\n        cfg: Base.extend(),\r\n\r\n        /**\r\n         * Initializes a newly created hasher.\r\n         *\r\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hasher = CryptoJS.algo.SHA256.create();\r\n         */\r\n        init: function (cfg) {\r\n            // Apply config defaults\r\n            this.cfg = this.cfg.extend(cfg);\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this hasher to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Reset data buffer\r\n            BufferedBlockAlgorithm.reset.call(this);\r\n\r\n            // Perform concrete-hasher logic\r\n            this._doReset();\r\n        },\r\n\r\n        /**\r\n         * Updates this hasher with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {Hasher} This hasher.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.update('message');\r\n         *     hasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            // Append\r\n            this._append(messageUpdate);\r\n\r\n            // Update the hash\r\n            this._process();\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the hash computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The hash.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hash = hasher.finalize();\r\n         *     var hash = hasher.finalize('message');\r\n         *     var hash = hasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Final message update\r\n            if (messageUpdate) {\r\n                this._append(messageUpdate);\r\n            }\r\n\r\n            // Perform concrete-hasher logic\r\n            var hash = this._doFinalize();\r\n\r\n            return hash;\r\n        },\r\n\r\n        blockSize: 512/32,\r\n\r\n        /**\r\n         * Creates a shortcut function to a hasher's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to create a helper for.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHelper: function (hasher) {\r\n            return function (message, cfg) {\r\n                return new hasher.init(cfg).finalize(message);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Creates a shortcut function to the HMAC's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHmacHelper: function (hasher) {\r\n            return function (message, key) {\r\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\r\n            };\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Algorithm namespace.\r\n     */\r\n    var C_algo = C.algo = {};\r\n\r\n    return C;\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var C_enc = C.enc;\r\n\r\n    /**\r\n     * Base64 encoding strategy.\r\n     */\r\n    var Base64 = C_enc.Base64 = {\r\n        /**\r\n         * Converts a word array to a Base64 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Base64 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n            var map = this._map;\r\n\r\n            // Clamp excess bits\r\n            wordArray.clamp();\r\n\r\n            // Convert\r\n            var base64Chars = [];\r\n            for (var i = 0; i < sigBytes; i += 3) {\r\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\r\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n                }\r\n            }\r\n\r\n            // Add padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                while (base64Chars.length % 4) {\r\n                    base64Chars.push(paddingChar);\r\n                }\r\n            }\r\n\r\n            return base64Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Base64 string to a word array.\r\n         *\r\n         * @param {string} base64Str The Base64 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n         */\r\n        parse: function (base64Str) {\r\n            // Shortcuts\r\n            var base64StrLength = base64Str.length;\r\n            var map = this._map;\r\n\r\n            // Ignore padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                var paddingIndex = base64Str.indexOf(paddingChar);\r\n                if (paddingIndex != -1) {\r\n                    base64StrLength = paddingIndex;\r\n                }\r\n            }\r\n\r\n            // Convert\r\n            var words = [];\r\n            var nBytes = 0;\r\n            for (var i = 0; i < base64StrLength; i++) {\r\n                if (i % 4) {\r\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\r\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\r\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n                    nBytes++;\r\n                }\r\n            }\r\n\r\n            return WordArray.create(words, nBytes);\r\n        },\r\n\r\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n    };\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var Base = C_lib.Base;\r\n    var C_enc = C.enc;\r\n    var Utf8 = C_enc.Utf8;\r\n    var C_algo = C.algo;\r\n\r\n    /**\r\n     * HMAC algorithm.\r\n     */\r\n    var HMAC = C_algo.HMAC = Base.extend({\r\n        /**\r\n         * Initializes a newly created HMAC.\r\n         *\r\n         * @param {Hasher} hasher The hash algorithm to use.\r\n         * @param {WordArray|string} key The secret key.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\r\n         */\r\n        init: function (hasher, key) {\r\n            // Init hasher\r\n            hasher = this._hasher = new hasher.init();\r\n\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof key == 'string') {\r\n                key = Utf8.parse(key);\r\n            }\r\n\r\n            // Shortcuts\r\n            var hasherBlockSize = hasher.blockSize;\r\n            var hasherBlockSizeBytes = hasherBlockSize * 4;\r\n\r\n            // Allow arbitrary length keys\r\n            if (key.sigBytes > hasherBlockSizeBytes) {\r\n                key = hasher.finalize(key);\r\n            }\r\n\r\n            // Clamp excess bits\r\n            key.clamp();\r\n\r\n            // Clone key for inner and outer pads\r\n            var oKey = this._oKey = key.clone();\r\n            var iKey = this._iKey = key.clone();\r\n\r\n            // Shortcuts\r\n            var oKeyWords = oKey.words;\r\n            var iKeyWords = iKey.words;\r\n\r\n            // XOR keys with pad constants\r\n            for (var i = 0; i < hasherBlockSize; i++) {\r\n                oKeyWords[i] ^= 0x5c5c5c5c;\r\n                iKeyWords[i] ^= 0x36363636;\r\n            }\r\n            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this HMAC to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Reset\r\n            hasher.reset();\r\n            hasher.update(this._iKey);\r\n        },\r\n\r\n        /**\r\n         * Updates this HMAC with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {HMAC} This HMAC instance.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.update('message');\r\n         *     hmacHasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            this._hasher.update(messageUpdate);\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the HMAC computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The HMAC.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmac = hmacHasher.finalize();\r\n         *     var hmac = hmacHasher.finalize('message');\r\n         *     var hmac = hmacHasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Compute HMAC\r\n            var innerHash = hasher.finalize(messageUpdate);\r\n            hasher.reset();\r\n            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\r\n\r\n            return hmac;\r\n        }\r\n    });\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-1 hash algorithm.\r\n     */\r\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init([\r\n                0x67452301, 0xefcdab89,\r\n                0x98badcfe, 0x10325476,\r\n                0xc3d2e1f0\r\n            ]);\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 80; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n                    W[i] = (n << 1) | (n >>> 31);\r\n                }\r\n\r\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n                if (i < 20) {\r\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\r\n                } else if (i < 40) {\r\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\r\n                } else if (i < 60) {\r\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n                } else /* if (i < 80) */ {\r\n                    t += (b ^ c ^ d) - 0x359d3e2a;\r\n                }\r\n\r\n                e = d;\r\n                d = c;\r\n                c = (b << 30) | (b >>> 2);\r\n                b = a;\r\n                a = t;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA1('message');\r\n     *     var hash = CryptoJS.SHA1(wordArray);\r\n     */\r\n    C.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n     */\r\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function (Math) {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Initialization and round constants tables\r\n    var H = [];\r\n    var K = [];\r\n\r\n    // Compute constants\r\n    (function () {\r\n        function isPrime(n) {\r\n            var sqrtN = Math.sqrt(n);\r\n            for (var factor = 2; factor <= sqrtN; factor++) {\r\n                if (!(n % factor)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFractionalBits(n) {\r\n            return ((n - (n | 0)) * 0x100000000) | 0;\r\n        }\r\n\r\n        var n = 2;\r\n        var nPrime = 0;\r\n        while (nPrime < 64) {\r\n            if (isPrime(n)) {\r\n                if (nPrime < 8) {\r\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n                }\r\n                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    }());\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-256 hash algorithm.\r\n     */\r\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init(H.slice(0));\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n            var f = H[5];\r\n            var g = H[6];\r\n            var h = H[7];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 64; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var gamma0x = W[i - 15];\r\n                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n                                   (gamma0x >>> 3);\r\n\r\n                    var gamma1x = W[i - 2];\r\n                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n                                   (gamma1x >>> 10);\r\n\r\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n                }\r\n\r\n                var ch  = (e & f) ^ (~e & g);\r\n                var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n                var t1 = h + sigma1 + ch + K[i] + W[i];\r\n                var t2 = sigma0 + maj;\r\n\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + t1) | 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (t1 + t2) | 0;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n            H[5] = (H[5] + f) | 0;\r\n            H[6] = (H[6] + g) | 0;\r\n            H[7] = (H[7] + h) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA256('message');\r\n     *     var hash = CryptoJS.SHA256(wordArray);\r\n     */\r\n    C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n     */\r\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Check if typed arrays are supported\r\n    if (typeof ArrayBuffer != 'function') {\r\n        return;\r\n    }\r\n\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n\r\n    // Reference original init\r\n    var superInit = WordArray.init;\r\n\r\n    // Augment WordArray.init to handle typed arrays\r\n    var subInit = WordArray.init = function (typedArray) {\r\n        // Convert buffers to uint8\r\n        if (typedArray instanceof ArrayBuffer) {\r\n            typedArray = new Uint8Array(typedArray);\r\n        }\r\n\r\n        // Convert other array views to uint8\r\n        if (\r\n            typedArray instanceof Int8Array ||\r\n            typedArray instanceof Uint8ClampedArray ||\r\n            typedArray instanceof Int16Array ||\r\n            typedArray instanceof Uint16Array ||\r\n            typedArray instanceof Int32Array ||\r\n            typedArray instanceof Uint32Array ||\r\n            typedArray instanceof Float32Array ||\r\n            typedArray instanceof Float64Array\r\n        ) {\r\n            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n        }\r\n\r\n        // Handle Uint8Array\r\n        if (typedArray instanceof Uint8Array) {\r\n            // Shortcut\r\n            var typedArrayByteLength = typedArray.byteLength;\r\n\r\n            // Extract bytes\r\n            var words = [];\r\n            for (var i = 0; i < typedArrayByteLength; i++) {\r\n                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            // Initialize this word array\r\n            superInit.call(this, words, typedArrayByteLength);\r\n        } else {\r\n            // Else call normal init\r\n            superInit.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    subInit.prototype = WordArray;\r\n}());\r\n","/*globals qq */\r\nqq.s3 = qq.s3 || {};\r\n\r\nqq.s3.util = qq.s3.util || (function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\r\n\r\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\r\n\r\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\r\n\r\n        DATE_PARAM_NAME: \"x-amz-date\",\r\n\r\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\r\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\r\n\r\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\r\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\r\n\r\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\r\n\r\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\r\n\r\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\r\n\r\n        CASE_SENSITIVE_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNSIGNABLE_REST_HEADER_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNPREFIXED_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\",\r\n            \"x-amz-server-side-encryption-customer-algorithm\",\r\n            \"x-amz-server-side-encryption-customer-key\",\r\n            \"x-amz-server-side-encryption-customer-key-MD5\"\r\n        ],\r\n\r\n        /**\r\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\r\n         *\r\n         * Examples of some valid endpoints are:\r\n         *     http://foo.s3.amazonaws.com\r\n         *     https://foo.s3.amazonaws.com\r\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\r\n         *     foo.s3.amazonaws.com\r\n         *     http://foo.bar.com\r\n         *     http://s3.amazonaws.com/foo.bar.com\r\n         * ...etc\r\n         *\r\n         * @param endpoint The bucket's URL.\r\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\r\n         */\r\n        getBucket: function(endpoint) {\r\n            var patterns = [\r\n                    //bucket in domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\r\n                    //bucket in path\r\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\r\n                    //custom domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\r\n                ],\r\n                bucket;\r\n\r\n            qq.each(patterns, function(idx, pattern) {\r\n                var match = pattern.exec(endpoint);\r\n\r\n                if (match) {\r\n                    bucket = match[1];\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return bucket;\r\n        },\r\n\r\n        /** Create Prefixed request headers which are appropriate for S3.\r\n         *\r\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\r\n         * it along without a metadata prefix. For all other request header parameter names,\r\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\r\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\r\n         */\r\n        _getPrefixedParamName: function(name) {\r\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\r\n                return name;\r\n            }\r\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\r\n        },\r\n\r\n        /**\r\n         * Create a policy document to be signed and sent along with the S3 upload request.\r\n         *\r\n         * @param spec Object with properties use to construct the policy document.\r\n         * @returns {Object} Policy doc.\r\n         */\r\n        getPolicy: function(spec) {\r\n            var policy = {},\r\n                conditions = [],\r\n                bucket = spec.bucket,\r\n                date = spec.date,\r\n                drift = spec.clockDrift,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                type = spec.type,\r\n                expectedStatus = spec.expectedStatus,\r\n                sessionToken = spec.sessionToken,\r\n                params = spec.params,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                minFileSize = spec.minFileSize,\r\n                maxFileSize = spec.maxFileSize,\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion;\r\n\r\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\r\n\r\n            conditions.push({acl: acl});\r\n            conditions.push({bucket: bucket});\r\n\r\n            if (type) {\r\n                conditions.push({\"Content-Type\": type});\r\n            }\r\n\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                conditions.push({success_action_status: expectedStatus.toString()});\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                conditions.push({success_action_redirect: successRedirectUrl});\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (signatureVersion === 2) {\r\n                conditions.push({key: key});\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1].key = key;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\r\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\r\n                    qq.s3.util.getV4PolicyDate(date, drift);\r\n            }\r\n\r\n            // user metadata\r\n            qq.each(params, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\r\n                    param = {};\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    param[awsParamName] = val;\r\n                }\r\n                else {\r\n                    param[awsParamName] = encodeURIComponent(val);\r\n                }\r\n\r\n                conditions.push(param);\r\n            });\r\n\r\n            policy.conditions = conditions;\r\n\r\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\r\n\r\n            return policy;\r\n        },\r\n\r\n        /**\r\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\r\n         * update the session token.  This is only relevant if requests are being signed client-side.\r\n         *\r\n         * @param policy Live policy document\r\n         * @param newSessionToken Updated session token.\r\n         */\r\n        refreshPolicyCredentials: function(policy, newSessionToken) {\r\n            var sessionTokenFound = false;\r\n\r\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\r\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\r\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\r\n                        oldCondObj[oldCondName] = newSessionToken;\r\n                        sessionTokenFound = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (!sessionTokenFound) {\r\n                policy.conditions.push({});\r\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\r\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\r\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\r\n         * still possible for a malicious user to tamper with these values during policy document generation,\r\n         * before it is sent to the server for signing.\r\n         *\r\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\r\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\r\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\r\n         */\r\n        generateAwsParams: function(spec, signPolicyCallback) {\r\n            var awsParams = {},\r\n                customParams = spec.params,\r\n                promise = new qq.Promise(),\r\n                sessionToken = spec.sessionToken,\r\n                drift = spec.clockDrift,\r\n                type = spec.type,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                expectedStatus = spec.expectedStatus,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion,\r\n                now = new Date(),\r\n                log = spec.log,\r\n                policyJson;\r\n\r\n            spec.date = now;\r\n            policyJson = qq.s3.util.getPolicy(spec);\r\n\r\n            awsParams.key = key;\r\n\r\n            if (type) {\r\n                awsParams[\"Content-Type\"] = type;\r\n            }\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                awsParams.success_action_status = expectedStatus;\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                awsParams.success_action_redirect = successRedirectUrl;\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            awsParams.acl = acl;\r\n\r\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\r\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\r\n            // Prefixed param values will be URI encoded as well.\r\n            qq.each(customParams, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    awsParams[awsParamName] = val;\r\n                }\r\n                else {\r\n                    awsParams[awsParamName] = encodeURIComponent(val);\r\n                }\r\n            });\r\n\r\n            if (signatureVersion === 2) {\r\n                awsParams.AWSAccessKeyId = accessKey;\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\r\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\r\n            }\r\n\r\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\r\n            // HMAC signature for the policy doc.\r\n            signPolicyCallback(policyJson).then(\r\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\r\n                    awsParams.policy = policyAndSignature.policy;\r\n\r\n                    if (spec.signatureVersion === 2) {\r\n                        awsParams.signature = policyAndSignature.signature;\r\n\r\n                        if (updatedAccessKey) {\r\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\r\n                        }\r\n                    }\r\n                    else if (spec.signatureVersion === 4) {\r\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\r\n                    }\r\n\r\n                    if (updatedSessionToken) {\r\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                    }\r\n\r\n                    promise.success(awsParams);\r\n                },\r\n                function(errorMessage) {\r\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\r\n                                                   \"a valid signature and policy from the server.\";\r\n\r\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\r\n                    promise.failure(errorMessage);\r\n                }\r\n            );\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\r\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\r\n         * checks already in place.\r\n         *\r\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\r\n         * @param minSize Minimum acceptable size, in bytes\r\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\r\n         */\r\n        enforceSizeLimits: function(policy, minSize, maxSize) {\r\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\r\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\r\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\r\n\r\n            if (minSize > 0 || maxSize > 0) {\r\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\r\n            }\r\n        },\r\n\r\n        getPolicyExpirationDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\r\n        },\r\n\r\n        getCredentialsDate: function(date) {\r\n            return date.getUTCFullYear() + \"\" +\r\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\r\n                (\"0\" + date.getUTCDate()).slice(-2);\r\n        },\r\n\r\n        getPolicyDate: function(date, _minutesToAdd_) {\r\n            var minutesToAdd = _minutesToAdd_ || 0,\r\n                pad, r;\r\n\r\n            /*jshint -W014 */\r\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\r\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\r\n\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                pad = function(number) {\r\n                    r = String(number);\r\n\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n\r\n                    return r;\r\n                };\r\n\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\r\n         * the associated resource.\r\n         *\r\n         * @param iframe Iframe containing response\r\n         * @returns {{bucket: *, key: *, etag: *}}\r\n         */\r\n        parseIframeResponse: function(iframe) {\r\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\r\n                queryString = doc.location.search,\r\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\r\n\r\n            if (match) {\r\n                return {\r\n                    bucket: match[1],\r\n                    key: match[2],\r\n                    etag: match[3].replace(/%22/g, \"\")\r\n                };\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param successRedirectUrl Relative or absolute location of success redirect page\r\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\r\n         */\r\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\r\n            if (successRedirectUrl) {\r\n                var targetAnchorContainer = document.createElement(\"div\"),\r\n                    targetAnchor;\r\n\r\n                if (qq.ie7()) {\r\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\r\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\r\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\r\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\r\n                    targetAnchor = targetAnchorContainer.firstChild;\r\n                    return targetAnchor.href;\r\n                }\r\n                else {\r\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\r\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\r\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\r\n                    // in order to ensure relative URLs will be properly parsed.\r\n                    targetAnchor = document.createElement(\"a\");\r\n                    targetAnchor.href = successRedirectUrl;\r\n                    targetAnchor.href = targetAnchor.href;\r\n                    return targetAnchor.href;\r\n                }\r\n            }\r\n        },\r\n\r\n        getV4CredentialsString: function(spec) {\r\n            return spec.key + \"/\" +\r\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\r\n                spec.region + \"/s3/aws4_request\";\r\n        },\r\n\r\n        getV4PolicyDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n\r\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\r\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\r\n                    \"Z\";\r\n        },\r\n\r\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\r\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\r\n        // and spaces are replaced with \"+\".\r\n        encodeQueryStringParam: function(param) {\r\n            var percentEncoded = encodeURIComponent(param);\r\n\r\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\r\n\r\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\r\n\r\n            // replace percent-encoded spaces with a \"+\"\r\n            return percentEncoded.replace(/%20/g, \"+\");\r\n        },\r\n        /**\r\n         * Escapes url part as for AWS requirements\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscape: function(string) {\r\n            var output = encodeURIComponent(string);\r\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\r\n            output = output.replace(/[*]/g, function(ch) {\r\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\r\n            });\r\n            return output;\r\n        },\r\n        /**\r\n         * Escapes a path as for AWS requirement\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscapePath: function(path) {\r\n            var parts = [];\r\n            qq.each(path.split(\"/\"), function(idx, item) {\r\n                parts.push(qq.s3.util.uriEscape(item));\r\n            });\r\n            return parts.join(\"/\");\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploaderBasic = function(o) {\n        var options = {\n            request: {\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\n                accessKey: null,\n\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\n                clockDrift: 0\n            },\n\n            objectProperties: {\n                acl: \"private\",\n\n                // string or a function which may be promissory\n                bucket: qq.bind(function(id) {\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\n                }, this),\n\n                // string or a function which may be promissory - only used for V4 multipart uploads\n                host: qq.bind(function(id) {\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\n                }, this),\n\n                // 'uuid', 'filename', or a function which may be promissory\n                key: \"uuid\",\n\n                reducedRedundancy: false,\n\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\n                region: \"us-east-1\",\n\n                serverSideEncryption: false\n            },\n\n            credentials: {\n                // Public key (required).\n                accessKey: null,\n                // Private key (required).\n                secretKey: null,\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\n                expiration: null,\n                // Temporary credentials session token.\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\n                sessionToken: null\n            },\n\n            // All but `version` are ignored if `credentials` is provided.\n            signature: {\n                customHeaders: {},\n                endpoint: null,\n                version: 2\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            // required if non-File-API browsers, such as IE9 and older, are used\n            iframeSupport: {\n                localBlankPagePath: null\n            },\n\n            chunking: {\n                // minimum part size is 5 MiB when uploading to S3\n                partSize: 5242880\n            },\n\n            cors: {\n                allowXdr: true\n            },\n\n            callbacks: {\n                onCredentialsExpired: function() {}\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        if (!this.setCredentials(options.credentials, true)) {\n            this._currentCredentials.accessKey = options.request.accessKey;\n        }\n\n        this._aclStore = this._createStore(options.objectProperties.acl);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds S3 keys for file representations constructed from a session request.\n        this._cannedKeys = {};\n        // Holds S3 buckets for file representations constructed from a session request.\n        this._cannedBuckets = {};\n\n        this._buckets = {};\n        this._hosts = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\n        getBucket: function(id) {\n            if (this._cannedBuckets[id] == null) {\n                return this._buckets[id];\n            }\n            return this._cannedBuckets[id];\n        },\n\n        /**\n         * @param id File ID\n         * @returns {*} Key name associated w/ the file, if one exists\n         */\n        getKey: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedKeys[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n\n            return this._cannedKeys[id];\n        },\n\n        /**\n         * Override the parent's reset function to cleanup various S3-related items.\n         */\n        reset: function() {\n            qq.FineUploaderBasic.prototype.reset.call(this);\n            this._failedSuccessRequestCallbacks = [];\n            this._buckets = {};\n            this._hosts = {};\n        },\n\n        setCredentials: function(credentials, ignoreEmpty) {\n            if (credentials && credentials.secretKey) {\n                if (!credentials.accessKey) {\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\n                }\n                else if (!credentials.expiration) {\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\n                }\n                else {\n                    this._currentCredentials = qq.extend({}, credentials);\n\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\n                    if (qq.isString(credentials.expiration)) {\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\n                    }\n                }\n\n                return true;\n            }\n            else if (!ignoreEmpty) {\n                throw new qq.Error(\"Invalid credentials parameter!\");\n            }\n            else {\n                this._currentCredentials = {};\n            }\n        },\n\n        setAcl: function(acl, id) {\n            this._aclStore.set(acl, id);\n        },\n\n        /**\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\n         *\n         * @returns {qq.UploadHandlerController}\n         * @private\n         */\n        _createUploadHandler: function() {\n            var self = this,\n                additionalOptions = {\n                    aclStore: this._aclStore,\n                    getBucket: qq.bind(this._determineBucket, this),\n                    getHost: qq.bind(this._determineHost, this),\n                    getKeyName: qq.bind(this._determineKeyName, this),\n                    iframeSupport: this._options.iframeSupport,\n                    objectProperties: this._options.objectProperties,\n                    signature: this._options.signature,\n                    clockDrift: this._options.request.clockDrift,\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\n                    validation: {\n                        minSizeLimit: this._options.validation.minSizeLimit,\n                        maxSizeLimit: this._options.validation.sizeLimit\n                    }\n                };\n\n            // We assume HTTP if it is missing from the start of the endpoint string.\n            qq.override(this._endpointStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var endpoint = super_.get(id);\n                        if (typeof endpoint === 'function') {\n                            endpoint = endpoint(id);\n                        }\n                        if (endpoint.indexOf(\"http\") < 0) {\n                            return \"http://\" + endpoint;\n                        }\n\n                        return endpoint;\n                    }\n                };\n            });\n\n            // Some param names should be lower case to avoid signature mismatches\n            qq.override(this._paramsStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var oldParams = super_.get(id),\n                            modifiedParams = {};\n\n                        qq.each(oldParams, function(name, val) {\n                            var paramName = name;\n\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\n                                paramName = paramName.toLowerCase();\n                            }\n\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\n                        });\n\n                        return modifiedParams;\n                    }\n                };\n            });\n\n            additionalOptions.signature.credentialsProvider = {\n                get: function() {\n                    return self._currentCredentials;\n                },\n\n                onExpired: function() {\n                    var updateCredentials = new qq.Promise(),\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\n\n                    if (qq.isGenericPromise(callbackRetVal)) {\n                        callbackRetVal.then(function(credentials) {\n                            try {\n                                self.setCredentials(credentials);\n                                updateCredentials.success();\n                            }\n                            catch (error) {\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\n                            }\n                        }, function(errorMsg) {\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\n                        });\n                    }\n                    else {\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\n                    }\n\n                    return updateCredentials;\n                }\n            };\n\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\n        },\n\n        _determineObjectPropertyValue: function(id, property) {\n            var maybe = this._options.objectProperties[property],\n                promise = new qq.Promise(),\n                self = this;\n\n            if (qq.isFunction(maybe)) {\n                maybe = maybe(id);\n                if (qq.isGenericPromise(maybe)) {\n                    promise = maybe;\n                }\n                else {\n                    promise.success(maybe);\n                }\n            }\n            else if (qq.isString(maybe)) {\n                promise.success(maybe);\n            }\n\n            promise.then(\n                function success(value) {\n                    self[\"_\" + property + \"s\"][id] = value;\n                },\n\n                function failure(errorMsg) {\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\n                }\n            );\n\n            return promise;\n        },\n\n        _determineBucket: function(id) {\n            return this._determineObjectPropertyValue(id, \"bucket\");\n        },\n\n        _determineHost: function(id) {\n            return this._determineObjectPropertyValue(id, \"host\");\n        },\n\n        /**\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\n         * delegate to an integrator-defined function that determines the file's key name on demand,\n         * which also may be promissory.\n         *\n         * @param id ID of the file\n         * @param filename Name of the file\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\n         * @private\n         */\n        _determineKeyName: function(id, filename) {\n            /*jshint -W015*/\n            var promise = new qq.Promise(),\n                keynameLogic = this._options.objectProperties.key,\n                extension = qq.getExtension(filename),\n                onGetKeynameFailure = promise.failure,\n                onGetKeynameSuccess = function(keyname, extension) {\n                    var keynameToUse = keyname;\n\n                    if (extension !== undefined) {\n                        keynameToUse += \".\" + extension;\n                    }\n\n                    promise.success(keynameToUse);\n                };\n\n            switch (keynameLogic) {\n                case \"uuid\":\n                    onGetKeynameSuccess(this.getUuid(id), extension);\n                    break;\n                case \"filename\":\n                    onGetKeynameSuccess(filename);\n                    break;\n                default:\n                    if (qq.isFunction(keynameLogic)) {\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\n                    }\n                    else {\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\n                        onGetKeynameFailure();\n                    }\n            }\n\n            return promise;\n        },\n\n        /**\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\n         * the promise contract associated with the caller as well.\n         *\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\n         * @param id ID of the associated file\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\n         * @private\n         */\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\n            var self = this,\n                onSuccess = function(keyname) {\n                    successCallback(keyname);\n                },\n                onFailure = function(reason) {\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\n                    failureCallback(reason);\n                },\n                keyname = keynameFunc.call(this, id);\n\n            if (qq.isGenericPromise(keyname)) {\n                keyname.then(onSuccess, onFailure);\n            }\n            /*jshint -W116*/\n            else if (keyname == null) {\n                onFailure();\n            }\n            else {\n                onSuccess(keyname);\n            }\n        },\n\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\n            var params = {\n                key: this.getKey(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                bucket: this.getBucket(id)\n            };\n\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\n            }\n            else if (response.etag) {\n                params.etag = response.etag;\n            }\n\n            return params;\n        },\n\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\n        _onSubmitDelete: function(id, onSuccessCallback) {\n            var additionalMandatedParams = {\n                key: this.getKey(id),\n                bucket: this.getBucket(id)\n            };\n\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.s3Key == null) {\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedKeys[id] = sessionData.s3Key;\n                this._cannedBuckets[id] = sessionData.s3Bucket;\n            }\n\n            return id;\n        }\n    });\n}());\n","/* globals qq, CryptoJS */\r\n\r\n/**\r\n * Manages creation and communication of s3 signature workers.\r\n */\r\nqq.s3.RequestSignerWorkerManager = function (o) {\r\n    \"use strict\";\r\n    var worker = null,\r\n        workerPromises = {},\r\n        options = {\r\n            workerUrl: null,\r\n            log: function(str, level) {}\r\n        };\r\n    qq.extend(options, o, true);\r\n\r\n    function init() {\r\n        var workerUrl;\r\n        switch (typeof options.workerUrl) {\r\n            case \"string\":\r\n                if (options.workerUrl !== \"inline\") {\r\n                    workerUrl = options.workerUrl;\r\n                } else {\r\n                    workerUrl = qq.s3.createS3InlineWorkerUrl();\r\n                }\r\n                break;\r\n            case \"function\":\r\n                workerUrl = options.workerUrl();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (!workerUrl) {\r\n            return;\r\n        }\r\n        try {\r\n            worker = new Worker(workerUrl);\r\n            worker.onerror = function (e) {\r\n                // Prevent the event from bubbling\r\n                e.preventDefault();\r\n                // log the error, and fail any pending promises.\r\n                options.log(\"Worker encountered an error. Disabling. \" + e.message, \"warn\");\r\n                worker = null;\r\n                var outstandingRequests = Object.keys(workerPromises),\r\n                    i;\r\n                for (i = 0; i < outstandingRequests.length; i++) {\r\n                    workerPromises[outstandingRequests[i]].failure(e);\r\n                    delete workerPromises[outstandingRequests[i]];\r\n                }\r\n            };\r\n            worker.onmessage = function (e) {\r\n                if (!workerPromises[e.data.id]) {\r\n                    options.log(\"Worker returned a result for an request we dont know about.\", \"warn\");\r\n                    return;\r\n                }\r\n                if (e.data.err) {\r\n                    workerPromises[e.data.id].failure(e.data.err);\r\n                } else {\r\n                    workerPromises[e.data.id].success(e.data.resp);\r\n                }\r\n                delete workerPromises[e.data.id];\r\n            };\r\n        }  catch (ex) {\r\n            // worker is not supported or invalid\r\n            options.log(\"Worker failed to be created. Defaulting back to main thread processing.\" + ex, \"warn\");\r\n            worker = null;\r\n        }\r\n    }\r\n    init();\r\n    /*\r\n        Generates the signuare of the given file.\r\n        @param file the file/slice to generate the signature for.\r\n        @returns a promise or null if we can't generate signatures at all.\r\n    */\r\n    this.generateSignature = function (file) {\r\n        if (!worker) {\r\n            return null;\r\n        }\r\n        var promise = new qq.Promise(),\r\n            task = {file: file, id: qq.getUniqueId()};\r\n        workerPromises[task.id] = promise;\r\n        worker.postMessage(task);\r\n        return promise;\r\n    };\r\n};\r\n","/* globals qq, CryptoJS */\n\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\nif (!window.Uint8ClampedArray) {\n    window.Uint8ClampedArray = function() {};\n}\n/**\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\n *\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\n * to determine if the effort was successful.\n *\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\n * sign the requests directly in the browser and send them off to S3.\n *\n * @param o Options associated with all such requests\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\n * @constructor\n */\nqq.s3.RequestSigner = function(o) {\n    \"use strict\";\n\n    var requester,\n        thisSignatureRequester = this,\n        pendingSignatures = {},\n        options = {\n            expectingPolicy: false,\n            method: \"POST\",\n            signatureSpec: {\n                drift: 0,\n                credentialsProvider: {},\n                endpoint: null,\n                customHeaders: {},\n                version: 2\n            },\n            maxConnections: 3,\n            endpointStore: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        },\n        credentialsProvider,\n\n        generateHeaders = function(signatureConstructor, signature, promise) {\n            var headers = signatureConstructor.getHeaders();\n\n            if (options.signatureSpec.version === 4) {\n                signatureConstructor.getToSignPromise.then(function () {\n                    headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\n                        \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\n                        qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\n                        options.signatureSpec.region + \"/\" +\n                        \"s3/aws4_request,\" +\n                        \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\n                        \"Signature=\" + signature;\n                    promise.success(headers, signatureConstructor.getEndOfUrl());\n                }, function () {\n                    promise.failure(\"Failed to sign chunk\");\n                });\n            }\n            else {\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\n                promise.success(headers, signatureConstructor.getEndOfUrl());\n            }\n\n        },\n\n        v2 = {\n            getStringToSign: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\n                    signatureSpec.method,\n                    signatureSpec.contentMd5 || \"\",\n                    signatureSpec.contentType || \"\",\n                    signatureSpec.headersStr || \"\\n\",\n                    signatureSpec.bucket,\n                    signatureSpec.endOfUrl);\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\n\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: policyHmacSha1Base64\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        },\n\n        v4 = {\n            getCanonicalQueryString: function(endOfUri) {\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\n                    canonicalQueryString = \"\",\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\n\n                if (queryParamIdx >= 0) {\n                    encodedQueryParams = {};\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\n\n                    qq.each(queryStrings, function(idx, queryString) {\n                        var nameAndVal = queryString.split(\"=\"),\n                            paramVal = nameAndVal[1];\n\n                        if (paramVal == null) {\n                            paramVal = \"\";\n                        }\n\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\n                    });\n\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\n                        if (idx < encodedQueryParamNames.length - 1) {\n                            canonicalQueryString += \"&\";\n                        }\n                    });\n                }\n\n                return canonicalQueryString;\n            },\n\n            getCanonicalRequest: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\n                    signatureSpec.method,\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\n                    signatureSpec.headersStr || \"\\n\",\n                    v4.getSignedHeaders(signatureSpec.headerNames),\n                    signatureSpec.hashedContent);\n            },\n\n            getCanonicalUri: function(endOfUri) {\n                var path = endOfUri,\n                    queryParamIdx = endOfUri.indexOf(\"?\");\n\n                if (queryParamIdx > 0) {\n                    path = endOfUri.substr(0, queryParamIdx);\n                }\n                return \"/\" + path;\n            },\n\n            getEncodedHashedPayload: function(body) {\n                var promise,\n                    reader;\n                if (qq.isBlob(body)) {\n                    // We will fallback to the inline reader if the worker was\n                    // not loaded correctly\n                    if (options.signatureSpec.workerManager) {\n                        promise = options.signatureSpec.workerManager.generateSignature(body);\n                        if (promise !== null) {\n                            return promise;\n                        }\n                    }\n                    promise = new qq.Promise();\n                    reader = new FileReader();\n                    reader.onloadend = function(e) {\n                        if (e.target.readyState === FileReader.DONE) {\n                            if (e.target.error) {\n                                promise.failure(e.target.error);\n                            }\n                            else {\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\n                            }\n                        }\n                    };\n                    reader.readAsArrayBuffer(body);\n                    return promise;\n                }\n                promise = new qq.Promise();\n                body = body || \"\";\n                promise.success(qq.CryptoJS.SHA256(body).toString());\n                return promise;\n            },\n\n            getScope: function(date, region) {\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\n                    region + \"/s3/aws4_request\";\n            },\n\n            getStringToSign: function(signatureSpec) {\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\n\n                return {\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\n                };\n            },\n\n            getSignedHeaders: function(headerNames) {\n                var signedHeaders = \"\";\n\n                headerNames.forEach(function(headerName, idx) {\n                    signedHeaders += headerName.toLowerCase();\n\n                    if (idx < headerNames.length - 1) {\n                        signedHeaders += \";\";\n                    }\n                });\n\n                return signedHeaders;\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var secretKey = credentialsProvider.get().secretKey,\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\n                    matches = headersPattern.exec(headersStr),\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    secretKey = credentialsProvider.get().secretKey,\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\n                    credentialCondition = (function() {\n                        var credential = null;\n                        qq.each(policy.conditions, function(key, condition) {\n                            var val = condition[\"x-amz-credential\"];\n                            if (val) {\n                                credential = val;\n                                return false;\n                            }\n                        });\n                        return credential;\n                    }()),\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                matches = credentialPattern.exec(credentialCondition);\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        };\n\n    qq.extend(options, o, true);\n    credentialsProvider = options.signatureSpec.credentialsProvider;\n\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\n        var responseJson = xhrOrXdr.responseText,\n            pendingSignatureData = pendingSignatures[id],\n            promise,\n            signatureConstructor,\n            errorMessage, response;\n\n        if (!pendingSignatureData) {\n            return;\n        }\n        promise = pendingSignatureData.promise;\n        signatureConstructor = pendingSignatureData.signatureConstructor;\n\n        delete pendingSignatures[id];\n\n        // Attempt to parse what we would expect to be a JSON response\n        if (responseJson) {\n            try {\n                response = qq.parseJson(responseJson);\n            }\n            catch (error) {\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\n            }\n        }\n\n        // If the response is parsable and contains an `error` property, use it as the error message\n        if (response && response.error) {\n            isError = true;\n            errorMessage = response.error;\n        }\n        // If we have received a parsable response, and it has an `invalid` property,\n        // the policy document or request headers may have been tampered with client-side.\n        else if (response && response.invalid) {\n            isError = true;\n            errorMessage = \"Invalid policy document or request headers!\";\n        }\n        // Make sure the response contains policy & signature properties\n        else if (response) {\n            if (options.expectingPolicy && !response.policy) {\n                isError = true;\n                errorMessage = \"Response does not include the base64 encoded policy!\";\n            }\n            else if (!response.signature) {\n                isError = true;\n                errorMessage = \"Response does not include the signature!\";\n            }\n        }\n        // Something unknown went wrong\n        else {\n            isError = true;\n            errorMessage = \"Received an empty or invalid response from the server!\";\n        }\n        if (isError) {\n            if (errorMessage) {\n                options.log(errorMessage, \"error\");\n            }\n\n            promise.failure(errorMessage);\n        }\n        else if (signatureConstructor) {\n            generateHeaders(signatureConstructor, response.signature, promise);\n        }\n        else {\n            promise.success(response);\n        }\n    }\n\n    function getStringToSignArtifacts(id, version, requestInfo) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            headerNames = [],\n            headersStr = \"\",\n            now = new Date(),\n            endOfUrl, signatureSpec, toSign,\n\n            generateStringToSign = function(requestInfo) {\n                var contentMd5,\n                    headerIndexesToRemove = [];\n\n                qq.each(requestInfo.headers, function(name) {\n                    headerNames.push(name);\n                });\n                headerNames.sort();\n\n                qq.each(headerNames, function(idx, headerName) {\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\n                    }\n                    else if (headerName === \"Content-MD5\") {\n                        contentMd5 = requestInfo.headers[headerName];\n                    }\n                    else {\n                        headerIndexesToRemove.unshift(idx);\n                    }\n                });\n\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\n                    headerNames.splice(headerIdx, 1);\n                });\n\n                signatureSpec = {\n                    bucket: requestInfo.bucket,\n                    contentMd5: contentMd5,\n                    contentType: requestInfo.contentType,\n                    date: now,\n                    drift: options.signatureSpec.drift,\n                    endOfUrl: endOfUrl,\n                    hashedContent: requestInfo.hashedContent,\n                    headerNames: headerNames,\n                    headersStr: headersStr,\n                    method: method\n                };\n\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\n\n                return {\n                    date: now,\n                    endOfUrl: endOfUrl,\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\n                    toSign: version === 4 ? toSign.hashed : toSign,\n                    toSignRaw: version === 4 ? toSign.raw : toSign\n                };\n            };\n\n        /*jshint indent:false */\n        switch (requestInfo.type) {\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\n                method = \"DELETE\";\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\n                endOfUrl = \"uploads\";\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\n                method = \"PUT\";\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\n                break;\n        }\n\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\n        if (version === 4) {\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\n                requestInfo.headers.Host = requestInfo.host;\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\n                requestInfo.hashedContent = hashedContent;\n\n                promise.success(generateStringToSign(requestInfo));\n            }, function (err) {\n                promise.failure(err);\n            });\n        }\n        else {\n            promise.success(generateStringToSign(requestInfo));\n        }\n\n        return promise;\n    }\n\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        var updatedHeaders;\n\n        // REST API request\n        if (toBeSigned.signatureConstructor) {\n            if (updatedSessionToken) {\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\n            }\n\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\n            }, function (err) {\n                signatureEffort.failure(err);\n            });\n        }\n        // Form upload (w/ policy document)\n        else {\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        if (options.signatureSpec.version === 4) {\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n        else {\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\n        if (options.signatureSpec.version === 4) {\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n        else {\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        contentType: \"application/json; charset=utf-8\",\n        endpointStore: {\n            get: function() {\n                if (typeof options.signatureSpec.endpoint === 'function') {\n                    return options.signatureSpec.endpoint();\n                }\n                return options.signatureSpec.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.signatureSpec.customHeaders,\n        log: options.log,\n        onComplete: handleSignatureReceived,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\n         *\n         * @param id File ID.\n         * @param toBeSigned an Object that holds the item(s) to be signed\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\n         */\n        getSignature: function(id, toBeSigned) {\n            var params = toBeSigned,\n                signatureConstructor = toBeSigned.signatureConstructor,\n                signatureEffort = new qq.Promise(),\n                queryParams;\n\n            if (options.signatureSpec.version === 4) {\n                queryParams = {v4: true};\n            }\n\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\n                }\n                // If credentials are expired, ask for new ones before attempting to sign request\n                else {\n                    credentialsProvider.onExpired().then(function() {\n                        determineSignatureClientSide(id, toBeSigned,\n                            signatureEffort,\n                            credentialsProvider.get().accessKey,\n                            credentialsProvider.get().sessionToken);\n                    }, function(errorMsg) {\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\n                    });\n                }\n            }\n            else {\n                options.log(\"Submitting S3 signature request for \" + id);\n\n                // create before incase the singature effort returns faster than us\n                pendingSignatures[id] = {\n                    promise: signatureEffort,\n                    signatureConstructor: signatureConstructor\n                };\n\n                if (signatureConstructor) {\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                        params = {headers: signatureArtifacts.stringToSignRaw};\n                        requester.initTransport(id)\n                            .withParams(params)\n                            .withQueryParams(queryParams)\n                            .send();\n                    }, function (err) {\n                        options.log(\"Failed to construct signature. \", \"error\");\n                        signatureEffort.failure(\"Failed to construct signature.\");\n                    });\n                }\n                else {\n                    requester.initTransport(id)\n                        .withParams(params)\n                        .withQueryParams(queryParams)\n                        .send();\n                }\n            }\n\n            return signatureEffort;\n        },\n\n        constructStringToSign: function(type, bucket, host, key) {\n            var headers = {},\n                uploadId, content, contentType, partNum, artifacts;\n\n            return {\n                withHeaders: function(theHeaders) {\n                    headers = theHeaders;\n                    return this;\n                },\n\n                withUploadId: function(theUploadId) {\n                    uploadId = theUploadId;\n                    return this;\n                },\n\n                withContent: function(theContent) {\n                    content = theContent;\n                    return this;\n                },\n\n                withContentType: function(theContentType) {\n                    contentType = theContentType;\n                    return this;\n                },\n\n                withPartNum: function(thePartNum) {\n                    partNum = thePartNum;\n                    return this;\n                },\n\n                getToSign: function(id) {\n                    var sessionToken = credentialsProvider.get().sessionToken,\n                        promise = new qq.Promise(),\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\n\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\n\n                    if (sessionToken) {\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n                    }\n                    this.getToSignPromise = promise;\n\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\n                        bucket: bucket,\n                        content: content,\n                        contentType: contentType,\n                        headers: headers,\n                        host: host,\n                        key: key,\n                        partNum: partNum,\n                        type: type,\n                        uploadId: uploadId\n                    }).then(function(_artifacts_) {\n                        artifacts = _artifacts_;\n                        promise.success({\n                            headers: (function() {\n                                if (contentType) {\n                                    headers[\"Content-Type\"] = contentType;\n                                }\n\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\n                                return headers;\n                            }()),\n                            date: artifacts.date,\n                            endOfUrl: artifacts.endOfUrl,\n                            signedHeaders: artifacts.signedHeaders,\n                            stringToSign: artifacts.toSign,\n                            stringToSignRaw: artifacts.toSignRaw\n                        });\n                    }, function (err) {\n                        promise.failure(err);\n                    });\n\n                    return promise;\n                },\n\n                getHeaders: function() {\n                    return qq.extend({}, headers);\n                },\n\n                getEndOfUrl: function() {\n                    return artifacts && artifacts.endOfUrl;\n                },\n\n                getRequestDate: function() {\n                    return artifacts && artifacts.date;\n                },\n\n                getSignedHeaders: function() {\n                    return artifacts && artifacts.signedHeaders;\n                }\n            };\n        }\n    });\n};\n\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\n    MULTIPART_INITIATE: \"multipart_initiate\",\n    MULTIPART_COMPLETE: \"multipart_complete\",\n    MULTIPART_ABORT: \"multipart_abort\",\n    MULTIPART_UPLOAD: \"multipart_upload\"\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\n * request to S3 via the REST API.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingInitiateRequests = {},\n        options = {\n            filenameParam: \"qqfilename\",\n            method: \"POST\",\n            endpointStore: null,\n            paramsStore: null,\n            signatureSpec: null,\n            aclStore: null,\n            reducedRedundancy: false,\n            serverSideEncryption: false,\n            maxConnections: 3,\n            getContentType: function(id) {},\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            getName: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\n     * method on the promise will be called.\n     *\n     * @param id Associated file ID\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id) {\n        var bucket = options.getBucket(id),\n            host = options.getHost(id),\n            headers = {},\n            promise = new qq.Promise(),\n            key = options.getKey(id),\n            signatureConstructor;\n\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\n\n        if (options.reducedRedundancy) {\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n        }\n\n        if (options.serverSideEncryption) {\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n        }\n\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\n\n        qq.each(options.paramsStore.get(id), function(name, val) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                headers[name] = val;\n            }\n            else {\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\n            }\n        });\n\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\n            .withContentType(options.getContentType(id))\n            .withHeaders(headers);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Initiate MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleInitiateRequestComplete(id, xhr, isError) {\n        var promise = pendingInitiateRequests[id],\n            domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\n\n        delete pendingInitiateRequests[id];\n\n        // The base ajax requester may declare the request to be a failure based on status code.\n        if (isError) {\n            status = xhr.status;\n\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\n            if (messageElements.length > 0) {\n                errorMessage = messageElements[0].textContent;\n            }\n        }\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\n        else {\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\n            if (uploadIdElements.length > 0) {\n                uploadId = uploadIdElements[0].textContent;\n            }\n            else {\n                errorMessage = \"Upload ID missing from request\";\n            }\n        }\n\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\n        if (uploadId === undefined) {\n            if (errorMessage) {\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\n            }\n\n            promise.failure(\"Problem initiating upload request.\", xhr);\n        }\n        else {\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\n            promise.success(uploadId, xhr);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleInitiateRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\n         *\n         * @param id The ID associated with the file\n         * @returns {qq.Promise}\n         */\n        send: function(id) {\n            var promise = new qq.Promise();\n\n            getHeaders(id).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\n\n                pendingInitiateRequests[id] = promise;\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\n * request to S3 via the REST API.\n *\n * @param o Options passed by the creator, to overwrite any default option values.\n * @constructor\n */\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingCompleteRequests = {},\n        options = {\n            method: \"POST\",\n            contentType: \"text/xml\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId, body) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\n                .withUploadId(uploadId)\n                .withContent(body)\n                .withContentType(\"application/xml; charset=UTF-8\");\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Complete MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleCompleteRequestComplete(id, xhr, isError) {\n        var promise = pendingCompleteRequests[id],\n            domParser = new DOMParser(),\n            bucket = options.getBucket(id),\n            key = options.getKey(id),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\n\n        delete pendingCompleteRequests[id];\n\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (bucketEls.length && keyEls.length) {\n                if (bucketEls[0].textContent !== bucket) {\n                    isError = true;\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\n                }\n\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\n            }\n            else {\n                isError = true;\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\n            }\n        }\n\n        if (isError) {\n            promise.failure(\"Problem combining the file parts!\", xhr);\n        }\n        else {\n            promise.success({}, xhr);\n        }\n    }\n\n    /**\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\n     */\n    function getCompleteRequestBody(etagEntries) {\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\n\n        // The entries MUST be sorted by part number, per the AWS API spec.\n        etagEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(etagEntries, function(idx, etagEntry) {\n            var part = etagEntry.part,\n                etag = etagEntry.etag,\n                partEl = doc.createElement(\"Part\"),\n                partNumEl = doc.createElement(\"PartNumber\"),\n                partNumTextEl = doc.createTextNode(part),\n                etagTextEl = doc.createTextNode(etag),\n                etagEl = doc.createElement(\"ETag\");\n\n            etagEl.appendChild(etagTextEl);\n            partNumEl.appendChild(partNumTextEl);\n            partEl.appendChild(partNumEl);\n            partEl.appendChild(etagEl);\n            qq(doc).children()[0].appendChild(partEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: \"application/xml; charset=UTF-8\",\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleCompleteRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n         * @returns {qq.Promise}\n         */\n        send: function(id, uploadId, etagEntries) {\n            var promise = new qq.Promise(),\n                body = getCompleteRequestBody(etagEntries);\n\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\n\n                pendingCompleteRequests[id] = promise;\n                delete headers[\"Content-Type\"];\n\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .withPayload(body)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\n * request to S3 via the REST API.\n\n * @param o\n * @constructor\n */\nqq.s3.AbortMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @param id Associated file ID\n     * @param uploadId ID of the associated upload, according to AWS\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\n                .withUploadId(uploadId);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Abort MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleAbortRequestComplete(id, xhr, isError) {\n        var domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\n            awsErrorMsg;\n\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (errorEls.length) {\n                isError = true;\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [\"DELETE\"],\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleAbortRequestComplete,\n        successfulResponseCodes: {\n            DELETE: [204]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Abort\" request.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         */\n        send: function(id, uploadId) {\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            });\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\r\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\r\n *\r\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.s3.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    // need to pre-construct the workerManager\r\n    var workerManager;\r\n    if (spec.signature.workerUrl) {\r\n        workerManager = new qq.s3.RequestSignerWorkerManager({\r\n            workerUrl: spec.signature.workerUrl,\r\n            log: proxy.log,\r\n        });\r\n    }\r\n\r\n    var getName = proxy.getName,\r\n        log = proxy.log,\r\n        clockDrift = spec.clockDrift,\r\n        expectedStatus = 200,\r\n        onGetBucket = spec.getBucket,\r\n        onGetHost = spec.getHost,\r\n        onGetKeyName = spec.getKeyName,\r\n        filenameParam = spec.filenameParam,\r\n        paramsStore = spec.paramsStore,\r\n        endpointStore = spec.endpointStore,\r\n        aclStore = spec.aclStore,\r\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\r\n        region = spec.objectProperties.region,\r\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\r\n        validation = spec.validation,\r\n        signature = qq.extend({region: region, drift: clockDrift, workerManager: workerManager}, spec.signature),\r\n        handler = this,\r\n        credentialsProvider = spec.signature.credentialsProvider,\r\n\r\n        chunked = {\r\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\r\n            // when the response to this request has been parsed.\r\n            combine: function(id) {\r\n                var uploadId = handler._getPersistableData(id).uploadId,\r\n                    etagMap = handler._getPersistableData(id).etags,\r\n                    result = new qq.Promise();\r\n\r\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\r\n                    result.success,\r\n\r\n                    function failure(reason, xhr) {\r\n                        result.failure(upload.done(id, xhr).response, xhr);\r\n                    }\r\n                );\r\n\r\n                return result;\r\n            },\r\n\r\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\r\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\r\n            // in the XML response and store that along with the associated part number.\r\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\r\n            done: function(id, xhr, chunkIdx) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    etag;\r\n\r\n                if (response.success) {\r\n                    etag = xhr.getResponseHeader(\"ETag\");\r\n\r\n                    if (!handler._getPersistableData(id).etags) {\r\n                        handler._getPersistableData(id).etags = [];\r\n                    }\r\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\r\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\r\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\r\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\r\n             * callback.\r\n             *\r\n             * @param id File ID\r\n             * @param chunkIdx Index of the chunk to PUT\r\n             * @returns {qq.Promise}\r\n             */\r\n            initHeaders: function(id, chunkIdx, blob) {\r\n                var headers = {},\r\n                    bucket = upload.bucket.getName(id),\r\n                    host = upload.host.getName(id),\r\n                    key = upload.key.urlSafe(id),\r\n                    promise = new qq.Promise(),\r\n                    signatureConstructor = requesters.restSignature.constructStringToSign\r\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\r\n                        .withPartNum(chunkIdx + 1)\r\n                        .withContent(blob)\r\n                        .withUploadId(handler._getPersistableData(id).uploadId);\r\n\r\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            put: function(id, chunkIdx) {\r\n                var xhr = handler._createXhr(id, chunkIdx),\r\n                    chunkData = handler._getChunkData(id, chunkIdx),\r\n                    domain = spec.endpointStore.get(id),\r\n                    promise = new qq.Promise();\r\n\r\n                // Add appropriate headers to the multipart upload request.\r\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\r\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\r\n                    if (xhr._cancelled) {\r\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\r\n                        promise.failure({error: \"Chunk upload cancelled\"});\r\n                    }\r\n                    else {\r\n                        var url = domain + \"/\" + endOfUrl;\r\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\r\n                        xhr.open(\"PUT\", url, true);\r\n\r\n                        qq.each(headers, function(name, val) {\r\n                            xhr.setRequestHeader(name, val);\r\n                        });\r\n\r\n                        xhr.send(chunkData.blob);\r\n                    }\r\n                }, function() {\r\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            send: function(id, chunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                chunked.setup(id).then(\r\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\r\n                    function() {\r\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\r\n                    },\r\n\r\n                    // We were unable to initiate the chunked upload process.\r\n                    function(errorMessage, xhr) {\r\n                        promise.failure({error: errorMessage}, xhr);\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\r\n             * initiated.\r\n             *\r\n             * @param id Associated file ID\r\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\r\n             */\r\n            setup: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    uploadId = handler._getPersistableData(id).uploadId,\r\n                    uploadIdPromise = new qq.Promise();\r\n\r\n                if (!uploadId) {\r\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\r\n                    requesters.initiateMultipart.send(id).then(\r\n                        function(uploadId) {\r\n                            handler._getPersistableData(id).uploadId = uploadId;\r\n                            uploadIdPromise.success(uploadId);\r\n                            promise.success(uploadId);\r\n                        },\r\n                        function(errorMsg, xhr) {\r\n                            handler._getPersistableData(id).uploadId = null;\r\n                            promise.failure(errorMsg, xhr);\r\n                            uploadIdPromise.failure(errorMsg, xhr);\r\n                        }\r\n                    );\r\n                }\r\n                else if (uploadId instanceof qq.Promise) {\r\n                    uploadId.then(function(uploadId) {\r\n                        promise.success(uploadId);\r\n                    });\r\n                }\r\n                else {\r\n                    promise.success(uploadId);\r\n                }\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        requesters = {\r\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\r\n                filenameParam: filenameParam,\r\n                endpointStore: endpointStore,\r\n                paramsStore: paramsStore,\r\n                signatureSpec: signature,\r\n                aclStore: aclStore,\r\n                reducedRedundancy: reducedRedundancy,\r\n                serverSideEncryption: serverSideEncryption,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getContentType: function(id) {\r\n                    return handler._getMimeType(id);\r\n                },\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                },\r\n                getName: function(id) {\r\n                    return getName(id);\r\n                }\r\n            }),\r\n\r\n            policySignature: new qq.s3.RequestSigner({\r\n                expectingPolicy: true,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            }),\r\n\r\n            restSignature: new qq.s3.RequestSigner({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            })\r\n        },\r\n\r\n        simple = {\r\n            /**\r\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\r\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\r\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\r\n             * due to some error.\r\n             *\r\n             * @param id File ID\r\n             * @returns {qq.Promise}\r\n             */\r\n            initParams: function(id) {\r\n                /*jshint -W040 */\r\n                var customParams = paramsStore.get(id);\r\n                customParams[filenameParam] = getName(id);\r\n\r\n                return qq.s3.util.generateAwsParams({\r\n                    endpoint: endpointStore.get(id),\r\n                    clockDrift: clockDrift,\r\n                    params: customParams,\r\n                    type: handler._getMimeType(id),\r\n                    bucket: upload.bucket.getName(id),\r\n                    key: handler.getThirdPartyFileId(id),\r\n                    accessKey: credentialsProvider.get().accessKey,\r\n                    sessionToken: credentialsProvider.get().sessionToken,\r\n                    acl: aclStore.get(id),\r\n                    expectedStatus: expectedStatus,\r\n                    minFileSize: validation.minSizeLimit,\r\n                    maxFileSize: validation.maxSizeLimit,\r\n                    reducedRedundancy: reducedRedundancy,\r\n                    region: region,\r\n                    serverSideEncryption: serverSideEncryption,\r\n                    signatureVersion: signature.version,\r\n                    log: log\r\n                },\r\n                qq.bind(requesters.policySignature.getSignature, this, id));\r\n            },\r\n\r\n            send: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    xhr = handler._createXhr(id),\r\n                    fileOrBlob = handler.getFile(id);\r\n\r\n                handler._registerProgressHandler(id);\r\n                upload.track(id, xhr).then(promise.success, promise.failure);\r\n\r\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\r\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\r\n                    log(\"Sending upload request for \" + id);\r\n                    xhr.send(toSend);\r\n                }, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\r\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\r\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\r\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\r\n             *\r\n             * Note that this is only used by the simple (non-chunked) upload process.\r\n             *\r\n             * @param id File ID\r\n             * @param xhr XMLHttpRequest to use for the upload\r\n             * @param fileOrBlob `File` or `Blob` to send\r\n             * @returns {qq.Promise}\r\n             */\r\n            setup: function(id, xhr, fileOrBlob) {\r\n                var formData = new FormData(),\r\n                    endpoint = endpointStore.get(id),\r\n                    url = endpoint,\r\n                    promise = new qq.Promise();\r\n\r\n                simple.initParams(id).then(\r\n                    // Success - all params determined\r\n                    function(awsParams) {\r\n                        xhr.open(\"POST\", url, true);\r\n\r\n                        qq.obj2FormData(awsParams, formData);\r\n\r\n                        // AWS requires the file field be named \"file\".\r\n                        formData.append(\"file\", fileOrBlob);\r\n\r\n                        promise.success(formData);\r\n                    },\r\n\r\n                    // Failure - we couldn't determine some params (likely the signature)\r\n                    function(errorMessage) {\r\n                        promise.failure({error: errorMessage});\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        upload = {\r\n            /**\r\n             * Note that this is called when an upload has reached a termination point,\r\n             * regardless of success/failure.  For example, it is called when we have\r\n             * encountered an error during the upload or when the file may have uploaded successfully.\r\n             *\r\n             * @param id file ID\r\n             */\r\n            bucket: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedBucket = handler._getFileState(id).bucket;\r\n\r\n                    if (cachedBucket) {\r\n                        promise.success(cachedBucket);\r\n                    }\r\n                    else {\r\n                        onGetBucket(id).then(function(bucket) {\r\n                            handler._getFileState(id).bucket = bucket;\r\n                            promise.success(bucket);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).bucket;\r\n                }\r\n            },\r\n\r\n            host: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedHost = handler._getFileState(id).host;\r\n\r\n                    if (cachedHost) {\r\n                        promise.success(cachedHost);\r\n                    }\r\n                    else {\r\n                        onGetHost(id).then(function(host) {\r\n                            handler._getFileState(id).host = host;\r\n                            promise.success(host);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).host;\r\n                }\r\n            },\r\n\r\n            done: function(id, xhr) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    isError = response.success !== true;\r\n\r\n                if (isError && upload.response.shouldReset(response.code)) {\r\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\r\n                    response.reset = true;\r\n                }\r\n\r\n                return {\r\n                    success: !isError,\r\n                    response: response\r\n                };\r\n            },\r\n\r\n            key: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        key = handler.getThirdPartyFileId(id);\r\n\r\n                    /* jshint eqnull:true */\r\n                    if (key == null) {\r\n                        handler._setThirdPartyFileId(id, promise);\r\n                        onGetKeyName(id, getName(id)).then(\r\n                            function(keyName) {\r\n                                handler._setThirdPartyFileId(id, keyName);\r\n                                promise.success(keyName);\r\n                            },\r\n                            function(errorReason) {\r\n                                handler._setThirdPartyFileId(id, null);\r\n                                promise.failure(errorReason);\r\n                            }\r\n                        );\r\n                    }\r\n                    else if (qq.isGenericPromise(key)) {\r\n                        key.then(promise.success, promise.failure);\r\n                    }\r\n                    else {\r\n                        promise.success(key);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                urlSafe: function(id) {\r\n                    var encodedKey = handler.getThirdPartyFileId(id);\r\n                    return qq.s3.util.uriEscapePath(encodedKey);\r\n                }\r\n            },\r\n\r\n            response: {\r\n                parse: function(id, xhr) {\r\n                    var response = {},\r\n                        parsedErrorProps;\r\n\r\n                    try {\r\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\r\n\r\n                        if (xhr.status === expectedStatus) {\r\n                            response.success = true;\r\n                        }\r\n                        else {\r\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\r\n\r\n                            if (parsedErrorProps) {\r\n                                response.error = parsedErrorProps.message;\r\n                                response.code = parsedErrorProps.code;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\r\n                    }\r\n\r\n                    return response;\r\n                },\r\n\r\n                /**\r\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\r\n                 *\r\n                 * @param awsResponseXml XML response from AWS\r\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\r\n                 */\r\n                parseError: function(awsResponseXml) {\r\n                    var parser = new DOMParser(),\r\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\r\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\r\n                        errorDetails = {},\r\n                        codeEls, messageEls;\r\n\r\n                    if (errorEls.length) {\r\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\r\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\r\n\r\n                        if (messageEls.length) {\r\n                            errorDetails.message = messageEls[0].textContent;\r\n                        }\r\n\r\n                        if (codeEls.length) {\r\n                            errorDetails.code = codeEls[0].textContent;\r\n                        }\r\n\r\n                        return errorDetails;\r\n                    }\r\n                },\r\n\r\n                // Determine if the upload should be restarted on the next retry attempt\r\n                // based on the error code returned in the response from AWS.\r\n                shouldReset: function(errorCode) {\r\n                    /*jshint -W014 */\r\n                    return errorCode === \"EntityTooSmall\"\r\n                        || errorCode === \"InvalidPart\"\r\n                        || errorCode === \"InvalidPartOrder\"\r\n                        || errorCode === \"NoSuchUpload\";\r\n                }\r\n            },\r\n\r\n            start: function(id, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                upload.key.promise(id).then(function() {\r\n                    upload.bucket.promise(id).then(function() {\r\n                        upload.host.promise(id).then(function() {\r\n                            /* jshint eqnull:true */\r\n                            if (optChunkIdx == null) {\r\n                                simple.send(id).then(promise.success, promise.failure);\r\n                            }\r\n                            else {\r\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\r\n                            }\r\n                        });\r\n                    });\r\n                },\r\n                function(errorReason) {\r\n                    promise.failure({error: errorReason});\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            track: function(id, xhr, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4) {\r\n                        var result;\r\n\r\n                        /* jshint eqnull:true */\r\n                        if (optChunkIdx == null) {\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                        else {\r\n                            chunked.done(id, xhr, optChunkIdx);\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                return promise;\r\n            }\r\n        };\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: upload.start,\r\n        uploadFile: upload.start\r\n    });\r\n\r\n    qq.extend(this, new qq.XhrUploadHandler({\r\n        options: qq.extend({namespace: \"s3\"}, spec),\r\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n    }));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            expunge: function(id) {\r\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\r\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\r\n\r\n                if (uploadId !== undefined && existedInLocalStorage) {\r\n                    requesters.abortMultipart.send(id, uploadId);\r\n                }\r\n\r\n                super_.expunge(id);\r\n            },\r\n\r\n            finalizeChunks: function(id) {\r\n                return chunked.combine(id);\r\n            },\r\n\r\n            _getLocalStorageId: function(id) {\r\n                var baseStorageId = super_._getLocalStorageId(id),\r\n                    bucketName = upload.bucket.getName(id);\r\n\r\n                return baseStorageId + \"-\" + bucketName;\r\n            }\r\n        };\r\n    });\r\n};\r\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\n * AWS API.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        clockDrift = options.clockDrift,\n        onUuidChanged = proxy.onUuidChanged,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        onGetBucket = options.getBucket,\n        onGetKeyName = options.getKeyName,\n        filenameParam = options.filenameParam,\n        paramsStore = options.paramsStore,\n        endpointStore = options.endpointStore,\n        aclStore = options.aclStore,\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\n        region = options.objectProperties.region,\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\n        validation = options.validation,\n        signature = options.signature,\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\n        credentialsProvider = options.signature.credentialsProvider,\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\n            signatureSpec: signature,\n            cors: options.cors,\n            log: log\n        });\n\n    if (successRedirectUrl === undefined) {\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\n    }\n\n    /**\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\n     * have redirected to a known endpoint that should provide a parseable response.\n     *\n     * @param id ID of the associated file\n     * @param iframe target of the form submit\n     * @returns {boolean} true if the contents can be read, false otherwise\n     */\n    function isValidResponse(id, iframe) {\n        var response,\n            endpoint = options.endpointStore.get(id),\n            bucket = handler._getFileState(id).bucket,\n            doc,\n            innerHtml,\n            responseData;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            responseData = qq.s3.util.parseIframeResponse(iframe);\n            if (responseData.bucket === bucket &&\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\n\n                return true;\n            }\n\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\n\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n        }\n\n        return false;\n    }\n\n    function generateAwsParams(id) {\n        /*jshint -W040 */\n        var customParams = paramsStore.get(id);\n\n        customParams[filenameParam] = getName(id);\n\n        return qq.s3.util.generateAwsParams({\n            endpoint: endpointStore.get(id),\n            clockDrift: clockDrift,\n            params: customParams,\n            bucket: handler._getFileState(id).bucket,\n            key: handler.getThirdPartyFileId(id),\n            accessKey: credentialsProvider.get().accessKey,\n            sessionToken: credentialsProvider.get().sessionToken,\n            acl: aclStore.get(id),\n            minFileSize: validation.minSizeLimit,\n            maxFileSize: validation.maxSizeLimit,\n            successRedirectUrl: successRedirectUrl,\n            reducedRedundancy: reducedRedundancy,\n            region: region,\n            serverSideEncryption: serverSideEncryption,\n            signatureVersion: signature.version,\n            log: log\n        },\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            endpoint = options.endpointStore.get(id),\n            fileName = getName(id);\n\n        generateAwsParams(id).then(function(params) {\n            var form = handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: true,\n                targetName: iframe.name\n            });\n\n            promise.success(form);\n        }, function(errorMessage) {\n            promise.failure(errorMessage);\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\n        });\n\n        return promise;\n    }\n\n    function handleUpload(id) {\n        var iframe = handler._createIframe(id),\n            input = handler.getInput(id),\n            promise = new qq.Promise();\n\n        createForm(id, iframe).then(function(form) {\n            form.appendChild(input);\n\n            // Register a callback when the response comes in from S3\n            handler._attachLoadEvent(iframe, function(response) {\n                log(\"iframe loaded\");\n\n                // If the common response handler has determined success or failure immediately\n                if (response) {\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\n                    if (response.success === false) {\n                        log(\"Amazon likely rejected the upload request\", \"error\");\n                        promise.failure(response);\n                    }\n                }\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\n                else {\n                    response = {};\n                    response.success = isValidResponse(id, iframe);\n\n                    // If the more specific response handle detected a problem with the response from S3\n                    if (response.success === false) {\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\n                        promise.failure(response);\n                    }\n                    else {\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\n                        promise.success(response);\n                    }\n                }\n\n                handleFinishedUpload(id, iframe);\n            });\n\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n        }, promise.failure);\n\n        return promise;\n    }\n\n    function handleFinishedUpload(id, iframe) {\n        handler._detachLoadEvent(id);\n        iframe && qq(iframe).remove();\n    }\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: false,\n            inputName: \"file\"\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            onUuidChanged: onUuidChanged,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n\n    qq.extend(this, {\n        uploadFile: function(id) {\n            var name = getName(id),\n                promise = new qq.Promise();\n\n            if (handler.getThirdPartyFileId(id)) {\n                if (handler._getFileState(id).bucket) {\n                    handleUpload(id).then(promise.success, promise.failure);\n                }\n                else {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handleUpload(id).then(promise.success, promise.failure);\n                    });\n                }\n            }\n            else {\n                // The S3 uploader module will either calculate the key or ask the server for it\n                // and will call us back once it is known.\n                onGetKeyName(id, name).then(function(key) {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handler._setThirdPartyFileId(id, key);\n                        handleUpload(id).then(promise.success, promise.failure);\n                    }, function(errorReason) {\n                        promise.failure({error: errorReason});\n                    });\n                }, function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n            }\n\n            return promise;\n        }\n    });\n};\n","\n        qq.s3.createS3InlineWorkerUrl = function () {\n            return URL.createObjectURL(new Blob([\"// Fine Uploader 5.14.5 - (c) 2013-present Widen Enterprises, Inc. MIT licensed. http://fineuploader.com\\nfunction doTask(t,r){\\\"use strict\\\";var n=new FileReader;n.onloadend=function(t){if(t.target.readyState===FileReader.DONE)if(t.target.error)r(JSON.parse(JSON.stringify(t.target.error,null,2)));else{var n=qq.CryptoJS.lib.WordArray.create(t.target.result);r(null,qq.CryptoJS.SHA256(n).toString())}},n.readAsArrayBuffer(t)}qq={},qq.CryptoJS=function(t,r){var n={},e=n.lib={},i=e.Base=function(){function t(){}return{extend:function(r){t.prototype=this;var n=new t;return r&&n.mixIn(r),n.hasOwnProperty(\\\"init\\\")||(n.init=function(){n.$super.init.apply(this,arguments)}),n.init.prototype=n,n.$super=this,n},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},mixIn:function(t){for(var r in t)t.hasOwnProperty(r)&&(this[r]=t[r]);t.hasOwnProperty(\\\"toString\\\")&&(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),s=e.WordArray=i.extend({init:function(t,n){t=this.words=t||[],n!=r?this.sigBytes=n:this.sigBytes=4*t.length},toString:function(t){return(t||o).stringify(this)},concat:function(t){var r=this.words,n=t.words,e=this.sigBytes,i=t.sigBytes;if(this.clamp(),e%4)for(var s=0;s<i;s++){var a=n[s>>>2]>>>24-s%4*8&255;r[e+s>>>2]|=a<<24-(e+s)%4*8}else if(n.length>65535)for(var s=0;s<i;s+=4)r[e+s>>>2]=n[s>>>2];else r.push.apply(r,n);return this.sigBytes+=i,this},clamp:function(){var r=this.words,n=this.sigBytes;r[n>>>2]&=4294967295<<32-n%4*8,r.length=t.ceil(n/4)},clone:function(){var t=i.clone.call(this);return t.words=this.words.slice(0),t},random:function(r){for(var n=[],e=0;e<r;e+=4)n.push(4294967296*t.random()|0);return new s.init(n,r)}}),a=n.enc={},o=a.Hex={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var s=r[i>>>2]>>>24-i%4*8&255;e.push((s>>>4).toString(16)),e.push((15&s).toString(16))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e+=2)n[e>>>3]|=parseInt(t.substr(e,2),16)<<24-e%8*4;return new s.init(n,r/2)}},c=a.Latin1={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var s=r[i>>>2]>>>24-i%4*8&255;e.push(String.fromCharCode(s))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e++)n[e>>>2]|=(255&t.charCodeAt(e))<<24-e%4*8;return new s.init(n,r)}},f=a.Utf8={stringify:function(t){try{return decodeURIComponent(escape(c.stringify(t)))}catch(t){throw new Error(\\\"Malformed UTF-8 data\\\")}},parse:function(t){return c.parse(unescape(encodeURIComponent(t)))}},h=e.BufferedBlockAlgorithm=i.extend({reset:function(){this._data=new s.init,this._nDataBytes=0},_append:function(t){\\\"string\\\"==typeof t&&(t=f.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes},_process:function(r){var n=this._data,e=n.words,i=n.sigBytes,a=this.blockSize,o=4*a,c=i/o;c=r?t.ceil(c):t.max((0|c)-this._minBufferSize,0);var f=c*a,h=t.min(4*f,i);if(f){for(var u=0;u<f;u+=a)this._doProcessBlock(e,u);var l=e.splice(0,f);n.sigBytes-=h}return new s.init(l,h)},clone:function(){var t=i.clone.call(this);return t._data=this._data.clone(),t},_minBufferSize:0}),u=(e.Hasher=h.extend({cfg:i.extend(),init:function(t){this.cfg=this.cfg.extend(t),this.reset()},reset:function(){h.reset.call(this),this._doReset()},update:function(t){return this._append(t),this._process(),this},finalize:function(t){t&&this._append(t);var r=this._doFinalize();return r},blockSize:16,_createHelper:function(t){return function(r,n){return new t.init(n).finalize(r)}},_createHmacHelper:function(t){return function(r,n){return new u.HMAC.init(t,n).finalize(r)}}}),n.algo={});return n}(Math),function(){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=t.enc;e.Base64={stringify:function(t){var r=t.words,n=t.sigBytes,e=this._map;t.clamp();for(var i=[],s=0;s<n;s+=3)for(var a=r[s>>>2]>>>24-s%4*8&255,o=r[s+1>>>2]>>>24-(s+1)%4*8&255,c=r[s+2>>>2]>>>24-(s+2)%4*8&255,f=a<<16|o<<8|c,h=0;h<4&&s+.75*h<n;h++)i.push(e.charAt(f>>>6*(3-h)&63));var u=e.charAt(64);if(u)for(;i.length%4;)i.push(u);return i.join(\\\"\\\")},parse:function(t){var r=t.length,e=this._map,i=e.charAt(64);if(i){var s=t.indexOf(i);s!=-1&&(r=s)}for(var a=[],o=0,c=0;c<r;c++)if(c%4){var f=e.indexOf(t.charAt(c-1))<<c%4*2,h=e.indexOf(t.charAt(c))>>>6-c%4*2;a[o>>>2]|=(f|h)<<24-o%4*8,o++}return n.create(a,o)},_map:\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\"}}(),function(){var t=qq.CryptoJS,r=t.lib,n=r.Base,e=t.enc,i=e.Utf8,s=t.algo;s.HMAC=n.extend({init:function(t,r){t=this._hasher=new t.init,\\\"string\\\"==typeof r&&(r=i.parse(r));var n=t.blockSize,e=4*n;r.sigBytes>e&&(r=t.finalize(r)),r.clamp();for(var s=this._oKey=r.clone(),a=this._iKey=r.clone(),o=s.words,c=a.words,f=0;f<n;f++)o[f]^=1549556828,c[f]^=909522486;s.sigBytes=a.sigBytes=e,this.reset()},reset:function(){var t=this._hasher;t.reset(),t.update(this._iKey)},update:function(t){return this._hasher.update(t),this},finalize:function(t){var r=this._hasher,n=r.finalize(t);r.reset();var e=r.finalize(this._oKey.clone().concat(n));return e}})}(),function(){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=r.Hasher,i=t.algo,s=[],a=i.SHA1=e.extend({_doReset:function(){this._hash=new n.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],a=n[2],o=n[3],c=n[4],f=0;f<80;f++){if(f<16)s[f]=0|t[r+f];else{var h=s[f-3]^s[f-8]^s[f-14]^s[f-16];s[f]=h<<1|h>>>31}var u=(e<<5|e>>>27)+c+s[f];u+=f<20?(i&a|~i&o)+1518500249:f<40?(i^a^o)+1859775393:f<60?(i&a|i&o|a&o)-1894007588:(i^a^o)-899497514,c=o,o=a,a=i<<30|i>>>2,i=e,e=u}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+a|0,n[3]=n[3]+o|0,n[4]=n[4]+c|0},_doFinalize:function(){var t=this._data,r=t.words,n=8*this._nDataBytes,e=8*t.sigBytes;return r[e>>>5]|=128<<24-e%32,r[(e+64>>>9<<4)+14]=Math.floor(n/4294967296),r[(e+64>>>9<<4)+15]=n,t.sigBytes=4*r.length,this._process(),this._hash},clone:function(){var t=e.clone.call(this);return t._hash=this._hash.clone(),t}});t.SHA1=e._createHelper(a),t.HmacSHA1=e._createHmacHelper(a)}(),function(t){var r=qq.CryptoJS,n=r.lib,e=n.WordArray,i=n.Hasher,s=r.algo,a=[],o=[];!function(){function r(r){for(var n=t.sqrt(r),e=2;e<=n;e++)if(!(r%e))return!1;return!0}function n(t){return 4294967296*(t-(0|t))|0}for(var e=2,i=0;i<64;)r(e)&&(i<8&&(a[i]=n(t.pow(e,.5))),o[i]=n(t.pow(e,1/3)),i++),e++}();var c=[],f=s.SHA256=i.extend({_doReset:function(){this._hash=new e.init(a.slice(0))},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],s=n[2],a=n[3],f=n[4],h=n[5],u=n[6],l=n[7],p=0;p<64;p++){if(p<16)c[p]=0|t[r+p];else{var d=c[p-15],y=(d<<25|d>>>7)^(d<<14|d>>>18)^d>>>3,g=c[p-2],v=(g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10;c[p]=y+c[p-7]+v+c[p-16]}var _=f&h^~f&u,w=e&i^e&s^i&s,A=(e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22),B=(f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25),S=l+B+_+o[p]+c[p],m=A+w;l=u,u=h,h=f,f=a+S|0,a=s,s=i,i=e,e=S+m|0}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+s|0,n[3]=n[3]+a|0,n[4]=n[4]+f|0,n[5]=n[5]+h|0,n[6]=n[6]+u|0,n[7]=n[7]+l|0},_doFinalize:function(){var r=this._data,n=r.words,e=8*this._nDataBytes,i=8*r.sigBytes;return n[i>>>5]|=128<<24-i%32,n[(i+64>>>9<<4)+14]=t.floor(e/4294967296),n[(i+64>>>9<<4)+15]=e,r.sigBytes=4*n.length,this._process(),this._hash},clone:function(){var t=i.clone.call(this);return t._hash=this._hash.clone(),t}});r.SHA256=i._createHelper(f),r.HmacSHA256=i._createHmacHelper(f)}(Math),function(){if(\\\"function\\\"==typeof ArrayBuffer){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=n.init,i=n.init=function(t){if(t instanceof ArrayBuffer&&(t=new Uint8Array(t)),(t instanceof Int8Array||t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)&&(t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),t instanceof Uint8Array){for(var r=t.byteLength,n=[],i=0;i<r;i++)n[i>>>2]|=t[i]<<24-i%4*8;e.call(this,n,r)}else e.apply(this,arguments)};i.prototype=n}}(),onmessage=function(t){\\\"use strict\\\";doTask(t.data.file,function(r,n){postMessage({err:r,resp:n,id:t.data.id})})};\\n//# sourceMappingURL=s3.fine-uploader.worker.js.map\"], {type: \"application/javascript\"}));\n        };\n    ","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\n * in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"s3\");\n\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\n        }\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\n}());\n","/*globals qq */\nqq.azure = qq.azure || {};\nqq.azure.util = qq.azure.util || (function() {\n    \"use strict\";\n\n    return {\n        AZURE_PARAM_PREFIX: \"x-ms-meta-\",\n\n        /** Test if a request header is actually a known Azure parameter. See: https://msdn.microsoft.com/en-us/library/azure/dd179451.aspx\n         *\n         * @param name Name of the Request Header parameter.\n         * @returns {Boolean} Test result.\n         */\n        _paramNameMatchesAzureParameter: function(name) {\n            switch (name) {\n                case \"Cache-Control\":\n                case \"Content-Disposition\":\n                case \"Content-Encoding\":\n                case \"Content-MD5\":\n                case \"x-ms-blob-content-encoding\":\n                case \"x-ms-blob-content-disposition\":\n                case \"x-ms-blob-content-md5\":\n                case \"x-ms-blob-cache-control\":\n                    return true;\n                default:\n                    return false;\n            }\n        },\n\n        /** Create Prefixed request headers which are appropriate for Azure.\n         *\n         * If the request header is appropriate for Azure (e.g. Cache-Control) then it should be\n         * passed along without a metadata prefix. For all other request header parameter names,\n         * qq.azure.util.AZURE_PARAM_PREFIX should be prepended.\n         *\n         * @param name Name of the Request Header parameter to construct a (possibly) prefixed name.\n         * @returns {String} A valid Request Header parameter name.\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                return name;\n            }\n            else {\n                return qq.azure.util.AZURE_PARAM_PREFIX + name;\n            }\n        },\n\n        getParamsAsHeaders: function(params) {\n            var headers = {};\n\n            qq.each(params, function(name, val) {\n                var headerName = qq.azure.util._getPrefixedParamName(name),\n                    value = null;\n\n                if (qq.isFunction(val)) {\n                    value = String(val());\n                }\n                else if (qq.isObject(val)) {\n                    qq.extend(headers, qq.azure.util.getParamsAsHeaders(val));\n                }\n                else {\n                    value = String(val);\n                }\n\n                if (value !== null) {\n                    if (qq.azure.util._paramNameMatchesAzureParameter(name)) {\n                        headers[headerName] = value;\n                    } else {\n                        headers[headerName] = encodeURIComponent(value);\n                    }\n                }\n            });\n\n            return headers;\n        },\n\n        parseAzureError: function(responseText, log) {\n            var domParser = new DOMParser(),\n                responseDoc = domParser.parseFromString(responseText, \"application/xml\"),\n                errorTag = responseDoc.getElementsByTagName(\"Error\")[0],\n                errorDetails = {},\n                codeTag, messageTag;\n\n            log(\"Received error response: \" + responseText, \"error\");\n\n            if (errorTag) {\n                messageTag = errorTag.getElementsByTagName(\"Message\")[0];\n                if (messageTag) {\n                    errorDetails.message = messageTag.textContent;\n                }\n\n                codeTag = errorTag.getElementsByTagName(\"Code\")[0];\n                if (codeTag) {\n                    errorDetails.code = codeTag.textContent;\n                }\n\n                log(\"Parsed Azure error: \" + JSON.stringify(errorDetails), \"error\");\n\n                return errorDetails;\n            }\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to Azure.\n * Some inherited options and API methods have a special meaning in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploaderBasic = function(o) {\n        if (!qq.supportedFeatures.ajaxUploading) {\n            throw new qq.Error(\"Uploading directly to Azure is not possible in this browser.\");\n        }\n\n        var options = {\n            signature: {\n                endpoint: null,\n\n                customHeaders: {}\n            },\n\n            // 'uuid', 'filename', or a function which may be promissory\n            blobProperties: {\n                name: \"uuid\"\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            chunking: {\n                // If this is increased, Azure may respond with a 413\n                partSize: 4000000,\n                // Don't chunk files less than this size\n                minFileSize: 4000001\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds blob names for file representations constructed from a session request.\n        this._cannedBlobNames = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.azure.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploaderBasic.prototype, {\n        getBlobName: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedBlobNames[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n            return this._cannedBlobNames[id];\n        },\n\n        _getEndpointSpecificParams: function(id) {\n            return {\n                blob: this.getBlobName(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                container: this._endpointStore.get(id)\n            };\n        },\n\n        _createUploadHandler: function() {\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this,\n                {\n                    signature: this._options.signature,\n                    onGetBlobName: qq.bind(this._determineBlobName, this),\n                    deleteBlob: qq.bind(this._deleteBlob, this, true)\n                },\n                \"azure\");\n        },\n\n        _determineBlobName: function(id) {\n            var self = this,\n                blobNameOptionValue = this._options.blobProperties.name,\n                uuid = this.getUuid(id),\n                filename = this.getName(id),\n                fileExtension = qq.getExtension(filename),\n                blobNameToUse = uuid;\n\n            if (qq.isString(blobNameOptionValue)) {\n                switch (blobNameOptionValue) {\n                    case \"uuid\":\n                        if (fileExtension !== undefined) {\n                            blobNameToUse += \".\" + fileExtension;\n                        }\n                        return new qq.Promise().success(blobNameToUse);\n                    case \"filename\":\n                        return new qq.Promise().success(filename);\n                    default:\n                        return new qq.Promise.failure(\"Invalid blobName option value - \" + blobNameOptionValue);\n                }\n            }\n            else {\n                return blobNameOptionValue.call(this, id);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.blobName == null) {\n                throw new qq.Error(\"Did not find blob name property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedBlobNames[id] = sessionData.blobName;\n            }\n\n            return id;\n        },\n\n        _deleteBlob: function(relatedToCancel, id) {\n            var self = this,\n                deleteBlobSasUri = {},\n                blobUriStore = {\n                    get: function(id) {\n                        return self._endpointStore.get(id) + \"/\" + self.getBlobName(id);\n                    }\n                },\n                deleteFileEndpointStore = {\n                    get: function(id) {\n                        return deleteBlobSasUri[id];\n                    }\n                },\n                getSasSuccess = function(id, sasUri) {\n                    deleteBlobSasUri[id] = sasUri;\n                    deleteBlob.send(id);\n                },\n                getSasFailure = function(id, reason, xhr) {\n                    if (relatedToCancel) {\n                        self.log(\"Will cancel upload, but cannot remove uncommitted parts from Azure due to issue retrieving SAS\", \"error\");\n                        qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                    }\n                    else {\n                        self._onDeleteComplete(id, xhr, true);\n                        self._options.callbacks.onDeleteComplete(id, xhr, true);\n                    }\n                },\n                deleteBlob = new qq.azure.DeleteBlob({\n                    endpointStore: deleteFileEndpointStore,\n                    log: qq.bind(self.log, self),\n                    onDelete: function(id) {\n                        self._onDelete(id);\n                        self._options.callbacks.onDelete(id);\n                    },\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {\n                        delete deleteBlobSasUri[id];\n\n                        if (isError) {\n                            if (relatedToCancel) {\n                                self.log(\"Will cancel upload, but failed to remove uncommitted parts from Azure.\", \"error\");\n                            }\n                            else {\n                                qq.azure.util.parseAzureError(xhrOrXdr.responseText, qq.bind(self.log, self));\n                            }\n                        }\n\n                        if (relatedToCancel) {\n                            qq.FineUploaderBasic.prototype._onCancel.call(self, id, self.getName(id));\n                            self.log(\"Deleted uncommitted blob chunks for \" + id);\n                        }\n                        else {\n                            self._onDeleteComplete(id, xhrOrXdr, isError);\n                            self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                        }\n                    }\n                }),\n                getSas = new qq.azure.GetSas({\n                    cors: this._options.cors,\n                    customHeaders: this._options.signature.customHeaders,\n                    endpointStore: {\n                        get: function() {\n                            return self._options.signature.endpoint;\n                        }\n                    },\n                    restRequestVerb: deleteBlob.method,\n                    log: qq.bind(self.log, self)\n                });\n\n            getSas.request(id, blobUriStore.get(id)).then(\n                qq.bind(getSasSuccess, self, id),\n                qq.bind(getSasFailure, self, id));\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return {\n                sendDelete: function(id, uuid) {\n                    self._deleteBlob(false, id);\n                }\n            };\n        }\n    });\n}());\n","/*globals qq */\n/**\n * Upload handler used by the upload to Azure module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to Azure Blob Storage containers via the\n * associated Azure API.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\n// TODO l18n for error messages returned to UI\nqq.azure.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        log = proxy.log,\n        cors = spec.cors,\n        endpointStore = spec.endpointStore,\n        paramsStore = spec.paramsStore,\n        signature = spec.signature,\n        filenameParam = spec.filenameParam,\n        minFileSizeForChunking = spec.chunking.minFileSize,\n        deleteBlob = spec.deleteBlob,\n        onGetBlobName = spec.onGetBlobName,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n\n        getBlobMetadata = function(id) {\n            var params = paramsStore.get(id);\n            params[filenameParam] = getName(id);\n            return params;\n        },\n\n        api = {\n            putBlob: new qq.azure.PutBlob({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            putBlock: new qq.azure.PutBlock({\n                log: log\n            }),\n\n            putBlockList: new qq.azure.PutBlockList({\n                getBlobMetadata: getBlobMetadata,\n                log: log\n            }),\n\n            getSasForPutBlobOrBlock: new qq.azure.GetSas({\n                cors: cors,\n                customHeaders: signature.customHeaders,\n                endpointStore: {\n                    get: function() {\n                        return signature.endpoint;\n                    }\n                },\n                log: log,\n                restRequestVerb: \"PUT\"\n            })\n        };\n\n    function combineChunks(id) {\n        var promise = new qq.Promise();\n\n        getSignedUrl(id).then(function(sasUri) {\n            var mimeType = handler._getMimeType(id),\n                blockIdEntries = handler._getPersistableData(id).blockIdEntries;\n\n            api.putBlockList.send(id, sasUri, blockIdEntries, mimeType, function(xhr) {\n                handler._registerXhr(id, null, xhr, api.putBlockList);\n            })\n                .then(function(xhr) {\n                    log(\"Success combining chunks for id \" + id);\n                    promise.success({}, xhr);\n                }, function(xhr) {\n                    log(\"Attempt to combine chunks failed for id \" + id, \"error\");\n                    handleFailure(xhr, promise);\n                });\n\n        },\n        promise.failure);\n\n        return promise;\n    }\n\n    function determineBlobUrl(id) {\n        var containerUrl = endpointStore.get(id),\n            promise = new qq.Promise(),\n            getBlobNameSuccess = function(blobName) {\n                handler._setThirdPartyFileId(id, blobName);\n                promise.success(containerUrl + \"/\" + blobName);\n            },\n            getBlobNameFailure = function(reason) {\n                promise.failure(reason);\n            };\n\n        onGetBlobName(id).then(getBlobNameSuccess, getBlobNameFailure);\n\n        return promise;\n    }\n\n    function getSignedUrl(id, optChunkIdx) {\n        // We may have multiple SAS requests in progress for the same file, so we must include the chunk idx\n        // as part of the ID when communicating with the SAS ajax requester to avoid collisions.\n        var getSasId = optChunkIdx == null ? id : id + \".\" + optChunkIdx,\n\n            promise = new qq.Promise(),\n            getSasSuccess = function(sasUri) {\n                log(\"GET SAS request succeeded.\");\n                promise.success(sasUri);\n            },\n            getSasFailure = function(reason, getSasXhr) {\n                log(\"GET SAS request failed: \" + reason, \"error\");\n                promise.failure({error: \"Problem communicating with local server\"}, getSasXhr);\n            },\n            determineBlobUrlSuccess = function(blobUrl) {\n                api.getSasForPutBlobOrBlock.request(getSasId, blobUrl).then(\n                    getSasSuccess,\n                    getSasFailure\n                );\n            },\n            determineBlobUrlFailure = function(reason) {\n                log(qq.format(\"Failed to determine blob name for ID {} - {}\", id, reason), \"error\");\n                promise.failure({error: reason});\n            };\n\n        determineBlobUrl(id).then(determineBlobUrlSuccess, determineBlobUrlFailure);\n\n        return promise;\n    }\n\n    function handleFailure(xhr, promise) {\n        var azureError = qq.azure.util.parseAzureError(xhr.responseText, log),\n            errorMsg = \"Problem sending file to Azure\";\n\n        promise.failure({error: errorMsg,\n            azureError: azureError && azureError.message,\n            reset: xhr.status === 403\n        });\n    }\n\n    qq.extend(this, {\n        uploadChunk: function(id, chunkIdx) {\n            var promise = new qq.Promise();\n\n            getSignedUrl(id, chunkIdx).then(\n                function(sasUri) {\n                    var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx);\n\n                    handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                    handler._registerXhr(id, chunkIdx, xhr, api.putBlock);\n\n                    // We may have multiple put block requests in progress for the same file, so we must include the chunk idx\n                    // as part of the ID when communicating with the put block ajax requester to avoid collisions.\n                    api.putBlock.upload(id + \".\" + chunkIdx, xhr, sasUri, chunkIdx, chunkData.blob).then(\n                        function(blockIdEntry) {\n                            if (!handler._getPersistableData(id).blockIdEntries) {\n                                handler._getPersistableData(id).blockIdEntries = [];\n                            }\n\n                            handler._getPersistableData(id).blockIdEntries.push(blockIdEntry);\n                            log(\"Put Block call succeeded for \" + id);\n                            promise.success({}, xhr);\n                        },\n                        function() {\n                            log(qq.format(\"Put Block call failed for ID {} on part {}\", id, chunkIdx), \"error\");\n                            handleFailure(xhr, promise);\n                        }\n                    );\n                },\n                promise.failure\n            );\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var promise = new qq.Promise(),\n                fileOrBlob = handler.getFile(id);\n\n            getSignedUrl(id).then(function(sasUri) {\n                var xhr = handler._createXhr(id);\n\n                handler._registerProgressHandler(id);\n\n                api.putBlob.upload(id, xhr, sasUri, fileOrBlob).then(\n                    function() {\n                        log(\"Put Blob call succeeded for \" + id);\n                        promise.success({}, xhr);\n                    },\n                    function() {\n                        log(\"Put Blob call failed for \" + id, \"error\");\n                        handleFailure(xhr, promise);\n                    }\n                );\n            },\n            promise.failure);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this,\n        new qq.XhrUploadHandler({\n            options: qq.extend({namespace: \"azure\"}, spec),\n            proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n        }\n    ));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var relatedToCancel = handler._wasCanceled(id),\n                    chunkingData = handler._getPersistableData(id),\n                    blockIdEntries = (chunkingData && chunkingData.blockIdEntries) || [];\n\n                if (relatedToCancel && blockIdEntries.length > 0) {\n                    deleteBlob(id);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return combineChunks(id);\n            },\n\n            _shouldChunkThisFile: function(id) {\n                var maybePossible = super_._shouldChunkThisFile(id);\n                return maybePossible && getSize(id) >= minFileSizeForChunking;\n            }\n        };\n    });\n};\n","/* globals qq */\n/**\n * Sends a GET request to the integrator's server, which should return a Shared Access Signature URI used to\n * make a specific request on a Blob via the Azure REST API.\n */\nqq.azure.GetSas = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            customHeaders: {},\n            restRequestVerb: \"PUT\",\n            endpointStore: null,\n            log: function(str, level) {}\n        },\n        requestPromises = {};\n\n    qq.extend(options, o);\n\n    function sasResponseReceived(id, xhr, isError) {\n        var promise = requestPromises[id];\n\n        if (isError) {\n            promise.failure(\"Received response code \" + xhr.status, xhr);\n        }\n        else {\n            if (xhr.responseText.length) {\n                promise.success(xhr.responseText);\n            }\n            else {\n                promise.failure(\"Empty response.\", xhr);\n            }\n        }\n\n        delete requestPromises[id];\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        successfulResponseCodes: {\n            GET: [200]\n        },\n        contentType: null,\n        customHeaders: options.customHeaders,\n        endpointStore: options.endpointStore,\n        cors: options.cors,\n        log: options.log,\n        onComplete: sasResponseReceived\n    }));\n\n    qq.extend(this, {\n        request: function(id, blobUri) {\n            var requestPromise = new qq.Promise(),\n                restVerb = options.restRequestVerb;\n\n            options.log(qq.format(\"Submitting GET SAS request for a {} REST request related to file ID {}.\", restVerb, id));\n\n            requestPromises[id] = requestPromise;\n\n            requester.initTransport(id)\n                .withParams({\n                    bloburi: blobUri,\n                    _method: restVerb\n                })\n                .withCacheBuster()\n                .send();\n\n            return requestPromise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Delete Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179413.aspx.\n */\nqq.azure.DeleteBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"DELETE\",\n        options = {\n            endpointStore: {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhr, isError) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [202];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: options.endpointStore,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete\n    }));\n\n    qq.extend(this, {\n        method: method,\n        send: function(id) {\n            options.log(\"Submitting Delete Blob request for \" + id);\n\n            return requester.initTransport(id)\n                .send();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Blob Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179451.aspx.\n */\nqq.azure.PutBlob = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id),\n                headers = qq.azure.util.getParamsAsHeaders(params);\n\n            headers[\"x-ms-blob-type\"] = \"BlockBlob\";\n\n            return headers;\n        },\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success();\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, url, file) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting Put Blob request for \" + id);\n\n            promises[id] = promise;\n            endpoints[id] = url;\n\n            requester.initTransport(id)\n                .withPayload(file)\n                .withHeaders({\"Content-Type\": file.type})\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd135726.aspx.\n */\nqq.azure.PutBlock = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        blockIdEntries = {},\n        promises = {},\n        options = {\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        contentType: null,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id],\n                blockIdEntry = blockIdEntries[id];\n\n            delete endpoints[id];\n            delete promises[id];\n            delete blockIdEntries[id];\n\n            if (isError) {\n                promise.failure();\n            }\n            else {\n                promise.success(blockIdEntry);\n            }\n        }\n    }));\n\n    function createBlockId(partNum) {\n        var digits = 5,\n            zeros = new Array(digits + 1).join(\"0\"),\n            paddedPartNum = (zeros + partNum).slice(-digits);\n\n        return btoa(paddedPartNum);\n    }\n\n    qq.extend(this, {\n        method: method,\n        upload: function(id, xhr, sasUri, partNum, blob) {\n            var promise = new qq.Promise(),\n                blockId = createBlockId(partNum);\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block request for {} = part {}\", id, partNum));\n\n            endpoints[id] = qq.format(\"{}&comp=block&blockid={}\", sasUri, encodeURIComponent(blockId));\n            blockIdEntries[id] = {part: partNum, id: blockId};\n\n            requester.initTransport(id)\n                .withPayload(blob)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Implements the Put Block List Azure REST API call.  http://msdn.microsoft.com/en-us/library/windowsazure/dd179467.aspx.\n */\nqq.azure.PutBlockList = function(o) {\n    \"use strict\";\n\n    var requester,\n        method = \"PUT\",\n        promises = {},\n        options = {\n            getBlobMetadata: function(id) {},\n            log: function(str, level) {}\n        },\n        endpoints = {},\n        endpointHandler = {\n            get: function(id) {\n                return endpoints[id];\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [method],\n        method: method,\n        successfulResponseCodes: (function() {\n            var codes = {};\n            codes[method] = [201];\n            return codes;\n        }()),\n        customHeaders: function(id) {\n            var params = options.getBlobMetadata(id);\n\n            return qq.azure.util.getParamsAsHeaders(params);\n        },\n        contentType: \"text/plain\",\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: {\n            expected: true\n        },\n        log: options.log,\n        onSend: function() {},\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete endpoints[id];\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n\n        }\n    }));\n\n    function createRequestBody(blockIdEntries) {\n        var doc = document.implementation.createDocument(null, \"BlockList\", null);\n\n        // If we don't sort the block ID entries by part number, the file will be combined incorrectly by Azure\n        blockIdEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(blockIdEntries, function(idx, blockIdEntry) {\n            var latestEl = doc.createElement(\"Latest\"),\n                latestTextEl = doc.createTextNode(blockIdEntry.id);\n\n            latestEl.appendChild(latestTextEl);\n            qq(doc).children()[0].appendChild(latestEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    qq.extend(this, {\n        method: method,\n        send: function(id, sasUri, blockIdEntries, fileMimeType, registerXhrCallback) {\n            var promise = new qq.Promise(),\n                blockIdsXml = createRequestBody(blockIdEntries),\n                xhr;\n\n            promises[id] = promise;\n\n            options.log(qq.format(\"Submitting Put Block List request for {}\", id));\n\n            endpoints[id] = qq.format(\"{}&comp=blocklist\", sasUri);\n\n            xhr = requester.initTransport(id)\n                .withPayload(blockIdsXml)\n                .withHeaders({\"x-ms-blob-content-type\": fileMimeType})\n                .send();\n            registerXhrCallback(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to Azure, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to Azure.\n * This module inherits all logic from UI & core mode and adds some UI-related logic\n * specific to the upload-to-Azure workflow.  Some inherited options and API methods have a special meaning\n * in the context of the Azure uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.azure.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from azure.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"azure\");\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.azure.FineUploader.prototype, qq.azure.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.azure.FineUploader.prototype, qq.uiPrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.azure.FineUploader.prototype, {\n    });\n}());\n"]}