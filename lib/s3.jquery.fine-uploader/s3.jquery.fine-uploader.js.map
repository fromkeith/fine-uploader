{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/s3/jquery-plugin.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/third-party/crypto-js/core.js","../client/js/third-party/crypto-js/enc-base64.js","../client/js/third-party/crypto-js/hmac.js","../client/js/third-party/crypto-js/sha1.js","../client/js/third-party/crypto-js/sha256.js","../client/js/third-party/crypto-js/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.worker-manager.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","s3.fine-uploader.worker-inline.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/s3/uploader.js"],"names":["global","$","$el","pluginOptions","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","originalArgs","Array","prototype","call","arguments","transformedArgs","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","xformedArgs","origArgs","retVal","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","rootDataKey","dropZoneElements","dnd","DragAndDrop","func","$callbackEl","args","jqueryHandlerResult","fineUploaderDnd","fineUploaderS3","endpointType","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","intArray","mimeString","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","strBefore","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","testSupportsFileInputElement","supported","tempInput","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","disposeSupport","acceptFiles","focusClass","folders","hoverClass","ios8BrowserCrashWorkaround","onChange","title","buttonId","createInput","BUTTON_ID_ATTR_NAME","setMultiple","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","byUuid","byStatus","byProxyGroupId","byBatchId","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","dataIndex","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","promiseToReturn","fileOrUrl","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","fileRecord","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","accept","validation","allowedExtensions","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","messages","names","validationBase","extensionsForMessage","placeholderMatch","replacement","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","shouldParamsBeInQueryString","queue","requestData","acceptHeader","validMethods","contentType","mandatedParams","allowXRequestedWithAndCacheControl","successfulResponseCodes","DELETE","PATCH","POST","PUT","GET","onSend","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","dequeue","nextId","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","optXhr","payload","url","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","setRequestHeader","responseCode","prepareToSend","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","controller","chunkingPossible","concurrentChunkingPossible","preventRetryResponse","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","responseToReport","inProgressIdx","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","alreadyInWaiting","alreadyInOpen","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","formHandlerInstanceId","onloadCallbacks","detachLoadEvents","postMessageCallbackTimers","isCors","corsMessageReceiver","expungeFile","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","_parseJsonResponse","onloadCallback","_detachLoadEvent","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","chunkFiles","resumeEnabled","xhrId","ajaxRequester","_getAjaxRequester","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","requester","getMandatedParams","_method","detectSubsampling","img","iw","naturalWidth","ih","naturalHeight","ctx","width","getContext","drawImage","getImageData","detectVerticalSquash","sy","ey","py","alpha","ratio","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","d","tmpCanvas","vertSquashRatio","dw","dh","dy","tmpCtx","sx","dx","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","imgWidth","imgHeight","opt","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetAnchor","targetProtocol","targetHostname","targetPort","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","rendered","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","TAG_IDS","TAG_INFO","274","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","vals","idHex","tagsToFindIdx","tagValHex","tagValLength","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","detachPasteHandler","isImage","registerPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","formEl","_form2Obj","determineNewEndpoint","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","CryptoJS","C","C_lib","lib","Base","F","overrides","subtype","mixIn","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","Hasher","cfg","_doReset","update","messageUpdate","hash","_doFinalize","_createHelper","hasher","_createHmacHelper","C_algo","HMAC","algo","Base64","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","paddingIndex","bits1","bits2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","subInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","patterns","bucket","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","awsParams","customParams","policyJson","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","minutesToAdd","pad","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","doc","contentWindow","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","submitSuccessRequest","successAjaxRequester","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSignerWorkerManager","worker","workerPromises","workerUrl","createS3InlineWorkerUrl","Worker","outstandingRequests","onmessage","resp","generateSignature","task","RequestSigner","thisSignatureRequester","pendingSignatures","expectingPolicy","signatureSpec","generateHeaders","signatureConstructor","getHeaders","getToSignPromise","Authorization","getRequestDate","getSignedHeaders","getEndOfUrl","v2","getStringToSign","contentMd5","headersStr","endOfUrl","signApiRequest","signatureEffort","headersWordArray","headersHmacSha1","headersHmacSha1Base64","signPolicy","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","v4","getCanonicalQueryString","endOfUri","queryParamIdx","canonicalQueryString","encodedQueryParams","encodedQueryParamNames","queryStrings","nameAndVal","paramVal","forEach","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","headerNames","hashedContent","getEncodedHashedPayload","workerManager","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","stringToSignTemplate","hashed","raw","signedHeaders","headerName","headersPattern","matches","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","credentialPattern","credentialCondition","credential","condition","handleSignatureReceived","responseJson","pendingSignatureData","invalid","getStringToSignArtifacts","requestInfo","toSign","generateStringToSign","headerIndexesToRemove","headerIdx","toSignRaw","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","content","Host","determineSignatureClientSide","toBeSigned","updatedHeaders","getToSign","signatureArtifacts","stringToSign","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","pendingRequests","handleSuccessResponse","successIndicator","failureIndicator","parsedResponse","InitiateMultipartAjaxRequester","pendingInitiateRequests","getContentType","getSignatureAjaxRequester","handleInitiateRequestComplete","domParser","DOMParser","responseDoc","parseFromString","uploadIdElements","messageElements","CompleteMultipartAjaxRequester","pendingCompleteRequests","handleCompleteRequestComplete","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","errorEls","awsErrorMsg","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","toSend","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","parsedDoc","errorDetails","codeEls","messageEls","existedInLocalStorage","baseStorageId","bucketName","isValidResponse","innerHtml","responseData","createForm","handleFinishedUpload","handleUpload","HIDE_ZONES_EVENT_NAME","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","droppedFiles","allowMultipleItems","dropActive","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","fileError","isDirectory","getFilesInDirectory","allEntriesRead","entriesLeft","readFailure","accumEntries","existingPromise","dirReader","createReader","readEntries","readSuccess","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","onEnter","stopPropagation","onLeaveNotDescendants","onDrop","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","preventDrop","dropOutsideDisabled","dragoverShouldBeCanceled","disableDropOutside","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","triggerHidezonesEvent","hideZonesEvent","triggerUsingOldApi","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","parentRetVal","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","createDocumentFragment","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","fileEl","fileNameEl","thumb","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","attachTo","onHandled","srcElement","getFileIdFromItem","qqFileId","getDisposeSupport","inheritedInternalApi","buttonHandlers","examineEvent","buttonType","firstLetterCapButtonType","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"s3.jquery.fine-uploader.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery*/\n/**\n * Simply an alias for the `fineUploader` plug-in wrapper, but hides the required `endpointType` option from the\n * integrator.  I thought it may be confusing to convey to the integrator that, when using Fine Uploader in S3 mode,\n * you need to specify an `endpointType` with a value of S3, and perhaps an `uploaderType` with a value of \"basic\" if\n * you want to use basic mode when uploading directly to S3 as well.  So, you can use this plug-in alias and not worry\n * about the `endpointType` option at all.\n */\n(function($) {\n    \"use strict\";\n\n    $.fn.fineUploaderS3 = function(optionsOrCommand) {\n        if (typeof optionsOrCommand === \"object\") {\n\n            // This option is used to tell the plug-in wrapper to instantiate the appropriate S3-namespace modules.\n            optionsOrCommand.endpointType = \"s3\";\n        }\n\n        return $.fn.fineUploader.apply(this, arguments);\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\r\nqq.version = \"5.14.4\";\r\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\r\nqq.UploadData = function(uploaderProxy) {\r\n    \"use strict\";\r\n\r\n    var data = [],\r\n        byUuid = {},\r\n        byStatus = {},\r\n        byProxyGroupId = {},\r\n        byBatchId = {};\r\n\r\n    function getDataByIds(idOrIds) {\r\n        if (qq.isArray(idOrIds)) {\r\n            var entries = [];\r\n\r\n            qq.each(idOrIds, function(idx, id) {\r\n                entries.push(data[id]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[idOrIds];\r\n    }\r\n\r\n    function getDataByUuids(uuids) {\r\n        if (qq.isArray(uuids)) {\r\n            var entries = [];\r\n\r\n            qq.each(uuids, function(idx, uuid) {\r\n                entries.push(data[byUuid[uuid]]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[byUuid[uuids]];\r\n    }\r\n\r\n    function getDataByStatus(status) {\r\n        var statusResults = [],\r\n            statuses = [].concat(status);\r\n\r\n        qq.each(statuses, function(index, statusEnum) {\r\n            var statusResultIndexes = byStatus[statusEnum];\r\n\r\n            if (statusResultIndexes !== undefined) {\r\n                qq.each(statusResultIndexes, function(i, dataIndex) {\r\n                    statusResults.push(data[dataIndex]);\r\n                });\r\n            }\r\n        });\r\n\r\n        return statusResults;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds a new file to the data cache for tracking purposes.\r\n         *\r\n         * @param spec Data that describes this file.  Possible properties are:\r\n         *\r\n         * - uuid: Initial UUID for this file.\r\n         * - name: Initial name of this file.\r\n         * - size: Size of this file, omit if this cannot be determined\r\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\r\n         * - batchId: ID of the batch this file belongs to\r\n         * - proxyGroupId: ID of the proxy group associated with this file\r\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\r\n         *\r\n         * @returns {number} Internal ID for this file.\r\n         */\r\n        addFile: function(spec) {\r\n            var status = spec.status || qq.status.SUBMITTING,\r\n                id = data.push({\r\n                    name: spec.name,\r\n                    originalName: spec.name,\r\n                    uuid: spec.uuid,\r\n                    size: spec.size == null ? -1 : spec.size,\r\n                    status: status\r\n                }) - 1;\r\n\r\n            if (spec.batchId) {\r\n                data[id].batchId = spec.batchId;\r\n\r\n                if (byBatchId[spec.batchId] === undefined) {\r\n                    byBatchId[spec.batchId] = [];\r\n                }\r\n                byBatchId[spec.batchId].push(id);\r\n            }\r\n\r\n            if (spec.proxyGroupId) {\r\n                data[id].proxyGroupId = spec.proxyGroupId;\r\n\r\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\r\n                    byProxyGroupId[spec.proxyGroupId] = [];\r\n                }\r\n                byProxyGroupId[spec.proxyGroupId].push(id);\r\n            }\r\n\r\n            data[id].id = id;\r\n            byUuid[spec.uuid] = id;\r\n\r\n            if (byStatus[status] === undefined) {\r\n                byStatus[status] = [];\r\n            }\r\n            byStatus[status].push(id);\r\n\r\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\r\n            uploaderProxy.onStatusChange(id, null, status);\r\n\r\n            return id;\r\n        },\r\n\r\n        retrieve: function(optionalFilter) {\r\n            if (qq.isObject(optionalFilter) && data.length)  {\r\n                if (optionalFilter.id !== undefined) {\r\n                    return getDataByIds(optionalFilter.id);\r\n                }\r\n\r\n                else if (optionalFilter.uuid !== undefined) {\r\n                    return getDataByUuids(optionalFilter.uuid);\r\n                }\r\n\r\n                else if (optionalFilter.status) {\r\n                    return getDataByStatus(optionalFilter.status);\r\n                }\r\n            }\r\n            else {\r\n                return qq.extend([], data, true);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            data = [];\r\n            byUuid = {};\r\n            byStatus = {};\r\n            byBatchId = {};\r\n        },\r\n\r\n        setStatus: function(id, newStatus) {\r\n            var oldStatus = data[id].status,\r\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\r\n\r\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\r\n\r\n            data[id].status = newStatus;\r\n\r\n            if (byStatus[newStatus] === undefined) {\r\n                byStatus[newStatus] = [];\r\n            }\r\n            byStatus[newStatus].push(id);\r\n\r\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\r\n        },\r\n\r\n        uuidChanged: function(id, newUuid) {\r\n            var oldUuid = data[id].uuid;\r\n\r\n            data[id].uuid = newUuid;\r\n            byUuid[newUuid] = id;\r\n            delete byUuid[oldUuid];\r\n        },\r\n\r\n        updateName: function(id, newName) {\r\n            data[id].name = newName;\r\n        },\r\n\r\n        updateSize: function(id, newSize) {\r\n            data[id].size = newSize;\r\n        },\r\n\r\n        // Only applicable if this file has a parent that we may want to reference later.\r\n        setParentId: function(targetId, parentId) {\r\n            data[targetId].parentId = parentId;\r\n        },\r\n\r\n        getIdsInProxyGroup: function(id) {\r\n            var proxyGroupId = data[id].proxyGroupId;\r\n\r\n            if (proxyGroupId) {\r\n                return byProxyGroupId[proxyGroupId];\r\n            }\r\n            return [];\r\n        },\r\n\r\n        getIdsInBatch: function(id) {\r\n            var batchId = data[id].batchId;\r\n\r\n            return byBatchId[batchId];\r\n        }\r\n    });\r\n};\r\n\r\nqq.status = {\r\n    SUBMITTING: \"submitting\",\r\n    SUBMITTED: \"submitted\",\r\n    REJECTED: \"rejected\",\r\n    QUEUED: \"queued\",\r\n    CANCELED: \"canceled\",\r\n    PAUSED: \"paused\",\r\n    UPLOADING: \"uploading\",\r\n    UPLOAD_RETRYING: \"retrying upload\",\r\n    UPLOAD_SUCCESSFUL: \"upload successful\",\r\n    UPLOAD_FAILED: \"upload failed\",\r\n    DELETE_FAILED: \"delete failed\",\r\n    DELETING: \"deleting\",\r\n    DELETED: \"deleted\"\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Defines the public API for FineUploaderBasic mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.basePublicApi = {\r\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\r\n        addBlobs: function(blobDataOrArray, params, endpoint) {\r\n            this.addFiles(blobDataOrArray, params, endpoint);\r\n        },\r\n\r\n        addInitialFiles: function(cannedFileList) {\r\n            var self = this;\r\n\r\n            qq.each(cannedFileList, function(index, cannedFile) {\r\n                self._addCannedFile(cannedFile);\r\n            });\r\n        },\r\n\r\n        addFiles: function(data, params, endpoint) {\r\n            this._maybeHandleIos8SafariWorkaround();\r\n\r\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\r\n\r\n                processBlob = qq.bind(function(blob) {\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processBlobData = qq.bind(function(blobData) {\r\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvas = qq.bind(function(canvas) {\r\n                    var blob = qq.canvasToBlob(canvas);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName + \".png\"\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvasData = qq.bind(function(canvasData) {\r\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\r\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: canvasData.name\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processFileOrInput = qq.bind(function(fileOrInput) {\r\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\r\n                        var files = Array.prototype.slice.call(fileOrInput.files),\r\n                            self = this;\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            self._handleNewFile(file, batchId, verifiedFiles);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\r\n                    }\r\n                }, this),\r\n\r\n                normalizeData = function() {\r\n                    if (qq.isFileList(data)) {\r\n                        data = Array.prototype.slice.call(data);\r\n                    }\r\n                    data = [].concat(data);\r\n                },\r\n\r\n                self = this,\r\n                verifiedFiles = [];\r\n\r\n            this._currentBatchId = batchId;\r\n\r\n            if (data) {\r\n                normalizeData();\r\n\r\n                qq.each(data, function(idx, fileContainer) {\r\n                    if (qq.isFileOrInput(fileContainer)) {\r\n                        processFileOrInput(fileContainer);\r\n                    }\r\n                    else if (qq.isBlob(fileContainer)) {\r\n                        processBlob(fileContainer);\r\n                    }\r\n                    else if (qq.isObject(fileContainer)) {\r\n                        if (fileContainer.blob && fileContainer.name) {\r\n                            processBlobData(fileContainer);\r\n                        }\r\n                        else if (fileContainer.canvas && fileContainer.name) {\r\n                            processCanvasData(fileContainer);\r\n                        }\r\n                    }\r\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\r\n                        processCanvas(fileContainer);\r\n                    }\r\n                    else {\r\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\r\n                    }\r\n                });\r\n\r\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\r\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\r\n            }\r\n        },\r\n\r\n        cancel: function(id) {\r\n            this._handler.cancel(id);\r\n        },\r\n\r\n        cancelAll: function() {\r\n            var storedIdsCopy = [],\r\n                self = this;\r\n\r\n            qq.extend(storedIdsCopy, this._storedIds);\r\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\r\n                self.cancel(storedFileId);\r\n            });\r\n\r\n            this._handler.cancelAll();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._storedIds = [];\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (uploadData.status === qq.status.PAUSED) {\r\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\r\n                this._uploadFile(id);\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        deleteFile: function(id) {\r\n            return this._onSubmitDelete(id);\r\n        },\r\n\r\n        // TODO document?\r\n        doesExist: function(fileOrBlobId) {\r\n            return this._handler.isValid(fileOrBlobId);\r\n        },\r\n\r\n        // Generate a variable size thumbnail on an img or canvas,\r\n        // returning a promise that is fulfilled when the attempt completes.\r\n        // Thumbnail can either be based off of a URL for an image returned\r\n        // by the server in the upload response, or the associated `Blob`.\r\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\r\n            var promiseToReturn = new qq.Promise(),\r\n                fileOrUrl, options;\r\n\r\n            if (this._imageGenerator) {\r\n                fileOrUrl = this._thumbnailUrls[fileId];\r\n                options = {\r\n                    customResizeFunction: customResizeFunction,\r\n                    maxSize: maxSize > 0 ? maxSize : null,\r\n                    scale: maxSize > 0\r\n                };\r\n\r\n                // If client-side preview generation is possible\r\n                // and we are not specifically looking for the image URl returned by the server...\r\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\r\n                    fileOrUrl = this.getFile(fileId);\r\n                }\r\n\r\n                /* jshint eqeqeq:false,eqnull:true */\r\n                if (fileOrUrl == null) {\r\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\r\n                }\r\n                else {\r\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\r\n                        function success(modifiedContainer) {\r\n                            promiseToReturn.success(modifiedContainer);\r\n                        },\r\n\r\n                        function failure(container, reason) {\r\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\r\n            }\r\n\r\n            return promiseToReturn;\r\n        },\r\n\r\n        getButton: function(fileId) {\r\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\r\n        },\r\n\r\n        getEndpoint: function(fileId) {\r\n            return this._endpointStore.get(fileId);\r\n        },\r\n\r\n        getFile: function(fileOrBlobId) {\r\n            return this._handler.getFile(fileOrBlobId) || null;\r\n        },\r\n\r\n        getInProgress: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        getName: function(id) {\r\n            return this._uploadData.retrieve({id: id}).name;\r\n        },\r\n\r\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\r\n        getParentId: function(id) {\r\n            var uploadDataEntry = this.getUploads({id: id}),\r\n                parentId = null;\r\n\r\n            if (uploadDataEntry) {\r\n                if (uploadDataEntry.parentId !== undefined) {\r\n                    parentId = uploadDataEntry.parentId;\r\n                }\r\n            }\r\n\r\n            return parentId;\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            return this._handler.getResumableFilesData();\r\n        },\r\n\r\n        getSize: function(id) {\r\n            return this._uploadData.retrieve({id: id}).size;\r\n        },\r\n\r\n        getNetUploads: function() {\r\n            return this._netUploaded;\r\n        },\r\n\r\n        getRemainingAllowedItems: function() {\r\n            var allowedItems = this._currentItemLimit;\r\n\r\n            if (allowedItems > 0) {\r\n                return allowedItems - this._netUploadedOrQueued;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        getUploads: function(optionalFilter) {\r\n            return this._uploadData.retrieve(optionalFilter);\r\n        },\r\n\r\n        getUuid: function(id) {\r\n            return this._uploadData.retrieve({id: id}).uuid;\r\n        },\r\n\r\n        log: function(str, level) {\r\n            if (this._options.debug && (!level || level === \"info\")) {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\r\n            }\r\n            else if (level && level !== \"info\") {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\r\n\r\n            }\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            // Pause only really makes sense if the file is uploading or retrying\r\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\r\n                if (this._handler.pause(id)) {\r\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\r\n                }\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        removeFileRef: function(id) {\r\n            this._handler.expunge(id);\r\n        },\r\n\r\n        reset: function() {\r\n            this.log(\"Resetting uploader...\");\r\n\r\n            this._handler.reset();\r\n            this._storedIds = [];\r\n            this._autoRetries = [];\r\n            this._retryTimeouts = [];\r\n            this._preventRetries = [];\r\n            this._thumbnailUrls = [];\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n\r\n            this._paramsStore.reset();\r\n            this._endpointStore.reset();\r\n            this._netUploadedOrQueued = 0;\r\n            this._netUploaded = 0;\r\n            this._uploadData.reset();\r\n            this._buttonIdsForFileIds = [];\r\n\r\n            this._pasteHandler && this._pasteHandler.reset();\r\n            this._options.session.refreshOnReset && this._refreshSessionData();\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n\r\n            this._totalProgress && this._totalProgress.reset();\r\n        },\r\n\r\n        retry: function(id) {\r\n            return this._manualRetry(id);\r\n        },\r\n\r\n        scaleImage: function(id, specs) {\r\n            var self = this;\r\n\r\n            return qq.Scaler.prototype.scaleImage(id, specs, {\r\n                log: qq.bind(self.log, self),\r\n                getFile: qq.bind(self.getFile, self),\r\n                uploadData: self._uploadData\r\n            });\r\n        },\r\n\r\n        setCustomHeaders: function(headers, id) {\r\n            this._customHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileCustomHeaders: function(headers, id) {\r\n            this._deleteFileCustomHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileEndpoint: function(endpoint, id) {\r\n            this._deleteFileEndpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setDeleteFileParams: function(params, id) {\r\n            this._deleteFileParamsStore.set(params, id);\r\n        },\r\n\r\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\r\n        setEndpoint: function(endpoint, id) {\r\n            this._endpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setForm: function(elementOrId) {\r\n            this._updateFormSupportAndParams(elementOrId);\r\n        },\r\n\r\n        setItemLimit: function(newItemLimit) {\r\n            this._currentItemLimit = newItemLimit;\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            this._uploadData.updateName(id, newName);\r\n        },\r\n\r\n        setParams: function(params, id) {\r\n            this._paramsStore.set(params, id);\r\n        },\r\n\r\n        setUuid: function(id, newUuid) {\r\n            return this._uploadData.uuidChanged(id, newUuid);\r\n        },\r\n\r\n        /**\r\n         * Expose the internal status of a file id to the public api for manual state changes\r\n         * @public\r\n         *\r\n         * @param {Number} id,\r\n         * @param {String} newStatus\r\n         *\r\n         * @todo Implement the remaining methods\r\n         */\r\n        setStatus: function(id, newStatus) {\r\n            var fileRecord = this.getUploads({id: id});\r\n            if (!fileRecord) {\r\n                throw new qq.Error(id + \" is not a valid file ID.\");\r\n            }\r\n\r\n            switch (newStatus) {\r\n                case qq.status.DELETED:\r\n                    this._onDeleteComplete(id, null, false);\r\n                    break;\r\n                case qq.status.DELETE_FAILED:\r\n                    this._onDeleteComplete(id, null, true);\r\n                    break;\r\n                default:\r\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\r\n                    this.log(errorMessage);\r\n                    throw new qq.Error(errorMessage);\r\n            }\r\n        },\r\n\r\n        uploadStoredFiles: function() {\r\n            if (this._storedIds.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n            }\r\n            else {\r\n                this._uploadStoredFiles();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploaderBasic mode.\r\n     */\r\n    qq.basePrivateApi = {\r\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\r\n        _addCannedFile: function(sessionData) {\r\n            var self = this;\r\n\r\n            return this._uploadData.addFile({\r\n                uuid: sessionData.uuid,\r\n                name: sessionData.name,\r\n                size: sessionData.size,\r\n                status: qq.status.UPLOAD_SUCCESSFUL,\r\n                onBeforeStatusChange: function(id) {\r\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\r\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\r\n\r\n                    if (sessionData.thumbnailUrl) {\r\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\r\n                    }\r\n\r\n                    self._netUploaded++;\r\n                    self._netUploadedOrQueued++;\r\n                }\r\n            });\r\n        },\r\n\r\n        _annotateWithButtonId: function(file, associatedInput) {\r\n            if (qq.isFile(file)) {\r\n                file.qqButtonId = this._getButtonId(associatedInput);\r\n            }\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._options.callbacks.onError(null, null, message, undefined);\r\n        },\r\n\r\n        _createDeleteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.DeleteFileAjaxRequester({\r\n                method: this._options.deleteFile.method.toUpperCase(),\r\n                maxConnections: this._options.maxConnections,\r\n                uuidParamName: this._options.request.uuidName,\r\n                customHeaders: this._deleteFileCustomHeadersStore,\r\n                paramsStore: this._deleteFileParamsStore,\r\n                endpointStore: this._deleteFileEndpointStore,\r\n                cors: this._options.cors,\r\n                log: qq.bind(self.log, self),\r\n                onDelete: function(id) {\r\n                    self._onDelete(id);\r\n                    self._options.callbacks.onDelete(id);\r\n                },\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\r\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        _createPasteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.PasteSupport({\r\n                targetElement: this._options.paste.targetElement,\r\n                callbacks: {\r\n                    log: qq.bind(self.log, self),\r\n                    pasteReceived: function(blob) {\r\n                        self._handleCheckedCallback({\r\n                            name: \"onPasteReceived\",\r\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\r\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\r\n                            identifier: \"pasted image\"\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _createStore: function(initialValue, _readOnlyValues_) {\r\n            var store = {},\r\n                catchall = initialValue,\r\n                perIdReadOnlyValues = {},\r\n                readOnlyValues = _readOnlyValues_,\r\n                copy = function(orig) {\r\n                    if (qq.isObject(orig)) {\r\n                        return qq.extend({}, orig);\r\n                    }\r\n                    return orig;\r\n                },\r\n                getReadOnlyValues = function() {\r\n                    if (qq.isFunction(readOnlyValues)) {\r\n                        return readOnlyValues();\r\n                    }\r\n                    return readOnlyValues;\r\n                },\r\n                includeReadOnlyValues = function(id, existing) {\r\n                    if (readOnlyValues && qq.isObject(existing)) {\r\n                        qq.extend(existing, getReadOnlyValues());\r\n                    }\r\n\r\n                    if (perIdReadOnlyValues[id]) {\r\n                        qq.extend(existing, perIdReadOnlyValues[id]);\r\n                    }\r\n                };\r\n\r\n            return {\r\n                set: function(val, id) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id == null) {\r\n                        store = {};\r\n                        catchall = copy(val);\r\n                    }\r\n                    else {\r\n                        store[id] = copy(val);\r\n                    }\r\n                },\r\n\r\n                get: function(id) {\r\n                    var values;\r\n\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id != null && store[id]) {\r\n                        values = store[id];\r\n                    }\r\n                    else {\r\n                        values = copy(catchall);\r\n                    }\r\n\r\n                    includeReadOnlyValues(id, values);\r\n\r\n                    return copy(values);\r\n                },\r\n\r\n                addReadOnly: function(id, values) {\r\n                    // Only applicable to Object stores\r\n                    if (qq.isObject(store)) {\r\n                        // If null ID, apply readonly values to all files\r\n                        if (id === null) {\r\n                            if (qq.isFunction(values)) {\r\n                                readOnlyValues = values;\r\n                            }\r\n                            else {\r\n                                readOnlyValues = readOnlyValues || {};\r\n                                qq.extend(readOnlyValues, values);\r\n                            }\r\n                        }\r\n                        else {\r\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\r\n                            qq.extend(perIdReadOnlyValues[id], values);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                remove: function(fileId) {\r\n                    return delete store[fileId];\r\n                },\r\n\r\n                reset: function() {\r\n                    store = {};\r\n                    perIdReadOnlyValues = {};\r\n                    catchall = initialValue;\r\n                }\r\n            };\r\n        },\r\n\r\n        _createUploadDataTracker: function() {\r\n            var self = this;\r\n\r\n            return new qq.UploadData({\r\n                getName: function(id) {\r\n                    return self.getName(id);\r\n                },\r\n                getUuid: function(id) {\r\n                    return self.getUuid(id);\r\n                },\r\n                getSize: function(id) {\r\n                    return self.getSize(id);\r\n                },\r\n                onStatusChange: function(id, oldStatus, newStatus) {\r\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\r\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\r\n                    self._maybeAllComplete(id, newStatus);\r\n\r\n                    if (self._totalProgress) {\r\n                        setTimeout(function() {\r\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Generate a tracked upload button.\r\n         *\r\n         * @param spec Object containing a required `element` property\r\n         * along with optional `multiple`, `accept`, and `folders`.\r\n         * @returns {qq.UploadButton}\r\n         * @private\r\n         */\r\n        _createUploadButton: function(spec) {\r\n            var self = this,\r\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\r\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\r\n                button;\r\n\r\n            function allowMultiple() {\r\n                if (qq.supportedFeatures.ajaxUploading) {\r\n                    // Workaround for bug in iOS7+ (see #1039)\r\n                    if (self._options.workarounds.iosEmptyVideos &&\r\n                        qq.ios() &&\r\n                        !qq.ios6() &&\r\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    if (spec.multiple === undefined) {\r\n                        return self._options.multiple;\r\n                    }\r\n\r\n                    return spec.multiple;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            button = new qq.UploadButton({\r\n                acceptFiles: acceptFiles,\r\n                element: spec.element,\r\n                focusClass: this._options.classes.buttonFocus,\r\n                folders: spec.folders,\r\n                hoverClass: this._options.classes.buttonHover,\r\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\r\n                multiple: allowMultiple(),\r\n                name: this._options.request.inputName,\r\n                onChange: function(input) {\r\n                    self._onInputChange(input);\r\n                },\r\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\r\n            });\r\n\r\n            this._disposeSupport.addDisposer(function() {\r\n                button.dispose();\r\n            });\r\n\r\n            self._buttons.push(button);\r\n\r\n            return button;\r\n        },\r\n\r\n        _createUploadHandler: function(additionalOptions, namespace) {\r\n            var self = this,\r\n                lastOnProgress = {},\r\n                options = {\r\n                    debug: this._options.debug,\r\n                    maxConnections: this._options.maxConnections,\r\n                    cors: this._options.cors,\r\n                    paramsStore: this._paramsStore,\r\n                    endpointStore: this._endpointStore,\r\n                    chunking: this._options.chunking,\r\n                    resume: this._options.resume,\r\n                    blobs: this._options.blobs,\r\n                    log: qq.bind(self.log, self),\r\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\r\n                    onProgress: function(id, name, loaded, total) {\r\n                        if (loaded < 0 || total < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        if (lastOnProgress[id]) {\r\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\r\n                                self._onProgress(id, name, loaded, total);\r\n                                self._options.callbacks.onProgress(id, name, loaded, total);\r\n                            }\r\n                        }\r\n                        else {\r\n                            self._onProgress(id, name, loaded, total);\r\n                            self._options.callbacks.onProgress(id, name, loaded, total);\r\n                        }\r\n\r\n                        lastOnProgress[id] = {loaded: loaded, total: total};\r\n\r\n                    },\r\n                    onComplete: function(id, name, result, xhr) {\r\n                        delete lastOnProgress[id];\r\n\r\n                        var status = self.getUploads({id: id}).status,\r\n                            retVal;\r\n\r\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\r\n                        // invoked by the browser multiple times for the same XHR instance with the same state\r\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\r\n                        // done this.\r\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\r\n                            return;\r\n                        }\r\n\r\n                        retVal = self._onComplete(id, name, result, xhr);\r\n\r\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\r\n                        // until the promise has been fulfilled.\r\n                        if (retVal instanceof  qq.Promise) {\r\n                            retVal.done(function() {\r\n                                self._options.callbacks.onComplete(id, name, result, xhr);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self._options.callbacks.onComplete(id, name, result, xhr);\r\n                        }\r\n                    },\r\n                    onCancel: function(id, name, cancelFinalizationEffort) {\r\n                        var promise = new qq.Promise();\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onCancel\",\r\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\r\n                            onFailure: promise.failure,\r\n                            onSuccess: function() {\r\n                                cancelFinalizationEffort.then(function() {\r\n                                    self._onCancel(id, name);\r\n                                });\r\n\r\n                                promise.success();\r\n                            },\r\n                            identifier: id\r\n                        });\r\n\r\n                        return promise;\r\n                    },\r\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\r\n                    onUpload: function(id, name) {\r\n                        self._onUpload(id, name);\r\n                        self._options.callbacks.onUpload(id, name);\r\n                    },\r\n                    onUploadChunk: function(id, name, chunkData) {\r\n                        self._onUploadChunk(id, chunkData);\r\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\r\n                    },\r\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\r\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\r\n                    },\r\n                    onResume: function(id, name, chunkData) {\r\n                        return self._options.callbacks.onResume(id, name, chunkData);\r\n                    },\r\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\r\n                        return self._onAutoRetry.apply(self, arguments);\r\n                    },\r\n                    onUuidChanged: function(id, newUuid) {\r\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\r\n                        self.setUuid(id, newUuid);\r\n                    },\r\n                    getName: qq.bind(self.getName, self),\r\n                    getUuid: qq.bind(self.getUuid, self),\r\n                    getSize: qq.bind(self.getSize, self),\r\n                    setSize: qq.bind(self._setSize, self),\r\n                    getDataByUuid: function(uuid) {\r\n                        return self.getUploads({uuid: uuid});\r\n                    },\r\n                    isQueued: function(id) {\r\n                        var status = self.getUploads({id: id}).status;\r\n                        return status === qq.status.QUEUED ||\r\n                            status === qq.status.SUBMITTED ||\r\n                            status === qq.status.UPLOAD_RETRYING ||\r\n                            status === qq.status.PAUSED;\r\n                    },\r\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\r\n                    getIdsInBatch: self._uploadData.getIdsInBatch\r\n                };\r\n\r\n            qq.each(this._options.request, function(prop, val) {\r\n                options[prop] = val;\r\n            });\r\n\r\n            options.customHeaders = this._customHeadersStore;\r\n\r\n            if (additionalOptions) {\r\n                qq.each(additionalOptions, function(key, val) {\r\n                    options[key] = val;\r\n                });\r\n            }\r\n\r\n            return new qq.UploadHandlerController(options, namespace);\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id) {\r\n            this._netUploadedOrQueued--;\r\n            this._uploadData.setStatus(id, qq.status.REJECTED);\r\n        },\r\n\r\n        _formatSize: function(bytes) {\r\n            if (bytes === 0) {\r\n                return bytes + this._options.text.sizeSymbols[0];\r\n            }\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1000;\r\n                i++;\r\n            } while (bytes > 999);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\r\n        },\r\n\r\n        // Creates an internal object that tracks various properties of each extra button,\r\n        // and then actually creates the extra button.\r\n        _generateExtraButtonSpecs: function() {\r\n            var self = this;\r\n\r\n            this._extraButtonSpecs = {};\r\n\r\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\r\n                var multiple = extraButtonOptionEntry.multiple,\r\n                    validation = qq.extend({}, self._options.validation, true),\r\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\r\n\r\n                if (multiple === undefined) {\r\n                    multiple = self._options.multiple;\r\n                }\r\n\r\n                if (extraButtonSpec.validation) {\r\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\r\n                }\r\n\r\n                qq.extend(extraButtonSpec, {\r\n                    multiple: multiple,\r\n                    validation: validation\r\n                }, true);\r\n\r\n                self._initExtraButton(extraButtonSpec);\r\n            });\r\n        },\r\n\r\n        _getButton: function(buttonId) {\r\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            if (extraButtonsSpec) {\r\n                return extraButtonsSpec.element;\r\n            }\r\n            else if (buttonId === this._defaultButtonId) {\r\n                return this._options.button;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the internally used tracking ID for a button.\r\n         *\r\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\r\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\r\n         * @private\r\n         */\r\n        _getButtonId: function(buttonOrFileInputOrFile) {\r\n            var inputs, fileInput,\r\n                fileBlobOrInput = buttonOrFileInputOrFile;\r\n\r\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\r\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\r\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\r\n            }\r\n\r\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\r\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\r\n                if (qq.isFile(fileBlobOrInput)) {\r\n                    return fileBlobOrInput.qqButtonId;\r\n                }\r\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\r\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\r\n\r\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n\r\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\r\n\r\n                qq.each(inputs, function(idx, input) {\r\n                    if (input.getAttribute(\"type\") === \"file\") {\r\n                        fileInput = input;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (fileInput) {\r\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n            }\r\n        },\r\n\r\n        _getNotFinished: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED,\r\n                    qq.status.SUBMITTING,\r\n                    qq.status.SUBMITTED,\r\n                    qq.status.PAUSED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        // Get the validation options for this button.  Could be the default validation option\r\n        // or a specific one assigned to this particular button.\r\n        _getValidationBase: function(buttonId) {\r\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\r\n        },\r\n\r\n        _getValidationDescriptor: function(fileWrapper) {\r\n            if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                return {\r\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\r\n                    size: fileWrapper.file.referenceBlob.size\r\n                };\r\n            }\r\n\r\n            return {\r\n                name: this.getUploads({id: fileWrapper.id}).name,\r\n                size: this.getUploads({id: fileWrapper.id}).size\r\n            };\r\n        },\r\n\r\n        _getValidationDescriptors: function(fileWrappers) {\r\n            var self = this,\r\n                fileDescriptors = [];\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\r\n            });\r\n\r\n            return fileDescriptors;\r\n        },\r\n\r\n        // Allows camera access on either the default or an extra button for iOS devices.\r\n        _handleCameraAccess: function() {\r\n            if (this._options.camera.ios && qq.ios()) {\r\n                var acceptIosCamera = \"image/*;capture=camera\",\r\n                    button = this._options.camera.button,\r\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\r\n                    optionRoot = this._options;\r\n\r\n                // If we are not targeting the default button, it is an \"extra\" button\r\n                if (buttonId && buttonId !== this._defaultButtonId) {\r\n                    optionRoot = this._extraButtonSpecs[buttonId];\r\n                }\r\n\r\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\r\n                optionRoot.multiple = false;\r\n\r\n                // update the options\r\n                if (optionRoot.validation.acceptFiles === null) {\r\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\r\n                }\r\n                else {\r\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\r\n                }\r\n\r\n                // update the already-created button\r\n                qq.each(this._buttons, function(idx, button) {\r\n                    if (button.getButtonId() === buttonId) {\r\n                        button.setMultiple(optionRoot.multiple);\r\n                        button.setAcceptFiles(optionRoot.acceptFiles);\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _handleCheckedCallback: function(details) {\r\n            var self = this,\r\n                callbackRetVal = details.callback();\r\n\r\n            if (qq.isGenericPromise(callbackRetVal)) {\r\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\r\n                return callbackRetVal.then(\r\n                    function(successParam) {\r\n                        self.log(details.name + \" promise success for \" + details.identifier);\r\n                        details.onSuccess(successParam);\r\n                    },\r\n                    function() {\r\n                        if (details.onFailure) {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                            details.onFailure();\r\n                        }\r\n                        else {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            if (callbackRetVal !== false) {\r\n                details.onSuccess(callbackRetVal);\r\n            }\r\n            else {\r\n                if (details.onFailure) {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\r\n                    details.onFailure();\r\n                }\r\n                else {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\r\n                }\r\n            }\r\n\r\n            return callbackRetVal;\r\n        },\r\n\r\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\r\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\r\n            var self = this,\r\n                uuid = qq.getUniqueId(),\r\n                size = -1,\r\n                name = qq.getFilename(file),\r\n                actualFile = file.blob || file,\r\n                handler = this._customNewFileHandler ?\r\n                    this._customNewFileHandler :\r\n                    qq.bind(self._handleNewFileGeneric, self);\r\n\r\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\r\n                size = actualFile.size;\r\n            }\r\n\r\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\r\n                uploadData: self._uploadData,\r\n                paramsStore: self._paramsStore,\r\n                addFileToHandler: function(id, file) {\r\n                    self._handler.add(id, file);\r\n                    self._netUploadedOrQueued++;\r\n                    self._trackButton(id);\r\n                }\r\n            });\r\n        },\r\n\r\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\r\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\r\n\r\n            this._handler.add(id, file);\r\n            this._trackButton(id);\r\n\r\n            this._netUploadedOrQueued++;\r\n\r\n            fileList.push({id: id, file: file});\r\n        },\r\n\r\n        _handlePasteSuccess: function(blob, extSuppliedName) {\r\n            var extension = blob.type.split(\"/\")[1],\r\n                name = extSuppliedName;\r\n\r\n            /*jshint eqeqeq: true, eqnull: true*/\r\n            if (name == null) {\r\n                name = this._options.paste.defaultName;\r\n            }\r\n\r\n            name += \".\" + extension;\r\n\r\n            this.addFiles({\r\n                name: name,\r\n                blob: blob\r\n            });\r\n        },\r\n\r\n        _handleDeleteSuccess: function(id) {\r\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\r\n                var name = this.getName(id);\r\n\r\n                this._netUploadedOrQueued--;\r\n                this._netUploaded--;\r\n                this._handler.expunge(id);\r\n                this._uploadData.setStatus(id, qq.status.DELETED);\r\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\r\n            }\r\n        },\r\n\r\n        _handleDeleteFailed: function(id, xhrOrXdr) {\r\n            var name = this.getName(id);\r\n\r\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\r\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\r\n\r\n            // Check first if xhrOrXdr is actually passed or valid\r\n            // For error reporting, we only have access to the response status if this is not\r\n            // an `XDomainRequest`.\r\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\r\n            }\r\n            else {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\r\n            }\r\n        },\r\n\r\n        // Creates an extra button element\r\n        _initExtraButton: function(spec) {\r\n            var button = this._createUploadButton({\r\n                accept: spec.validation.acceptFiles,\r\n                allowedExtensions: spec.validation.allowedExtensions,\r\n                element: spec.element,\r\n                folders: spec.folders,\r\n                multiple: spec.multiple,\r\n                title: spec.fileInputTitle\r\n            });\r\n\r\n            this._extraButtonSpecs[button.getButtonId()] = spec;\r\n        },\r\n\r\n        _initFormSupportAndParams: function() {\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n            );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore = this._createStore(\r\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\r\n                );\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\r\n                }\r\n            }\r\n            else {\r\n                this._paramsStore = this._createStore(this._options.request.params);\r\n            }\r\n        },\r\n\r\n        _isDeletePossible: function() {\r\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (this._options.cors.expected) {\r\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\r\n                    return true;\r\n                }\r\n\r\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _isAllowedExtension: function(allowed, fileName) {\r\n            var valid = false;\r\n\r\n            if (!allowed.length) {\r\n                return true;\r\n            }\r\n\r\n            qq.each(allowed, function(idx, allowedExt) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExt)) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\r\n\r\n                    if (fileName.match(extRegex) != null) {\r\n                        valid = true;\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return valid;\r\n        },\r\n\r\n        /**\r\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\r\n         *\r\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\r\n         * @param maybeNameOrNames names of the items that have failed, if applicable\r\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\r\n         * @private\r\n         */\r\n        _itemError: function(code, maybeNameOrNames, item) {\r\n            var message = this._options.messages[code],\r\n                allowedExtensions = [],\r\n                names = [].concat(maybeNameOrNames),\r\n                name = names[0],\r\n                buttonId = this._getButtonId(item),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                extensionsForMessage, placeholderMatch;\r\n\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExtension)) {\r\n                    allowedExtensions.push(allowedExtension);\r\n                }\r\n            });\r\n\r\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\r\n\r\n            r(\"{file}\", this._options.formatFileName(name));\r\n            r(\"{extensions}\", extensionsForMessage);\r\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\r\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\r\n\r\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\r\n            if (placeholderMatch !== null) {\r\n                qq.each(placeholderMatch, function(idx, placeholder) {\r\n                    r(placeholder, names[idx]);\r\n                });\r\n            }\r\n\r\n            this._options.callbacks.onError(null, name, message, undefined);\r\n\r\n            return message;\r\n        },\r\n\r\n        /**\r\n         * Conditionally orders a manual retry of a failed upload.\r\n         *\r\n         * @param id File ID of the failed upload\r\n         * @param callback Optional callback to invoke if a retry is prudent.\r\n         * In lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if a manual retry will occur\r\n         * @private\r\n         */\r\n        _manualRetry: function(id, callback) {\r\n            if (this._onBeforeManualRetry(id)) {\r\n                this._netUploadedOrQueued++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n\r\n                if (callback) {\r\n                    callback(id);\r\n                }\r\n                else {\r\n                    this._handler.retry(id);\r\n                }\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _maybeAllComplete: function(id, status) {\r\n            var self = this,\r\n                notFinished = this._getNotFinished();\r\n\r\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\r\n                this._succeededSinceLastAllComplete.push(id);\r\n            }\r\n            else if (status === qq.status.UPLOAD_FAILED) {\r\n                this._failedSinceLastAllComplete.push(id);\r\n            }\r\n\r\n            if (notFinished === 0 &&\r\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\r\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\r\n                setTimeout(function() {\r\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _maybeHandleIos8SafariWorkaround: function() {\r\n            var self = this;\r\n\r\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n                setTimeout(function() {\r\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\r\n                }, 0);\r\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\r\n            }\r\n        },\r\n\r\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\r\n            // Assuming no one will actually set the response code to something other than 200\r\n            // and still set 'success' to true...\r\n            if (!response.success) {\r\n                if (xhr && xhr.status !== 200 && !response.error) {\r\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\r\n                }\r\n                else {\r\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\r\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\r\n            var self = this;\r\n\r\n            if (items.length > index) {\r\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\r\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\r\n                    setTimeout(function() {\r\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\r\n                            buttonId = self._getButtonId(items[index].file),\r\n                            button = self._getButton(buttonId);\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onValidate\",\r\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\r\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\r\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\r\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\r\n                        });\r\n                    }, 0);\r\n                }\r\n                else if (!validItem) {\r\n                    for (; index < items.length; index++) {\r\n                        self._fileOrBlobRejected(items[index].id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\r\n\r\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n        },\r\n\r\n        /**\r\n         * Attempt to automatically retry a failed upload.\r\n         *\r\n         * @param id The file ID of the failed upload\r\n         * @param name The name of the file associated with the failed upload\r\n         * @param responseJSON Response from the server, parsed into a javascript object\r\n         * @param xhr Ajax transport used to send the failed request\r\n         * @param callback Optional callback to be invoked if a retry is prudent.\r\n         * Invoked in lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if an auto-retry will occur\r\n         * @private\r\n         */\r\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\r\n            var self = this;\r\n\r\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\r\n\r\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\r\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\r\n\r\n                self._maybeParseAndSendUploadError.apply(self, arguments);\r\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\r\n                self._onBeforeAutoRetry(id, name);\r\n\r\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n                self._retryTimeouts[id] = setTimeout(function() {\r\n                    self.log(\"Starting retry for \" + name + \"...\");\r\n\r\n                    if (callback) {\r\n                        callback(id);\r\n                    }\r\n                    else {\r\n                        self._handler.retry(id);\r\n                    }\r\n                }, retryWaitPeriod);\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id, name) {\r\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            var itemLimit = this._currentItemLimit,\r\n                fileName;\r\n\r\n            if (this._preventRetries[id]) {\r\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\r\n                return false;\r\n            }\r\n            else if (this._handler.isValid(id)) {\r\n                fileName = this.getName(id);\r\n\r\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\r\n                    return false;\r\n                }\r\n\r\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\r\n                    this._itemError(\"retryFailTooManyItems\");\r\n                    return false;\r\n                }\r\n\r\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._netUploadedOrQueued--;\r\n\r\n            clearTimeout(this._retryTimeouts[id]);\r\n\r\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\r\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\r\n                this._storedIds.splice(storedItemIndex, 1);\r\n            }\r\n\r\n            this._uploadData.setStatus(id, qq.status.CANCELED);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            if (!result.success) {\r\n                this._netUploadedOrQueued--;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\r\n\r\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\r\n                    this._preventRetries[id] = true;\r\n                }\r\n            }\r\n            else {\r\n                if (result.thumbnailUrl) {\r\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\r\n                }\r\n\r\n                this._netUploaded++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\r\n            }\r\n\r\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\r\n\r\n            return result.success ? true : false;\r\n        },\r\n\r\n        _onDelete: function(id) {\r\n            this._uploadData.setStatus(id, qq.status.DELETING);\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n            var name = this.getName(id);\r\n\r\n            if (isError) {\r\n                this._handleDeleteFailed(id, xhrOrXdr);\r\n            }\r\n            else {\r\n                this._handleDeleteSuccess(id);\r\n            }\r\n        },\r\n\r\n        _onInputChange: function(input) {\r\n            var fileIndex;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\r\n                    this._annotateWithButtonId(input.files[fileIndex], input);\r\n                }\r\n\r\n                this.addFiles(input.files);\r\n            }\r\n            // Android 2.3.x will fire `onchange` even if no file has been selected\r\n            else if (input.value.length > 0) {\r\n                this.addFiles(input);\r\n            }\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n        },\r\n\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            //nothing to do yet in core uploader\r\n        },\r\n\r\n        _onSubmitCallbackSuccess: function(id, name) {\r\n            this._onSubmit.apply(this, arguments);\r\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\r\n            this._onSubmitted.apply(this, arguments);\r\n\r\n            if (this._options.autoUpload) {\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n                this._uploadFile(id);\r\n            }\r\n            else {\r\n                this._storeForLater(id);\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\r\n            var uuid = this.getUuid(id),\r\n                adjustedOnSuccessCallback;\r\n\r\n            if (onSuccessCallback) {\r\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\r\n            }\r\n\r\n            if (this._isDeletePossible()) {\r\n                this._handleCheckedCallback({\r\n                    name: \"onSubmitDelete\",\r\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\r\n                    onSuccess: adjustedOnSuccessCallback ||\r\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\r\n                    identifier: id\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\r\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitted: function(id) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._options.callbacks.onTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            // nothing to do in the core uploader for now\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\r\n            if (newStatus === qq.status.PAUSED) {\r\n                clearTimeout(this._retryTimeouts[id]);\r\n            }\r\n        },\r\n\r\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\r\n            var self = this;\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                self._fileOrBlobRejected(fileWrapper.id);\r\n            });\r\n        },\r\n\r\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\r\n            var errorMessage,\r\n                itemLimit = this._currentItemLimit,\r\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\r\n\r\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\r\n                if (items.length > 0) {\r\n                    this._handleCheckedCallback({\r\n                        name: \"onValidate\",\r\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\r\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\r\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\r\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\r\n                    });\r\n                }\r\n                else {\r\n                    this._itemError(\"noFilesError\");\r\n                }\r\n            }\r\n            else {\r\n                this._onValidateBatchCallbackFailure(items);\r\n                errorMessage = this._options.messages.tooManyItemsError\r\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\r\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\r\n                this._batchError(errorMessage);\r\n            }\r\n        },\r\n\r\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\r\n            var nextIndex = index + 1;\r\n\r\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\r\n\r\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n        },\r\n\r\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\r\n            var self = this,\r\n                nextIndex = index + 1,\r\n                validationDescriptor = this._getValidationDescriptor(items[index]);\r\n\r\n            this._validateFileOrBlobData(items[index], validationDescriptor)\r\n                .then(\r\n                function() {\r\n                    self._upload(items[index].id, params, endpoint);\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\r\n                },\r\n                function() {\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n                }\r\n            );\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            if (items.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n                return;\r\n            }\r\n\r\n            var validationDescriptors = this._getValidationDescriptors(items),\r\n                buttonId = this._getButtonId(items[0].file),\r\n                button = this._getButton(buttonId);\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onValidateBatch\",\r\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\r\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\r\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\r\n                identifier: \"batch validation\"\r\n            });\r\n        },\r\n\r\n        _preventLeaveInProgress: function() {\r\n            var self = this;\r\n\r\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\r\n                if (self.getInProgress()) {\r\n                    e = e || window.event;\r\n                    // for ie, ff\r\n                    e.returnValue = self._options.messages.onLeave;\r\n                    // for webkit\r\n                    return self._options.messages.onLeave;\r\n                }\r\n            });\r\n        },\r\n\r\n        // Attempts to refresh session data only if the `qq.Session` module exists\r\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\r\n        // callback will be invoked once the refresh is complete.\r\n        _refreshSessionData: function() {\r\n            var self = this,\r\n                options = this._options.session;\r\n\r\n            /* jshint eqnull:true */\r\n            if (qq.Session && this._options.session.endpoint != null) {\r\n                if (!this._session) {\r\n                    qq.extend(options, {cors: this._options.cors});\r\n\r\n                    options.log = qq.bind(this.log, this);\r\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\r\n\r\n                    this._session = new qq.Session(options);\r\n                }\r\n\r\n                setTimeout(function() {\r\n                    self._session.refresh().then(function(response, xhrOrXdr) {\r\n                        self._sessionRequestComplete();\r\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\r\n\r\n                    }, function(response, xhrOrXdr) {\r\n\r\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\r\n                    });\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _sessionRequestComplete: function() {},\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._uploadData.updateSize(id, newSize);\r\n            this._totalProgress && this._totalProgress.onNewSize(id);\r\n        },\r\n\r\n        _shouldAutoRetry: function(id, name, responseJSON) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            /*jshint laxbreak: true */\r\n            if (!this._preventRetries[id]\r\n                && this._options.retry.enableAuto\r\n                && uploadData.status !== qq.status.PAUSED) {\r\n\r\n                if (this._autoRetries[id] === undefined) {\r\n                    this._autoRetries[id] = 0;\r\n                }\r\n\r\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\r\n                    this._autoRetries[id] += 1;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._storedIds.push(id);\r\n        },\r\n\r\n        // Maps a file with the button that was used to select it.\r\n        _trackButton: function(id) {\r\n            var buttonId;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                buttonId = this._handler.getFile(id).qqButtonId;\r\n            }\r\n            else {\r\n                buttonId = this._getButtonId(this._handler.getInput(id));\r\n            }\r\n\r\n            if (buttonId) {\r\n                this._buttonIdsForFileIds[id] = buttonId;\r\n            }\r\n        },\r\n\r\n        _updateFormSupportAndParams: function(formElementOrId) {\r\n            this._options.form.element = formElementOrId;\r\n\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n                );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this.setEndpoint(this._formSupport.newEndpoint);\r\n                }\r\n            }\r\n        },\r\n\r\n        _upload: function(id, params, endpoint) {\r\n            var name = this.getName(id);\r\n\r\n            if (params) {\r\n                this.setParams(params, id);\r\n            }\r\n\r\n            if (endpoint) {\r\n                this.setEndpoint(endpoint, id);\r\n            }\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onSubmit\",\r\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\r\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\r\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\r\n                identifier: id\r\n            });\r\n        },\r\n\r\n        _uploadFile: function(id) {\r\n            if (!this._handler.upload(id)) {\r\n                this._uploadData.setStatus(id, qq.status.QUEUED);\r\n            }\r\n        },\r\n\r\n        _uploadStoredFiles: function() {\r\n            var idToUpload, stillSubmitting,\r\n                self = this;\r\n\r\n            while (this._storedIds.length) {\r\n                idToUpload = this._storedIds.shift();\r\n                this._uploadFile(idToUpload);\r\n            }\r\n\r\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\r\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\r\n            if (stillSubmitting) {\r\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\r\n                setTimeout(function() {\r\n                    self._uploadStoredFiles();\r\n                }, 1000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Performs some internal validation checks on an item, defined in the `validation` option.\r\n         *\r\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\r\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\r\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\r\n         * @private\r\n         */\r\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\r\n            var self = this,\r\n                file = (function() {\r\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                        return fileWrapper.file.referenceBlob;\r\n                    }\r\n                    return fileWrapper.file;\r\n                }()),\r\n                name = validationDescriptor.name,\r\n                size = validationDescriptor.size,\r\n                buttonId = this._getButtonId(fileWrapper.file),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                validityChecker = new qq.Promise();\r\n\r\n            validityChecker.then(\r\n                function() {},\r\n                function() {\r\n                    self._fileOrBlobRejected(fileWrapper.id, name);\r\n                });\r\n\r\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\r\n                this._itemError(\"typeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (!this._options.validation.allowEmpty && size === 0) {\r\n                this._itemError(\"emptyError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\r\n                this._itemError(\"sizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && size < validationBase.minSizeLimit) {\r\n                this._itemError(\"minSizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\r\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\r\n                    validityChecker.success,\r\n                    function(errorCode) {\r\n                        self._itemError(errorCode + \"ImageError\", name, file);\r\n                        validityChecker.failure();\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                validityChecker.success();\r\n            }\r\n\r\n            return validityChecker;\r\n        },\r\n\r\n        _wrapCallbacks: function() {\r\n            var self, safeCallback, prop;\r\n\r\n            self = this;\r\n\r\n            safeCallback = function(name, callback, args) {\r\n                var errorMsg;\r\n\r\n                try {\r\n                    return callback.apply(self, args);\r\n                }\r\n                catch (exception) {\r\n                    errorMsg = exception.message || exception.toString();\r\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\r\n                }\r\n            };\r\n\r\n            /* jshint forin: false, loopfunc: true */\r\n            for (prop in this._options.callbacks) {\r\n                (function() {\r\n                    var callbackName, callbackFunc;\r\n                    callbackName = prop;\r\n                    callbackFunc = self._options.callbacks[callbackName];\r\n                    self._options.callbacks[callbackName] = function() {\r\n                        return safeCallback(callbackName, callbackFunc, arguments);\r\n                    };\r\n                }());\r\n            }\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.FineUploaderBasic = function(o) {\r\n        var self = this;\r\n\r\n        // These options define FineUploaderBasic mode.\r\n        this._options = {\r\n            debug: false,\r\n            button: null,\r\n            multiple: true,\r\n            maxConnections: 3,\r\n            disableCancelForFormUploads: false,\r\n            autoUpload: true,\r\n\r\n            request: {\r\n                customHeaders: {},\r\n                endpoint: \"/server/upload\",\r\n                filenameParam: \"qqfilename\",\r\n                forceMultipart: true,\r\n                inputName: \"qqfile\",\r\n                method: \"POST\",\r\n                params: {},\r\n                paramsInBody: true,\r\n                totalFileSizeName: \"qqtotalfilesize\",\r\n                uuidName: \"qquuid\"\r\n            },\r\n\r\n            validation: {\r\n                allowedExtensions: [],\r\n                sizeLimit: 0,\r\n                minSizeLimit: 0,\r\n                itemLimit: 0,\r\n                stopOnFirstInvalidFile: true,\r\n                acceptFiles: null,\r\n                image: {\r\n                    maxHeight: 0,\r\n                    maxWidth: 0,\r\n                    minHeight: 0,\r\n                    minWidth: 0\r\n                },\r\n                allowEmpty: false\r\n            },\r\n\r\n            callbacks: {\r\n                onSubmit: function(id, name) {},\r\n                onSubmitted: function(id, name) {},\r\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\r\n                onAllComplete: function(successful, failed) {},\r\n                onCancel: function(id, name) {},\r\n                onUpload: function(id, name) {},\r\n                onUploadChunk: function(id, name, chunkData) {},\r\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\r\n                onResume: function(id, fileName, chunkData) {},\r\n                onProgress: function(id, name, loaded, total) {},\r\n                onTotalProgress: function(loaded, total) {},\r\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\r\n                onAutoRetry: function(id, name, attemptNumber) {},\r\n                onManualRetry: function(id, name) {},\r\n                onValidateBatch: function(fileOrBlobData) {},\r\n                onValidate: function(fileOrBlobData) {},\r\n                onSubmitDelete: function(id) {},\r\n                onDelete: function(id) {},\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\r\n                onPasteReceived: function(blob) {},\r\n                onStatusChange: function(id, oldStatus, newStatus) {},\r\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\r\n            },\r\n\r\n            messages: {\r\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\r\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\r\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\r\n                emptyError: \"{file} is empty, please select files again without it.\",\r\n                noFilesError: \"No files to upload.\",\r\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\r\n                maxHeightImageError: \"Image is too tall.\",\r\n                maxWidthImageError: \"Image is too wide.\",\r\n                minHeightImageError: \"Image is not tall enough.\",\r\n                minWidthImageError: \"Image is not wide enough.\",\r\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\r\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\r\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\r\n            },\r\n\r\n            retry: {\r\n                enableAuto: false,\r\n                maxAutoAttempts: 3,\r\n                autoAttemptDelay: 5,\r\n                preventRetryResponseProperty: \"preventRetry\"\r\n            },\r\n\r\n            classes: {\r\n                buttonHover: \"qq-upload-button-hover\",\r\n                buttonFocus: \"qq-upload-button-focus\"\r\n            },\r\n\r\n            chunking: {\r\n                enabled: false,\r\n                concurrent: {\r\n                    enabled: false\r\n                },\r\n                mandatory: false,\r\n                paramNames: {\r\n                    partIndex: \"qqpartindex\",\r\n                    partByteOffset: \"qqpartbyteoffset\",\r\n                    chunkSize: \"qqchunksize\",\r\n                    totalFileSize: \"qqtotalfilesize\",\r\n                    totalParts: \"qqtotalparts\"\r\n                },\r\n                partSize: 2000000,\r\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\r\n                success: {\r\n                    endpoint: null\r\n                }\r\n            },\r\n\r\n            resume: {\r\n                enabled: false,\r\n                recordsExpireIn: 7, //days\r\n                paramNames: {\r\n                    resuming: \"qqresume\"\r\n                }\r\n            },\r\n\r\n            formatFileName: function(fileOrBlobName) {\r\n                return fileOrBlobName;\r\n            },\r\n\r\n            text: {\r\n                defaultResponseError: \"Upload failure reason unknown\",\r\n                fileInputTitle: \"file input\",\r\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\r\n            },\r\n\r\n            deleteFile: {\r\n                enabled: false,\r\n                method: \"DELETE\",\r\n                endpoint: \"/server/upload\",\r\n                customHeaders: {},\r\n                params: {}\r\n            },\r\n\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false,\r\n                allowXdr: false\r\n            },\r\n\r\n            blobs: {\r\n                defaultName: \"misc_data\"\r\n            },\r\n\r\n            paste: {\r\n                targetElement: null,\r\n                defaultName: \"pasted_image\"\r\n            },\r\n\r\n            camera: {\r\n                ios: false,\r\n\r\n                // if ios is true: button is null means target the default button, otherwise target the button specified\r\n                button: null\r\n            },\r\n\r\n            // This refers to additional upload buttons to be handled by Fine Uploader.\r\n            // Each element is an object, containing `element` as the only required\r\n            // property.  The `element` must be a container that will ultimately\r\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\r\n            // Optional properties of each object include `multiple`, `validation`,\r\n            // and `folders`.\r\n            extraButtons: [],\r\n\r\n            // Depends on the session module.  Used to query the server for an initial file list\r\n            // during initialization and optionally after a `reset`.\r\n            session: {\r\n                endpoint: null,\r\n                params: {},\r\n                customHeaders: {},\r\n                refreshOnReset: true\r\n            },\r\n\r\n            // Send parameters associated with an existing form along with the files\r\n            form: {\r\n                // Element ID, HTMLElement, or null\r\n                element: \"qq-form\",\r\n\r\n                // Overrides the base `autoUpload`, unless `element` is null.\r\n                autoUpload: false,\r\n\r\n                // true = upload files on form submission (and squelch submit event)\r\n                interceptSubmit: true\r\n            },\r\n\r\n            // scale images client side, upload a new file for each scaled version\r\n            scaling: {\r\n                customResizer: null,\r\n\r\n                // send the original file as well\r\n                sendOriginal: true,\r\n\r\n                // fox orientation for scaled images\r\n                orient: true,\r\n\r\n                // If null, scaled image type will match reference image type.  This value will be referred to\r\n                // for any size record that does not specific a type.\r\n                defaultType: null,\r\n\r\n                defaultQuality: 80,\r\n\r\n                failureText: \"Failed to scale\",\r\n\r\n                includeExif: false,\r\n\r\n                // metadata about each requested scaled version\r\n                sizes: []\r\n            },\r\n\r\n            workarounds: {\r\n                iosEmptyVideos: true,\r\n                ios8SafariUploads: true,\r\n                ios8BrowserCrash: false\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(this._options, o, true);\r\n\r\n        this._buttons = [];\r\n        this._extraButtonSpecs = {};\r\n        this._buttonIdsForFileIds = [];\r\n\r\n        this._wrapCallbacks();\r\n        this._disposeSupport =  new qq.DisposeSupport();\r\n\r\n        this._storedIds = [];\r\n        this._autoRetries = [];\r\n        this._retryTimeouts = [];\r\n        this._preventRetries = [];\r\n        this._thumbnailUrls = [];\r\n\r\n        this._netUploadedOrQueued = 0;\r\n        this._netUploaded = 0;\r\n        this._uploadData = this._createUploadDataTracker();\r\n\r\n        this._initFormSupportAndParams();\r\n\r\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\r\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\r\n\r\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\r\n\r\n        this._endpointStore = this._createStore(this._options.request.endpoint);\r\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\r\n\r\n        this._handler = this._createUploadHandler();\r\n\r\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\r\n\r\n        if (this._options.button) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._options.button,\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._generateExtraButtonSpecs();\r\n\r\n        this._handleCameraAccess();\r\n\r\n        if (this._options.paste.targetElement) {\r\n            if (qq.PasteSupport) {\r\n                this._pasteHandler = this._createPasteHandler();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._preventLeaveInProgress();\r\n\r\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\r\n        this._refreshSessionData();\r\n\r\n        this._succeededSinceLastAllComplete = [];\r\n        this._failedSinceLastAllComplete = [];\r\n\r\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\r\n        if (this._scaler.enabled) {\r\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\r\n        }\r\n\r\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\r\n            this._totalProgress = new qq.TotalProgress(\r\n                qq.bind(this._onTotalProgress, this),\r\n\r\n                function(id) {\r\n                    var entry = self._uploadData.retrieve({id: id});\r\n                    return (entry && entry.size) || 0;\r\n                }\r\n            );\r\n        }\r\n\r\n        this._currentItemLimit = this._options.validation.itemLimit;\r\n    };\r\n\r\n    // Define the private & public API methods.\r\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\r\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n}());\r\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\r\n/**\r\n * Base upload handler module.  Controls more specific handlers.\r\n *\r\n * @param o Options.  Passed along to the specific handler submodule as well.\r\n * @param namespace [optional] Namespace for the specific handler.\r\n */\r\nqq.UploadHandlerController = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var controller = this,\r\n        chunkingPossible = false,\r\n        concurrentChunkingPossible = false,\r\n        chunking, preventRetryResponse, log, handler,\r\n\r\n    options = {\r\n        paramsStore: {},\r\n        maxConnections: 3, // maximum number of concurrent uploads\r\n        chunking: {\r\n            enabled: false,\r\n            multiple: {\r\n                enabled: false\r\n            }\r\n        },\r\n        log: function(str, level) {},\r\n        onProgress: function(id, fileName, loaded, total) {},\r\n        onComplete: function(id, fileName, response, xhr) {},\r\n        onCancel: function(id, fileName) {},\r\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\r\n        onUpload: function(id, fileName) {},\r\n        onUploadChunk: function(id, fileName, chunkData) {},\r\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\r\n        onAutoRetry: function(id, fileName, response, xhr) {},\r\n        onResume: function(id, fileName, chunkData) {},\r\n        onUuidChanged: function(id, newUuid) {},\r\n        getName: function(id) {},\r\n        setSize: function(id, newSize) {},\r\n        isQueued: function(id) {},\r\n        getIdsInProxyGroup: function(id) {},\r\n        getIdsInBatch: function(id) {}\r\n    },\r\n\r\n    chunked = {\r\n        // Called when each chunk has uploaded successfully\r\n        done: function(id, chunkIdx, response, xhr) {\r\n            var chunkData = handler._getChunkData(id, chunkIdx);\r\n\r\n            handler._getFileState(id).attemptingResume = false;\r\n\r\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\r\n            handler._getFileState(id).loaded += chunkData.size;\r\n\r\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\r\n        // logic associated with closing out the file, such as combining the chunks.\r\n        finalize: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id);\r\n\r\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\r\n            handler.finalizeChunks(id).then(\r\n                function(response, xhr) {\r\n                    log(\"Finalize successful for \" + id);\r\n\r\n                    var normaizedResponse = upload.normalizeResponse(response, true);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    handler._maybeDeletePersistedChunkData(id);\r\n                    upload.cleanup(id, normaizedResponse, xhr);\r\n                },\r\n                function(response, xhr) {\r\n                    var normaizedResponse = upload.normalizeResponse(response, false);\r\n\r\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\r\n\r\n                    if (normaizedResponse.reset) {\r\n                        chunked.reset(id);\r\n                    }\r\n\r\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\r\n                        upload.cleanup(id, normaizedResponse, xhr);\r\n                    }\r\n                }\r\n            );\r\n        },\r\n\r\n        handleFailure: function(chunkIdx, id, response, xhr) {\r\n            var name = options.getName(id);\r\n\r\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\r\n\r\n            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n            var responseToReport = upload.normalizeResponse(response, false),\r\n                inProgressIdx;\r\n\r\n            if (responseToReport.reset) {\r\n                chunked.reset(id);\r\n            }\r\n            else {\r\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\r\n                if (inProgressIdx >= 0) {\r\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\r\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\r\n                }\r\n            }\r\n\r\n            // We may have aborted all other in-progress chunks for this file due to a failure.\r\n            // If so, ignore the failures associated with those aborts.\r\n            if (!handler._getFileState(id).temp.ignoreFailure) {\r\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\r\n                // chunks since they will be explicitly aborted\r\n                if (concurrentChunkingPossible) {\r\n                    handler._getFileState(id).temp.ignoreFailure = true;\r\n\r\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\r\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\r\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\r\n                        ckXhr.abort();\r\n                        // Flag the transport, in case we are waiting for some other async operation\r\n                        // to complete before attempting to upload the chunk\r\n                        ckXhr._cancelled = true;\r\n                    });\r\n\r\n                    // We must indicate that all aborted chunks are no longer in progress\r\n                    handler.moveInProgressToRemaining(id);\r\n\r\n                    // Free up any connections used by these chunks, but don't allow any\r\n                    // other files to take up the connections (until we have exhausted all auto-retries)\r\n                    connectionManager.free(id, true);\r\n                }\r\n\r\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\r\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\r\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\r\n                    // is a failure or not.\r\n                    upload.cleanup(id, responseToReport, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        hasMoreParts: function(id) {\r\n            return !!handler._getFileState(id).chunking.remaining.length;\r\n        },\r\n\r\n        nextPart: function(id) {\r\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\r\n\r\n            if (nextIdx >= handler._getTotalChunks(id)) {\r\n                nextIdx = null;\r\n            }\r\n\r\n            return nextIdx;\r\n        },\r\n\r\n        reset: function(id) {\r\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\r\n\r\n            handler._maybeDeletePersistedChunkData(id);\r\n            handler.reevaluateChunking(id);\r\n            handler._getFileState(id).loaded = 0;\r\n        },\r\n\r\n        sendNext: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id),\r\n                chunkIdx = chunked.nextPart(id),\r\n                chunkData = handler._getChunkData(id, chunkIdx),\r\n                resuming = handler._getFileState(id).attemptingResume,\r\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\r\n\r\n            if (handler._getFileState(id).loaded == null) {\r\n                handler._getFileState(id).loaded = 0;\r\n            }\r\n\r\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\r\n            if (resuming && options.onResume(id, name, chunkData) === false) {\r\n                chunked.reset(id);\r\n                chunkIdx = chunked.nextPart(id);\r\n                chunkData = handler._getChunkData(id, chunkIdx);\r\n                resuming = false;\r\n            }\r\n\r\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\r\n            if (chunkIdx == null && inProgressChunks.length === 0) {\r\n                chunked.finalize(id);\r\n            }\r\n\r\n            // Send the next chunk\r\n            else {\r\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\r\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\r\n                inProgressChunks.push(chunkIdx);\r\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\r\n\r\n                if (concurrentChunkingPossible) {\r\n                    connectionManager.open(id, chunkIdx);\r\n                }\r\n\r\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\r\n                    chunked.sendNext(id);\r\n                }\r\n\r\n                if (chunkData.blob.size === 0) {\r\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\r\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\r\n                }\r\n                else {\r\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\r\n                        // upload chunk success\r\n                        function success(response, xhr) {\r\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\r\n\r\n                            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\r\n                                responseToReport = upload.normalizeResponse(response, true),\r\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\r\n\r\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\r\n\r\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\r\n\r\n                            if (inProgressChunkIdx >= 0) {\r\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\r\n                            }\r\n\r\n                            handler._maybePersistChunkedState(id);\r\n\r\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\r\n                                chunked.finalize(id);\r\n                            }\r\n                            else if (chunked.hasMoreParts(id)) {\r\n                                chunked.sendNext(id);\r\n                            }\r\n                            else {\r\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\r\n                            }\r\n                        },\r\n\r\n                        // upload chunk failure\r\n                        function failure(response, xhr) {\r\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\r\n                        }\r\n                        )\r\n                        .done(function() {\r\n                            handler.clearXhr(id, chunkIdx);\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    connectionManager = {\r\n        _open: [],\r\n        _openChunks: {},\r\n        _waiting: [],\r\n\r\n        available: function() {\r\n            var max = options.maxConnections,\r\n                openChunkEntriesCount = 0,\r\n                openChunksCount = 0;\r\n\r\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\r\n                openChunkEntriesCount++;\r\n                openChunksCount += openChunkIndexes.length;\r\n            });\r\n\r\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\r\n        },\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        free: function(id, dontAllowNext) {\r\n            var allowNext = !dontAllowNext,\r\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\r\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\r\n                nextId;\r\n\r\n            delete connectionManager._openChunks[id];\r\n\r\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\r\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\r\n                delete handler._getFileState(id).file;\r\n            }\r\n\r\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\r\n            if (waitingIndex >= 0) {\r\n                connectionManager._waiting.splice(waitingIndex, 1);\r\n            }\r\n            // If this file was consuming a connection, allow the next file to be uploaded\r\n            else if (allowNext && connectionsIndex >= 0) {\r\n                connectionManager._open.splice(connectionsIndex, 1);\r\n\r\n                nextId = connectionManager._waiting.shift();\r\n                if (nextId >= 0) {\r\n                    connectionManager._open.push(nextId);\r\n                    upload.start(nextId);\r\n                }\r\n            }\r\n        },\r\n\r\n        getWaitingOrConnected: function() {\r\n            var waitingOrConnected = [];\r\n\r\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\r\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\r\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\r\n                if (chunks && chunks.length) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // For non-chunked files, only one connection will be consumed per file.\r\n            // This is where we aggregate those file IDs.\r\n            qq.each(connectionManager._open, function(idx, fileId) {\r\n                if (!connectionManager._openChunks[fileId]) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // There may be files waiting for a connection.\r\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\r\n\r\n            return waitingOrConnected;\r\n        },\r\n\r\n        isUsingConnection: function(id) {\r\n            return qq.indexOf(connectionManager._open, id) >= 0;\r\n        },\r\n\r\n        open: function(id, chunkIdx) {\r\n            if (chunkIdx == null) {\r\n                var alreadyInWaiting = qq.indexOf(connectionManager._waiting, id);\r\n                var alreadyInOpen = qq.indexOf(connectionManager._open, id);\r\n                if (alreadyInWaiting === -1 && alreadyInOpen === -1) {\r\n                    connectionManager._waiting.push(id);\r\n                }\r\n            }\r\n\r\n            if (connectionManager.available()) {\r\n                if (chunkIdx == null) {\r\n                    connectionManager._waiting.pop();\r\n                    connectionManager._open.push(id);\r\n                }\r\n                else {\r\n                    (function() {\r\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\r\n                        openChunksEntry.push(chunkIdx);\r\n                        connectionManager._openChunks[id] = openChunksEntry;\r\n                    }());\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        reset: function() {\r\n            connectionManager._waiting = [];\r\n            connectionManager._open = [];\r\n        }\r\n    },\r\n\r\n    simple = {\r\n        send: function(id, name) {\r\n            handler._getFileState(id).loaded = 0;\r\n\r\n            log(\"Sending simple upload request for \" + id);\r\n            handler.uploadFile(id).then(\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request succeeded for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, true),\r\n                        size = options.getSize(id);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    upload.maybeNewUuid(id, responseToReport);\r\n                    upload.cleanup(id, responseToReport, optXhr);\r\n                },\r\n\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request failed for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, false);\r\n\r\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\r\n                        upload.cleanup(id, responseToReport, optXhr);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    upload = {\r\n        cancel: function(id) {\r\n            log(\"Cancelling \" + id);\r\n            options.paramsStore.remove(id);\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        cleanup: function(id, response, optXhr) {\r\n            var name = options.getName(id);\r\n\r\n            options.onComplete(id, name, response, optXhr);\r\n\r\n            if (handler._getFileState(id)) {\r\n                handler._clearXhrs && handler._clearXhrs(id);\r\n            }\r\n\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\r\n        // if none of these are available for the ID\r\n        getProxyOrBlob: function(id) {\r\n            return (handler.getProxy && handler.getProxy(id)) ||\r\n                (handler.getFile && handler.getFile(id));\r\n        },\r\n\r\n        initHandler: function() {\r\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\r\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\r\n\r\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\r\n                options,\r\n                {\r\n                    getDataByUuid: options.getDataByUuid,\r\n                    getName: options.getName,\r\n                    getSize: options.getSize,\r\n                    getUuid: options.getUuid,\r\n                    log: log,\r\n                    onCancel: options.onCancel,\r\n                    onProgress: options.onProgress,\r\n                    onUuidChanged: options.onUuidChanged\r\n                }\r\n            );\r\n\r\n            if (handler._removeExpiredChunkingRecords) {\r\n                handler._removeExpiredChunkingRecords();\r\n            }\r\n        },\r\n\r\n        isDeferredEligibleForUpload: function(id) {\r\n            return options.isQueued(id);\r\n        },\r\n\r\n        // For Blobs that are part of a group of generated images, along with a reference image,\r\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\r\n        // even if some async processing must be completed on one or more Blobs first.\r\n        maybeDefer: function(id, blob) {\r\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\r\n            // and then submit the upload to the specific handler once the blob is available.\r\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\r\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\r\n\r\n                // Blob creation may take some time, so the caller may want to update the\r\n                // UI to indicate that an operation is in progress, even before the actual\r\n                // upload begins and an onUpload callback is invoked.\r\n                options.onUploadPrep(id);\r\n\r\n                log(\"Attempting to generate a blob on-demand for \" + id);\r\n                blob.create().then(function(generatedBlob) {\r\n                    log(\"Generated an on-demand blob for \" + id);\r\n\r\n                    // Update record associated with this file by providing the generated Blob\r\n                    handler.updateBlob(id, generatedBlob);\r\n\r\n                    // Propagate the size for this generated Blob\r\n                    options.setSize(id, generatedBlob.size);\r\n\r\n                    // Order handler to recalculate chunking possibility, if applicable\r\n                    handler.reevaluateChunking(id);\r\n\r\n                    upload.maybeSendDeferredFiles(id);\r\n                },\r\n\r\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\r\n                function(errorMessage) {\r\n                    var errorResponse = {};\r\n\r\n                    if (errorMessage) {\r\n                        errorResponse.error = errorMessage;\r\n                    }\r\n\r\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\r\n\r\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\r\n                    upload.maybeSendDeferredFiles(id);\r\n                    connectionManager.free(id);\r\n                });\r\n            }\r\n            else {\r\n                return upload.maybeSendDeferredFiles(id);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\r\n        maybeSendDeferredFiles: function(id) {\r\n            var idsInGroup = options.getIdsInProxyGroup(id),\r\n                uploadedThisId = false;\r\n\r\n            if (idsInGroup && idsInGroup.length) {\r\n                log(\"Maybe ready to upload proxy group file \" + id);\r\n\r\n                qq.each(idsInGroup, function(idx, idInGroup) {\r\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\r\n                        uploadedThisId = idInGroup === id;\r\n                        upload.now(idInGroup);\r\n                    }\r\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                uploadedThisId = true;\r\n                upload.now(id);\r\n            }\r\n\r\n            return uploadedThisId;\r\n        },\r\n\r\n        maybeNewUuid: function(id, response) {\r\n            if (response.newUuid !== undefined) {\r\n                options.onUuidChanged(id, response.newUuid);\r\n            }\r\n        },\r\n\r\n        // The response coming from handler implementations may be in various formats.\r\n        // Instead of hoping a promise nested 5 levels deep will always return an object\r\n        // as its first param, let's just normalize the response here.\r\n        normalizeResponse: function(originalResponse, successful) {\r\n            var response = originalResponse;\r\n\r\n            // The passed \"response\" param may not be a response at all.\r\n            // It could be a string, detailing the error, for example.\r\n            if (!qq.isObject(originalResponse)) {\r\n                response = {};\r\n\r\n                if (qq.isString(originalResponse) && !successful) {\r\n                    response.error = originalResponse;\r\n                }\r\n            }\r\n\r\n            response.success = successful;\r\n\r\n            return response;\r\n        },\r\n\r\n        now: function(id) {\r\n            var name = options.getName(id);\r\n\r\n            if (!controller.isValid(id)) {\r\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\r\n            }\r\n\r\n            options.onUpload(id, name);\r\n\r\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\r\n                chunked.sendNext(id);\r\n            }\r\n            else {\r\n                simple.send(id, name);\r\n            }\r\n        },\r\n\r\n        start: function(id) {\r\n            var blobToUpload = upload.getProxyOrBlob(id);\r\n\r\n            if (blobToUpload) {\r\n                return upload.maybeDefer(id, blobToUpload);\r\n            }\r\n            else {\r\n                upload.now(id);\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds file or file input to the queue\r\n         **/\r\n        add: function(id, file) {\r\n            handler.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id\r\n         */\r\n        upload: function(id) {\r\n            if (connectionManager.open(id)) {\r\n                return upload.start(id);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        retry: function(id) {\r\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\r\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\r\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\r\n            // any more failures at this point.\r\n            if (concurrentChunkingPossible) {\r\n                handler._getFileState(id).temp.ignoreFailure = false;\r\n            }\r\n\r\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\r\n            // Just go ahead and ask the handler to upload again.\r\n            if (connectionManager.isUsingConnection(id)) {\r\n                return upload.start(id);\r\n            }\r\n\r\n            // If we are attempting to retry a file that is not currently consuming a connection,\r\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\r\n            // before the retry commences.\r\n            else {\r\n                return controller.upload(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id) {\r\n            var cancelRetVal = handler.cancel(id);\r\n\r\n            if (qq.isGenericPromise(cancelRetVal)) {\r\n                cancelRetVal.then(function() {\r\n                    upload.cancel(id);\r\n                });\r\n            }\r\n            else if (cancelRetVal !== false) {\r\n                upload.cancel(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels all queued or in-progress uploads\r\n         */\r\n        cancelAll: function() {\r\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\r\n                i;\r\n\r\n            // ensure files are cancelled in reverse order which they were added\r\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\r\n            if (waitingOrConnected.length) {\r\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\r\n                    controller.cancel(waitingOrConnected[i]);\r\n                }\r\n            }\r\n\r\n            connectionManager.reset();\r\n        },\r\n\r\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\r\n        // Undefined if no file record is available.\r\n        getFile: function(id) {\r\n            if (handler.getProxy && handler.getProxy(id)) {\r\n                return handler.getProxy(id).referenceBlob;\r\n            }\r\n\r\n            return handler.getFile && handler.getFile(id);\r\n        },\r\n\r\n        // Returns true if the Blob associated with the ID is related to a proxy s\r\n        isProxied: function(id) {\r\n            return !!(handler.getProxy && handler.getProxy(id));\r\n        },\r\n\r\n        getInput: function(id) {\r\n            if (handler.getInput) {\r\n                return handler.getInput(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            log(\"Resetting upload handler\");\r\n            controller.cancelAll();\r\n            connectionManager.reset();\r\n            handler.reset();\r\n        },\r\n\r\n        expunge: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.expunge(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Determine if the file exists.\r\n         */\r\n        isValid: function(id) {\r\n            return handler.isValid(id);\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            if (handler.getResumableFilesData) {\r\n                return handler.getResumableFilesData();\r\n            }\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\r\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\r\n         * will be undefined.\r\n         *\r\n         * @param id Internal file ID\r\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\r\n         */\r\n        getThirdPartyFileId: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.getThirdPartyFileId(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\r\n         * @param id ID of the upload/file to pause\r\n         * @returns {boolean} true if the upload was paused\r\n         */\r\n        pause: function(id) {\r\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\r\n                connectionManager.free(id);\r\n                handler.moveInProgressToRemaining(id);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // True if the file is eligible for pause/resume.\r\n        isResumable: function(id) {\r\n            return !!handler.isResumable && handler.isResumable(id);\r\n        }\r\n    });\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\r\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\r\n\r\n    preventRetryResponse = (function() {\r\n        var response = {};\r\n\r\n        response[options.preventRetryParam] = true;\r\n\r\n        return response;\r\n    }());\r\n\r\n    upload.initHandler();\r\n};\r\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n/**\r\n * CryptoJS core components.\r\n */\r\nqq.CryptoJS = (function (Math, undefined) {\r\n    /**\r\n     * CryptoJS namespace.\r\n     */\r\n    var C = {};\r\n\r\n    /**\r\n     * Library namespace.\r\n     */\r\n    var C_lib = C.lib = {};\r\n\r\n    /**\r\n     * Base object for prototypal inheritance.\r\n     */\r\n    var Base = C_lib.Base = (function () {\r\n        function F() {}\r\n\r\n        return {\r\n            /**\r\n             * Creates a new object that inherits from this object.\r\n             *\r\n             * @param {Object} overrides Properties to copy into the new object.\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         field: 'value',\r\n             *\r\n             *         method: function () {\r\n             *         }\r\n             *     });\r\n             */\r\n            extend: function (overrides) {\r\n                // Spawn\r\n                F.prototype = this;\r\n                var subtype = new F();\r\n\r\n                // Augment\r\n                if (overrides) {\r\n                    subtype.mixIn(overrides);\r\n                }\r\n\r\n                // Create default initializer\r\n                if (!subtype.hasOwnProperty('init')) {\r\n                    subtype.init = function () {\r\n                        subtype.$super.init.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                // Initializer's prototype is the subtype object\r\n                subtype.init.prototype = subtype;\r\n\r\n                // Reference supertype\r\n                subtype.$super = this;\r\n\r\n                return subtype;\r\n            },\r\n\r\n            /**\r\n             * Extends this object and runs the init method.\r\n             * Arguments to create() will be passed to init().\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var instance = MyType.create();\r\n             */\r\n            create: function () {\r\n                var instance = this.extend();\r\n                instance.init.apply(instance, arguments);\r\n\r\n                return instance;\r\n            },\r\n\r\n            /**\r\n             * Initializes a newly created object.\r\n             * Override this method to add some logic when your objects are created.\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         init: function () {\r\n             *             // ...\r\n             *         }\r\n             *     });\r\n             */\r\n            init: function () {\r\n            },\r\n\r\n            /**\r\n             * Copies properties into this object.\r\n             *\r\n             * @param {Object} properties The properties to mix in.\r\n             *\r\n             * @example\r\n             *\r\n             *     MyType.mixIn({\r\n             *         field: 'value'\r\n             *     });\r\n             */\r\n            mixIn: function (properties) {\r\n                for (var propertyName in properties) {\r\n                    if (properties.hasOwnProperty(propertyName)) {\r\n                        this[propertyName] = properties[propertyName];\r\n                    }\r\n                }\r\n\r\n                // IE won't copy toString using the loop above\r\n                if (properties.hasOwnProperty('toString')) {\r\n                    this.toString = properties.toString;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Creates a copy of this object.\r\n             *\r\n             * @return {Object} The clone.\r\n             *\r\n             * @example\r\n             *\r\n             *     var clone = instance.clone();\r\n             */\r\n            clone: function () {\r\n                return this.init.prototype.extend(this);\r\n            }\r\n        };\r\n    }());\r\n\r\n    /**\r\n     * An array of 32-bit words.\r\n     *\r\n     * @property {Array} words The array of 32-bit words.\r\n     * @property {number} sigBytes The number of significant bytes in this word array.\r\n     */\r\n    var WordArray = C_lib.WordArray = Base.extend({\r\n        /**\r\n         * Initializes a newly created word array.\r\n         *\r\n         * @param {Array} words (Optional) An array of 32-bit words.\r\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.create();\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n         */\r\n        init: function (words, sigBytes) {\r\n            words = this.words = words || [];\r\n\r\n            if (sigBytes != undefined) {\r\n                this.sigBytes = sigBytes;\r\n            } else {\r\n                this.sigBytes = words.length * 4;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts this word array to a string.\r\n         *\r\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n         *\r\n         * @return {string} The stringified word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     var string = wordArray + '';\r\n         *     var string = wordArray.toString();\r\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n         */\r\n        toString: function (encoder) {\r\n            return (encoder || Hex).stringify(this);\r\n        },\r\n\r\n        /**\r\n         * Concatenates a word array to this word array.\r\n         *\r\n         * @param {WordArray} wordArray The word array to append.\r\n         *\r\n         * @return {WordArray} This word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray1.concat(wordArray2);\r\n         */\r\n        concat: function (wordArray) {\r\n            // Shortcuts\r\n            var thisWords = this.words;\r\n            var thatWords = wordArray.words;\r\n            var thisSigBytes = this.sigBytes;\r\n            var thatSigBytes = wordArray.sigBytes;\r\n\r\n            // Clamp excess bits\r\n            this.clamp();\r\n\r\n            // Concat\r\n            if (thisSigBytes % 4) {\r\n                // Copy one byte at a time\r\n                for (var i = 0; i < thatSigBytes; i++) {\r\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n                }\r\n            } else if (thatWords.length > 0xffff) {\r\n                // Copy one word at a time\r\n                for (var i = 0; i < thatSigBytes; i += 4) {\r\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n                }\r\n            } else {\r\n                // Copy all words at once\r\n                thisWords.push.apply(thisWords, thatWords);\r\n            }\r\n            this.sigBytes += thatSigBytes;\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes insignificant bits.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray.clamp();\r\n         */\r\n        clamp: function () {\r\n            // Shortcuts\r\n            var words = this.words;\r\n            var sigBytes = this.sigBytes;\r\n\r\n            // Clamp\r\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n            words.length = Math.ceil(sigBytes / 4);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this word array.\r\n         *\r\n         * @return {WordArray} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = wordArray.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone.words = this.words.slice(0);\r\n\r\n            return clone;\r\n        },\r\n\r\n        /**\r\n         * Creates a word array filled with random bytes.\r\n         *\r\n         * @param {number} nBytes The number of random bytes to generate.\r\n         *\r\n         * @return {WordArray} The random word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n         */\r\n        random: function (nBytes) {\r\n            var words = [];\r\n            for (var i = 0; i < nBytes; i += 4) {\r\n                words.push((Math.random() * 0x100000000) | 0);\r\n            }\r\n\r\n            return new WordArray.init(words, nBytes);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Encoder namespace.\r\n     */\r\n    var C_enc = C.enc = {};\r\n\r\n    /**\r\n     * Hex encoding strategy.\r\n     */\r\n    var Hex = C_enc.Hex = {\r\n        /**\r\n         * Converts a word array to a hex string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The hex string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var hexChars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                hexChars.push((bite >>> 4).toString(16));\r\n                hexChars.push((bite & 0x0f).toString(16));\r\n            }\r\n\r\n            return hexChars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a hex string to a word array.\r\n         *\r\n         * @param {string} hexStr The hex string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n         */\r\n        parse: function (hexStr) {\r\n            // Shortcut\r\n            var hexStrLength = hexStr.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < hexStrLength; i += 2) {\r\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n            }\r\n\r\n            return new WordArray.init(words, hexStrLength / 2);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Latin1 encoding strategy.\r\n     */\r\n    var Latin1 = C_enc.Latin1 = {\r\n        /**\r\n         * Converts a word array to a Latin1 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Latin1 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var latin1Chars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                latin1Chars.push(String.fromCharCode(bite));\r\n            }\r\n\r\n            return latin1Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Latin1 string to a word array.\r\n         *\r\n         * @param {string} latin1Str The Latin1 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n         */\r\n        parse: function (latin1Str) {\r\n            // Shortcut\r\n            var latin1StrLength = latin1Str.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < latin1StrLength; i++) {\r\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            return new WordArray.init(words, latin1StrLength);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * UTF-8 encoding strategy.\r\n     */\r\n    var Utf8 = C_enc.Utf8 = {\r\n        /**\r\n         * Converts a word array to a UTF-8 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The UTF-8 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            try {\r\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n            } catch (e) {\r\n                throw new Error('Malformed UTF-8 data');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts a UTF-8 string to a word array.\r\n         *\r\n         * @param {string} utf8Str The UTF-8 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n         */\r\n        parse: function (utf8Str) {\r\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Abstract buffered block algorithm template.\r\n     *\r\n     * The property blockSize must be implemented in a concrete subtype.\r\n     *\r\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n     */\r\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n        /**\r\n         * Resets this block algorithm's data buffer to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm.reset();\r\n         */\r\n        reset: function () {\r\n            // Initial values\r\n            this._data = new WordArray.init();\r\n            this._nDataBytes = 0;\r\n        },\r\n\r\n        /**\r\n         * Adds new data to this block algorithm's buffer.\r\n         *\r\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm._append('data');\r\n         *     bufferedBlockAlgorithm._append(wordArray);\r\n         */\r\n        _append: function (data) {\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof data == 'string') {\r\n                data = Utf8.parse(data);\r\n            }\r\n\r\n            // Append\r\n            this._data.concat(data);\r\n            this._nDataBytes += data.sigBytes;\r\n        },\r\n\r\n        /**\r\n         * Processes available data blocks.\r\n         *\r\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n         *\r\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n         *\r\n         * @return {WordArray} The processed data.\r\n         *\r\n         * @example\r\n         *\r\n         *     var processedData = bufferedBlockAlgorithm._process();\r\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n         */\r\n        _process: function (doFlush) {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n            var dataSigBytes = data.sigBytes;\r\n            var blockSize = this.blockSize;\r\n            var blockSizeBytes = blockSize * 4;\r\n\r\n            // Count blocks ready\r\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\r\n            if (doFlush) {\r\n                // Round up to include partial blocks\r\n                nBlocksReady = Math.ceil(nBlocksReady);\r\n            } else {\r\n                // Round down to include only full blocks,\r\n                // less the number of blocks that must remain in the buffer\r\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n            }\r\n\r\n            // Count words ready\r\n            var nWordsReady = nBlocksReady * blockSize;\r\n\r\n            // Count bytes ready\r\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n            // Process blocks\r\n            if (nWordsReady) {\r\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n                    // Perform concrete-algorithm logic\r\n                    this._doProcessBlock(dataWords, offset);\r\n                }\r\n\r\n                // Remove processed words\r\n                var processedWords = dataWords.splice(0, nWordsReady);\r\n                data.sigBytes -= nBytesReady;\r\n            }\r\n\r\n            // Return processed words\r\n            return new WordArray.init(processedWords, nBytesReady);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this object.\r\n         *\r\n         * @return {Object} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = bufferedBlockAlgorithm.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone._data = this._data.clone();\r\n\r\n            return clone;\r\n        },\r\n\r\n        _minBufferSize: 0\r\n    });\r\n\r\n    /**\r\n     * Abstract hasher template.\r\n     *\r\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n     */\r\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n        /**\r\n         * Configuration options.\r\n         */\r\n        cfg: Base.extend(),\r\n\r\n        /**\r\n         * Initializes a newly created hasher.\r\n         *\r\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hasher = CryptoJS.algo.SHA256.create();\r\n         */\r\n        init: function (cfg) {\r\n            // Apply config defaults\r\n            this.cfg = this.cfg.extend(cfg);\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this hasher to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Reset data buffer\r\n            BufferedBlockAlgorithm.reset.call(this);\r\n\r\n            // Perform concrete-hasher logic\r\n            this._doReset();\r\n        },\r\n\r\n        /**\r\n         * Updates this hasher with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {Hasher} This hasher.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.update('message');\r\n         *     hasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            // Append\r\n            this._append(messageUpdate);\r\n\r\n            // Update the hash\r\n            this._process();\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the hash computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The hash.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hash = hasher.finalize();\r\n         *     var hash = hasher.finalize('message');\r\n         *     var hash = hasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Final message update\r\n            if (messageUpdate) {\r\n                this._append(messageUpdate);\r\n            }\r\n\r\n            // Perform concrete-hasher logic\r\n            var hash = this._doFinalize();\r\n\r\n            return hash;\r\n        },\r\n\r\n        blockSize: 512/32,\r\n\r\n        /**\r\n         * Creates a shortcut function to a hasher's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to create a helper for.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHelper: function (hasher) {\r\n            return function (message, cfg) {\r\n                return new hasher.init(cfg).finalize(message);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Creates a shortcut function to the HMAC's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHmacHelper: function (hasher) {\r\n            return function (message, key) {\r\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\r\n            };\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Algorithm namespace.\r\n     */\r\n    var C_algo = C.algo = {};\r\n\r\n    return C;\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var C_enc = C.enc;\r\n\r\n    /**\r\n     * Base64 encoding strategy.\r\n     */\r\n    var Base64 = C_enc.Base64 = {\r\n        /**\r\n         * Converts a word array to a Base64 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Base64 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n            var map = this._map;\r\n\r\n            // Clamp excess bits\r\n            wordArray.clamp();\r\n\r\n            // Convert\r\n            var base64Chars = [];\r\n            for (var i = 0; i < sigBytes; i += 3) {\r\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\r\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n                }\r\n            }\r\n\r\n            // Add padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                while (base64Chars.length % 4) {\r\n                    base64Chars.push(paddingChar);\r\n                }\r\n            }\r\n\r\n            return base64Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Base64 string to a word array.\r\n         *\r\n         * @param {string} base64Str The Base64 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n         */\r\n        parse: function (base64Str) {\r\n            // Shortcuts\r\n            var base64StrLength = base64Str.length;\r\n            var map = this._map;\r\n\r\n            // Ignore padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                var paddingIndex = base64Str.indexOf(paddingChar);\r\n                if (paddingIndex != -1) {\r\n                    base64StrLength = paddingIndex;\r\n                }\r\n            }\r\n\r\n            // Convert\r\n            var words = [];\r\n            var nBytes = 0;\r\n            for (var i = 0; i < base64StrLength; i++) {\r\n                if (i % 4) {\r\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\r\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\r\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n                    nBytes++;\r\n                }\r\n            }\r\n\r\n            return WordArray.create(words, nBytes);\r\n        },\r\n\r\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n    };\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var Base = C_lib.Base;\r\n    var C_enc = C.enc;\r\n    var Utf8 = C_enc.Utf8;\r\n    var C_algo = C.algo;\r\n\r\n    /**\r\n     * HMAC algorithm.\r\n     */\r\n    var HMAC = C_algo.HMAC = Base.extend({\r\n        /**\r\n         * Initializes a newly created HMAC.\r\n         *\r\n         * @param {Hasher} hasher The hash algorithm to use.\r\n         * @param {WordArray|string} key The secret key.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\r\n         */\r\n        init: function (hasher, key) {\r\n            // Init hasher\r\n            hasher = this._hasher = new hasher.init();\r\n\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof key == 'string') {\r\n                key = Utf8.parse(key);\r\n            }\r\n\r\n            // Shortcuts\r\n            var hasherBlockSize = hasher.blockSize;\r\n            var hasherBlockSizeBytes = hasherBlockSize * 4;\r\n\r\n            // Allow arbitrary length keys\r\n            if (key.sigBytes > hasherBlockSizeBytes) {\r\n                key = hasher.finalize(key);\r\n            }\r\n\r\n            // Clamp excess bits\r\n            key.clamp();\r\n\r\n            // Clone key for inner and outer pads\r\n            var oKey = this._oKey = key.clone();\r\n            var iKey = this._iKey = key.clone();\r\n\r\n            // Shortcuts\r\n            var oKeyWords = oKey.words;\r\n            var iKeyWords = iKey.words;\r\n\r\n            // XOR keys with pad constants\r\n            for (var i = 0; i < hasherBlockSize; i++) {\r\n                oKeyWords[i] ^= 0x5c5c5c5c;\r\n                iKeyWords[i] ^= 0x36363636;\r\n            }\r\n            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this HMAC to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Reset\r\n            hasher.reset();\r\n            hasher.update(this._iKey);\r\n        },\r\n\r\n        /**\r\n         * Updates this HMAC with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {HMAC} This HMAC instance.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.update('message');\r\n         *     hmacHasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            this._hasher.update(messageUpdate);\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the HMAC computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The HMAC.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmac = hmacHasher.finalize();\r\n         *     var hmac = hmacHasher.finalize('message');\r\n         *     var hmac = hmacHasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Compute HMAC\r\n            var innerHash = hasher.finalize(messageUpdate);\r\n            hasher.reset();\r\n            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\r\n\r\n            return hmac;\r\n        }\r\n    });\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-1 hash algorithm.\r\n     */\r\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init([\r\n                0x67452301, 0xefcdab89,\r\n                0x98badcfe, 0x10325476,\r\n                0xc3d2e1f0\r\n            ]);\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 80; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n                    W[i] = (n << 1) | (n >>> 31);\r\n                }\r\n\r\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n                if (i < 20) {\r\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\r\n                } else if (i < 40) {\r\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\r\n                } else if (i < 60) {\r\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n                } else /* if (i < 80) */ {\r\n                    t += (b ^ c ^ d) - 0x359d3e2a;\r\n                }\r\n\r\n                e = d;\r\n                d = c;\r\n                c = (b << 30) | (b >>> 2);\r\n                b = a;\r\n                a = t;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA1('message');\r\n     *     var hash = CryptoJS.SHA1(wordArray);\r\n     */\r\n    C.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n     */\r\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function (Math) {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Initialization and round constants tables\r\n    var H = [];\r\n    var K = [];\r\n\r\n    // Compute constants\r\n    (function () {\r\n        function isPrime(n) {\r\n            var sqrtN = Math.sqrt(n);\r\n            for (var factor = 2; factor <= sqrtN; factor++) {\r\n                if (!(n % factor)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFractionalBits(n) {\r\n            return ((n - (n | 0)) * 0x100000000) | 0;\r\n        }\r\n\r\n        var n = 2;\r\n        var nPrime = 0;\r\n        while (nPrime < 64) {\r\n            if (isPrime(n)) {\r\n                if (nPrime < 8) {\r\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n                }\r\n                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    }());\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-256 hash algorithm.\r\n     */\r\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init(H.slice(0));\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n            var f = H[5];\r\n            var g = H[6];\r\n            var h = H[7];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 64; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var gamma0x = W[i - 15];\r\n                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n                                   (gamma0x >>> 3);\r\n\r\n                    var gamma1x = W[i - 2];\r\n                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n                                   (gamma1x >>> 10);\r\n\r\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n                }\r\n\r\n                var ch  = (e & f) ^ (~e & g);\r\n                var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n                var t1 = h + sigma1 + ch + K[i] + W[i];\r\n                var t2 = sigma0 + maj;\r\n\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + t1) | 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (t1 + t2) | 0;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n            H[5] = (H[5] + f) | 0;\r\n            H[6] = (H[6] + g) | 0;\r\n            H[7] = (H[7] + h) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA256('message');\r\n     *     var hash = CryptoJS.SHA256(wordArray);\r\n     */\r\n    C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n     */\r\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Check if typed arrays are supported\r\n    if (typeof ArrayBuffer != 'function') {\r\n        return;\r\n    }\r\n\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n\r\n    // Reference original init\r\n    var superInit = WordArray.init;\r\n\r\n    // Augment WordArray.init to handle typed arrays\r\n    var subInit = WordArray.init = function (typedArray) {\r\n        // Convert buffers to uint8\r\n        if (typedArray instanceof ArrayBuffer) {\r\n            typedArray = new Uint8Array(typedArray);\r\n        }\r\n\r\n        // Convert other array views to uint8\r\n        if (\r\n            typedArray instanceof Int8Array ||\r\n            typedArray instanceof Uint8ClampedArray ||\r\n            typedArray instanceof Int16Array ||\r\n            typedArray instanceof Uint16Array ||\r\n            typedArray instanceof Int32Array ||\r\n            typedArray instanceof Uint32Array ||\r\n            typedArray instanceof Float32Array ||\r\n            typedArray instanceof Float64Array\r\n        ) {\r\n            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n        }\r\n\r\n        // Handle Uint8Array\r\n        if (typedArray instanceof Uint8Array) {\r\n            // Shortcut\r\n            var typedArrayByteLength = typedArray.byteLength;\r\n\r\n            // Extract bytes\r\n            var words = [];\r\n            for (var i = 0; i < typedArrayByteLength; i++) {\r\n                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            // Initialize this word array\r\n            superInit.call(this, words, typedArrayByteLength);\r\n        } else {\r\n            // Else call normal init\r\n            superInit.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    subInit.prototype = WordArray;\r\n}());\r\n","/*globals qq */\r\nqq.s3 = qq.s3 || {};\r\n\r\nqq.s3.util = qq.s3.util || (function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\r\n\r\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\r\n\r\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\r\n\r\n        DATE_PARAM_NAME: \"x-amz-date\",\r\n\r\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\r\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\r\n\r\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\r\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\r\n\r\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\r\n\r\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\r\n\r\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\r\n\r\n        CASE_SENSITIVE_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNSIGNABLE_REST_HEADER_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNPREFIXED_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\",\r\n            \"x-amz-server-side-encryption-customer-algorithm\",\r\n            \"x-amz-server-side-encryption-customer-key\",\r\n            \"x-amz-server-side-encryption-customer-key-MD5\"\r\n        ],\r\n\r\n        /**\r\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\r\n         *\r\n         * Examples of some valid endpoints are:\r\n         *     http://foo.s3.amazonaws.com\r\n         *     https://foo.s3.amazonaws.com\r\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\r\n         *     foo.s3.amazonaws.com\r\n         *     http://foo.bar.com\r\n         *     http://s3.amazonaws.com/foo.bar.com\r\n         * ...etc\r\n         *\r\n         * @param endpoint The bucket's URL.\r\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\r\n         */\r\n        getBucket: function(endpoint) {\r\n            var patterns = [\r\n                    //bucket in domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\r\n                    //bucket in path\r\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\r\n                    //custom domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\r\n                ],\r\n                bucket;\r\n\r\n            qq.each(patterns, function(idx, pattern) {\r\n                var match = pattern.exec(endpoint);\r\n\r\n                if (match) {\r\n                    bucket = match[1];\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return bucket;\r\n        },\r\n\r\n        /** Create Prefixed request headers which are appropriate for S3.\r\n         *\r\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\r\n         * it along without a metadata prefix. For all other request header parameter names,\r\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\r\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\r\n         */\r\n        _getPrefixedParamName: function(name) {\r\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\r\n                return name;\r\n            }\r\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\r\n        },\r\n\r\n        /**\r\n         * Create a policy document to be signed and sent along with the S3 upload request.\r\n         *\r\n         * @param spec Object with properties use to construct the policy document.\r\n         * @returns {Object} Policy doc.\r\n         */\r\n        getPolicy: function(spec) {\r\n            var policy = {},\r\n                conditions = [],\r\n                bucket = spec.bucket,\r\n                date = spec.date,\r\n                drift = spec.clockDrift,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                type = spec.type,\r\n                expectedStatus = spec.expectedStatus,\r\n                sessionToken = spec.sessionToken,\r\n                params = spec.params,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                minFileSize = spec.minFileSize,\r\n                maxFileSize = spec.maxFileSize,\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion;\r\n\r\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\r\n\r\n            conditions.push({acl: acl});\r\n            conditions.push({bucket: bucket});\r\n\r\n            if (type) {\r\n                conditions.push({\"Content-Type\": type});\r\n            }\r\n\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                conditions.push({success_action_status: expectedStatus.toString()});\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                conditions.push({success_action_redirect: successRedirectUrl});\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (signatureVersion === 2) {\r\n                conditions.push({key: key});\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1].key = key;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\r\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\r\n                    qq.s3.util.getV4PolicyDate(date, drift);\r\n            }\r\n\r\n            // user metadata\r\n            qq.each(params, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\r\n                    param = {};\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    param[awsParamName] = val;\r\n                }\r\n                else {\r\n                    param[awsParamName] = encodeURIComponent(val);\r\n                }\r\n\r\n                conditions.push(param);\r\n            });\r\n\r\n            policy.conditions = conditions;\r\n\r\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\r\n\r\n            return policy;\r\n        },\r\n\r\n        /**\r\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\r\n         * update the session token.  This is only relevant if requests are being signed client-side.\r\n         *\r\n         * @param policy Live policy document\r\n         * @param newSessionToken Updated session token.\r\n         */\r\n        refreshPolicyCredentials: function(policy, newSessionToken) {\r\n            var sessionTokenFound = false;\r\n\r\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\r\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\r\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\r\n                        oldCondObj[oldCondName] = newSessionToken;\r\n                        sessionTokenFound = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (!sessionTokenFound) {\r\n                policy.conditions.push({});\r\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\r\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\r\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\r\n         * still possible for a malicious user to tamper with these values during policy document generation,\r\n         * before it is sent to the server for signing.\r\n         *\r\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\r\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\r\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\r\n         */\r\n        generateAwsParams: function(spec, signPolicyCallback) {\r\n            var awsParams = {},\r\n                customParams = spec.params,\r\n                promise = new qq.Promise(),\r\n                sessionToken = spec.sessionToken,\r\n                drift = spec.clockDrift,\r\n                type = spec.type,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                expectedStatus = spec.expectedStatus,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion,\r\n                now = new Date(),\r\n                log = spec.log,\r\n                policyJson;\r\n\r\n            spec.date = now;\r\n            policyJson = qq.s3.util.getPolicy(spec);\r\n\r\n            awsParams.key = key;\r\n\r\n            if (type) {\r\n                awsParams[\"Content-Type\"] = type;\r\n            }\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                awsParams.success_action_status = expectedStatus;\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                awsParams.success_action_redirect = successRedirectUrl;\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            awsParams.acl = acl;\r\n\r\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\r\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\r\n            // Prefixed param values will be URI encoded as well.\r\n            qq.each(customParams, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    awsParams[awsParamName] = val;\r\n                }\r\n                else {\r\n                    awsParams[awsParamName] = encodeURIComponent(val);\r\n                }\r\n            });\r\n\r\n            if (signatureVersion === 2) {\r\n                awsParams.AWSAccessKeyId = accessKey;\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\r\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\r\n            }\r\n\r\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\r\n            // HMAC signature for the policy doc.\r\n            signPolicyCallback(policyJson).then(\r\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\r\n                    awsParams.policy = policyAndSignature.policy;\r\n\r\n                    if (spec.signatureVersion === 2) {\r\n                        awsParams.signature = policyAndSignature.signature;\r\n\r\n                        if (updatedAccessKey) {\r\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\r\n                        }\r\n                    }\r\n                    else if (spec.signatureVersion === 4) {\r\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\r\n                    }\r\n\r\n                    if (updatedSessionToken) {\r\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                    }\r\n\r\n                    promise.success(awsParams);\r\n                },\r\n                function(errorMessage) {\r\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\r\n                                                   \"a valid signature and policy from the server.\";\r\n\r\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\r\n                    promise.failure(errorMessage);\r\n                }\r\n            );\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\r\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\r\n         * checks already in place.\r\n         *\r\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\r\n         * @param minSize Minimum acceptable size, in bytes\r\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\r\n         */\r\n        enforceSizeLimits: function(policy, minSize, maxSize) {\r\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\r\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\r\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\r\n\r\n            if (minSize > 0 || maxSize > 0) {\r\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\r\n            }\r\n        },\r\n\r\n        getPolicyExpirationDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\r\n        },\r\n\r\n        getCredentialsDate: function(date) {\r\n            return date.getUTCFullYear() + \"\" +\r\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\r\n                (\"0\" + date.getUTCDate()).slice(-2);\r\n        },\r\n\r\n        getPolicyDate: function(date, _minutesToAdd_) {\r\n            var minutesToAdd = _minutesToAdd_ || 0,\r\n                pad, r;\r\n\r\n            /*jshint -W014 */\r\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\r\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\r\n\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                pad = function(number) {\r\n                    r = String(number);\r\n\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n\r\n                    return r;\r\n                };\r\n\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\r\n         * the associated resource.\r\n         *\r\n         * @param iframe Iframe containing response\r\n         * @returns {{bucket: *, key: *, etag: *}}\r\n         */\r\n        parseIframeResponse: function(iframe) {\r\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\r\n                queryString = doc.location.search,\r\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\r\n\r\n            if (match) {\r\n                return {\r\n                    bucket: match[1],\r\n                    key: match[2],\r\n                    etag: match[3].replace(/%22/g, \"\")\r\n                };\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param successRedirectUrl Relative or absolute location of success redirect page\r\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\r\n         */\r\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\r\n            if (successRedirectUrl) {\r\n                var targetAnchorContainer = document.createElement(\"div\"),\r\n                    targetAnchor;\r\n\r\n                if (qq.ie7()) {\r\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\r\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\r\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\r\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\r\n                    targetAnchor = targetAnchorContainer.firstChild;\r\n                    return targetAnchor.href;\r\n                }\r\n                else {\r\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\r\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\r\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\r\n                    // in order to ensure relative URLs will be properly parsed.\r\n                    targetAnchor = document.createElement(\"a\");\r\n                    targetAnchor.href = successRedirectUrl;\r\n                    targetAnchor.href = targetAnchor.href;\r\n                    return targetAnchor.href;\r\n                }\r\n            }\r\n        },\r\n\r\n        getV4CredentialsString: function(spec) {\r\n            return spec.key + \"/\" +\r\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\r\n                spec.region + \"/s3/aws4_request\";\r\n        },\r\n\r\n        getV4PolicyDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n\r\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\r\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\r\n                    \"Z\";\r\n        },\r\n\r\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\r\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\r\n        // and spaces are replaced with \"+\".\r\n        encodeQueryStringParam: function(param) {\r\n            var percentEncoded = encodeURIComponent(param);\r\n\r\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\r\n\r\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\r\n\r\n            // replace percent-encoded spaces with a \"+\"\r\n            return percentEncoded.replace(/%20/g, \"+\");\r\n        },\r\n        /**\r\n         * Escapes url part as for AWS requirements\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscape: function(string) {\r\n            var output = encodeURIComponent(string);\r\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\r\n            output = output.replace(/[*]/g, function(ch) {\r\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\r\n            });\r\n            return output;\r\n        },\r\n        /**\r\n         * Escapes a path as for AWS requirement\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscapePath: function(path) {\r\n            var parts = [];\r\n            qq.each(path.split(\"/\"), function(idx, item) {\r\n                parts.push(qq.s3.util.uriEscape(item));\r\n            });\r\n            return parts.join(\"/\");\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploaderBasic = function(o) {\n        var options = {\n            request: {\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\n                accessKey: null,\n\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\n                clockDrift: 0\n            },\n\n            objectProperties: {\n                acl: \"private\",\n\n                // string or a function which may be promissory\n                bucket: qq.bind(function(id) {\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\n                }, this),\n\n                // string or a function which may be promissory - only used for V4 multipart uploads\n                host: qq.bind(function(id) {\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\n                }, this),\n\n                // 'uuid', 'filename', or a function which may be promissory\n                key: \"uuid\",\n\n                reducedRedundancy: false,\n\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\n                region: \"us-east-1\",\n\n                serverSideEncryption: false\n            },\n\n            credentials: {\n                // Public key (required).\n                accessKey: null,\n                // Private key (required).\n                secretKey: null,\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\n                expiration: null,\n                // Temporary credentials session token.\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\n                sessionToken: null\n            },\n\n            // All but `version` are ignored if `credentials` is provided.\n            signature: {\n                customHeaders: {},\n                endpoint: null,\n                version: 2\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            // required if non-File-API browsers, such as IE9 and older, are used\n            iframeSupport: {\n                localBlankPagePath: null\n            },\n\n            chunking: {\n                // minimum part size is 5 MiB when uploading to S3\n                partSize: 5242880\n            },\n\n            cors: {\n                allowXdr: true\n            },\n\n            callbacks: {\n                onCredentialsExpired: function() {}\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        if (!this.setCredentials(options.credentials, true)) {\n            this._currentCredentials.accessKey = options.request.accessKey;\n        }\n\n        this._aclStore = this._createStore(options.objectProperties.acl);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds S3 keys for file representations constructed from a session request.\n        this._cannedKeys = {};\n        // Holds S3 buckets for file representations constructed from a session request.\n        this._cannedBuckets = {};\n\n        this._buckets = {};\n        this._hosts = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\n        getBucket: function(id) {\n            if (this._cannedBuckets[id] == null) {\n                return this._buckets[id];\n            }\n            return this._cannedBuckets[id];\n        },\n\n        /**\n         * @param id File ID\n         * @returns {*} Key name associated w/ the file, if one exists\n         */\n        getKey: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedKeys[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n\n            return this._cannedKeys[id];\n        },\n\n        /**\n         * Override the parent's reset function to cleanup various S3-related items.\n         */\n        reset: function() {\n            qq.FineUploaderBasic.prototype.reset.call(this);\n            this._failedSuccessRequestCallbacks = [];\n            this._buckets = {};\n            this._hosts = {};\n        },\n\n        setCredentials: function(credentials, ignoreEmpty) {\n            if (credentials && credentials.secretKey) {\n                if (!credentials.accessKey) {\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\n                }\n                else if (!credentials.expiration) {\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\n                }\n                else {\n                    this._currentCredentials = qq.extend({}, credentials);\n\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\n                    if (qq.isString(credentials.expiration)) {\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\n                    }\n                }\n\n                return true;\n            }\n            else if (!ignoreEmpty) {\n                throw new qq.Error(\"Invalid credentials parameter!\");\n            }\n            else {\n                this._currentCredentials = {};\n            }\n        },\n\n        setAcl: function(acl, id) {\n            this._aclStore.set(acl, id);\n        },\n\n        /**\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\n         *\n         * @returns {qq.UploadHandlerController}\n         * @private\n         */\n        _createUploadHandler: function() {\n            var self = this,\n                additionalOptions = {\n                    aclStore: this._aclStore,\n                    getBucket: qq.bind(this._determineBucket, this),\n                    getHost: qq.bind(this._determineHost, this),\n                    getKeyName: qq.bind(this._determineKeyName, this),\n                    iframeSupport: this._options.iframeSupport,\n                    objectProperties: this._options.objectProperties,\n                    signature: this._options.signature,\n                    clockDrift: this._options.request.clockDrift,\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\n                    validation: {\n                        minSizeLimit: this._options.validation.minSizeLimit,\n                        maxSizeLimit: this._options.validation.sizeLimit\n                    }\n                };\n\n            // We assume HTTP if it is missing from the start of the endpoint string.\n            qq.override(this._endpointStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var endpoint = super_.get(id);\n                        if (typeof endpoint === 'function') {\n                            endpoint = endpoint(id);\n                        }\n                        if (endpoint.indexOf(\"http\") < 0) {\n                            return \"http://\" + endpoint;\n                        }\n\n                        return endpoint;\n                    }\n                };\n            });\n\n            // Some param names should be lower case to avoid signature mismatches\n            qq.override(this._paramsStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var oldParams = super_.get(id),\n                            modifiedParams = {};\n\n                        qq.each(oldParams, function(name, val) {\n                            var paramName = name;\n\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\n                                paramName = paramName.toLowerCase();\n                            }\n\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\n                        });\n\n                        return modifiedParams;\n                    }\n                };\n            });\n\n            additionalOptions.signature.credentialsProvider = {\n                get: function() {\n                    return self._currentCredentials;\n                },\n\n                onExpired: function() {\n                    var updateCredentials = new qq.Promise(),\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\n\n                    if (qq.isGenericPromise(callbackRetVal)) {\n                        callbackRetVal.then(function(credentials) {\n                            try {\n                                self.setCredentials(credentials);\n                                updateCredentials.success();\n                            }\n                            catch (error) {\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\n                            }\n                        }, function(errorMsg) {\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\n                        });\n                    }\n                    else {\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\n                    }\n\n                    return updateCredentials;\n                }\n            };\n\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\n        },\n\n        _determineObjectPropertyValue: function(id, property) {\n            var maybe = this._options.objectProperties[property],\n                promise = new qq.Promise(),\n                self = this;\n\n            if (qq.isFunction(maybe)) {\n                maybe = maybe(id);\n                if (qq.isGenericPromise(maybe)) {\n                    promise = maybe;\n                }\n                else {\n                    promise.success(maybe);\n                }\n            }\n            else if (qq.isString(maybe)) {\n                promise.success(maybe);\n            }\n\n            promise.then(\n                function success(value) {\n                    self[\"_\" + property + \"s\"][id] = value;\n                },\n\n                function failure(errorMsg) {\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\n                }\n            );\n\n            return promise;\n        },\n\n        _determineBucket: function(id) {\n            return this._determineObjectPropertyValue(id, \"bucket\");\n        },\n\n        _determineHost: function(id) {\n            return this._determineObjectPropertyValue(id, \"host\");\n        },\n\n        /**\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\n         * delegate to an integrator-defined function that determines the file's key name on demand,\n         * which also may be promissory.\n         *\n         * @param id ID of the file\n         * @param filename Name of the file\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\n         * @private\n         */\n        _determineKeyName: function(id, filename) {\n            /*jshint -W015*/\n            var promise = new qq.Promise(),\n                keynameLogic = this._options.objectProperties.key,\n                extension = qq.getExtension(filename),\n                onGetKeynameFailure = promise.failure,\n                onGetKeynameSuccess = function(keyname, extension) {\n                    var keynameToUse = keyname;\n\n                    if (extension !== undefined) {\n                        keynameToUse += \".\" + extension;\n                    }\n\n                    promise.success(keynameToUse);\n                };\n\n            switch (keynameLogic) {\n                case \"uuid\":\n                    onGetKeynameSuccess(this.getUuid(id), extension);\n                    break;\n                case \"filename\":\n                    onGetKeynameSuccess(filename);\n                    break;\n                default:\n                    if (qq.isFunction(keynameLogic)) {\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\n                    }\n                    else {\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\n                        onGetKeynameFailure();\n                    }\n            }\n\n            return promise;\n        },\n\n        /**\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\n         * the promise contract associated with the caller as well.\n         *\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\n         * @param id ID of the associated file\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\n         * @private\n         */\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\n            var self = this,\n                onSuccess = function(keyname) {\n                    successCallback(keyname);\n                },\n                onFailure = function(reason) {\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\n                    failureCallback(reason);\n                },\n                keyname = keynameFunc.call(this, id);\n\n            if (qq.isGenericPromise(keyname)) {\n                keyname.then(onSuccess, onFailure);\n            }\n            /*jshint -W116*/\n            else if (keyname == null) {\n                onFailure();\n            }\n            else {\n                onSuccess(keyname);\n            }\n        },\n\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\n            var params = {\n                key: this.getKey(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                bucket: this.getBucket(id)\n            };\n\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\n            }\n            else if (response.etag) {\n                params.etag = response.etag;\n            }\n\n            return params;\n        },\n\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\n        _onSubmitDelete: function(id, onSuccessCallback) {\n            var additionalMandatedParams = {\n                key: this.getKey(id),\n                bucket: this.getBucket(id)\n            };\n\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.s3Key == null) {\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedKeys[id] = sessionData.s3Key;\n                this._cannedBuckets[id] = sessionData.s3Bucket;\n            }\n\n            return id;\n        }\n    });\n}());\n","/* globals qq, CryptoJS */\r\n\r\n/**\r\n * Manages creation and communication of s3 signature workers.\r\n */\r\nqq.s3.RequestSignerWorkerManager = function (o) {\r\n    \"use strict\";\r\n    var worker = null,\r\n        workerPromises = {},\r\n        options = {\r\n            workerUrl: null,\r\n            log: function(str, level) {}\r\n        };\r\n    qq.extend(options, o, true);\r\n\r\n    function init() {\r\n        var workerUrl;\r\n        switch (typeof options.workerUrl) {\r\n            case \"string\":\r\n                if (options.workerUrl !== \"inline\") {\r\n                    workerUrl = options.workerUrl;\r\n                } else {\r\n                    workerUrl = qq.s3.createS3InlineWorkerUrl();\r\n                }\r\n                break;\r\n            case \"function\":\r\n                workerUrl = options.workerUrl();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (!workerUrl) {\r\n            return;\r\n        }\r\n        try {\r\n            worker = new Worker(workerUrl);\r\n            worker.onerror = function (e) {\r\n                // Prevent the event from bubbling\r\n                e.preventDefault();\r\n                // log the error, and fail any pending promises.\r\n                options.log(\"Worker encountered an error. Disabling. \" + e.message, \"warn\");\r\n                worker = null;\r\n                var outstandingRequests = Object.keys(workerPromises),\r\n                    i;\r\n                for (i = 0; i < outstandingRequests.length; i++) {\r\n                    workerPromises[outstandingRequests[i]].failure(e);\r\n                    delete workerPromises[outstandingRequests[i]];\r\n                }\r\n            };\r\n            worker.onmessage = function (e) {\r\n                if (!workerPromises[e.data.id]) {\r\n                    options.log(\"Worker returned a result for an request we dont know about.\", \"warn\");\r\n                    return;\r\n                }\r\n                if (e.data.err) {\r\n                    workerPromises[e.data.id].failure(e.data.err);\r\n                } else {\r\n                    workerPromises[e.data.id].success(e.data.resp);\r\n                }\r\n                delete workerPromises[e.data.id];\r\n            };\r\n        }  catch (ex) {\r\n            // worker is not supported or invalid\r\n            options.log(\"Worker failed to be created. Defaulting back to main thread processing.\" + ex, \"warn\");\r\n            worker = null;\r\n        }\r\n    }\r\n    init();\r\n    /*\r\n        Generates the signuare of the given file.\r\n        @param file the file/slice to generate the signature for.\r\n        @returns a promise or null if we can't generate signatures at all.\r\n    */\r\n    this.generateSignature = function (file) {\r\n        if (!worker) {\r\n            return null;\r\n        }\r\n        var promise = new qq.Promise(),\r\n            task = {file: file, id: qq.getUniqueId()};\r\n        workerPromises[task.id] = promise;\r\n        worker.postMessage(task);\r\n        return promise;\r\n    };\r\n};\r\n","/* globals qq, CryptoJS */\n\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\nif (!window.Uint8ClampedArray) {\n    window.Uint8ClampedArray = function() {};\n}\n/**\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\n *\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\n * to determine if the effort was successful.\n *\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\n * sign the requests directly in the browser and send them off to S3.\n *\n * @param o Options associated with all such requests\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\n * @constructor\n */\nqq.s3.RequestSigner = function(o) {\n    \"use strict\";\n\n    var requester,\n        thisSignatureRequester = this,\n        pendingSignatures = {},\n        options = {\n            expectingPolicy: false,\n            method: \"POST\",\n            signatureSpec: {\n                drift: 0,\n                credentialsProvider: {},\n                endpoint: null,\n                customHeaders: {},\n                version: 2\n            },\n            maxConnections: 3,\n            endpointStore: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        },\n        credentialsProvider,\n\n        generateHeaders = function(signatureConstructor, signature, promise) {\n            var headers = signatureConstructor.getHeaders();\n\n            if (options.signatureSpec.version === 4) {\n                signatureConstructor.getToSignPromise.then(function () {\n                    headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\n                        \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\n                        qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\n                        options.signatureSpec.region + \"/\" +\n                        \"s3/aws4_request,\" +\n                        \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\n                        \"Signature=\" + signature;\n                    promise.success(headers, signatureConstructor.getEndOfUrl());\n                }, function () {\n                    promise.failure(\"Failed to sign chunk\");\n                });\n            }\n            else {\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\n                promise.success(headers, signatureConstructor.getEndOfUrl());\n            }\n\n        },\n\n        v2 = {\n            getStringToSign: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\n                    signatureSpec.method,\n                    signatureSpec.contentMd5 || \"\",\n                    signatureSpec.contentType || \"\",\n                    signatureSpec.headersStr || \"\\n\",\n                    signatureSpec.bucket,\n                    signatureSpec.endOfUrl);\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\n\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: policyHmacSha1Base64\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        },\n\n        v4 = {\n            getCanonicalQueryString: function(endOfUri) {\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\n                    canonicalQueryString = \"\",\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\n\n                if (queryParamIdx >= 0) {\n                    encodedQueryParams = {};\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\n\n                    qq.each(queryStrings, function(idx, queryString) {\n                        var nameAndVal = queryString.split(\"=\"),\n                            paramVal = nameAndVal[1];\n\n                        if (paramVal == null) {\n                            paramVal = \"\";\n                        }\n\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\n                    });\n\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\n                        if (idx < encodedQueryParamNames.length - 1) {\n                            canonicalQueryString += \"&\";\n                        }\n                    });\n                }\n\n                return canonicalQueryString;\n            },\n\n            getCanonicalRequest: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\n                    signatureSpec.method,\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\n                    signatureSpec.headersStr || \"\\n\",\n                    v4.getSignedHeaders(signatureSpec.headerNames),\n                    signatureSpec.hashedContent);\n            },\n\n            getCanonicalUri: function(endOfUri) {\n                var path = endOfUri,\n                    queryParamIdx = endOfUri.indexOf(\"?\");\n\n                if (queryParamIdx > 0) {\n                    path = endOfUri.substr(0, queryParamIdx);\n                }\n                return \"/\" + path;\n            },\n\n            getEncodedHashedPayload: function(body) {\n                var promise,\n                    reader;\n                if (qq.isBlob(body)) {\n                    // We will fallback to the inline reader if the worker was\n                    // not loaded correctly\n                    if (options.signatureSpec.workerManager) {\n                        promise = options.signatureSpec.workerManager.generateSignature(body);\n                        if (promise !== null) {\n                            return promise;\n                        }\n                    }\n                    promise = new qq.Promise();\n                    reader = new FileReader();\n                    reader.onloadend = function(e) {\n                        if (e.target.readyState === FileReader.DONE) {\n                            if (e.target.error) {\n                                promise.failure(e.target.error);\n                            }\n                            else {\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\n                            }\n                        }\n                    };\n                    reader.readAsArrayBuffer(body);\n                    return promise;\n                }\n                promise = new qq.Promise();\n                body = body || \"\";\n                promise.success(qq.CryptoJS.SHA256(body).toString());\n                return promise;\n            },\n\n            getScope: function(date, region) {\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\n                    region + \"/s3/aws4_request\";\n            },\n\n            getStringToSign: function(signatureSpec) {\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\n\n                return {\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\n                };\n            },\n\n            getSignedHeaders: function(headerNames) {\n                var signedHeaders = \"\";\n\n                headerNames.forEach(function(headerName, idx) {\n                    signedHeaders += headerName.toLowerCase();\n\n                    if (idx < headerNames.length - 1) {\n                        signedHeaders += \";\";\n                    }\n                });\n\n                return signedHeaders;\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var secretKey = credentialsProvider.get().secretKey,\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\n                    matches = headersPattern.exec(headersStr),\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    secretKey = credentialsProvider.get().secretKey,\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\n                    credentialCondition = (function() {\n                        var credential = null;\n                        qq.each(policy.conditions, function(key, condition) {\n                            var val = condition[\"x-amz-credential\"];\n                            if (val) {\n                                credential = val;\n                                return false;\n                            }\n                        });\n                        return credential;\n                    }()),\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                matches = credentialPattern.exec(credentialCondition);\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        };\n\n    qq.extend(options, o, true);\n    credentialsProvider = options.signatureSpec.credentialsProvider;\n\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\n        var responseJson = xhrOrXdr.responseText,\n            pendingSignatureData = pendingSignatures[id],\n            promise,\n            signatureConstructor,\n            errorMessage, response;\n\n        if (!pendingSignatureData) {\n            return;\n        }\n        promise = pendingSignatureData.promise;\n        signatureConstructor = pendingSignatureData.signatureConstructor;\n\n        delete pendingSignatures[id];\n\n        // Attempt to parse what we would expect to be a JSON response\n        if (responseJson) {\n            try {\n                response = qq.parseJson(responseJson);\n            }\n            catch (error) {\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\n            }\n        }\n\n        // If the response is parsable and contains an `error` property, use it as the error message\n        if (response && response.error) {\n            isError = true;\n            errorMessage = response.error;\n        }\n        // If we have received a parsable response, and it has an `invalid` property,\n        // the policy document or request headers may have been tampered with client-side.\n        else if (response && response.invalid) {\n            isError = true;\n            errorMessage = \"Invalid policy document or request headers!\";\n        }\n        // Make sure the response contains policy & signature properties\n        else if (response) {\n            if (options.expectingPolicy && !response.policy) {\n                isError = true;\n                errorMessage = \"Response does not include the base64 encoded policy!\";\n            }\n            else if (!response.signature) {\n                isError = true;\n                errorMessage = \"Response does not include the signature!\";\n            }\n        }\n        // Something unknown went wrong\n        else {\n            isError = true;\n            errorMessage = \"Received an empty or invalid response from the server!\";\n        }\n        if (isError) {\n            if (errorMessage) {\n                options.log(errorMessage, \"error\");\n            }\n\n            promise.failure(errorMessage);\n        }\n        else if (signatureConstructor) {\n            generateHeaders(signatureConstructor, response.signature, promise);\n        }\n        else {\n            promise.success(response);\n        }\n    }\n\n    function getStringToSignArtifacts(id, version, requestInfo) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            headerNames = [],\n            headersStr = \"\",\n            now = new Date(),\n            endOfUrl, signatureSpec, toSign,\n\n            generateStringToSign = function(requestInfo) {\n                var contentMd5,\n                    headerIndexesToRemove = [];\n\n                qq.each(requestInfo.headers, function(name) {\n                    headerNames.push(name);\n                });\n                headerNames.sort();\n\n                qq.each(headerNames, function(idx, headerName) {\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\n                    }\n                    else if (headerName === \"Content-MD5\") {\n                        contentMd5 = requestInfo.headers[headerName];\n                    }\n                    else {\n                        headerIndexesToRemove.unshift(idx);\n                    }\n                });\n\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\n                    headerNames.splice(headerIdx, 1);\n                });\n\n                signatureSpec = {\n                    bucket: requestInfo.bucket,\n                    contentMd5: contentMd5,\n                    contentType: requestInfo.contentType,\n                    date: now,\n                    drift: options.signatureSpec.drift,\n                    endOfUrl: endOfUrl,\n                    hashedContent: requestInfo.hashedContent,\n                    headerNames: headerNames,\n                    headersStr: headersStr,\n                    method: method\n                };\n\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\n\n                return {\n                    date: now,\n                    endOfUrl: endOfUrl,\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\n                    toSign: version === 4 ? toSign.hashed : toSign,\n                    toSignRaw: version === 4 ? toSign.raw : toSign\n                };\n            };\n\n        /*jshint indent:false */\n        switch (requestInfo.type) {\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\n                method = \"DELETE\";\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\n                endOfUrl = \"uploads\";\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\n                method = \"PUT\";\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\n                break;\n        }\n\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\n        if (version === 4) {\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\n                requestInfo.headers.Host = requestInfo.host;\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\n                requestInfo.hashedContent = hashedContent;\n\n                promise.success(generateStringToSign(requestInfo));\n            }, function (err) {\n                promise.failure(err);\n            });\n        }\n        else {\n            promise.success(generateStringToSign(requestInfo));\n        }\n\n        return promise;\n    }\n\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        var updatedHeaders;\n\n        // REST API request\n        if (toBeSigned.signatureConstructor) {\n            if (updatedSessionToken) {\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\n            }\n\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\n            }, function (err) {\n                signatureEffort.failure(err);\n            });\n        }\n        // Form upload (w/ policy document)\n        else {\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        if (options.signatureSpec.version === 4) {\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n        else {\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\n        if (options.signatureSpec.version === 4) {\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n        else {\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        contentType: \"application/json; charset=utf-8\",\n        endpointStore: {\n            get: function() {\n                if (typeof options.signatureSpec.endpoint === 'function') {\n                    return options.signatureSpec.endpoint();\n                }\n                return options.signatureSpec.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.signatureSpec.customHeaders,\n        log: options.log,\n        onComplete: handleSignatureReceived,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\n         *\n         * @param id File ID.\n         * @param toBeSigned an Object that holds the item(s) to be signed\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\n         */\n        getSignature: function(id, toBeSigned) {\n            var params = toBeSigned,\n                signatureConstructor = toBeSigned.signatureConstructor,\n                signatureEffort = new qq.Promise(),\n                queryParams;\n\n            if (options.signatureSpec.version === 4) {\n                queryParams = {v4: true};\n            }\n\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\n                }\n                // If credentials are expired, ask for new ones before attempting to sign request\n                else {\n                    credentialsProvider.onExpired().then(function() {\n                        determineSignatureClientSide(id, toBeSigned,\n                            signatureEffort,\n                            credentialsProvider.get().accessKey,\n                            credentialsProvider.get().sessionToken);\n                    }, function(errorMsg) {\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\n                    });\n                }\n            }\n            else {\n                options.log(\"Submitting S3 signature request for \" + id);\n\n                // create before incase the singature effort returns faster than us\n                pendingSignatures[id] = {\n                    promise: signatureEffort,\n                    signatureConstructor: signatureConstructor\n                };\n\n                if (signatureConstructor) {\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                        params = {headers: signatureArtifacts.stringToSignRaw};\n                        requester.initTransport(id)\n                            .withParams(params)\n                            .withQueryParams(queryParams)\n                            .send();\n                    }, function (err) {\n                        options.log(\"Failed to construct signature. \", \"error\");\n                        signatureEffort.failure(\"Failed to construct signature.\");\n                    });\n                }\n                else {\n                    requester.initTransport(id)\n                        .withParams(params)\n                        .withQueryParams(queryParams)\n                        .send();\n                }\n            }\n\n            return signatureEffort;\n        },\n\n        constructStringToSign: function(type, bucket, host, key) {\n            var headers = {},\n                uploadId, content, contentType, partNum, artifacts;\n\n            return {\n                withHeaders: function(theHeaders) {\n                    headers = theHeaders;\n                    return this;\n                },\n\n                withUploadId: function(theUploadId) {\n                    uploadId = theUploadId;\n                    return this;\n                },\n\n                withContent: function(theContent) {\n                    content = theContent;\n                    return this;\n                },\n\n                withContentType: function(theContentType) {\n                    contentType = theContentType;\n                    return this;\n                },\n\n                withPartNum: function(thePartNum) {\n                    partNum = thePartNum;\n                    return this;\n                },\n\n                getToSign: function(id) {\n                    var sessionToken = credentialsProvider.get().sessionToken,\n                        promise = new qq.Promise(),\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\n\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\n\n                    if (sessionToken) {\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n                    }\n                    this.getToSignPromise = promise;\n\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\n                        bucket: bucket,\n                        content: content,\n                        contentType: contentType,\n                        headers: headers,\n                        host: host,\n                        key: key,\n                        partNum: partNum,\n                        type: type,\n                        uploadId: uploadId\n                    }).then(function(_artifacts_) {\n                        artifacts = _artifacts_;\n                        promise.success({\n                            headers: (function() {\n                                if (contentType) {\n                                    headers[\"Content-Type\"] = contentType;\n                                }\n\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\n                                return headers;\n                            }()),\n                            date: artifacts.date,\n                            endOfUrl: artifacts.endOfUrl,\n                            signedHeaders: artifacts.signedHeaders,\n                            stringToSign: artifacts.toSign,\n                            stringToSignRaw: artifacts.toSignRaw\n                        });\n                    }, function (err) {\n                        promise.failure(err);\n                    });\n\n                    return promise;\n                },\n\n                getHeaders: function() {\n                    return qq.extend({}, headers);\n                },\n\n                getEndOfUrl: function() {\n                    return artifacts && artifacts.endOfUrl;\n                },\n\n                getRequestDate: function() {\n                    return artifacts && artifacts.date;\n                },\n\n                getSignedHeaders: function() {\n                    return artifacts && artifacts.signedHeaders;\n                }\n            };\n        }\n    });\n};\n\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\n    MULTIPART_INITIATE: \"multipart_initiate\",\n    MULTIPART_COMPLETE: \"multipart_complete\",\n    MULTIPART_ABORT: \"multipart_abort\",\n    MULTIPART_UPLOAD: \"multipart_upload\"\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\n * request to S3 via the REST API.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingInitiateRequests = {},\n        options = {\n            filenameParam: \"qqfilename\",\n            method: \"POST\",\n            endpointStore: null,\n            paramsStore: null,\n            signatureSpec: null,\n            aclStore: null,\n            reducedRedundancy: false,\n            serverSideEncryption: false,\n            maxConnections: 3,\n            getContentType: function(id) {},\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            getName: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\n     * method on the promise will be called.\n     *\n     * @param id Associated file ID\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id) {\n        var bucket = options.getBucket(id),\n            host = options.getHost(id),\n            headers = {},\n            promise = new qq.Promise(),\n            key = options.getKey(id),\n            signatureConstructor;\n\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\n\n        if (options.reducedRedundancy) {\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n        }\n\n        if (options.serverSideEncryption) {\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n        }\n\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\n\n        qq.each(options.paramsStore.get(id), function(name, val) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                headers[name] = val;\n            }\n            else {\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\n            }\n        });\n\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\n            .withContentType(options.getContentType(id))\n            .withHeaders(headers);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Initiate MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleInitiateRequestComplete(id, xhr, isError) {\n        var promise = pendingInitiateRequests[id],\n            domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\n\n        delete pendingInitiateRequests[id];\n\n        // The base ajax requester may declare the request to be a failure based on status code.\n        if (isError) {\n            status = xhr.status;\n\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\n            if (messageElements.length > 0) {\n                errorMessage = messageElements[0].textContent;\n            }\n        }\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\n        else {\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\n            if (uploadIdElements.length > 0) {\n                uploadId = uploadIdElements[0].textContent;\n            }\n            else {\n                errorMessage = \"Upload ID missing from request\";\n            }\n        }\n\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\n        if (uploadId === undefined) {\n            if (errorMessage) {\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\n            }\n\n            promise.failure(\"Problem initiating upload request.\", xhr);\n        }\n        else {\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\n            promise.success(uploadId, xhr);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleInitiateRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\n         *\n         * @param id The ID associated with the file\n         * @returns {qq.Promise}\n         */\n        send: function(id) {\n            var promise = new qq.Promise();\n\n            getHeaders(id).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\n\n                pendingInitiateRequests[id] = promise;\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\n * request to S3 via the REST API.\n *\n * @param o Options passed by the creator, to overwrite any default option values.\n * @constructor\n */\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingCompleteRequests = {},\n        options = {\n            method: \"POST\",\n            contentType: \"text/xml\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId, body) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\n                .withUploadId(uploadId)\n                .withContent(body)\n                .withContentType(\"application/xml; charset=UTF-8\");\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Complete MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleCompleteRequestComplete(id, xhr, isError) {\n        var promise = pendingCompleteRequests[id],\n            domParser = new DOMParser(),\n            bucket = options.getBucket(id),\n            key = options.getKey(id),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\n\n        delete pendingCompleteRequests[id];\n\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (bucketEls.length && keyEls.length) {\n                if (bucketEls[0].textContent !== bucket) {\n                    isError = true;\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\n                }\n\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\n            }\n            else {\n                isError = true;\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\n            }\n        }\n\n        if (isError) {\n            promise.failure(\"Problem combining the file parts!\", xhr);\n        }\n        else {\n            promise.success({}, xhr);\n        }\n    }\n\n    /**\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\n     */\n    function getCompleteRequestBody(etagEntries) {\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\n\n        // The entries MUST be sorted by part number, per the AWS API spec.\n        etagEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(etagEntries, function(idx, etagEntry) {\n            var part = etagEntry.part,\n                etag = etagEntry.etag,\n                partEl = doc.createElement(\"Part\"),\n                partNumEl = doc.createElement(\"PartNumber\"),\n                partNumTextEl = doc.createTextNode(part),\n                etagTextEl = doc.createTextNode(etag),\n                etagEl = doc.createElement(\"ETag\");\n\n            etagEl.appendChild(etagTextEl);\n            partNumEl.appendChild(partNumTextEl);\n            partEl.appendChild(partNumEl);\n            partEl.appendChild(etagEl);\n            qq(doc).children()[0].appendChild(partEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: \"application/xml; charset=UTF-8\",\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleCompleteRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n         * @returns {qq.Promise}\n         */\n        send: function(id, uploadId, etagEntries) {\n            var promise = new qq.Promise(),\n                body = getCompleteRequestBody(etagEntries);\n\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\n\n                pendingCompleteRequests[id] = promise;\n                delete headers[\"Content-Type\"];\n\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .withPayload(body)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\n * request to S3 via the REST API.\n\n * @param o\n * @constructor\n */\nqq.s3.AbortMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @param id Associated file ID\n     * @param uploadId ID of the associated upload, according to AWS\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\n                .withUploadId(uploadId);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Abort MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleAbortRequestComplete(id, xhr, isError) {\n        var domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\n            awsErrorMsg;\n\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (errorEls.length) {\n                isError = true;\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [\"DELETE\"],\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleAbortRequestComplete,\n        successfulResponseCodes: {\n            DELETE: [204]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Abort\" request.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         */\n        send: function(id, uploadId) {\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            });\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\r\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\r\n *\r\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.s3.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    // need to pre-construct the workerManager\r\n    var workerManager;\r\n    if (spec.signature.workerUrl) {\r\n        workerManager = new qq.s3.RequestSignerWorkerManager({\r\n            workerUrl: spec.signature.workerUrl,\r\n            log: proxy.log,\r\n        });\r\n    }\r\n\r\n    var getName = proxy.getName,\r\n        log = proxy.log,\r\n        clockDrift = spec.clockDrift,\r\n        expectedStatus = 200,\r\n        onGetBucket = spec.getBucket,\r\n        onGetHost = spec.getHost,\r\n        onGetKeyName = spec.getKeyName,\r\n        filenameParam = spec.filenameParam,\r\n        paramsStore = spec.paramsStore,\r\n        endpointStore = spec.endpointStore,\r\n        aclStore = spec.aclStore,\r\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\r\n        region = spec.objectProperties.region,\r\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\r\n        validation = spec.validation,\r\n        signature = qq.extend({region: region, drift: clockDrift, workerManager: workerManager}, spec.signature),\r\n        handler = this,\r\n        credentialsProvider = spec.signature.credentialsProvider,\r\n\r\n        chunked = {\r\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\r\n            // when the response to this request has been parsed.\r\n            combine: function(id) {\r\n                var uploadId = handler._getPersistableData(id).uploadId,\r\n                    etagMap = handler._getPersistableData(id).etags,\r\n                    result = new qq.Promise();\r\n\r\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\r\n                    result.success,\r\n\r\n                    function failure(reason, xhr) {\r\n                        result.failure(upload.done(id, xhr).response, xhr);\r\n                    }\r\n                );\r\n\r\n                return result;\r\n            },\r\n\r\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\r\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\r\n            // in the XML response and store that along with the associated part number.\r\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\r\n            done: function(id, xhr, chunkIdx) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    etag;\r\n\r\n                if (response.success) {\r\n                    etag = xhr.getResponseHeader(\"ETag\");\r\n\r\n                    if (!handler._getPersistableData(id).etags) {\r\n                        handler._getPersistableData(id).etags = [];\r\n                    }\r\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\r\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\r\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\r\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\r\n             * callback.\r\n             *\r\n             * @param id File ID\r\n             * @param chunkIdx Index of the chunk to PUT\r\n             * @returns {qq.Promise}\r\n             */\r\n            initHeaders: function(id, chunkIdx, blob) {\r\n                var headers = {},\r\n                    bucket = upload.bucket.getName(id),\r\n                    host = upload.host.getName(id),\r\n                    key = upload.key.urlSafe(id),\r\n                    promise = new qq.Promise(),\r\n                    signatureConstructor = requesters.restSignature.constructStringToSign\r\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\r\n                        .withPartNum(chunkIdx + 1)\r\n                        .withContent(blob)\r\n                        .withUploadId(handler._getPersistableData(id).uploadId);\r\n\r\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            put: function(id, chunkIdx) {\r\n                var xhr = handler._createXhr(id, chunkIdx),\r\n                    chunkData = handler._getChunkData(id, chunkIdx),\r\n                    domain = spec.endpointStore.get(id),\r\n                    promise = new qq.Promise();\r\n\r\n                // Add appropriate headers to the multipart upload request.\r\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\r\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\r\n                    if (xhr._cancelled) {\r\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\r\n                        promise.failure({error: \"Chunk upload cancelled\"});\r\n                    }\r\n                    else {\r\n                        var url = domain + \"/\" + endOfUrl;\r\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\r\n                        xhr.open(\"PUT\", url, true);\r\n\r\n                        qq.each(headers, function(name, val) {\r\n                            xhr.setRequestHeader(name, val);\r\n                        });\r\n\r\n                        xhr.send(chunkData.blob);\r\n                    }\r\n                }, function() {\r\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            send: function(id, chunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                chunked.setup(id).then(\r\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\r\n                    function() {\r\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\r\n                    },\r\n\r\n                    // We were unable to initiate the chunked upload process.\r\n                    function(errorMessage, xhr) {\r\n                        promise.failure({error: errorMessage}, xhr);\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\r\n             * initiated.\r\n             *\r\n             * @param id Associated file ID\r\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\r\n             */\r\n            setup: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    uploadId = handler._getPersistableData(id).uploadId,\r\n                    uploadIdPromise = new qq.Promise();\r\n\r\n                if (!uploadId) {\r\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\r\n                    requesters.initiateMultipart.send(id).then(\r\n                        function(uploadId) {\r\n                            handler._getPersistableData(id).uploadId = uploadId;\r\n                            uploadIdPromise.success(uploadId);\r\n                            promise.success(uploadId);\r\n                        },\r\n                        function(errorMsg, xhr) {\r\n                            handler._getPersistableData(id).uploadId = null;\r\n                            promise.failure(errorMsg, xhr);\r\n                            uploadIdPromise.failure(errorMsg, xhr);\r\n                        }\r\n                    );\r\n                }\r\n                else if (uploadId instanceof qq.Promise) {\r\n                    uploadId.then(function(uploadId) {\r\n                        promise.success(uploadId);\r\n                    });\r\n                }\r\n                else {\r\n                    promise.success(uploadId);\r\n                }\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        requesters = {\r\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\r\n                filenameParam: filenameParam,\r\n                endpointStore: endpointStore,\r\n                paramsStore: paramsStore,\r\n                signatureSpec: signature,\r\n                aclStore: aclStore,\r\n                reducedRedundancy: reducedRedundancy,\r\n                serverSideEncryption: serverSideEncryption,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getContentType: function(id) {\r\n                    return handler._getMimeType(id);\r\n                },\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                },\r\n                getName: function(id) {\r\n                    return getName(id);\r\n                }\r\n            }),\r\n\r\n            policySignature: new qq.s3.RequestSigner({\r\n                expectingPolicy: true,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            }),\r\n\r\n            restSignature: new qq.s3.RequestSigner({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            })\r\n        },\r\n\r\n        simple = {\r\n            /**\r\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\r\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\r\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\r\n             * due to some error.\r\n             *\r\n             * @param id File ID\r\n             * @returns {qq.Promise}\r\n             */\r\n            initParams: function(id) {\r\n                /*jshint -W040 */\r\n                var customParams = paramsStore.get(id);\r\n                customParams[filenameParam] = getName(id);\r\n\r\n                return qq.s3.util.generateAwsParams({\r\n                    endpoint: endpointStore.get(id),\r\n                    clockDrift: clockDrift,\r\n                    params: customParams,\r\n                    type: handler._getMimeType(id),\r\n                    bucket: upload.bucket.getName(id),\r\n                    key: handler.getThirdPartyFileId(id),\r\n                    accessKey: credentialsProvider.get().accessKey,\r\n                    sessionToken: credentialsProvider.get().sessionToken,\r\n                    acl: aclStore.get(id),\r\n                    expectedStatus: expectedStatus,\r\n                    minFileSize: validation.minSizeLimit,\r\n                    maxFileSize: validation.maxSizeLimit,\r\n                    reducedRedundancy: reducedRedundancy,\r\n                    region: region,\r\n                    serverSideEncryption: serverSideEncryption,\r\n                    signatureVersion: signature.version,\r\n                    log: log\r\n                },\r\n                qq.bind(requesters.policySignature.getSignature, this, id));\r\n            },\r\n\r\n            send: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    xhr = handler._createXhr(id),\r\n                    fileOrBlob = handler.getFile(id);\r\n\r\n                handler._registerProgressHandler(id);\r\n                upload.track(id, xhr).then(promise.success, promise.failure);\r\n\r\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\r\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\r\n                    log(\"Sending upload request for \" + id);\r\n                    xhr.send(toSend);\r\n                }, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\r\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\r\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\r\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\r\n             *\r\n             * Note that this is only used by the simple (non-chunked) upload process.\r\n             *\r\n             * @param id File ID\r\n             * @param xhr XMLHttpRequest to use for the upload\r\n             * @param fileOrBlob `File` or `Blob` to send\r\n             * @returns {qq.Promise}\r\n             */\r\n            setup: function(id, xhr, fileOrBlob) {\r\n                var formData = new FormData(),\r\n                    endpoint = endpointStore.get(id),\r\n                    url = endpoint,\r\n                    promise = new qq.Promise();\r\n\r\n                simple.initParams(id).then(\r\n                    // Success - all params determined\r\n                    function(awsParams) {\r\n                        xhr.open(\"POST\", url, true);\r\n\r\n                        qq.obj2FormData(awsParams, formData);\r\n\r\n                        // AWS requires the file field be named \"file\".\r\n                        formData.append(\"file\", fileOrBlob);\r\n\r\n                        promise.success(formData);\r\n                    },\r\n\r\n                    // Failure - we couldn't determine some params (likely the signature)\r\n                    function(errorMessage) {\r\n                        promise.failure({error: errorMessage});\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        upload = {\r\n            /**\r\n             * Note that this is called when an upload has reached a termination point,\r\n             * regardless of success/failure.  For example, it is called when we have\r\n             * encountered an error during the upload or when the file may have uploaded successfully.\r\n             *\r\n             * @param id file ID\r\n             */\r\n            bucket: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedBucket = handler._getFileState(id).bucket;\r\n\r\n                    if (cachedBucket) {\r\n                        promise.success(cachedBucket);\r\n                    }\r\n                    else {\r\n                        onGetBucket(id).then(function(bucket) {\r\n                            handler._getFileState(id).bucket = bucket;\r\n                            promise.success(bucket);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).bucket;\r\n                }\r\n            },\r\n\r\n            host: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedHost = handler._getFileState(id).host;\r\n\r\n                    if (cachedHost) {\r\n                        promise.success(cachedHost);\r\n                    }\r\n                    else {\r\n                        onGetHost(id).then(function(host) {\r\n                            handler._getFileState(id).host = host;\r\n                            promise.success(host);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).host;\r\n                }\r\n            },\r\n\r\n            done: function(id, xhr) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    isError = response.success !== true;\r\n\r\n                if (isError && upload.response.shouldReset(response.code)) {\r\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\r\n                    response.reset = true;\r\n                }\r\n\r\n                return {\r\n                    success: !isError,\r\n                    response: response\r\n                };\r\n            },\r\n\r\n            key: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        key = handler.getThirdPartyFileId(id);\r\n\r\n                    /* jshint eqnull:true */\r\n                    if (key == null) {\r\n                        handler._setThirdPartyFileId(id, promise);\r\n                        onGetKeyName(id, getName(id)).then(\r\n                            function(keyName) {\r\n                                handler._setThirdPartyFileId(id, keyName);\r\n                                promise.success(keyName);\r\n                            },\r\n                            function(errorReason) {\r\n                                handler._setThirdPartyFileId(id, null);\r\n                                promise.failure(errorReason);\r\n                            }\r\n                        );\r\n                    }\r\n                    else if (qq.isGenericPromise(key)) {\r\n                        key.then(promise.success, promise.failure);\r\n                    }\r\n                    else {\r\n                        promise.success(key);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                urlSafe: function(id) {\r\n                    var encodedKey = handler.getThirdPartyFileId(id);\r\n                    return qq.s3.util.uriEscapePath(encodedKey);\r\n                }\r\n            },\r\n\r\n            response: {\r\n                parse: function(id, xhr) {\r\n                    var response = {},\r\n                        parsedErrorProps;\r\n\r\n                    try {\r\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\r\n\r\n                        if (xhr.status === expectedStatus) {\r\n                            response.success = true;\r\n                        }\r\n                        else {\r\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\r\n\r\n                            if (parsedErrorProps) {\r\n                                response.error = parsedErrorProps.message;\r\n                                response.code = parsedErrorProps.code;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\r\n                    }\r\n\r\n                    return response;\r\n                },\r\n\r\n                /**\r\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\r\n                 *\r\n                 * @param awsResponseXml XML response from AWS\r\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\r\n                 */\r\n                parseError: function(awsResponseXml) {\r\n                    var parser = new DOMParser(),\r\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\r\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\r\n                        errorDetails = {},\r\n                        codeEls, messageEls;\r\n\r\n                    if (errorEls.length) {\r\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\r\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\r\n\r\n                        if (messageEls.length) {\r\n                            errorDetails.message = messageEls[0].textContent;\r\n                        }\r\n\r\n                        if (codeEls.length) {\r\n                            errorDetails.code = codeEls[0].textContent;\r\n                        }\r\n\r\n                        return errorDetails;\r\n                    }\r\n                },\r\n\r\n                // Determine if the upload should be restarted on the next retry attempt\r\n                // based on the error code returned in the response from AWS.\r\n                shouldReset: function(errorCode) {\r\n                    /*jshint -W014 */\r\n                    return errorCode === \"EntityTooSmall\"\r\n                        || errorCode === \"InvalidPart\"\r\n                        || errorCode === \"InvalidPartOrder\"\r\n                        || errorCode === \"NoSuchUpload\";\r\n                }\r\n            },\r\n\r\n            start: function(id, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                upload.key.promise(id).then(function() {\r\n                    upload.bucket.promise(id).then(function() {\r\n                        upload.host.promise(id).then(function() {\r\n                            /* jshint eqnull:true */\r\n                            if (optChunkIdx == null) {\r\n                                simple.send(id).then(promise.success, promise.failure);\r\n                            }\r\n                            else {\r\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\r\n                            }\r\n                        });\r\n                    });\r\n                },\r\n                function(errorReason) {\r\n                    promise.failure({error: errorReason});\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            track: function(id, xhr, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4) {\r\n                        var result;\r\n\r\n                        /* jshint eqnull:true */\r\n                        if (optChunkIdx == null) {\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                        else {\r\n                            chunked.done(id, xhr, optChunkIdx);\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                return promise;\r\n            }\r\n        };\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: upload.start,\r\n        uploadFile: upload.start\r\n    });\r\n\r\n    qq.extend(this, new qq.XhrUploadHandler({\r\n        options: qq.extend({namespace: \"s3\"}, spec),\r\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n    }));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            expunge: function(id) {\r\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\r\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\r\n\r\n                if (uploadId !== undefined && existedInLocalStorage) {\r\n                    requesters.abortMultipart.send(id, uploadId);\r\n                }\r\n\r\n                super_.expunge(id);\r\n            },\r\n\r\n            finalizeChunks: function(id) {\r\n                return chunked.combine(id);\r\n            },\r\n\r\n            _getLocalStorageId: function(id) {\r\n                var baseStorageId = super_._getLocalStorageId(id),\r\n                    bucketName = upload.bucket.getName(id);\r\n\r\n                return baseStorageId + \"-\" + bucketName;\r\n            }\r\n        };\r\n    });\r\n};\r\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\n * AWS API.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        clockDrift = options.clockDrift,\n        onUuidChanged = proxy.onUuidChanged,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        onGetBucket = options.getBucket,\n        onGetKeyName = options.getKeyName,\n        filenameParam = options.filenameParam,\n        paramsStore = options.paramsStore,\n        endpointStore = options.endpointStore,\n        aclStore = options.aclStore,\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\n        region = options.objectProperties.region,\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\n        validation = options.validation,\n        signature = options.signature,\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\n        credentialsProvider = options.signature.credentialsProvider,\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\n            signatureSpec: signature,\n            cors: options.cors,\n            log: log\n        });\n\n    if (successRedirectUrl === undefined) {\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\n    }\n\n    /**\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\n     * have redirected to a known endpoint that should provide a parseable response.\n     *\n     * @param id ID of the associated file\n     * @param iframe target of the form submit\n     * @returns {boolean} true if the contents can be read, false otherwise\n     */\n    function isValidResponse(id, iframe) {\n        var response,\n            endpoint = options.endpointStore.get(id),\n            bucket = handler._getFileState(id).bucket,\n            doc,\n            innerHtml,\n            responseData;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            responseData = qq.s3.util.parseIframeResponse(iframe);\n            if (responseData.bucket === bucket &&\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\n\n                return true;\n            }\n\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\n\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n        }\n\n        return false;\n    }\n\n    function generateAwsParams(id) {\n        /*jshint -W040 */\n        var customParams = paramsStore.get(id);\n\n        customParams[filenameParam] = getName(id);\n\n        return qq.s3.util.generateAwsParams({\n            endpoint: endpointStore.get(id),\n            clockDrift: clockDrift,\n            params: customParams,\n            bucket: handler._getFileState(id).bucket,\n            key: handler.getThirdPartyFileId(id),\n            accessKey: credentialsProvider.get().accessKey,\n            sessionToken: credentialsProvider.get().sessionToken,\n            acl: aclStore.get(id),\n            minFileSize: validation.minSizeLimit,\n            maxFileSize: validation.maxSizeLimit,\n            successRedirectUrl: successRedirectUrl,\n            reducedRedundancy: reducedRedundancy,\n            region: region,\n            serverSideEncryption: serverSideEncryption,\n            signatureVersion: signature.version,\n            log: log\n        },\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            endpoint = options.endpointStore.get(id),\n            fileName = getName(id);\n\n        generateAwsParams(id).then(function(params) {\n            var form = handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: true,\n                targetName: iframe.name\n            });\n\n            promise.success(form);\n        }, function(errorMessage) {\n            promise.failure(errorMessage);\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\n        });\n\n        return promise;\n    }\n\n    function handleUpload(id) {\n        var iframe = handler._createIframe(id),\n            input = handler.getInput(id),\n            promise = new qq.Promise();\n\n        createForm(id, iframe).then(function(form) {\n            form.appendChild(input);\n\n            // Register a callback when the response comes in from S3\n            handler._attachLoadEvent(iframe, function(response) {\n                log(\"iframe loaded\");\n\n                // If the common response handler has determined success or failure immediately\n                if (response) {\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\n                    if (response.success === false) {\n                        log(\"Amazon likely rejected the upload request\", \"error\");\n                        promise.failure(response);\n                    }\n                }\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\n                else {\n                    response = {};\n                    response.success = isValidResponse(id, iframe);\n\n                    // If the more specific response handle detected a problem with the response from S3\n                    if (response.success === false) {\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\n                        promise.failure(response);\n                    }\n                    else {\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\n                        promise.success(response);\n                    }\n                }\n\n                handleFinishedUpload(id, iframe);\n            });\n\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n        }, promise.failure);\n\n        return promise;\n    }\n\n    function handleFinishedUpload(id, iframe) {\n        handler._detachLoadEvent(id);\n        iframe && qq(iframe).remove();\n    }\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: false,\n            inputName: \"file\"\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            onUuidChanged: onUuidChanged,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n\n    qq.extend(this, {\n        uploadFile: function(id) {\n            var name = getName(id),\n                promise = new qq.Promise();\n\n            if (handler.getThirdPartyFileId(id)) {\n                if (handler._getFileState(id).bucket) {\n                    handleUpload(id).then(promise.success, promise.failure);\n                }\n                else {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handleUpload(id).then(promise.success, promise.failure);\n                    });\n                }\n            }\n            else {\n                // The S3 uploader module will either calculate the key or ask the server for it\n                // and will call us back once it is known.\n                onGetKeyName(id, name).then(function(key) {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handler._setThirdPartyFileId(id, key);\n                        handleUpload(id).then(promise.success, promise.failure);\n                    }, function(errorReason) {\n                        promise.failure({error: errorReason});\n                    });\n                }, function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n            }\n\n            return promise;\n        }\n    });\n};\n","\n        qq.s3.createS3InlineWorkerUrl = function () {\n            return URL.createObjectURL(new Blob([\"// Fine Uploader 5.14.5 - (c) 2013-present Widen Enterprises, Inc. MIT licensed. http://fineuploader.com\\nfunction doTask(t,r){\\\"use strict\\\";var n=new FileReader;n.onloadend=function(t){if(t.target.readyState===FileReader.DONE)if(t.target.error)r(JSON.parse(JSON.stringify(t.target.error,null,2)));else{var n=qq.CryptoJS.lib.WordArray.create(t.target.result);r(null,qq.CryptoJS.SHA256(n).toString())}},n.readAsArrayBuffer(t)}qq={},qq.CryptoJS=function(t,r){var n={},e=n.lib={},i=e.Base=function(){function t(){}return{extend:function(r){t.prototype=this;var n=new t;return r&&n.mixIn(r),n.hasOwnProperty(\\\"init\\\")||(n.init=function(){n.$super.init.apply(this,arguments)}),n.init.prototype=n,n.$super=this,n},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},mixIn:function(t){for(var r in t)t.hasOwnProperty(r)&&(this[r]=t[r]);t.hasOwnProperty(\\\"toString\\\")&&(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),s=e.WordArray=i.extend({init:function(t,n){t=this.words=t||[],n!=r?this.sigBytes=n:this.sigBytes=4*t.length},toString:function(t){return(t||o).stringify(this)},concat:function(t){var r=this.words,n=t.words,e=this.sigBytes,i=t.sigBytes;if(this.clamp(),e%4)for(var s=0;s<i;s++){var a=n[s>>>2]>>>24-s%4*8&255;r[e+s>>>2]|=a<<24-(e+s)%4*8}else if(n.length>65535)for(var s=0;s<i;s+=4)r[e+s>>>2]=n[s>>>2];else r.push.apply(r,n);return this.sigBytes+=i,this},clamp:function(){var r=this.words,n=this.sigBytes;r[n>>>2]&=4294967295<<32-n%4*8,r.length=t.ceil(n/4)},clone:function(){var t=i.clone.call(this);return t.words=this.words.slice(0),t},random:function(r){for(var n=[],e=0;e<r;e+=4)n.push(4294967296*t.random()|0);return new s.init(n,r)}}),a=n.enc={},o=a.Hex={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var s=r[i>>>2]>>>24-i%4*8&255;e.push((s>>>4).toString(16)),e.push((15&s).toString(16))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e+=2)n[e>>>3]|=parseInt(t.substr(e,2),16)<<24-e%8*4;return new s.init(n,r/2)}},c=a.Latin1={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var s=r[i>>>2]>>>24-i%4*8&255;e.push(String.fromCharCode(s))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e++)n[e>>>2]|=(255&t.charCodeAt(e))<<24-e%4*8;return new s.init(n,r)}},f=a.Utf8={stringify:function(t){try{return decodeURIComponent(escape(c.stringify(t)))}catch(t){throw new Error(\\\"Malformed UTF-8 data\\\")}},parse:function(t){return c.parse(unescape(encodeURIComponent(t)))}},h=e.BufferedBlockAlgorithm=i.extend({reset:function(){this._data=new s.init,this._nDataBytes=0},_append:function(t){\\\"string\\\"==typeof t&&(t=f.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes},_process:function(r){var n=this._data,e=n.words,i=n.sigBytes,a=this.blockSize,o=4*a,c=i/o;c=r?t.ceil(c):t.max((0|c)-this._minBufferSize,0);var f=c*a,h=t.min(4*f,i);if(f){for(var u=0;u<f;u+=a)this._doProcessBlock(e,u);var l=e.splice(0,f);n.sigBytes-=h}return new s.init(l,h)},clone:function(){var t=i.clone.call(this);return t._data=this._data.clone(),t},_minBufferSize:0}),u=(e.Hasher=h.extend({cfg:i.extend(),init:function(t){this.cfg=this.cfg.extend(t),this.reset()},reset:function(){h.reset.call(this),this._doReset()},update:function(t){return this._append(t),this._process(),this},finalize:function(t){t&&this._append(t);var r=this._doFinalize();return r},blockSize:16,_createHelper:function(t){return function(r,n){return new t.init(n).finalize(r)}},_createHmacHelper:function(t){return function(r,n){return new u.HMAC.init(t,n).finalize(r)}}}),n.algo={});return n}(Math),function(){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=t.enc;e.Base64={stringify:function(t){var r=t.words,n=t.sigBytes,e=this._map;t.clamp();for(var i=[],s=0;s<n;s+=3)for(var a=r[s>>>2]>>>24-s%4*8&255,o=r[s+1>>>2]>>>24-(s+1)%4*8&255,c=r[s+2>>>2]>>>24-(s+2)%4*8&255,f=a<<16|o<<8|c,h=0;h<4&&s+.75*h<n;h++)i.push(e.charAt(f>>>6*(3-h)&63));var u=e.charAt(64);if(u)for(;i.length%4;)i.push(u);return i.join(\\\"\\\")},parse:function(t){var r=t.length,e=this._map,i=e.charAt(64);if(i){var s=t.indexOf(i);s!=-1&&(r=s)}for(var a=[],o=0,c=0;c<r;c++)if(c%4){var f=e.indexOf(t.charAt(c-1))<<c%4*2,h=e.indexOf(t.charAt(c))>>>6-c%4*2;a[o>>>2]|=(f|h)<<24-o%4*8,o++}return n.create(a,o)},_map:\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\"}}(),function(){var t=qq.CryptoJS,r=t.lib,n=r.Base,e=t.enc,i=e.Utf8,s=t.algo;s.HMAC=n.extend({init:function(t,r){t=this._hasher=new t.init,\\\"string\\\"==typeof r&&(r=i.parse(r));var n=t.blockSize,e=4*n;r.sigBytes>e&&(r=t.finalize(r)),r.clamp();for(var s=this._oKey=r.clone(),a=this._iKey=r.clone(),o=s.words,c=a.words,f=0;f<n;f++)o[f]^=1549556828,c[f]^=909522486;s.sigBytes=a.sigBytes=e,this.reset()},reset:function(){var t=this._hasher;t.reset(),t.update(this._iKey)},update:function(t){return this._hasher.update(t),this},finalize:function(t){var r=this._hasher,n=r.finalize(t);r.reset();var e=r.finalize(this._oKey.clone().concat(n));return e}})}(),function(){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=r.Hasher,i=t.algo,s=[],a=i.SHA1=e.extend({_doReset:function(){this._hash=new n.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],a=n[2],o=n[3],c=n[4],f=0;f<80;f++){if(f<16)s[f]=0|t[r+f];else{var h=s[f-3]^s[f-8]^s[f-14]^s[f-16];s[f]=h<<1|h>>>31}var u=(e<<5|e>>>27)+c+s[f];u+=f<20?(i&a|~i&o)+1518500249:f<40?(i^a^o)+1859775393:f<60?(i&a|i&o|a&o)-1894007588:(i^a^o)-899497514,c=o,o=a,a=i<<30|i>>>2,i=e,e=u}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+a|0,n[3]=n[3]+o|0,n[4]=n[4]+c|0},_doFinalize:function(){var t=this._data,r=t.words,n=8*this._nDataBytes,e=8*t.sigBytes;return r[e>>>5]|=128<<24-e%32,r[(e+64>>>9<<4)+14]=Math.floor(n/4294967296),r[(e+64>>>9<<4)+15]=n,t.sigBytes=4*r.length,this._process(),this._hash},clone:function(){var t=e.clone.call(this);return t._hash=this._hash.clone(),t}});t.SHA1=e._createHelper(a),t.HmacSHA1=e._createHmacHelper(a)}(),function(t){var r=qq.CryptoJS,n=r.lib,e=n.WordArray,i=n.Hasher,s=r.algo,a=[],o=[];!function(){function r(r){for(var n=t.sqrt(r),e=2;e<=n;e++)if(!(r%e))return!1;return!0}function n(t){return 4294967296*(t-(0|t))|0}for(var e=2,i=0;i<64;)r(e)&&(i<8&&(a[i]=n(t.pow(e,.5))),o[i]=n(t.pow(e,1/3)),i++),e++}();var c=[],f=s.SHA256=i.extend({_doReset:function(){this._hash=new e.init(a.slice(0))},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],s=n[2],a=n[3],f=n[4],h=n[5],u=n[6],l=n[7],p=0;p<64;p++){if(p<16)c[p]=0|t[r+p];else{var d=c[p-15],y=(d<<25|d>>>7)^(d<<14|d>>>18)^d>>>3,g=c[p-2],v=(g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10;c[p]=y+c[p-7]+v+c[p-16]}var _=f&h^~f&u,w=e&i^e&s^i&s,A=(e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22),B=(f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25),S=l+B+_+o[p]+c[p],m=A+w;l=u,u=h,h=f,f=a+S|0,a=s,s=i,i=e,e=S+m|0}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+s|0,n[3]=n[3]+a|0,n[4]=n[4]+f|0,n[5]=n[5]+h|0,n[6]=n[6]+u|0,n[7]=n[7]+l|0},_doFinalize:function(){var r=this._data,n=r.words,e=8*this._nDataBytes,i=8*r.sigBytes;return n[i>>>5]|=128<<24-i%32,n[(i+64>>>9<<4)+14]=t.floor(e/4294967296),n[(i+64>>>9<<4)+15]=e,r.sigBytes=4*n.length,this._process(),this._hash},clone:function(){var t=i.clone.call(this);return t._hash=this._hash.clone(),t}});r.SHA256=i._createHelper(f),r.HmacSHA256=i._createHmacHelper(f)}(Math),function(){if(\\\"function\\\"==typeof ArrayBuffer){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=n.init,i=n.init=function(t){if(t instanceof ArrayBuffer&&(t=new Uint8Array(t)),(t instanceof Int8Array||t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)&&(t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),t instanceof Uint8Array){for(var r=t.byteLength,n=[],i=0;i<r;i++)n[i>>>2]|=t[i]<<24-i%4*8;e.call(this,n,r)}else e.apply(this,arguments)};i.prototype=n}}(),onmessage=function(t){\\\"use strict\\\";doTask(t.data.file,function(r,n){postMessage({err:r,resp:n,id:t.data.id})})};\\n//# sourceMappingURL=s3.fine-uploader.worker.js.map\"], {type: \"application/javascript\"}));\n        };\n    ","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Defines the public API for FineUploader mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.uiPublicApi = {\r\n        addInitialFiles: function(cannedFileList) {\r\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\r\n            this._templating.addCacheToDom();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\r\n            this._templating.clearFiles();\r\n        },\r\n\r\n        addExtraDropzone: function(element) {\r\n            this._dnd && this._dnd.setupExtraDropzone(element);\r\n        },\r\n\r\n        removeExtraDropzone: function(element) {\r\n            if (this._dnd) {\r\n                return this._dnd.removeDropzone(element);\r\n            }\r\n        },\r\n\r\n        getItemByFileId: function(id) {\r\n            if (!this._templating.isHiddenForever(id)) {\r\n                return this._templating.getFileContainer(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            this._parent.prototype.reset.apply(this, arguments);\r\n            this._templating.reset();\r\n\r\n            if (!this._options.button && this._templating.getButton()) {\r\n                this._defaultButtonId = this._createUploadButton({\r\n                    element: this._templating.getButton(),\r\n                    title: this._options.text.fileInputTitle\r\n                }).getButtonId();\r\n            }\r\n\r\n            if (this._dnd) {\r\n                this._dnd.dispose();\r\n                this._dnd = this._setupDragAndDrop();\r\n            }\r\n\r\n            this._totalFilesInBatch = 0;\r\n            this._filesInBatchAddedToUi = 0;\r\n\r\n            this._setupClickAndEditEventHandlers();\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            var formattedFilename = this._options.formatFileName(newName);\r\n\r\n            this._parent.prototype.setName.apply(this, arguments);\r\n            this._templating.updateFilename(id, formattedFilename);\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\r\n\r\n            paused && this._templating.uploadPaused(id);\r\n            return paused;\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\r\n\r\n            continued && this._templating.uploadContinued(id);\r\n            return continued;\r\n        },\r\n\r\n        getId: function(fileContainerOrChildEl) {\r\n            return this._templating.getFileId(fileContainerOrChildEl);\r\n        },\r\n\r\n        getDropTarget: function(fileId) {\r\n            var file = this.getFile(fileId);\r\n\r\n            return file.qqDropTarget;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploader mode.\r\n     */\r\n    qq.uiPrivateApi = {\r\n        _getButton: function(buttonId) {\r\n            var button = this._parent.prototype._getButton.apply(this, arguments);\r\n\r\n            if (!button) {\r\n                if (buttonId === this._defaultButtonId) {\r\n                    button = this._templating.getButton();\r\n                }\r\n            }\r\n\r\n            return button;\r\n        },\r\n\r\n        _removeFileItem: function(fileId) {\r\n            this._templating.removeFile(fileId);\r\n        },\r\n\r\n        _setupClickAndEditEventHandlers: function() {\r\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\r\n\r\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\r\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\r\n            this._focusinEventSupported = !qq.firefox();\r\n\r\n            if (this._isEditFilenameEnabled())\r\n            {\r\n                this._filenameClickHandler = this._bindFilenameClickEvent();\r\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\r\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\r\n            }\r\n        },\r\n\r\n        _setupDragAndDrop: function() {\r\n            var self = this,\r\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\r\n                templating = this._templating,\r\n                defaultDropZone = templating.getDropZone();\r\n\r\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\r\n\r\n            return new qq.DragAndDrop({\r\n                dropZoneElements: dropZoneElements,\r\n                allowMultipleItems: this._options.multiple,\r\n                classes: {\r\n                    dropActive: this._options.classes.dropActive\r\n                },\r\n                callbacks: {\r\n                    processingDroppedFiles: function() {\r\n                        templating.showDropProcessing();\r\n                    },\r\n                    processingDroppedFilesComplete: function(files, targetEl) {\r\n                        templating.hideDropProcessing();\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            file.qqDropTarget = targetEl;\r\n                        });\r\n\r\n                        if (files.length) {\r\n                            self.addFiles(files, null, null);\r\n                        }\r\n                    },\r\n                    dropError: function(code, errorData) {\r\n                        self._itemError(code, errorData);\r\n                    },\r\n                    dropLog: function(message, level) {\r\n                        self.log(message, level);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _bindFileButtonsClickEvent: function() {\r\n            var self = this;\r\n\r\n            return new qq.FileButtonsClickHandler({\r\n                templating: this._templating,\r\n\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n\r\n                onDeleteFile: function(fileId) {\r\n                    self.deleteFile(fileId);\r\n                },\r\n\r\n                onCancel: function(fileId) {\r\n                    self.cancel(fileId);\r\n                },\r\n\r\n                onRetry: function(fileId) {\r\n                    self.retry(fileId);\r\n                },\r\n\r\n                onPause: function(fileId) {\r\n                    self.pauseUpload(fileId);\r\n                },\r\n\r\n                onContinue: function(fileId) {\r\n                    self.continueUpload(fileId);\r\n                },\r\n\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                }\r\n            });\r\n        },\r\n\r\n        _isEditFilenameEnabled: function() {\r\n            /*jshint -W014 */\r\n            return this._templating.isEditFilenamePossible()\r\n                && !this._options.autoUpload\r\n                && qq.FilenameClickHandler\r\n                && qq.FilenameInputFocusHandler\r\n                && qq.FilenameInputFocusHandler;\r\n        },\r\n\r\n        _filenameEditHandler: function() {\r\n            var self = this,\r\n                templating = this._templating;\r\n\r\n            return {\r\n                templating: templating,\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n                onGetUploadStatus: function(fileId) {\r\n                    return self.getUploads({id: fileId}).status;\r\n                },\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                },\r\n                onSetName: function(id, newName) {\r\n                    self.setName(id, newName);\r\n                },\r\n                onEditingStatusChange: function(id, isEditing) {\r\n                    var qqInput = qq(templating.getEditInput(id)),\r\n                        qqFileContainer = qq(templating.getFileContainer(id));\r\n\r\n                    if (isEditing) {\r\n                        qqInput.addClass(\"qq-editing\");\r\n                        templating.hideFilename(id);\r\n                        templating.hideEditIcon(id);\r\n                    }\r\n                    else {\r\n                        qqInput.removeClass(\"qq-editing\");\r\n                        templating.showFilename(id);\r\n                        templating.showEditIcon(id);\r\n                    }\r\n\r\n                    // Force IE8 and older to repaint\r\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\r\n                }\r\n            };\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\r\n\r\n            if (this._isEditFilenameEnabled()) {\r\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\r\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\r\n                    this._templating.markFilenameEditable(id);\r\n                    this._templating.hideEditIcon(id);\r\n                }\r\n            }\r\n\r\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\r\n                this._templating.hideRetry(id);\r\n                this._templating.setStatusText(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\r\n            }\r\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\r\n                this._templating.hidePause(id);\r\n            }\r\n        },\r\n\r\n        _bindFilenameInputFocusInEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusInHandler(spec);\r\n        },\r\n\r\n        _bindFilenameInputFocusEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusHandler(spec);\r\n        },\r\n\r\n        _bindFilenameClickEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameClickHandler(spec);\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._parent.prototype._storeForLater.apply(this, arguments);\r\n            this._templating.hideSpinner(id);\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._parent.prototype._onAllComplete.apply(this, arguments);\r\n            this._templating.resetTotalProgress();\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            var file = this.getFile(id);\r\n\r\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\r\n                this._paramsStore.addReadOnly(id, {\r\n                    qqpath: file.qqPath\r\n                });\r\n            }\r\n\r\n            this._parent.prototype._onSubmit.apply(this, arguments);\r\n            this._addToList(id, name);\r\n        },\r\n\r\n        // The file item has been added to the DOM.\r\n        _onSubmitted: function(id) {\r\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\r\n            if (this._isEditFilenameEnabled()) {\r\n                this._templating.markFilenameEditable(id);\r\n                this._templating.showEditIcon(id);\r\n\r\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\r\n                if (!this._focusinEventSupported) {\r\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\r\n                }\r\n            }\r\n        },\r\n\r\n        // Update the progress bar & percentage as the file is uploaded\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._parent.prototype._onProgress.apply(this, arguments);\r\n\r\n            this._templating.updateProgress(id, loaded, total);\r\n\r\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\r\n                this._templating.hideCancel(id);\r\n                this._templating.hidePause(id);\r\n                this._templating.hideProgress(id);\r\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\r\n\r\n                // If ~last byte was sent, display total file size\r\n                this._displayFileSize(id);\r\n            }\r\n            else {\r\n                // If still uploading, display percentage - total size is actually the total request(s) size\r\n                this._displayFileSize(id, loaded, total);\r\n            }\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\r\n            this._templating.updateTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\r\n                templating = this._templating,\r\n                fileContainer = templating.getFileContainer(id),\r\n                self = this;\r\n\r\n            function completeUpload(result) {\r\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\r\n                // If so, don't perform any UI-related tasks related to this file.\r\n                if (!fileContainer) {\r\n                    return;\r\n                }\r\n\r\n                templating.setStatusText(id);\r\n\r\n                qq(fileContainer).removeClass(self._classes.retrying);\r\n                templating.hideProgress(id);\r\n\r\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\r\n                    templating.hideCancel(id);\r\n                }\r\n                templating.hideSpinner(id);\r\n\r\n                if (result.success) {\r\n                    self._markFileAsSuccessful(id);\r\n                }\r\n                else {\r\n                    qq(fileContainer).addClass(self._classes.fail);\r\n                    templating.showCancel(id);\r\n\r\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\r\n                        qq(fileContainer).addClass(self._classes.retryable);\r\n                        templating.showRetry(id);\r\n                    }\r\n                    self._controlFailureTextDisplay(id, result);\r\n                }\r\n            }\r\n\r\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\r\n            if (parentRetVal instanceof qq.Promise) {\r\n                parentRetVal.done(function(newResult) {\r\n                    completeUpload(newResult);\r\n                });\r\n\r\n            }\r\n            else {\r\n                completeUpload(result);\r\n            }\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _markFileAsSuccessful: function(id) {\r\n            var templating = this._templating;\r\n\r\n            if (this._isDeletePossible()) {\r\n                templating.showDeleteButton(id);\r\n            }\r\n\r\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\r\n\r\n            this._maybeUpdateThumbnail(id);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\r\n            this._templating.showSpinner(id);\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\r\n\r\n            this._templating.showSpinner(id);\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\r\n\r\n            // Only display the pause button if we have finished uploading at least one chunk\r\n            // & this file can be resumed\r\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\r\n                this._templating.allowPause(id);\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._parent.prototype._onCancel.apply(this, arguments);\r\n            this._removeFileItem(id);\r\n\r\n            if (this._getNotFinished() === 0) {\r\n                this._templating.resetTotalProgress();\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id) {\r\n            var retryNumForDisplay, maxAuto, retryNote;\r\n\r\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\r\n\r\n            this._showCancelLink(id);\r\n\r\n            if (this._options.retry.showAutoRetryNote) {\r\n                retryNumForDisplay = this._autoRetries[id];\r\n                maxAuto = this._options.retry.maxAutoAttempts;\r\n\r\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\r\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\r\n\r\n                this._templating.setStatusText(id, retryNote);\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\r\n            }\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\r\n                this._templating.resetProgress(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\r\n                this._templating.setStatusText(id);\r\n                this._templating.showSpinner(id);\r\n                this._showCancelLink(id);\r\n                return true;\r\n            }\r\n            else {\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\r\n                this._templating.showRetry(id);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id) {\r\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\r\n\r\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\r\n        },\r\n\r\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\r\n            if (this._options.deleteFile.forceConfirm) {\r\n                this._showDeleteConfirm.apply(this, arguments);\r\n            }\r\n            else {\r\n                this._sendDeleteRequest.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhr, isError) {\r\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\r\n\r\n            this._templating.hideSpinner(id);\r\n\r\n            if (isError) {\r\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\r\n                this._templating.showDeleteButton(id);\r\n            }\r\n            else {\r\n                this._removeFileItem(id);\r\n            }\r\n        },\r\n\r\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\r\n            this._templating.hideDeleteButton(id);\r\n            this._templating.showSpinner(id);\r\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\r\n            this._deleteHandler.sendDelete.apply(this, arguments);\r\n        },\r\n\r\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\r\n            /*jshint -W004 */\r\n            var fileName = this.getName(id),\r\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\r\n                uuid = this.getUuid(id),\r\n                deleteRequestArgs = arguments,\r\n                self = this,\r\n                retVal;\r\n\r\n            retVal = this._options.showConfirm(confirmMessage);\r\n\r\n            if (qq.isGenericPromise(retVal)) {\r\n                retVal.then(function() {\r\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n                });\r\n            }\r\n            else if (retVal !== false) {\r\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n            }\r\n        },\r\n\r\n        _addToList: function(id, name, canned) {\r\n            var prependData,\r\n                prependIndex = 0,\r\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\r\n                record;\r\n\r\n            if (this._options.display.prependFiles) {\r\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\r\n                    prependIndex = this._filesInBatchAddedToUi - 1;\r\n                }\r\n\r\n                prependData = {\r\n                    index: prependIndex\r\n                };\r\n            }\r\n\r\n            if (!canned) {\r\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\r\n                    this._templating.disableCancel();\r\n                }\r\n\r\n                // Cancel all existing (previous) files and clear the list if this file is not part of\r\n                // a scaled file group that has already been accepted, or if this file is not part of\r\n                // a scaled file group at all.\r\n                if (!this._options.multiple) {\r\n                    record = this.getUploads({id: id});\r\n\r\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\r\n\r\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\r\n                        this._handler.cancelAll();\r\n                        this._clearList();\r\n                        this._handledProxyGroup = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (canned) {\r\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\r\n            }\r\n            else {\r\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\r\n            }\r\n\r\n            this._filesInBatchAddedToUi += 1;\r\n\r\n            if (canned ||\r\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\r\n\r\n                this._displayFileSize(id);\r\n            }\r\n        },\r\n\r\n        _clearList: function() {\r\n            this._templating.clearFiles();\r\n            this.clearStoredFiles();\r\n        },\r\n\r\n        _displayFileSize: function(id, loadedSize, totalSize) {\r\n            var size = this.getSize(id),\r\n                sizeForDisplay = this._formatSize(size);\r\n\r\n            if (size >= 0) {\r\n                if (loadedSize !== undefined && totalSize !== undefined) {\r\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\r\n                }\r\n\r\n                this._templating.updateSize(id, sizeForDisplay);\r\n            }\r\n        },\r\n\r\n        _formatProgress: function(uploadedSize, totalSize) {\r\n            var message = this._options.text.formatProgress;\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\r\n            r(\"{total_size}\", this._formatSize(totalSize));\r\n            return message;\r\n        },\r\n\r\n        _controlFailureTextDisplay: function(id, response) {\r\n            var mode, responseProperty, failureReason;\r\n\r\n            mode = this._options.failedUploadTextDisplay.mode;\r\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\r\n\r\n            if (mode === \"custom\") {\r\n                failureReason = response[responseProperty];\r\n                if (!failureReason) {\r\n                    failureReason = this._options.text.failUpload;\r\n                }\r\n\r\n                this._templating.setStatusText(id, failureReason);\r\n\r\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\r\n                    this._showTooltip(id, failureReason);\r\n                }\r\n            }\r\n            else if (mode === \"default\") {\r\n                this._templating.setStatusText(id, this._options.text.failUpload);\r\n            }\r\n            else if (mode !== \"none\") {\r\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\r\n            }\r\n        },\r\n\r\n        _showTooltip: function(id, text) {\r\n            this._templating.getFileContainer(id).title = text;\r\n        },\r\n\r\n        _showCancelLink: function(id) {\r\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\r\n                this._templating.showCancel(id);\r\n            }\r\n        },\r\n\r\n        _itemError: function(code, name, item) {\r\n            var message = this._parent.prototype._itemError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._parent.prototype._batchError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _setupPastePrompt: function() {\r\n            var self = this;\r\n\r\n            this._options.callbacks.onPasteReceived = function() {\r\n                var message = self._options.paste.namePromptMessage,\r\n                    defaultVal = self._options.paste.defaultName;\r\n\r\n                return self._options.showPrompt(message, defaultVal);\r\n            };\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id, name) {\r\n            this._totalFilesInBatch -= 1;\r\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            this._totalFilesInBatch = items.length;\r\n            this._filesInBatchAddedToUi = 0;\r\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\r\n        },\r\n\r\n        _maybeUpdateThumbnail: function(fileId) {\r\n            var thumbnailUrl = this._thumbnailUrls[fileId],\r\n                fileStatus = this.getUploads({id: fileId}).status;\r\n\r\n            if (fileStatus !== qq.status.DELETED &&\r\n                (thumbnailUrl ||\r\n                this._options.thumbnails.placeholders.waitUntilResponse ||\r\n                !qq.supportedFeatures.imagePreviews)) {\r\n\r\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\r\n                // if called with a null thumbnailUrl.\r\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\r\n            }\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\r\n\r\n            this._addToList(id, this.getName(id), true);\r\n            this._templating.hideSpinner(id);\r\n            this._templating.hideCancel(id);\r\n            this._markFileAsSuccessful(id);\r\n\r\n            return id;\r\n        },\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._parent.prototype._setSize.apply(this, arguments);\r\n\r\n            this._templating.updateSize(id, this._formatSize(newSize));\r\n        },\r\n\r\n        _sessionRequestComplete: function() {\r\n            this._templating.addCacheToDom();\r\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\n * in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"s3\");\n\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\n        }\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\n}());\n"]}