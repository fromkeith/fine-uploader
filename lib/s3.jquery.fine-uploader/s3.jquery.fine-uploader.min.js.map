{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/s3/jquery-plugin.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/third-party/crypto-js/core.js","../client/js/third-party/crypto-js/enc-base64.js","../client/js/third-party/crypto-js/hmac.js","../client/js/third-party/crypto-js/sha1.js","../client/js/third-party/crypto-js/sha256.js","../client/js/third-party/crypto-js/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.worker-manager.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","s3.fine-uploader.worker-inline.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/s3/uploader.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","rootDataKey","func","$callbackEl","args","jqueryHandlerResult","fineUploaderDnd","fineUploaderS3","endpointType","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","strBefore","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","fileRecord","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","alreadyInWaiting","alreadyInOpen","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","CryptoJS","C","C_lib","lib","Base","F","overrides","subtype","mixIn","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","update","messageUpdate","hash","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","Base64","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","paddingIndex","bits1","bits2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","subInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","bucket","patterns","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","policyJson","awsParams","customParams","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","pad","minutesToAdd","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","doc","contentWindow","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSignerWorkerManager","workerUrl","createS3InlineWorkerUrl","worker","Worker","outstandingRequests","workerPromises","onmessage","resp","generateSignature","task","RequestSigner","handleSignatureReceived","signatureConstructor","responseJson","pendingSignatureData","pendingSignatures","invalid","expectingPolicy","generateHeaders","getStringToSignArtifacts","requestInfo","endOfUrl","signatureSpec","toSign","headerNames","headersStr","generateStringToSign","contentMd5","headerIndexesToRemove","headerName","headerIdx","hashedContent","v2","getStringToSign","v4","signedHeaders","getSignedHeaders","hashed","toSignRaw","raw","thisSignatureRequester","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","getEncodedHashedPayload","content","Host","determineSignatureClientSide","toBeSigned","signatureEffort","updatedHeaders","getHeaders","getToSign","signatureArtifacts","signApiRequest","stringToSign","signPolicy","Authorization","getRequestDate","getEndOfUrl","headersWordArray","headersHmacSha1","headersHmacSha1Base64","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","getCanonicalQueryString","endOfUri","encodedQueryParams","encodedQueryParamNames","queryStrings","queryParamIdx","canonicalQueryString","nameAndVal","paramVal","forEach","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","workerManager","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","stringToSignTemplate","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","headersPattern","matches","credentialPattern","credentialCondition","credential","condition","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","handleSuccessResponse","parsedResponse","pendingRequests","successIndicator","failureIndicator","InitiateMultipartAjaxRequester","getSignatureAjaxRequester","getContentType","handleInitiateRequestComplete","uploadIdElements","messageElements","pendingInitiateRequests","domParser","DOMParser","responseDoc","parseFromString","CompleteMultipartAjaxRequester","handleCompleteRequestComplete","pendingCompleteRequests","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","awsErrorMsg","errorEls","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","toSend","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","codeEls","messageEls","parsedDoc","errorDetails","existedInLocalStorage","baseStorageId","bucketName","isValidResponse","innerHtml","responseData","createForm","handleFinishedUpload","handleUpload","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","createDocumentFragment","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"s3.jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery*/\n/**\n * Simply an alias for the `fineUploader` plug-in wrapper, but hides the required `endpointType` option from the\n * integrator.  I thought it may be confusing to convey to the integrator that, when using Fine Uploader in S3 mode,\n * you need to specify an `endpointType` with a value of S3, and perhaps an `uploaderType` with a value of \"basic\" if\n * you want to use basic mode when uploading directly to S3 as well.  So, you can use this plug-in alias and not worry\n * about the `endpointType` option at all.\n */\n(function($) {\n    \"use strict\";\n\n    $.fn.fineUploaderS3 = function(optionsOrCommand) {\n        if (typeof optionsOrCommand === \"object\") {\n\n            // This option is used to tell the plug-in wrapper to instantiate the appropriate S3-namespace modules.\n            optionsOrCommand.endpointType = \"s3\";\n        }\n\n        return $.fn.fineUploader.apply(this, arguments);\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\r\nqq.version = \"5.14.4\";\r\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\r\nqq.UploadData = function(uploaderProxy) {\r\n    \"use strict\";\r\n\r\n    var data = [],\r\n        byUuid = {},\r\n        byStatus = {},\r\n        byProxyGroupId = {},\r\n        byBatchId = {};\r\n\r\n    function getDataByIds(idOrIds) {\r\n        if (qq.isArray(idOrIds)) {\r\n            var entries = [];\r\n\r\n            qq.each(idOrIds, function(idx, id) {\r\n                entries.push(data[id]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[idOrIds];\r\n    }\r\n\r\n    function getDataByUuids(uuids) {\r\n        if (qq.isArray(uuids)) {\r\n            var entries = [];\r\n\r\n            qq.each(uuids, function(idx, uuid) {\r\n                entries.push(data[byUuid[uuid]]);\r\n            });\r\n\r\n            return entries;\r\n        }\r\n\r\n        return data[byUuid[uuids]];\r\n    }\r\n\r\n    function getDataByStatus(status) {\r\n        var statusResults = [],\r\n            statuses = [].concat(status);\r\n\r\n        qq.each(statuses, function(index, statusEnum) {\r\n            var statusResultIndexes = byStatus[statusEnum];\r\n\r\n            if (statusResultIndexes !== undefined) {\r\n                qq.each(statusResultIndexes, function(i, dataIndex) {\r\n                    statusResults.push(data[dataIndex]);\r\n                });\r\n            }\r\n        });\r\n\r\n        return statusResults;\r\n    }\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds a new file to the data cache for tracking purposes.\r\n         *\r\n         * @param spec Data that describes this file.  Possible properties are:\r\n         *\r\n         * - uuid: Initial UUID for this file.\r\n         * - name: Initial name of this file.\r\n         * - size: Size of this file, omit if this cannot be determined\r\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\r\n         * - batchId: ID of the batch this file belongs to\r\n         * - proxyGroupId: ID of the proxy group associated with this file\r\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\r\n         *\r\n         * @returns {number} Internal ID for this file.\r\n         */\r\n        addFile: function(spec) {\r\n            var status = spec.status || qq.status.SUBMITTING,\r\n                id = data.push({\r\n                    name: spec.name,\r\n                    originalName: spec.name,\r\n                    uuid: spec.uuid,\r\n                    size: spec.size == null ? -1 : spec.size,\r\n                    status: status\r\n                }) - 1;\r\n\r\n            if (spec.batchId) {\r\n                data[id].batchId = spec.batchId;\r\n\r\n                if (byBatchId[spec.batchId] === undefined) {\r\n                    byBatchId[spec.batchId] = [];\r\n                }\r\n                byBatchId[spec.batchId].push(id);\r\n            }\r\n\r\n            if (spec.proxyGroupId) {\r\n                data[id].proxyGroupId = spec.proxyGroupId;\r\n\r\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\r\n                    byProxyGroupId[spec.proxyGroupId] = [];\r\n                }\r\n                byProxyGroupId[spec.proxyGroupId].push(id);\r\n            }\r\n\r\n            data[id].id = id;\r\n            byUuid[spec.uuid] = id;\r\n\r\n            if (byStatus[status] === undefined) {\r\n                byStatus[status] = [];\r\n            }\r\n            byStatus[status].push(id);\r\n\r\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\r\n            uploaderProxy.onStatusChange(id, null, status);\r\n\r\n            return id;\r\n        },\r\n\r\n        retrieve: function(optionalFilter) {\r\n            if (qq.isObject(optionalFilter) && data.length)  {\r\n                if (optionalFilter.id !== undefined) {\r\n                    return getDataByIds(optionalFilter.id);\r\n                }\r\n\r\n                else if (optionalFilter.uuid !== undefined) {\r\n                    return getDataByUuids(optionalFilter.uuid);\r\n                }\r\n\r\n                else if (optionalFilter.status) {\r\n                    return getDataByStatus(optionalFilter.status);\r\n                }\r\n            }\r\n            else {\r\n                return qq.extend([], data, true);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            data = [];\r\n            byUuid = {};\r\n            byStatus = {};\r\n            byBatchId = {};\r\n        },\r\n\r\n        setStatus: function(id, newStatus) {\r\n            var oldStatus = data[id].status,\r\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\r\n\r\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\r\n\r\n            data[id].status = newStatus;\r\n\r\n            if (byStatus[newStatus] === undefined) {\r\n                byStatus[newStatus] = [];\r\n            }\r\n            byStatus[newStatus].push(id);\r\n\r\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\r\n        },\r\n\r\n        uuidChanged: function(id, newUuid) {\r\n            var oldUuid = data[id].uuid;\r\n\r\n            data[id].uuid = newUuid;\r\n            byUuid[newUuid] = id;\r\n            delete byUuid[oldUuid];\r\n        },\r\n\r\n        updateName: function(id, newName) {\r\n            data[id].name = newName;\r\n        },\r\n\r\n        updateSize: function(id, newSize) {\r\n            data[id].size = newSize;\r\n        },\r\n\r\n        // Only applicable if this file has a parent that we may want to reference later.\r\n        setParentId: function(targetId, parentId) {\r\n            data[targetId].parentId = parentId;\r\n        },\r\n\r\n        getIdsInProxyGroup: function(id) {\r\n            var proxyGroupId = data[id].proxyGroupId;\r\n\r\n            if (proxyGroupId) {\r\n                return byProxyGroupId[proxyGroupId];\r\n            }\r\n            return [];\r\n        },\r\n\r\n        getIdsInBatch: function(id) {\r\n            var batchId = data[id].batchId;\r\n\r\n            return byBatchId[batchId];\r\n        }\r\n    });\r\n};\r\n\r\nqq.status = {\r\n    SUBMITTING: \"submitting\",\r\n    SUBMITTED: \"submitted\",\r\n    REJECTED: \"rejected\",\r\n    QUEUED: \"queued\",\r\n    CANCELED: \"canceled\",\r\n    PAUSED: \"paused\",\r\n    UPLOADING: \"uploading\",\r\n    UPLOAD_RETRYING: \"retrying upload\",\r\n    UPLOAD_SUCCESSFUL: \"upload successful\",\r\n    UPLOAD_FAILED: \"upload failed\",\r\n    DELETE_FAILED: \"delete failed\",\r\n    DELETING: \"deleting\",\r\n    DELETED: \"deleted\"\r\n};\r\n","/*globals qq*/\r\n/**\r\n * Defines the public API for FineUploaderBasic mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.basePublicApi = {\r\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\r\n        addBlobs: function(blobDataOrArray, params, endpoint) {\r\n            this.addFiles(blobDataOrArray, params, endpoint);\r\n        },\r\n\r\n        addInitialFiles: function(cannedFileList) {\r\n            var self = this;\r\n\r\n            qq.each(cannedFileList, function(index, cannedFile) {\r\n                self._addCannedFile(cannedFile);\r\n            });\r\n        },\r\n\r\n        addFiles: function(data, params, endpoint) {\r\n            this._maybeHandleIos8SafariWorkaround();\r\n\r\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\r\n\r\n                processBlob = qq.bind(function(blob) {\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processBlobData = qq.bind(function(blobData) {\r\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvas = qq.bind(function(canvas) {\r\n                    var blob = qq.canvasToBlob(canvas);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName + \".png\"\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvasData = qq.bind(function(canvasData) {\r\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\r\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: canvasData.name\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processFileOrInput = qq.bind(function(fileOrInput) {\r\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\r\n                        var files = Array.prototype.slice.call(fileOrInput.files),\r\n                            self = this;\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            self._handleNewFile(file, batchId, verifiedFiles);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\r\n                    }\r\n                }, this),\r\n\r\n                normalizeData = function() {\r\n                    if (qq.isFileList(data)) {\r\n                        data = Array.prototype.slice.call(data);\r\n                    }\r\n                    data = [].concat(data);\r\n                },\r\n\r\n                self = this,\r\n                verifiedFiles = [];\r\n\r\n            this._currentBatchId = batchId;\r\n\r\n            if (data) {\r\n                normalizeData();\r\n\r\n                qq.each(data, function(idx, fileContainer) {\r\n                    if (qq.isFileOrInput(fileContainer)) {\r\n                        processFileOrInput(fileContainer);\r\n                    }\r\n                    else if (qq.isBlob(fileContainer)) {\r\n                        processBlob(fileContainer);\r\n                    }\r\n                    else if (qq.isObject(fileContainer)) {\r\n                        if (fileContainer.blob && fileContainer.name) {\r\n                            processBlobData(fileContainer);\r\n                        }\r\n                        else if (fileContainer.canvas && fileContainer.name) {\r\n                            processCanvasData(fileContainer);\r\n                        }\r\n                    }\r\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\r\n                        processCanvas(fileContainer);\r\n                    }\r\n                    else {\r\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\r\n                    }\r\n                });\r\n\r\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\r\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\r\n            }\r\n        },\r\n\r\n        cancel: function(id) {\r\n            this._handler.cancel(id);\r\n        },\r\n\r\n        cancelAll: function() {\r\n            var storedIdsCopy = [],\r\n                self = this;\r\n\r\n            qq.extend(storedIdsCopy, this._storedIds);\r\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\r\n                self.cancel(storedFileId);\r\n            });\r\n\r\n            this._handler.cancelAll();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._storedIds = [];\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (uploadData.status === qq.status.PAUSED) {\r\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\r\n                this._uploadFile(id);\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        deleteFile: function(id) {\r\n            return this._onSubmitDelete(id);\r\n        },\r\n\r\n        // TODO document?\r\n        doesExist: function(fileOrBlobId) {\r\n            return this._handler.isValid(fileOrBlobId);\r\n        },\r\n\r\n        // Generate a variable size thumbnail on an img or canvas,\r\n        // returning a promise that is fulfilled when the attempt completes.\r\n        // Thumbnail can either be based off of a URL for an image returned\r\n        // by the server in the upload response, or the associated `Blob`.\r\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\r\n            var promiseToReturn = new qq.Promise(),\r\n                fileOrUrl, options;\r\n\r\n            if (this._imageGenerator) {\r\n                fileOrUrl = this._thumbnailUrls[fileId];\r\n                options = {\r\n                    customResizeFunction: customResizeFunction,\r\n                    maxSize: maxSize > 0 ? maxSize : null,\r\n                    scale: maxSize > 0\r\n                };\r\n\r\n                // If client-side preview generation is possible\r\n                // and we are not specifically looking for the image URl returned by the server...\r\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\r\n                    fileOrUrl = this.getFile(fileId);\r\n                }\r\n\r\n                /* jshint eqeqeq:false,eqnull:true */\r\n                if (fileOrUrl == null) {\r\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\r\n                }\r\n                else {\r\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\r\n                        function success(modifiedContainer) {\r\n                            promiseToReturn.success(modifiedContainer);\r\n                        },\r\n\r\n                        function failure(container, reason) {\r\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\r\n            }\r\n\r\n            return promiseToReturn;\r\n        },\r\n\r\n        getButton: function(fileId) {\r\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\r\n        },\r\n\r\n        getEndpoint: function(fileId) {\r\n            return this._endpointStore.get(fileId);\r\n        },\r\n\r\n        getFile: function(fileOrBlobId) {\r\n            return this._handler.getFile(fileOrBlobId) || null;\r\n        },\r\n\r\n        getInProgress: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        getName: function(id) {\r\n            return this._uploadData.retrieve({id: id}).name;\r\n        },\r\n\r\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\r\n        getParentId: function(id) {\r\n            var uploadDataEntry = this.getUploads({id: id}),\r\n                parentId = null;\r\n\r\n            if (uploadDataEntry) {\r\n                if (uploadDataEntry.parentId !== undefined) {\r\n                    parentId = uploadDataEntry.parentId;\r\n                }\r\n            }\r\n\r\n            return parentId;\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            return this._handler.getResumableFilesData();\r\n        },\r\n\r\n        getSize: function(id) {\r\n            return this._uploadData.retrieve({id: id}).size;\r\n        },\r\n\r\n        getNetUploads: function() {\r\n            return this._netUploaded;\r\n        },\r\n\r\n        getRemainingAllowedItems: function() {\r\n            var allowedItems = this._currentItemLimit;\r\n\r\n            if (allowedItems > 0) {\r\n                return allowedItems - this._netUploadedOrQueued;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        getUploads: function(optionalFilter) {\r\n            return this._uploadData.retrieve(optionalFilter);\r\n        },\r\n\r\n        getUuid: function(id) {\r\n            return this._uploadData.retrieve({id: id}).uuid;\r\n        },\r\n\r\n        log: function(str, level) {\r\n            if (this._options.debug && (!level || level === \"info\")) {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\r\n            }\r\n            else if (level && level !== \"info\") {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\r\n\r\n            }\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            // Pause only really makes sense if the file is uploading or retrying\r\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\r\n                if (this._handler.pause(id)) {\r\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\r\n                }\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        removeFileRef: function(id) {\r\n            this._handler.expunge(id);\r\n        },\r\n\r\n        reset: function() {\r\n            this.log(\"Resetting uploader...\");\r\n\r\n            this._handler.reset();\r\n            this._storedIds = [];\r\n            this._autoRetries = [];\r\n            this._retryTimeouts = [];\r\n            this._preventRetries = [];\r\n            this._thumbnailUrls = [];\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n\r\n            this._paramsStore.reset();\r\n            this._endpointStore.reset();\r\n            this._netUploadedOrQueued = 0;\r\n            this._netUploaded = 0;\r\n            this._uploadData.reset();\r\n            this._buttonIdsForFileIds = [];\r\n\r\n            this._pasteHandler && this._pasteHandler.reset();\r\n            this._options.session.refreshOnReset && this._refreshSessionData();\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n\r\n            this._totalProgress && this._totalProgress.reset();\r\n        },\r\n\r\n        retry: function(id) {\r\n            return this._manualRetry(id);\r\n        },\r\n\r\n        scaleImage: function(id, specs) {\r\n            var self = this;\r\n\r\n            return qq.Scaler.prototype.scaleImage(id, specs, {\r\n                log: qq.bind(self.log, self),\r\n                getFile: qq.bind(self.getFile, self),\r\n                uploadData: self._uploadData\r\n            });\r\n        },\r\n\r\n        setCustomHeaders: function(headers, id) {\r\n            this._customHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileCustomHeaders: function(headers, id) {\r\n            this._deleteFileCustomHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileEndpoint: function(endpoint, id) {\r\n            this._deleteFileEndpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setDeleteFileParams: function(params, id) {\r\n            this._deleteFileParamsStore.set(params, id);\r\n        },\r\n\r\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\r\n        setEndpoint: function(endpoint, id) {\r\n            this._endpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setForm: function(elementOrId) {\r\n            this._updateFormSupportAndParams(elementOrId);\r\n        },\r\n\r\n        setItemLimit: function(newItemLimit) {\r\n            this._currentItemLimit = newItemLimit;\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            this._uploadData.updateName(id, newName);\r\n        },\r\n\r\n        setParams: function(params, id) {\r\n            this._paramsStore.set(params, id);\r\n        },\r\n\r\n        setUuid: function(id, newUuid) {\r\n            return this._uploadData.uuidChanged(id, newUuid);\r\n        },\r\n\r\n        /**\r\n         * Expose the internal status of a file id to the public api for manual state changes\r\n         * @public\r\n         *\r\n         * @param {Number} id,\r\n         * @param {String} newStatus\r\n         *\r\n         * @todo Implement the remaining methods\r\n         */\r\n        setStatus: function(id, newStatus) {\r\n            var fileRecord = this.getUploads({id: id});\r\n            if (!fileRecord) {\r\n                throw new qq.Error(id + \" is not a valid file ID.\");\r\n            }\r\n\r\n            switch (newStatus) {\r\n                case qq.status.DELETED:\r\n                    this._onDeleteComplete(id, null, false);\r\n                    break;\r\n                case qq.status.DELETE_FAILED:\r\n                    this._onDeleteComplete(id, null, true);\r\n                    break;\r\n                default:\r\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\r\n                    this.log(errorMessage);\r\n                    throw new qq.Error(errorMessage);\r\n            }\r\n        },\r\n\r\n        uploadStoredFiles: function() {\r\n            if (this._storedIds.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n            }\r\n            else {\r\n                this._uploadStoredFiles();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploaderBasic mode.\r\n     */\r\n    qq.basePrivateApi = {\r\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\r\n        _addCannedFile: function(sessionData) {\r\n            var self = this;\r\n\r\n            return this._uploadData.addFile({\r\n                uuid: sessionData.uuid,\r\n                name: sessionData.name,\r\n                size: sessionData.size,\r\n                status: qq.status.UPLOAD_SUCCESSFUL,\r\n                onBeforeStatusChange: function(id) {\r\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\r\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\r\n\r\n                    if (sessionData.thumbnailUrl) {\r\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\r\n                    }\r\n\r\n                    self._netUploaded++;\r\n                    self._netUploadedOrQueued++;\r\n                }\r\n            });\r\n        },\r\n\r\n        _annotateWithButtonId: function(file, associatedInput) {\r\n            if (qq.isFile(file)) {\r\n                file.qqButtonId = this._getButtonId(associatedInput);\r\n            }\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._options.callbacks.onError(null, null, message, undefined);\r\n        },\r\n\r\n        _createDeleteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.DeleteFileAjaxRequester({\r\n                method: this._options.deleteFile.method.toUpperCase(),\r\n                maxConnections: this._options.maxConnections,\r\n                uuidParamName: this._options.request.uuidName,\r\n                customHeaders: this._deleteFileCustomHeadersStore,\r\n                paramsStore: this._deleteFileParamsStore,\r\n                endpointStore: this._deleteFileEndpointStore,\r\n                cors: this._options.cors,\r\n                log: qq.bind(self.log, self),\r\n                onDelete: function(id) {\r\n                    self._onDelete(id);\r\n                    self._options.callbacks.onDelete(id);\r\n                },\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\r\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        _createPasteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.PasteSupport({\r\n                targetElement: this._options.paste.targetElement,\r\n                callbacks: {\r\n                    log: qq.bind(self.log, self),\r\n                    pasteReceived: function(blob) {\r\n                        self._handleCheckedCallback({\r\n                            name: \"onPasteReceived\",\r\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\r\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\r\n                            identifier: \"pasted image\"\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _createStore: function(initialValue, _readOnlyValues_) {\r\n            var store = {},\r\n                catchall = initialValue,\r\n                perIdReadOnlyValues = {},\r\n                readOnlyValues = _readOnlyValues_,\r\n                copy = function(orig) {\r\n                    if (qq.isObject(orig)) {\r\n                        return qq.extend({}, orig);\r\n                    }\r\n                    return orig;\r\n                },\r\n                getReadOnlyValues = function() {\r\n                    if (qq.isFunction(readOnlyValues)) {\r\n                        return readOnlyValues();\r\n                    }\r\n                    return readOnlyValues;\r\n                },\r\n                includeReadOnlyValues = function(id, existing) {\r\n                    if (readOnlyValues && qq.isObject(existing)) {\r\n                        qq.extend(existing, getReadOnlyValues());\r\n                    }\r\n\r\n                    if (perIdReadOnlyValues[id]) {\r\n                        qq.extend(existing, perIdReadOnlyValues[id]);\r\n                    }\r\n                };\r\n\r\n            return {\r\n                set: function(val, id) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id == null) {\r\n                        store = {};\r\n                        catchall = copy(val);\r\n                    }\r\n                    else {\r\n                        store[id] = copy(val);\r\n                    }\r\n                },\r\n\r\n                get: function(id) {\r\n                    var values;\r\n\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id != null && store[id]) {\r\n                        values = store[id];\r\n                    }\r\n                    else {\r\n                        values = copy(catchall);\r\n                    }\r\n\r\n                    includeReadOnlyValues(id, values);\r\n\r\n                    return copy(values);\r\n                },\r\n\r\n                addReadOnly: function(id, values) {\r\n                    // Only applicable to Object stores\r\n                    if (qq.isObject(store)) {\r\n                        // If null ID, apply readonly values to all files\r\n                        if (id === null) {\r\n                            if (qq.isFunction(values)) {\r\n                                readOnlyValues = values;\r\n                            }\r\n                            else {\r\n                                readOnlyValues = readOnlyValues || {};\r\n                                qq.extend(readOnlyValues, values);\r\n                            }\r\n                        }\r\n                        else {\r\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\r\n                            qq.extend(perIdReadOnlyValues[id], values);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                remove: function(fileId) {\r\n                    return delete store[fileId];\r\n                },\r\n\r\n                reset: function() {\r\n                    store = {};\r\n                    perIdReadOnlyValues = {};\r\n                    catchall = initialValue;\r\n                }\r\n            };\r\n        },\r\n\r\n        _createUploadDataTracker: function() {\r\n            var self = this;\r\n\r\n            return new qq.UploadData({\r\n                getName: function(id) {\r\n                    return self.getName(id);\r\n                },\r\n                getUuid: function(id) {\r\n                    return self.getUuid(id);\r\n                },\r\n                getSize: function(id) {\r\n                    return self.getSize(id);\r\n                },\r\n                onStatusChange: function(id, oldStatus, newStatus) {\r\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\r\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\r\n                    self._maybeAllComplete(id, newStatus);\r\n\r\n                    if (self._totalProgress) {\r\n                        setTimeout(function() {\r\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Generate a tracked upload button.\r\n         *\r\n         * @param spec Object containing a required `element` property\r\n         * along with optional `multiple`, `accept`, and `folders`.\r\n         * @returns {qq.UploadButton}\r\n         * @private\r\n         */\r\n        _createUploadButton: function(spec) {\r\n            var self = this,\r\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\r\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\r\n                button;\r\n\r\n            function allowMultiple() {\r\n                if (qq.supportedFeatures.ajaxUploading) {\r\n                    // Workaround for bug in iOS7+ (see #1039)\r\n                    if (self._options.workarounds.iosEmptyVideos &&\r\n                        qq.ios() &&\r\n                        !qq.ios6() &&\r\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    if (spec.multiple === undefined) {\r\n                        return self._options.multiple;\r\n                    }\r\n\r\n                    return spec.multiple;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            button = new qq.UploadButton({\r\n                acceptFiles: acceptFiles,\r\n                element: spec.element,\r\n                focusClass: this._options.classes.buttonFocus,\r\n                folders: spec.folders,\r\n                hoverClass: this._options.classes.buttonHover,\r\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\r\n                multiple: allowMultiple(),\r\n                name: this._options.request.inputName,\r\n                onChange: function(input) {\r\n                    self._onInputChange(input);\r\n                },\r\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\r\n            });\r\n\r\n            this._disposeSupport.addDisposer(function() {\r\n                button.dispose();\r\n            });\r\n\r\n            self._buttons.push(button);\r\n\r\n            return button;\r\n        },\r\n\r\n        _createUploadHandler: function(additionalOptions, namespace) {\r\n            var self = this,\r\n                lastOnProgress = {},\r\n                options = {\r\n                    debug: this._options.debug,\r\n                    maxConnections: this._options.maxConnections,\r\n                    cors: this._options.cors,\r\n                    paramsStore: this._paramsStore,\r\n                    endpointStore: this._endpointStore,\r\n                    chunking: this._options.chunking,\r\n                    resume: this._options.resume,\r\n                    blobs: this._options.blobs,\r\n                    log: qq.bind(self.log, self),\r\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\r\n                    onProgress: function(id, name, loaded, total) {\r\n                        if (loaded < 0 || total < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        if (lastOnProgress[id]) {\r\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\r\n                                self._onProgress(id, name, loaded, total);\r\n                                self._options.callbacks.onProgress(id, name, loaded, total);\r\n                            }\r\n                        }\r\n                        else {\r\n                            self._onProgress(id, name, loaded, total);\r\n                            self._options.callbacks.onProgress(id, name, loaded, total);\r\n                        }\r\n\r\n                        lastOnProgress[id] = {loaded: loaded, total: total};\r\n\r\n                    },\r\n                    onComplete: function(id, name, result, xhr) {\r\n                        delete lastOnProgress[id];\r\n\r\n                        var status = self.getUploads({id: id}).status,\r\n                            retVal;\r\n\r\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\r\n                        // invoked by the browser multiple times for the same XHR instance with the same state\r\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\r\n                        // done this.\r\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\r\n                            return;\r\n                        }\r\n\r\n                        retVal = self._onComplete(id, name, result, xhr);\r\n\r\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\r\n                        // until the promise has been fulfilled.\r\n                        if (retVal instanceof  qq.Promise) {\r\n                            retVal.done(function() {\r\n                                self._options.callbacks.onComplete(id, name, result, xhr);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self._options.callbacks.onComplete(id, name, result, xhr);\r\n                        }\r\n                    },\r\n                    onCancel: function(id, name, cancelFinalizationEffort) {\r\n                        var promise = new qq.Promise();\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onCancel\",\r\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\r\n                            onFailure: promise.failure,\r\n                            onSuccess: function() {\r\n                                cancelFinalizationEffort.then(function() {\r\n                                    self._onCancel(id, name);\r\n                                });\r\n\r\n                                promise.success();\r\n                            },\r\n                            identifier: id\r\n                        });\r\n\r\n                        return promise;\r\n                    },\r\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\r\n                    onUpload: function(id, name) {\r\n                        self._onUpload(id, name);\r\n                        self._options.callbacks.onUpload(id, name);\r\n                    },\r\n                    onUploadChunk: function(id, name, chunkData) {\r\n                        self._onUploadChunk(id, chunkData);\r\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\r\n                    },\r\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\r\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\r\n                    },\r\n                    onResume: function(id, name, chunkData) {\r\n                        return self._options.callbacks.onResume(id, name, chunkData);\r\n                    },\r\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\r\n                        return self._onAutoRetry.apply(self, arguments);\r\n                    },\r\n                    onUuidChanged: function(id, newUuid) {\r\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\r\n                        self.setUuid(id, newUuid);\r\n                    },\r\n                    getName: qq.bind(self.getName, self),\r\n                    getUuid: qq.bind(self.getUuid, self),\r\n                    getSize: qq.bind(self.getSize, self),\r\n                    setSize: qq.bind(self._setSize, self),\r\n                    getDataByUuid: function(uuid) {\r\n                        return self.getUploads({uuid: uuid});\r\n                    },\r\n                    isQueued: function(id) {\r\n                        var status = self.getUploads({id: id}).status;\r\n                        return status === qq.status.QUEUED ||\r\n                            status === qq.status.SUBMITTED ||\r\n                            status === qq.status.UPLOAD_RETRYING ||\r\n                            status === qq.status.PAUSED;\r\n                    },\r\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\r\n                    getIdsInBatch: self._uploadData.getIdsInBatch\r\n                };\r\n\r\n            qq.each(this._options.request, function(prop, val) {\r\n                options[prop] = val;\r\n            });\r\n\r\n            options.customHeaders = this._customHeadersStore;\r\n\r\n            if (additionalOptions) {\r\n                qq.each(additionalOptions, function(key, val) {\r\n                    options[key] = val;\r\n                });\r\n            }\r\n\r\n            return new qq.UploadHandlerController(options, namespace);\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id) {\r\n            this._netUploadedOrQueued--;\r\n            this._uploadData.setStatus(id, qq.status.REJECTED);\r\n        },\r\n\r\n        _formatSize: function(bytes) {\r\n            if (bytes === 0) {\r\n                return bytes + this._options.text.sizeSymbols[0];\r\n            }\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1000;\r\n                i++;\r\n            } while (bytes > 999);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\r\n        },\r\n\r\n        // Creates an internal object that tracks various properties of each extra button,\r\n        // and then actually creates the extra button.\r\n        _generateExtraButtonSpecs: function() {\r\n            var self = this;\r\n\r\n            this._extraButtonSpecs = {};\r\n\r\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\r\n                var multiple = extraButtonOptionEntry.multiple,\r\n                    validation = qq.extend({}, self._options.validation, true),\r\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\r\n\r\n                if (multiple === undefined) {\r\n                    multiple = self._options.multiple;\r\n                }\r\n\r\n                if (extraButtonSpec.validation) {\r\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\r\n                }\r\n\r\n                qq.extend(extraButtonSpec, {\r\n                    multiple: multiple,\r\n                    validation: validation\r\n                }, true);\r\n\r\n                self._initExtraButton(extraButtonSpec);\r\n            });\r\n        },\r\n\r\n        _getButton: function(buttonId) {\r\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            if (extraButtonsSpec) {\r\n                return extraButtonsSpec.element;\r\n            }\r\n            else if (buttonId === this._defaultButtonId) {\r\n                return this._options.button;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the internally used tracking ID for a button.\r\n         *\r\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\r\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\r\n         * @private\r\n         */\r\n        _getButtonId: function(buttonOrFileInputOrFile) {\r\n            var inputs, fileInput,\r\n                fileBlobOrInput = buttonOrFileInputOrFile;\r\n\r\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\r\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\r\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\r\n            }\r\n\r\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\r\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\r\n                if (qq.isFile(fileBlobOrInput)) {\r\n                    return fileBlobOrInput.qqButtonId;\r\n                }\r\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\r\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\r\n\r\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n\r\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\r\n\r\n                qq.each(inputs, function(idx, input) {\r\n                    if (input.getAttribute(\"type\") === \"file\") {\r\n                        fileInput = input;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (fileInput) {\r\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n            }\r\n        },\r\n\r\n        _getNotFinished: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED,\r\n                    qq.status.SUBMITTING,\r\n                    qq.status.SUBMITTED,\r\n                    qq.status.PAUSED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        // Get the validation options for this button.  Could be the default validation option\r\n        // or a specific one assigned to this particular button.\r\n        _getValidationBase: function(buttonId) {\r\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\r\n        },\r\n\r\n        _getValidationDescriptor: function(fileWrapper) {\r\n            if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                return {\r\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\r\n                    size: fileWrapper.file.referenceBlob.size\r\n                };\r\n            }\r\n\r\n            return {\r\n                name: this.getUploads({id: fileWrapper.id}).name,\r\n                size: this.getUploads({id: fileWrapper.id}).size\r\n            };\r\n        },\r\n\r\n        _getValidationDescriptors: function(fileWrappers) {\r\n            var self = this,\r\n                fileDescriptors = [];\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\r\n            });\r\n\r\n            return fileDescriptors;\r\n        },\r\n\r\n        // Allows camera access on either the default or an extra button for iOS devices.\r\n        _handleCameraAccess: function() {\r\n            if (this._options.camera.ios && qq.ios()) {\r\n                var acceptIosCamera = \"image/*;capture=camera\",\r\n                    button = this._options.camera.button,\r\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\r\n                    optionRoot = this._options;\r\n\r\n                // If we are not targeting the default button, it is an \"extra\" button\r\n                if (buttonId && buttonId !== this._defaultButtonId) {\r\n                    optionRoot = this._extraButtonSpecs[buttonId];\r\n                }\r\n\r\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\r\n                optionRoot.multiple = false;\r\n\r\n                // update the options\r\n                if (optionRoot.validation.acceptFiles === null) {\r\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\r\n                }\r\n                else {\r\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\r\n                }\r\n\r\n                // update the already-created button\r\n                qq.each(this._buttons, function(idx, button) {\r\n                    if (button.getButtonId() === buttonId) {\r\n                        button.setMultiple(optionRoot.multiple);\r\n                        button.setAcceptFiles(optionRoot.acceptFiles);\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _handleCheckedCallback: function(details) {\r\n            var self = this,\r\n                callbackRetVal = details.callback();\r\n\r\n            if (qq.isGenericPromise(callbackRetVal)) {\r\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\r\n                return callbackRetVal.then(\r\n                    function(successParam) {\r\n                        self.log(details.name + \" promise success for \" + details.identifier);\r\n                        details.onSuccess(successParam);\r\n                    },\r\n                    function() {\r\n                        if (details.onFailure) {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                            details.onFailure();\r\n                        }\r\n                        else {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            if (callbackRetVal !== false) {\r\n                details.onSuccess(callbackRetVal);\r\n            }\r\n            else {\r\n                if (details.onFailure) {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\r\n                    details.onFailure();\r\n                }\r\n                else {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\r\n                }\r\n            }\r\n\r\n            return callbackRetVal;\r\n        },\r\n\r\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\r\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\r\n            var self = this,\r\n                uuid = qq.getUniqueId(),\r\n                size = -1,\r\n                name = qq.getFilename(file),\r\n                actualFile = file.blob || file,\r\n                handler = this._customNewFileHandler ?\r\n                    this._customNewFileHandler :\r\n                    qq.bind(self._handleNewFileGeneric, self);\r\n\r\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\r\n                size = actualFile.size;\r\n            }\r\n\r\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\r\n                uploadData: self._uploadData,\r\n                paramsStore: self._paramsStore,\r\n                addFileToHandler: function(id, file) {\r\n                    self._handler.add(id, file);\r\n                    self._netUploadedOrQueued++;\r\n                    self._trackButton(id);\r\n                }\r\n            });\r\n        },\r\n\r\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\r\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\r\n\r\n            this._handler.add(id, file);\r\n            this._trackButton(id);\r\n\r\n            this._netUploadedOrQueued++;\r\n\r\n            fileList.push({id: id, file: file});\r\n        },\r\n\r\n        _handlePasteSuccess: function(blob, extSuppliedName) {\r\n            var extension = blob.type.split(\"/\")[1],\r\n                name = extSuppliedName;\r\n\r\n            /*jshint eqeqeq: true, eqnull: true*/\r\n            if (name == null) {\r\n                name = this._options.paste.defaultName;\r\n            }\r\n\r\n            name += \".\" + extension;\r\n\r\n            this.addFiles({\r\n                name: name,\r\n                blob: blob\r\n            });\r\n        },\r\n\r\n        _handleDeleteSuccess: function(id) {\r\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\r\n                var name = this.getName(id);\r\n\r\n                this._netUploadedOrQueued--;\r\n                this._netUploaded--;\r\n                this._handler.expunge(id);\r\n                this._uploadData.setStatus(id, qq.status.DELETED);\r\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\r\n            }\r\n        },\r\n\r\n        _handleDeleteFailed: function(id, xhrOrXdr) {\r\n            var name = this.getName(id);\r\n\r\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\r\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\r\n\r\n            // Check first if xhrOrXdr is actually passed or valid\r\n            // For error reporting, we only have access to the response status if this is not\r\n            // an `XDomainRequest`.\r\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\r\n            }\r\n            else {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\r\n            }\r\n        },\r\n\r\n        // Creates an extra button element\r\n        _initExtraButton: function(spec) {\r\n            var button = this._createUploadButton({\r\n                accept: spec.validation.acceptFiles,\r\n                allowedExtensions: spec.validation.allowedExtensions,\r\n                element: spec.element,\r\n                folders: spec.folders,\r\n                multiple: spec.multiple,\r\n                title: spec.fileInputTitle\r\n            });\r\n\r\n            this._extraButtonSpecs[button.getButtonId()] = spec;\r\n        },\r\n\r\n        _initFormSupportAndParams: function() {\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n            );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore = this._createStore(\r\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\r\n                );\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\r\n                }\r\n            }\r\n            else {\r\n                this._paramsStore = this._createStore(this._options.request.params);\r\n            }\r\n        },\r\n\r\n        _isDeletePossible: function() {\r\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (this._options.cors.expected) {\r\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\r\n                    return true;\r\n                }\r\n\r\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _isAllowedExtension: function(allowed, fileName) {\r\n            var valid = false;\r\n\r\n            if (!allowed.length) {\r\n                return true;\r\n            }\r\n\r\n            qq.each(allowed, function(idx, allowedExt) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExt)) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\r\n\r\n                    if (fileName.match(extRegex) != null) {\r\n                        valid = true;\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return valid;\r\n        },\r\n\r\n        /**\r\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\r\n         *\r\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\r\n         * @param maybeNameOrNames names of the items that have failed, if applicable\r\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\r\n         * @private\r\n         */\r\n        _itemError: function(code, maybeNameOrNames, item) {\r\n            var message = this._options.messages[code],\r\n                allowedExtensions = [],\r\n                names = [].concat(maybeNameOrNames),\r\n                name = names[0],\r\n                buttonId = this._getButtonId(item),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                extensionsForMessage, placeholderMatch;\r\n\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExtension)) {\r\n                    allowedExtensions.push(allowedExtension);\r\n                }\r\n            });\r\n\r\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\r\n\r\n            r(\"{file}\", this._options.formatFileName(name));\r\n            r(\"{extensions}\", extensionsForMessage);\r\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\r\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\r\n\r\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\r\n            if (placeholderMatch !== null) {\r\n                qq.each(placeholderMatch, function(idx, placeholder) {\r\n                    r(placeholder, names[idx]);\r\n                });\r\n            }\r\n\r\n            this._options.callbacks.onError(null, name, message, undefined);\r\n\r\n            return message;\r\n        },\r\n\r\n        /**\r\n         * Conditionally orders a manual retry of a failed upload.\r\n         *\r\n         * @param id File ID of the failed upload\r\n         * @param callback Optional callback to invoke if a retry is prudent.\r\n         * In lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if a manual retry will occur\r\n         * @private\r\n         */\r\n        _manualRetry: function(id, callback) {\r\n            if (this._onBeforeManualRetry(id)) {\r\n                this._netUploadedOrQueued++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n\r\n                if (callback) {\r\n                    callback(id);\r\n                }\r\n                else {\r\n                    this._handler.retry(id);\r\n                }\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _maybeAllComplete: function(id, status) {\r\n            var self = this,\r\n                notFinished = this._getNotFinished();\r\n\r\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\r\n                this._succeededSinceLastAllComplete.push(id);\r\n            }\r\n            else if (status === qq.status.UPLOAD_FAILED) {\r\n                this._failedSinceLastAllComplete.push(id);\r\n            }\r\n\r\n            if (notFinished === 0 &&\r\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\r\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\r\n                setTimeout(function() {\r\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _maybeHandleIos8SafariWorkaround: function() {\r\n            var self = this;\r\n\r\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n                setTimeout(function() {\r\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\r\n                }, 0);\r\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\r\n            }\r\n        },\r\n\r\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\r\n            // Assuming no one will actually set the response code to something other than 200\r\n            // and still set 'success' to true...\r\n            if (!response.success) {\r\n                if (xhr && xhr.status !== 200 && !response.error) {\r\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\r\n                }\r\n                else {\r\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\r\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\r\n            var self = this;\r\n\r\n            if (items.length > index) {\r\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\r\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\r\n                    setTimeout(function() {\r\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\r\n                            buttonId = self._getButtonId(items[index].file),\r\n                            button = self._getButton(buttonId);\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onValidate\",\r\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\r\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\r\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\r\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\r\n                        });\r\n                    }, 0);\r\n                }\r\n                else if (!validItem) {\r\n                    for (; index < items.length; index++) {\r\n                        self._fileOrBlobRejected(items[index].id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\r\n\r\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n        },\r\n\r\n        /**\r\n         * Attempt to automatically retry a failed upload.\r\n         *\r\n         * @param id The file ID of the failed upload\r\n         * @param name The name of the file associated with the failed upload\r\n         * @param responseJSON Response from the server, parsed into a javascript object\r\n         * @param xhr Ajax transport used to send the failed request\r\n         * @param callback Optional callback to be invoked if a retry is prudent.\r\n         * Invoked in lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if an auto-retry will occur\r\n         * @private\r\n         */\r\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\r\n            var self = this;\r\n\r\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\r\n\r\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\r\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\r\n\r\n                self._maybeParseAndSendUploadError.apply(self, arguments);\r\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\r\n                self._onBeforeAutoRetry(id, name);\r\n\r\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n                self._retryTimeouts[id] = setTimeout(function() {\r\n                    self.log(\"Starting retry for \" + name + \"...\");\r\n\r\n                    if (callback) {\r\n                        callback(id);\r\n                    }\r\n                    else {\r\n                        self._handler.retry(id);\r\n                    }\r\n                }, retryWaitPeriod);\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id, name) {\r\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            var itemLimit = this._currentItemLimit,\r\n                fileName;\r\n\r\n            if (this._preventRetries[id]) {\r\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\r\n                return false;\r\n            }\r\n            else if (this._handler.isValid(id)) {\r\n                fileName = this.getName(id);\r\n\r\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\r\n                    return false;\r\n                }\r\n\r\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\r\n                    this._itemError(\"retryFailTooManyItems\");\r\n                    return false;\r\n                }\r\n\r\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._netUploadedOrQueued--;\r\n\r\n            clearTimeout(this._retryTimeouts[id]);\r\n\r\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\r\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\r\n                this._storedIds.splice(storedItemIndex, 1);\r\n            }\r\n\r\n            this._uploadData.setStatus(id, qq.status.CANCELED);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            if (!result.success) {\r\n                this._netUploadedOrQueued--;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\r\n\r\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\r\n                    this._preventRetries[id] = true;\r\n                }\r\n            }\r\n            else {\r\n                if (result.thumbnailUrl) {\r\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\r\n                }\r\n\r\n                this._netUploaded++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\r\n            }\r\n\r\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\r\n\r\n            return result.success ? true : false;\r\n        },\r\n\r\n        _onDelete: function(id) {\r\n            this._uploadData.setStatus(id, qq.status.DELETING);\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n            var name = this.getName(id);\r\n\r\n            if (isError) {\r\n                this._handleDeleteFailed(id, xhrOrXdr);\r\n            }\r\n            else {\r\n                this._handleDeleteSuccess(id);\r\n            }\r\n        },\r\n\r\n        _onInputChange: function(input) {\r\n            var fileIndex;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\r\n                    this._annotateWithButtonId(input.files[fileIndex], input);\r\n                }\r\n\r\n                this.addFiles(input.files);\r\n            }\r\n            // Android 2.3.x will fire `onchange` even if no file has been selected\r\n            else if (input.value.length > 0) {\r\n                this.addFiles(input);\r\n            }\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n        },\r\n\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            //nothing to do yet in core uploader\r\n        },\r\n\r\n        _onSubmitCallbackSuccess: function(id, name) {\r\n            this._onSubmit.apply(this, arguments);\r\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\r\n            this._onSubmitted.apply(this, arguments);\r\n\r\n            if (this._options.autoUpload) {\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n                this._uploadFile(id);\r\n            }\r\n            else {\r\n                this._storeForLater(id);\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\r\n            var uuid = this.getUuid(id),\r\n                adjustedOnSuccessCallback;\r\n\r\n            if (onSuccessCallback) {\r\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\r\n            }\r\n\r\n            if (this._isDeletePossible()) {\r\n                this._handleCheckedCallback({\r\n                    name: \"onSubmitDelete\",\r\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\r\n                    onSuccess: adjustedOnSuccessCallback ||\r\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\r\n                    identifier: id\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\r\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitted: function(id) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._options.callbacks.onTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            // nothing to do in the core uploader for now\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\r\n            if (newStatus === qq.status.PAUSED) {\r\n                clearTimeout(this._retryTimeouts[id]);\r\n            }\r\n        },\r\n\r\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\r\n            var self = this;\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                self._fileOrBlobRejected(fileWrapper.id);\r\n            });\r\n        },\r\n\r\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\r\n            var errorMessage,\r\n                itemLimit = this._currentItemLimit,\r\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\r\n\r\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\r\n                if (items.length > 0) {\r\n                    this._handleCheckedCallback({\r\n                        name: \"onValidate\",\r\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\r\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\r\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\r\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\r\n                    });\r\n                }\r\n                else {\r\n                    this._itemError(\"noFilesError\");\r\n                }\r\n            }\r\n            else {\r\n                this._onValidateBatchCallbackFailure(items);\r\n                errorMessage = this._options.messages.tooManyItemsError\r\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\r\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\r\n                this._batchError(errorMessage);\r\n            }\r\n        },\r\n\r\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\r\n            var nextIndex = index + 1;\r\n\r\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\r\n\r\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n        },\r\n\r\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\r\n            var self = this,\r\n                nextIndex = index + 1,\r\n                validationDescriptor = this._getValidationDescriptor(items[index]);\r\n\r\n            this._validateFileOrBlobData(items[index], validationDescriptor)\r\n                .then(\r\n                function() {\r\n                    self._upload(items[index].id, params, endpoint);\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\r\n                },\r\n                function() {\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n                }\r\n            );\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            if (items.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n                return;\r\n            }\r\n\r\n            var validationDescriptors = this._getValidationDescriptors(items),\r\n                buttonId = this._getButtonId(items[0].file),\r\n                button = this._getButton(buttonId);\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onValidateBatch\",\r\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\r\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\r\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\r\n                identifier: \"batch validation\"\r\n            });\r\n        },\r\n\r\n        _preventLeaveInProgress: function() {\r\n            var self = this;\r\n\r\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\r\n                if (self.getInProgress()) {\r\n                    e = e || window.event;\r\n                    // for ie, ff\r\n                    e.returnValue = self._options.messages.onLeave;\r\n                    // for webkit\r\n                    return self._options.messages.onLeave;\r\n                }\r\n            });\r\n        },\r\n\r\n        // Attempts to refresh session data only if the `qq.Session` module exists\r\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\r\n        // callback will be invoked once the refresh is complete.\r\n        _refreshSessionData: function() {\r\n            var self = this,\r\n                options = this._options.session;\r\n\r\n            /* jshint eqnull:true */\r\n            if (qq.Session && this._options.session.endpoint != null) {\r\n                if (!this._session) {\r\n                    qq.extend(options, {cors: this._options.cors});\r\n\r\n                    options.log = qq.bind(this.log, this);\r\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\r\n\r\n                    this._session = new qq.Session(options);\r\n                }\r\n\r\n                setTimeout(function() {\r\n                    self._session.refresh().then(function(response, xhrOrXdr) {\r\n                        self._sessionRequestComplete();\r\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\r\n\r\n                    }, function(response, xhrOrXdr) {\r\n\r\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\r\n                    });\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _sessionRequestComplete: function() {},\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._uploadData.updateSize(id, newSize);\r\n            this._totalProgress && this._totalProgress.onNewSize(id);\r\n        },\r\n\r\n        _shouldAutoRetry: function(id, name, responseJSON) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            /*jshint laxbreak: true */\r\n            if (!this._preventRetries[id]\r\n                && this._options.retry.enableAuto\r\n                && uploadData.status !== qq.status.PAUSED) {\r\n\r\n                if (this._autoRetries[id] === undefined) {\r\n                    this._autoRetries[id] = 0;\r\n                }\r\n\r\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\r\n                    this._autoRetries[id] += 1;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._storedIds.push(id);\r\n        },\r\n\r\n        // Maps a file with the button that was used to select it.\r\n        _trackButton: function(id) {\r\n            var buttonId;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                buttonId = this._handler.getFile(id).qqButtonId;\r\n            }\r\n            else {\r\n                buttonId = this._getButtonId(this._handler.getInput(id));\r\n            }\r\n\r\n            if (buttonId) {\r\n                this._buttonIdsForFileIds[id] = buttonId;\r\n            }\r\n        },\r\n\r\n        _updateFormSupportAndParams: function(formElementOrId) {\r\n            this._options.form.element = formElementOrId;\r\n\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n                );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this.setEndpoint(this._formSupport.newEndpoint);\r\n                }\r\n            }\r\n        },\r\n\r\n        _upload: function(id, params, endpoint) {\r\n            var name = this.getName(id);\r\n\r\n            if (params) {\r\n                this.setParams(params, id);\r\n            }\r\n\r\n            if (endpoint) {\r\n                this.setEndpoint(endpoint, id);\r\n            }\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onSubmit\",\r\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\r\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\r\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\r\n                identifier: id\r\n            });\r\n        },\r\n\r\n        _uploadFile: function(id) {\r\n            if (!this._handler.upload(id)) {\r\n                this._uploadData.setStatus(id, qq.status.QUEUED);\r\n            }\r\n        },\r\n\r\n        _uploadStoredFiles: function() {\r\n            var idToUpload, stillSubmitting,\r\n                self = this;\r\n\r\n            while (this._storedIds.length) {\r\n                idToUpload = this._storedIds.shift();\r\n                this._uploadFile(idToUpload);\r\n            }\r\n\r\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\r\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\r\n            if (stillSubmitting) {\r\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\r\n                setTimeout(function() {\r\n                    self._uploadStoredFiles();\r\n                }, 1000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Performs some internal validation checks on an item, defined in the `validation` option.\r\n         *\r\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\r\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\r\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\r\n         * @private\r\n         */\r\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\r\n            var self = this,\r\n                file = (function() {\r\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                        return fileWrapper.file.referenceBlob;\r\n                    }\r\n                    return fileWrapper.file;\r\n                }()),\r\n                name = validationDescriptor.name,\r\n                size = validationDescriptor.size,\r\n                buttonId = this._getButtonId(fileWrapper.file),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                validityChecker = new qq.Promise();\r\n\r\n            validityChecker.then(\r\n                function() {},\r\n                function() {\r\n                    self._fileOrBlobRejected(fileWrapper.id, name);\r\n                });\r\n\r\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\r\n                this._itemError(\"typeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (!this._options.validation.allowEmpty && size === 0) {\r\n                this._itemError(\"emptyError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\r\n                this._itemError(\"sizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && size < validationBase.minSizeLimit) {\r\n                this._itemError(\"minSizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\r\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\r\n                    validityChecker.success,\r\n                    function(errorCode) {\r\n                        self._itemError(errorCode + \"ImageError\", name, file);\r\n                        validityChecker.failure();\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                validityChecker.success();\r\n            }\r\n\r\n            return validityChecker;\r\n        },\r\n\r\n        _wrapCallbacks: function() {\r\n            var self, safeCallback, prop;\r\n\r\n            self = this;\r\n\r\n            safeCallback = function(name, callback, args) {\r\n                var errorMsg;\r\n\r\n                try {\r\n                    return callback.apply(self, args);\r\n                }\r\n                catch (exception) {\r\n                    errorMsg = exception.message || exception.toString();\r\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\r\n                }\r\n            };\r\n\r\n            /* jshint forin: false, loopfunc: true */\r\n            for (prop in this._options.callbacks) {\r\n                (function() {\r\n                    var callbackName, callbackFunc;\r\n                    callbackName = prop;\r\n                    callbackFunc = self._options.callbacks[callbackName];\r\n                    self._options.callbacks[callbackName] = function() {\r\n                        return safeCallback(callbackName, callbackFunc, arguments);\r\n                    };\r\n                }());\r\n            }\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.FineUploaderBasic = function(o) {\r\n        var self = this;\r\n\r\n        // These options define FineUploaderBasic mode.\r\n        this._options = {\r\n            debug: false,\r\n            button: null,\r\n            multiple: true,\r\n            maxConnections: 3,\r\n            disableCancelForFormUploads: false,\r\n            autoUpload: true,\r\n\r\n            request: {\r\n                customHeaders: {},\r\n                endpoint: \"/server/upload\",\r\n                filenameParam: \"qqfilename\",\r\n                forceMultipart: true,\r\n                inputName: \"qqfile\",\r\n                method: \"POST\",\r\n                params: {},\r\n                paramsInBody: true,\r\n                totalFileSizeName: \"qqtotalfilesize\",\r\n                uuidName: \"qquuid\"\r\n            },\r\n\r\n            validation: {\r\n                allowedExtensions: [],\r\n                sizeLimit: 0,\r\n                minSizeLimit: 0,\r\n                itemLimit: 0,\r\n                stopOnFirstInvalidFile: true,\r\n                acceptFiles: null,\r\n                image: {\r\n                    maxHeight: 0,\r\n                    maxWidth: 0,\r\n                    minHeight: 0,\r\n                    minWidth: 0\r\n                },\r\n                allowEmpty: false\r\n            },\r\n\r\n            callbacks: {\r\n                onSubmit: function(id, name) {},\r\n                onSubmitted: function(id, name) {},\r\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\r\n                onAllComplete: function(successful, failed) {},\r\n                onCancel: function(id, name) {},\r\n                onUpload: function(id, name) {},\r\n                onUploadChunk: function(id, name, chunkData) {},\r\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\r\n                onResume: function(id, fileName, chunkData) {},\r\n                onProgress: function(id, name, loaded, total) {},\r\n                onTotalProgress: function(loaded, total) {},\r\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\r\n                onAutoRetry: function(id, name, attemptNumber) {},\r\n                onManualRetry: function(id, name) {},\r\n                onValidateBatch: function(fileOrBlobData) {},\r\n                onValidate: function(fileOrBlobData) {},\r\n                onSubmitDelete: function(id) {},\r\n                onDelete: function(id) {},\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\r\n                onPasteReceived: function(blob) {},\r\n                onStatusChange: function(id, oldStatus, newStatus) {},\r\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\r\n            },\r\n\r\n            messages: {\r\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\r\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\r\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\r\n                emptyError: \"{file} is empty, please select files again without it.\",\r\n                noFilesError: \"No files to upload.\",\r\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\r\n                maxHeightImageError: \"Image is too tall.\",\r\n                maxWidthImageError: \"Image is too wide.\",\r\n                minHeightImageError: \"Image is not tall enough.\",\r\n                minWidthImageError: \"Image is not wide enough.\",\r\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\r\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\r\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\r\n            },\r\n\r\n            retry: {\r\n                enableAuto: false,\r\n                maxAutoAttempts: 3,\r\n                autoAttemptDelay: 5,\r\n                preventRetryResponseProperty: \"preventRetry\"\r\n            },\r\n\r\n            classes: {\r\n                buttonHover: \"qq-upload-button-hover\",\r\n                buttonFocus: \"qq-upload-button-focus\"\r\n            },\r\n\r\n            chunking: {\r\n                enabled: false,\r\n                concurrent: {\r\n                    enabled: false\r\n                },\r\n                mandatory: false,\r\n                paramNames: {\r\n                    partIndex: \"qqpartindex\",\r\n                    partByteOffset: \"qqpartbyteoffset\",\r\n                    chunkSize: \"qqchunksize\",\r\n                    totalFileSize: \"qqtotalfilesize\",\r\n                    totalParts: \"qqtotalparts\"\r\n                },\r\n                partSize: 2000000,\r\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\r\n                success: {\r\n                    endpoint: null\r\n                }\r\n            },\r\n\r\n            resume: {\r\n                enabled: false,\r\n                recordsExpireIn: 7, //days\r\n                paramNames: {\r\n                    resuming: \"qqresume\"\r\n                }\r\n            },\r\n\r\n            formatFileName: function(fileOrBlobName) {\r\n                return fileOrBlobName;\r\n            },\r\n\r\n            text: {\r\n                defaultResponseError: \"Upload failure reason unknown\",\r\n                fileInputTitle: \"file input\",\r\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\r\n            },\r\n\r\n            deleteFile: {\r\n                enabled: false,\r\n                method: \"DELETE\",\r\n                endpoint: \"/server/upload\",\r\n                customHeaders: {},\r\n                params: {}\r\n            },\r\n\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false,\r\n                allowXdr: false\r\n            },\r\n\r\n            blobs: {\r\n                defaultName: \"misc_data\"\r\n            },\r\n\r\n            paste: {\r\n                targetElement: null,\r\n                defaultName: \"pasted_image\"\r\n            },\r\n\r\n            camera: {\r\n                ios: false,\r\n\r\n                // if ios is true: button is null means target the default button, otherwise target the button specified\r\n                button: null\r\n            },\r\n\r\n            // This refers to additional upload buttons to be handled by Fine Uploader.\r\n            // Each element is an object, containing `element` as the only required\r\n            // property.  The `element` must be a container that will ultimately\r\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\r\n            // Optional properties of each object include `multiple`, `validation`,\r\n            // and `folders`.\r\n            extraButtons: [],\r\n\r\n            // Depends on the session module.  Used to query the server for an initial file list\r\n            // during initialization and optionally after a `reset`.\r\n            session: {\r\n                endpoint: null,\r\n                params: {},\r\n                customHeaders: {},\r\n                refreshOnReset: true\r\n            },\r\n\r\n            // Send parameters associated with an existing form along with the files\r\n            form: {\r\n                // Element ID, HTMLElement, or null\r\n                element: \"qq-form\",\r\n\r\n                // Overrides the base `autoUpload`, unless `element` is null.\r\n                autoUpload: false,\r\n\r\n                // true = upload files on form submission (and squelch submit event)\r\n                interceptSubmit: true\r\n            },\r\n\r\n            // scale images client side, upload a new file for each scaled version\r\n            scaling: {\r\n                customResizer: null,\r\n\r\n                // send the original file as well\r\n                sendOriginal: true,\r\n\r\n                // fox orientation for scaled images\r\n                orient: true,\r\n\r\n                // If null, scaled image type will match reference image type.  This value will be referred to\r\n                // for any size record that does not specific a type.\r\n                defaultType: null,\r\n\r\n                defaultQuality: 80,\r\n\r\n                failureText: \"Failed to scale\",\r\n\r\n                includeExif: false,\r\n\r\n                // metadata about each requested scaled version\r\n                sizes: []\r\n            },\r\n\r\n            workarounds: {\r\n                iosEmptyVideos: true,\r\n                ios8SafariUploads: true,\r\n                ios8BrowserCrash: false\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(this._options, o, true);\r\n\r\n        this._buttons = [];\r\n        this._extraButtonSpecs = {};\r\n        this._buttonIdsForFileIds = [];\r\n\r\n        this._wrapCallbacks();\r\n        this._disposeSupport =  new qq.DisposeSupport();\r\n\r\n        this._storedIds = [];\r\n        this._autoRetries = [];\r\n        this._retryTimeouts = [];\r\n        this._preventRetries = [];\r\n        this._thumbnailUrls = [];\r\n\r\n        this._netUploadedOrQueued = 0;\r\n        this._netUploaded = 0;\r\n        this._uploadData = this._createUploadDataTracker();\r\n\r\n        this._initFormSupportAndParams();\r\n\r\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\r\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\r\n\r\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\r\n\r\n        this._endpointStore = this._createStore(this._options.request.endpoint);\r\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\r\n\r\n        this._handler = this._createUploadHandler();\r\n\r\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\r\n\r\n        if (this._options.button) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._options.button,\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._generateExtraButtonSpecs();\r\n\r\n        this._handleCameraAccess();\r\n\r\n        if (this._options.paste.targetElement) {\r\n            if (qq.PasteSupport) {\r\n                this._pasteHandler = this._createPasteHandler();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._preventLeaveInProgress();\r\n\r\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\r\n        this._refreshSessionData();\r\n\r\n        this._succeededSinceLastAllComplete = [];\r\n        this._failedSinceLastAllComplete = [];\r\n\r\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\r\n        if (this._scaler.enabled) {\r\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\r\n        }\r\n\r\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\r\n            this._totalProgress = new qq.TotalProgress(\r\n                qq.bind(this._onTotalProgress, this),\r\n\r\n                function(id) {\r\n                    var entry = self._uploadData.retrieve({id: id});\r\n                    return (entry && entry.size) || 0;\r\n                }\r\n            );\r\n        }\r\n\r\n        this._currentItemLimit = this._options.validation.itemLimit;\r\n    };\r\n\r\n    // Define the private & public API methods.\r\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\r\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n}());\r\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\r\n/**\r\n * Base upload handler module.  Controls more specific handlers.\r\n *\r\n * @param o Options.  Passed along to the specific handler submodule as well.\r\n * @param namespace [optional] Namespace for the specific handler.\r\n */\r\nqq.UploadHandlerController = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var controller = this,\r\n        chunkingPossible = false,\r\n        concurrentChunkingPossible = false,\r\n        chunking, preventRetryResponse, log, handler,\r\n\r\n    options = {\r\n        paramsStore: {},\r\n        maxConnections: 3, // maximum number of concurrent uploads\r\n        chunking: {\r\n            enabled: false,\r\n            multiple: {\r\n                enabled: false\r\n            }\r\n        },\r\n        log: function(str, level) {},\r\n        onProgress: function(id, fileName, loaded, total) {},\r\n        onComplete: function(id, fileName, response, xhr) {},\r\n        onCancel: function(id, fileName) {},\r\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\r\n        onUpload: function(id, fileName) {},\r\n        onUploadChunk: function(id, fileName, chunkData) {},\r\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\r\n        onAutoRetry: function(id, fileName, response, xhr) {},\r\n        onResume: function(id, fileName, chunkData) {},\r\n        onUuidChanged: function(id, newUuid) {},\r\n        getName: function(id) {},\r\n        setSize: function(id, newSize) {},\r\n        isQueued: function(id) {},\r\n        getIdsInProxyGroup: function(id) {},\r\n        getIdsInBatch: function(id) {}\r\n    },\r\n\r\n    chunked = {\r\n        // Called when each chunk has uploaded successfully\r\n        done: function(id, chunkIdx, response, xhr) {\r\n            var chunkData = handler._getChunkData(id, chunkIdx);\r\n\r\n            handler._getFileState(id).attemptingResume = false;\r\n\r\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\r\n            handler._getFileState(id).loaded += chunkData.size;\r\n\r\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\r\n        // logic associated with closing out the file, such as combining the chunks.\r\n        finalize: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id);\r\n\r\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\r\n            handler.finalizeChunks(id).then(\r\n                function(response, xhr) {\r\n                    log(\"Finalize successful for \" + id);\r\n\r\n                    var normaizedResponse = upload.normalizeResponse(response, true);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    handler._maybeDeletePersistedChunkData(id);\r\n                    upload.cleanup(id, normaizedResponse, xhr);\r\n                },\r\n                function(response, xhr) {\r\n                    var normaizedResponse = upload.normalizeResponse(response, false);\r\n\r\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\r\n\r\n                    if (normaizedResponse.reset) {\r\n                        chunked.reset(id);\r\n                    }\r\n\r\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\r\n                        upload.cleanup(id, normaizedResponse, xhr);\r\n                    }\r\n                }\r\n            );\r\n        },\r\n\r\n        handleFailure: function(chunkIdx, id, response, xhr) {\r\n            var name = options.getName(id);\r\n\r\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\r\n\r\n            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n            var responseToReport = upload.normalizeResponse(response, false),\r\n                inProgressIdx;\r\n\r\n            if (responseToReport.reset) {\r\n                chunked.reset(id);\r\n            }\r\n            else {\r\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\r\n                if (inProgressIdx >= 0) {\r\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\r\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\r\n                }\r\n            }\r\n\r\n            // We may have aborted all other in-progress chunks for this file due to a failure.\r\n            // If so, ignore the failures associated with those aborts.\r\n            if (!handler._getFileState(id).temp.ignoreFailure) {\r\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\r\n                // chunks since they will be explicitly aborted\r\n                if (concurrentChunkingPossible) {\r\n                    handler._getFileState(id).temp.ignoreFailure = true;\r\n\r\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\r\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\r\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\r\n                        ckXhr.abort();\r\n                        // Flag the transport, in case we are waiting for some other async operation\r\n                        // to complete before attempting to upload the chunk\r\n                        ckXhr._cancelled = true;\r\n                    });\r\n\r\n                    // We must indicate that all aborted chunks are no longer in progress\r\n                    handler.moveInProgressToRemaining(id);\r\n\r\n                    // Free up any connections used by these chunks, but don't allow any\r\n                    // other files to take up the connections (until we have exhausted all auto-retries)\r\n                    connectionManager.free(id, true);\r\n                }\r\n\r\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\r\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\r\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\r\n                    // is a failure or not.\r\n                    upload.cleanup(id, responseToReport, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        hasMoreParts: function(id) {\r\n            return !!handler._getFileState(id).chunking.remaining.length;\r\n        },\r\n\r\n        nextPart: function(id) {\r\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\r\n\r\n            if (nextIdx >= handler._getTotalChunks(id)) {\r\n                nextIdx = null;\r\n            }\r\n\r\n            return nextIdx;\r\n        },\r\n\r\n        reset: function(id) {\r\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\r\n\r\n            handler._maybeDeletePersistedChunkData(id);\r\n            handler.reevaluateChunking(id);\r\n            handler._getFileState(id).loaded = 0;\r\n        },\r\n\r\n        sendNext: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id),\r\n                chunkIdx = chunked.nextPart(id),\r\n                chunkData = handler._getChunkData(id, chunkIdx),\r\n                resuming = handler._getFileState(id).attemptingResume,\r\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\r\n\r\n            if (handler._getFileState(id).loaded == null) {\r\n                handler._getFileState(id).loaded = 0;\r\n            }\r\n\r\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\r\n            if (resuming && options.onResume(id, name, chunkData) === false) {\r\n                chunked.reset(id);\r\n                chunkIdx = chunked.nextPart(id);\r\n                chunkData = handler._getChunkData(id, chunkIdx);\r\n                resuming = false;\r\n            }\r\n\r\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\r\n            if (chunkIdx == null && inProgressChunks.length === 0) {\r\n                chunked.finalize(id);\r\n            }\r\n\r\n            // Send the next chunk\r\n            else {\r\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\r\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\r\n                inProgressChunks.push(chunkIdx);\r\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\r\n\r\n                if (concurrentChunkingPossible) {\r\n                    connectionManager.open(id, chunkIdx);\r\n                }\r\n\r\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\r\n                    chunked.sendNext(id);\r\n                }\r\n\r\n                if (chunkData.blob.size === 0) {\r\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\r\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\r\n                }\r\n                else {\r\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\r\n                        // upload chunk success\r\n                        function success(response, xhr) {\r\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\r\n\r\n                            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\r\n                                responseToReport = upload.normalizeResponse(response, true),\r\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\r\n\r\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\r\n\r\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\r\n\r\n                            if (inProgressChunkIdx >= 0) {\r\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\r\n                            }\r\n\r\n                            handler._maybePersistChunkedState(id);\r\n\r\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\r\n                                chunked.finalize(id);\r\n                            }\r\n                            else if (chunked.hasMoreParts(id)) {\r\n                                chunked.sendNext(id);\r\n                            }\r\n                            else {\r\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\r\n                            }\r\n                        },\r\n\r\n                        // upload chunk failure\r\n                        function failure(response, xhr) {\r\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\r\n                        }\r\n                        )\r\n                        .done(function() {\r\n                            handler.clearXhr(id, chunkIdx);\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    connectionManager = {\r\n        _open: [],\r\n        _openChunks: {},\r\n        _waiting: [],\r\n\r\n        available: function() {\r\n            var max = options.maxConnections,\r\n                openChunkEntriesCount = 0,\r\n                openChunksCount = 0;\r\n\r\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\r\n                openChunkEntriesCount++;\r\n                openChunksCount += openChunkIndexes.length;\r\n            });\r\n\r\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\r\n        },\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        free: function(id, dontAllowNext) {\r\n            var allowNext = !dontAllowNext,\r\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\r\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\r\n                nextId;\r\n\r\n            delete connectionManager._openChunks[id];\r\n\r\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\r\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\r\n                delete handler._getFileState(id).file;\r\n            }\r\n\r\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\r\n            if (waitingIndex >= 0) {\r\n                connectionManager._waiting.splice(waitingIndex, 1);\r\n            }\r\n            // If this file was consuming a connection, allow the next file to be uploaded\r\n            else if (allowNext && connectionsIndex >= 0) {\r\n                connectionManager._open.splice(connectionsIndex, 1);\r\n\r\n                nextId = connectionManager._waiting.shift();\r\n                if (nextId >= 0) {\r\n                    connectionManager._open.push(nextId);\r\n                    upload.start(nextId);\r\n                }\r\n            }\r\n        },\r\n\r\n        getWaitingOrConnected: function() {\r\n            var waitingOrConnected = [];\r\n\r\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\r\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\r\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\r\n                if (chunks && chunks.length) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // For non-chunked files, only one connection will be consumed per file.\r\n            // This is where we aggregate those file IDs.\r\n            qq.each(connectionManager._open, function(idx, fileId) {\r\n                if (!connectionManager._openChunks[fileId]) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // There may be files waiting for a connection.\r\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\r\n\r\n            return waitingOrConnected;\r\n        },\r\n\r\n        isUsingConnection: function(id) {\r\n            return qq.indexOf(connectionManager._open, id) >= 0;\r\n        },\r\n\r\n        open: function(id, chunkIdx) {\r\n            if (chunkIdx == null) {\r\n                var alreadyInWaiting = qq.indexOf(connectionManager._waiting, id);\r\n                var alreadyInOpen = qq.indexOf(connectionManager._open, id);\r\n                if (alreadyInWaiting === -1 && alreadyInOpen === -1) {\r\n                    connectionManager._waiting.push(id);\r\n                }\r\n            }\r\n\r\n            if (connectionManager.available()) {\r\n                if (chunkIdx == null) {\r\n                    connectionManager._waiting.pop();\r\n                    connectionManager._open.push(id);\r\n                }\r\n                else {\r\n                    (function() {\r\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\r\n                        openChunksEntry.push(chunkIdx);\r\n                        connectionManager._openChunks[id] = openChunksEntry;\r\n                    }());\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        reset: function() {\r\n            connectionManager._waiting = [];\r\n            connectionManager._open = [];\r\n        }\r\n    },\r\n\r\n    simple = {\r\n        send: function(id, name) {\r\n            handler._getFileState(id).loaded = 0;\r\n\r\n            log(\"Sending simple upload request for \" + id);\r\n            handler.uploadFile(id).then(\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request succeeded for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, true),\r\n                        size = options.getSize(id);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    upload.maybeNewUuid(id, responseToReport);\r\n                    upload.cleanup(id, responseToReport, optXhr);\r\n                },\r\n\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request failed for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, false);\r\n\r\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\r\n                        upload.cleanup(id, responseToReport, optXhr);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    upload = {\r\n        cancel: function(id) {\r\n            log(\"Cancelling \" + id);\r\n            options.paramsStore.remove(id);\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        cleanup: function(id, response, optXhr) {\r\n            var name = options.getName(id);\r\n\r\n            options.onComplete(id, name, response, optXhr);\r\n\r\n            if (handler._getFileState(id)) {\r\n                handler._clearXhrs && handler._clearXhrs(id);\r\n            }\r\n\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\r\n        // if none of these are available for the ID\r\n        getProxyOrBlob: function(id) {\r\n            return (handler.getProxy && handler.getProxy(id)) ||\r\n                (handler.getFile && handler.getFile(id));\r\n        },\r\n\r\n        initHandler: function() {\r\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\r\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\r\n\r\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\r\n                options,\r\n                {\r\n                    getDataByUuid: options.getDataByUuid,\r\n                    getName: options.getName,\r\n                    getSize: options.getSize,\r\n                    getUuid: options.getUuid,\r\n                    log: log,\r\n                    onCancel: options.onCancel,\r\n                    onProgress: options.onProgress,\r\n                    onUuidChanged: options.onUuidChanged\r\n                }\r\n            );\r\n\r\n            if (handler._removeExpiredChunkingRecords) {\r\n                handler._removeExpiredChunkingRecords();\r\n            }\r\n        },\r\n\r\n        isDeferredEligibleForUpload: function(id) {\r\n            return options.isQueued(id);\r\n        },\r\n\r\n        // For Blobs that are part of a group of generated images, along with a reference image,\r\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\r\n        // even if some async processing must be completed on one or more Blobs first.\r\n        maybeDefer: function(id, blob) {\r\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\r\n            // and then submit the upload to the specific handler once the blob is available.\r\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\r\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\r\n\r\n                // Blob creation may take some time, so the caller may want to update the\r\n                // UI to indicate that an operation is in progress, even before the actual\r\n                // upload begins and an onUpload callback is invoked.\r\n                options.onUploadPrep(id);\r\n\r\n                log(\"Attempting to generate a blob on-demand for \" + id);\r\n                blob.create().then(function(generatedBlob) {\r\n                    log(\"Generated an on-demand blob for \" + id);\r\n\r\n                    // Update record associated with this file by providing the generated Blob\r\n                    handler.updateBlob(id, generatedBlob);\r\n\r\n                    // Propagate the size for this generated Blob\r\n                    options.setSize(id, generatedBlob.size);\r\n\r\n                    // Order handler to recalculate chunking possibility, if applicable\r\n                    handler.reevaluateChunking(id);\r\n\r\n                    upload.maybeSendDeferredFiles(id);\r\n                },\r\n\r\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\r\n                function(errorMessage) {\r\n                    var errorResponse = {};\r\n\r\n                    if (errorMessage) {\r\n                        errorResponse.error = errorMessage;\r\n                    }\r\n\r\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\r\n\r\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\r\n                    upload.maybeSendDeferredFiles(id);\r\n                    connectionManager.free(id);\r\n                });\r\n            }\r\n            else {\r\n                return upload.maybeSendDeferredFiles(id);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\r\n        maybeSendDeferredFiles: function(id) {\r\n            var idsInGroup = options.getIdsInProxyGroup(id),\r\n                uploadedThisId = false;\r\n\r\n            if (idsInGroup && idsInGroup.length) {\r\n                log(\"Maybe ready to upload proxy group file \" + id);\r\n\r\n                qq.each(idsInGroup, function(idx, idInGroup) {\r\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\r\n                        uploadedThisId = idInGroup === id;\r\n                        upload.now(idInGroup);\r\n                    }\r\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                uploadedThisId = true;\r\n                upload.now(id);\r\n            }\r\n\r\n            return uploadedThisId;\r\n        },\r\n\r\n        maybeNewUuid: function(id, response) {\r\n            if (response.newUuid !== undefined) {\r\n                options.onUuidChanged(id, response.newUuid);\r\n            }\r\n        },\r\n\r\n        // The response coming from handler implementations may be in various formats.\r\n        // Instead of hoping a promise nested 5 levels deep will always return an object\r\n        // as its first param, let's just normalize the response here.\r\n        normalizeResponse: function(originalResponse, successful) {\r\n            var response = originalResponse;\r\n\r\n            // The passed \"response\" param may not be a response at all.\r\n            // It could be a string, detailing the error, for example.\r\n            if (!qq.isObject(originalResponse)) {\r\n                response = {};\r\n\r\n                if (qq.isString(originalResponse) && !successful) {\r\n                    response.error = originalResponse;\r\n                }\r\n            }\r\n\r\n            response.success = successful;\r\n\r\n            return response;\r\n        },\r\n\r\n        now: function(id) {\r\n            var name = options.getName(id);\r\n\r\n            if (!controller.isValid(id)) {\r\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\r\n            }\r\n\r\n            options.onUpload(id, name);\r\n\r\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\r\n                chunked.sendNext(id);\r\n            }\r\n            else {\r\n                simple.send(id, name);\r\n            }\r\n        },\r\n\r\n        start: function(id) {\r\n            var blobToUpload = upload.getProxyOrBlob(id);\r\n\r\n            if (blobToUpload) {\r\n                return upload.maybeDefer(id, blobToUpload);\r\n            }\r\n            else {\r\n                upload.now(id);\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds file or file input to the queue\r\n         **/\r\n        add: function(id, file) {\r\n            handler.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id\r\n         */\r\n        upload: function(id) {\r\n            if (connectionManager.open(id)) {\r\n                return upload.start(id);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        retry: function(id) {\r\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\r\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\r\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\r\n            // any more failures at this point.\r\n            if (concurrentChunkingPossible) {\r\n                handler._getFileState(id).temp.ignoreFailure = false;\r\n            }\r\n\r\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\r\n            // Just go ahead and ask the handler to upload again.\r\n            if (connectionManager.isUsingConnection(id)) {\r\n                return upload.start(id);\r\n            }\r\n\r\n            // If we are attempting to retry a file that is not currently consuming a connection,\r\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\r\n            // before the retry commences.\r\n            else {\r\n                return controller.upload(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id) {\r\n            var cancelRetVal = handler.cancel(id);\r\n\r\n            if (qq.isGenericPromise(cancelRetVal)) {\r\n                cancelRetVal.then(function() {\r\n                    upload.cancel(id);\r\n                });\r\n            }\r\n            else if (cancelRetVal !== false) {\r\n                upload.cancel(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels all queued or in-progress uploads\r\n         */\r\n        cancelAll: function() {\r\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\r\n                i;\r\n\r\n            // ensure files are cancelled in reverse order which they were added\r\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\r\n            if (waitingOrConnected.length) {\r\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\r\n                    controller.cancel(waitingOrConnected[i]);\r\n                }\r\n            }\r\n\r\n            connectionManager.reset();\r\n        },\r\n\r\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\r\n        // Undefined if no file record is available.\r\n        getFile: function(id) {\r\n            if (handler.getProxy && handler.getProxy(id)) {\r\n                return handler.getProxy(id).referenceBlob;\r\n            }\r\n\r\n            return handler.getFile && handler.getFile(id);\r\n        },\r\n\r\n        // Returns true if the Blob associated with the ID is related to a proxy s\r\n        isProxied: function(id) {\r\n            return !!(handler.getProxy && handler.getProxy(id));\r\n        },\r\n\r\n        getInput: function(id) {\r\n            if (handler.getInput) {\r\n                return handler.getInput(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            log(\"Resetting upload handler\");\r\n            controller.cancelAll();\r\n            connectionManager.reset();\r\n            handler.reset();\r\n        },\r\n\r\n        expunge: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.expunge(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Determine if the file exists.\r\n         */\r\n        isValid: function(id) {\r\n            return handler.isValid(id);\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            if (handler.getResumableFilesData) {\r\n                return handler.getResumableFilesData();\r\n            }\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\r\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\r\n         * will be undefined.\r\n         *\r\n         * @param id Internal file ID\r\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\r\n         */\r\n        getThirdPartyFileId: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.getThirdPartyFileId(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\r\n         * @param id ID of the upload/file to pause\r\n         * @returns {boolean} true if the upload was paused\r\n         */\r\n        pause: function(id) {\r\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\r\n                connectionManager.free(id);\r\n                handler.moveInProgressToRemaining(id);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // True if the file is eligible for pause/resume.\r\n        isResumable: function(id) {\r\n            return !!handler.isResumable && handler.isResumable(id);\r\n        }\r\n    });\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\r\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\r\n\r\n    preventRetryResponse = (function() {\r\n        var response = {};\r\n\r\n        response[options.preventRetryParam] = true;\r\n\r\n        return response;\r\n    }());\r\n\r\n    upload.initHandler();\r\n};\r\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n/**\r\n * CryptoJS core components.\r\n */\r\nqq.CryptoJS = (function (Math, undefined) {\r\n    /**\r\n     * CryptoJS namespace.\r\n     */\r\n    var C = {};\r\n\r\n    /**\r\n     * Library namespace.\r\n     */\r\n    var C_lib = C.lib = {};\r\n\r\n    /**\r\n     * Base object for prototypal inheritance.\r\n     */\r\n    var Base = C_lib.Base = (function () {\r\n        function F() {}\r\n\r\n        return {\r\n            /**\r\n             * Creates a new object that inherits from this object.\r\n             *\r\n             * @param {Object} overrides Properties to copy into the new object.\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         field: 'value',\r\n             *\r\n             *         method: function () {\r\n             *         }\r\n             *     });\r\n             */\r\n            extend: function (overrides) {\r\n                // Spawn\r\n                F.prototype = this;\r\n                var subtype = new F();\r\n\r\n                // Augment\r\n                if (overrides) {\r\n                    subtype.mixIn(overrides);\r\n                }\r\n\r\n                // Create default initializer\r\n                if (!subtype.hasOwnProperty('init')) {\r\n                    subtype.init = function () {\r\n                        subtype.$super.init.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                // Initializer's prototype is the subtype object\r\n                subtype.init.prototype = subtype;\r\n\r\n                // Reference supertype\r\n                subtype.$super = this;\r\n\r\n                return subtype;\r\n            },\r\n\r\n            /**\r\n             * Extends this object and runs the init method.\r\n             * Arguments to create() will be passed to init().\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var instance = MyType.create();\r\n             */\r\n            create: function () {\r\n                var instance = this.extend();\r\n                instance.init.apply(instance, arguments);\r\n\r\n                return instance;\r\n            },\r\n\r\n            /**\r\n             * Initializes a newly created object.\r\n             * Override this method to add some logic when your objects are created.\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         init: function () {\r\n             *             // ...\r\n             *         }\r\n             *     });\r\n             */\r\n            init: function () {\r\n            },\r\n\r\n            /**\r\n             * Copies properties into this object.\r\n             *\r\n             * @param {Object} properties The properties to mix in.\r\n             *\r\n             * @example\r\n             *\r\n             *     MyType.mixIn({\r\n             *         field: 'value'\r\n             *     });\r\n             */\r\n            mixIn: function (properties) {\r\n                for (var propertyName in properties) {\r\n                    if (properties.hasOwnProperty(propertyName)) {\r\n                        this[propertyName] = properties[propertyName];\r\n                    }\r\n                }\r\n\r\n                // IE won't copy toString using the loop above\r\n                if (properties.hasOwnProperty('toString')) {\r\n                    this.toString = properties.toString;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Creates a copy of this object.\r\n             *\r\n             * @return {Object} The clone.\r\n             *\r\n             * @example\r\n             *\r\n             *     var clone = instance.clone();\r\n             */\r\n            clone: function () {\r\n                return this.init.prototype.extend(this);\r\n            }\r\n        };\r\n    }());\r\n\r\n    /**\r\n     * An array of 32-bit words.\r\n     *\r\n     * @property {Array} words The array of 32-bit words.\r\n     * @property {number} sigBytes The number of significant bytes in this word array.\r\n     */\r\n    var WordArray = C_lib.WordArray = Base.extend({\r\n        /**\r\n         * Initializes a newly created word array.\r\n         *\r\n         * @param {Array} words (Optional) An array of 32-bit words.\r\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.create();\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n         */\r\n        init: function (words, sigBytes) {\r\n            words = this.words = words || [];\r\n\r\n            if (sigBytes != undefined) {\r\n                this.sigBytes = sigBytes;\r\n            } else {\r\n                this.sigBytes = words.length * 4;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts this word array to a string.\r\n         *\r\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n         *\r\n         * @return {string} The stringified word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     var string = wordArray + '';\r\n         *     var string = wordArray.toString();\r\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n         */\r\n        toString: function (encoder) {\r\n            return (encoder || Hex).stringify(this);\r\n        },\r\n\r\n        /**\r\n         * Concatenates a word array to this word array.\r\n         *\r\n         * @param {WordArray} wordArray The word array to append.\r\n         *\r\n         * @return {WordArray} This word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray1.concat(wordArray2);\r\n         */\r\n        concat: function (wordArray) {\r\n            // Shortcuts\r\n            var thisWords = this.words;\r\n            var thatWords = wordArray.words;\r\n            var thisSigBytes = this.sigBytes;\r\n            var thatSigBytes = wordArray.sigBytes;\r\n\r\n            // Clamp excess bits\r\n            this.clamp();\r\n\r\n            // Concat\r\n            if (thisSigBytes % 4) {\r\n                // Copy one byte at a time\r\n                for (var i = 0; i < thatSigBytes; i++) {\r\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n                }\r\n            } else if (thatWords.length > 0xffff) {\r\n                // Copy one word at a time\r\n                for (var i = 0; i < thatSigBytes; i += 4) {\r\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n                }\r\n            } else {\r\n                // Copy all words at once\r\n                thisWords.push.apply(thisWords, thatWords);\r\n            }\r\n            this.sigBytes += thatSigBytes;\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes insignificant bits.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray.clamp();\r\n         */\r\n        clamp: function () {\r\n            // Shortcuts\r\n            var words = this.words;\r\n            var sigBytes = this.sigBytes;\r\n\r\n            // Clamp\r\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n            words.length = Math.ceil(sigBytes / 4);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this word array.\r\n         *\r\n         * @return {WordArray} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = wordArray.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone.words = this.words.slice(0);\r\n\r\n            return clone;\r\n        },\r\n\r\n        /**\r\n         * Creates a word array filled with random bytes.\r\n         *\r\n         * @param {number} nBytes The number of random bytes to generate.\r\n         *\r\n         * @return {WordArray} The random word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n         */\r\n        random: function (nBytes) {\r\n            var words = [];\r\n            for (var i = 0; i < nBytes; i += 4) {\r\n                words.push((Math.random() * 0x100000000) | 0);\r\n            }\r\n\r\n            return new WordArray.init(words, nBytes);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Encoder namespace.\r\n     */\r\n    var C_enc = C.enc = {};\r\n\r\n    /**\r\n     * Hex encoding strategy.\r\n     */\r\n    var Hex = C_enc.Hex = {\r\n        /**\r\n         * Converts a word array to a hex string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The hex string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var hexChars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                hexChars.push((bite >>> 4).toString(16));\r\n                hexChars.push((bite & 0x0f).toString(16));\r\n            }\r\n\r\n            return hexChars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a hex string to a word array.\r\n         *\r\n         * @param {string} hexStr The hex string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n         */\r\n        parse: function (hexStr) {\r\n            // Shortcut\r\n            var hexStrLength = hexStr.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < hexStrLength; i += 2) {\r\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n            }\r\n\r\n            return new WordArray.init(words, hexStrLength / 2);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Latin1 encoding strategy.\r\n     */\r\n    var Latin1 = C_enc.Latin1 = {\r\n        /**\r\n         * Converts a word array to a Latin1 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Latin1 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var latin1Chars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                latin1Chars.push(String.fromCharCode(bite));\r\n            }\r\n\r\n            return latin1Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Latin1 string to a word array.\r\n         *\r\n         * @param {string} latin1Str The Latin1 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n         */\r\n        parse: function (latin1Str) {\r\n            // Shortcut\r\n            var latin1StrLength = latin1Str.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < latin1StrLength; i++) {\r\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            return new WordArray.init(words, latin1StrLength);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * UTF-8 encoding strategy.\r\n     */\r\n    var Utf8 = C_enc.Utf8 = {\r\n        /**\r\n         * Converts a word array to a UTF-8 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The UTF-8 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            try {\r\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n            } catch (e) {\r\n                throw new Error('Malformed UTF-8 data');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts a UTF-8 string to a word array.\r\n         *\r\n         * @param {string} utf8Str The UTF-8 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n         */\r\n        parse: function (utf8Str) {\r\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Abstract buffered block algorithm template.\r\n     *\r\n     * The property blockSize must be implemented in a concrete subtype.\r\n     *\r\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n     */\r\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n        /**\r\n         * Resets this block algorithm's data buffer to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm.reset();\r\n         */\r\n        reset: function () {\r\n            // Initial values\r\n            this._data = new WordArray.init();\r\n            this._nDataBytes = 0;\r\n        },\r\n\r\n        /**\r\n         * Adds new data to this block algorithm's buffer.\r\n         *\r\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm._append('data');\r\n         *     bufferedBlockAlgorithm._append(wordArray);\r\n         */\r\n        _append: function (data) {\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof data == 'string') {\r\n                data = Utf8.parse(data);\r\n            }\r\n\r\n            // Append\r\n            this._data.concat(data);\r\n            this._nDataBytes += data.sigBytes;\r\n        },\r\n\r\n        /**\r\n         * Processes available data blocks.\r\n         *\r\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n         *\r\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n         *\r\n         * @return {WordArray} The processed data.\r\n         *\r\n         * @example\r\n         *\r\n         *     var processedData = bufferedBlockAlgorithm._process();\r\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n         */\r\n        _process: function (doFlush) {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n            var dataSigBytes = data.sigBytes;\r\n            var blockSize = this.blockSize;\r\n            var blockSizeBytes = blockSize * 4;\r\n\r\n            // Count blocks ready\r\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\r\n            if (doFlush) {\r\n                // Round up to include partial blocks\r\n                nBlocksReady = Math.ceil(nBlocksReady);\r\n            } else {\r\n                // Round down to include only full blocks,\r\n                // less the number of blocks that must remain in the buffer\r\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n            }\r\n\r\n            // Count words ready\r\n            var nWordsReady = nBlocksReady * blockSize;\r\n\r\n            // Count bytes ready\r\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n            // Process blocks\r\n            if (nWordsReady) {\r\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n                    // Perform concrete-algorithm logic\r\n                    this._doProcessBlock(dataWords, offset);\r\n                }\r\n\r\n                // Remove processed words\r\n                var processedWords = dataWords.splice(0, nWordsReady);\r\n                data.sigBytes -= nBytesReady;\r\n            }\r\n\r\n            // Return processed words\r\n            return new WordArray.init(processedWords, nBytesReady);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this object.\r\n         *\r\n         * @return {Object} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = bufferedBlockAlgorithm.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone._data = this._data.clone();\r\n\r\n            return clone;\r\n        },\r\n\r\n        _minBufferSize: 0\r\n    });\r\n\r\n    /**\r\n     * Abstract hasher template.\r\n     *\r\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n     */\r\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n        /**\r\n         * Configuration options.\r\n         */\r\n        cfg: Base.extend(),\r\n\r\n        /**\r\n         * Initializes a newly created hasher.\r\n         *\r\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hasher = CryptoJS.algo.SHA256.create();\r\n         */\r\n        init: function (cfg) {\r\n            // Apply config defaults\r\n            this.cfg = this.cfg.extend(cfg);\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this hasher to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Reset data buffer\r\n            BufferedBlockAlgorithm.reset.call(this);\r\n\r\n            // Perform concrete-hasher logic\r\n            this._doReset();\r\n        },\r\n\r\n        /**\r\n         * Updates this hasher with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {Hasher} This hasher.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.update('message');\r\n         *     hasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            // Append\r\n            this._append(messageUpdate);\r\n\r\n            // Update the hash\r\n            this._process();\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the hash computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The hash.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hash = hasher.finalize();\r\n         *     var hash = hasher.finalize('message');\r\n         *     var hash = hasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Final message update\r\n            if (messageUpdate) {\r\n                this._append(messageUpdate);\r\n            }\r\n\r\n            // Perform concrete-hasher logic\r\n            var hash = this._doFinalize();\r\n\r\n            return hash;\r\n        },\r\n\r\n        blockSize: 512/32,\r\n\r\n        /**\r\n         * Creates a shortcut function to a hasher's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to create a helper for.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHelper: function (hasher) {\r\n            return function (message, cfg) {\r\n                return new hasher.init(cfg).finalize(message);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Creates a shortcut function to the HMAC's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHmacHelper: function (hasher) {\r\n            return function (message, key) {\r\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\r\n            };\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Algorithm namespace.\r\n     */\r\n    var C_algo = C.algo = {};\r\n\r\n    return C;\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var C_enc = C.enc;\r\n\r\n    /**\r\n     * Base64 encoding strategy.\r\n     */\r\n    var Base64 = C_enc.Base64 = {\r\n        /**\r\n         * Converts a word array to a Base64 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Base64 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n            var map = this._map;\r\n\r\n            // Clamp excess bits\r\n            wordArray.clamp();\r\n\r\n            // Convert\r\n            var base64Chars = [];\r\n            for (var i = 0; i < sigBytes; i += 3) {\r\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\r\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n                }\r\n            }\r\n\r\n            // Add padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                while (base64Chars.length % 4) {\r\n                    base64Chars.push(paddingChar);\r\n                }\r\n            }\r\n\r\n            return base64Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Base64 string to a word array.\r\n         *\r\n         * @param {string} base64Str The Base64 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n         */\r\n        parse: function (base64Str) {\r\n            // Shortcuts\r\n            var base64StrLength = base64Str.length;\r\n            var map = this._map;\r\n\r\n            // Ignore padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                var paddingIndex = base64Str.indexOf(paddingChar);\r\n                if (paddingIndex != -1) {\r\n                    base64StrLength = paddingIndex;\r\n                }\r\n            }\r\n\r\n            // Convert\r\n            var words = [];\r\n            var nBytes = 0;\r\n            for (var i = 0; i < base64StrLength; i++) {\r\n                if (i % 4) {\r\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\r\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\r\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n                    nBytes++;\r\n                }\r\n            }\r\n\r\n            return WordArray.create(words, nBytes);\r\n        },\r\n\r\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n    };\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var Base = C_lib.Base;\r\n    var C_enc = C.enc;\r\n    var Utf8 = C_enc.Utf8;\r\n    var C_algo = C.algo;\r\n\r\n    /**\r\n     * HMAC algorithm.\r\n     */\r\n    var HMAC = C_algo.HMAC = Base.extend({\r\n        /**\r\n         * Initializes a newly created HMAC.\r\n         *\r\n         * @param {Hasher} hasher The hash algorithm to use.\r\n         * @param {WordArray|string} key The secret key.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\r\n         */\r\n        init: function (hasher, key) {\r\n            // Init hasher\r\n            hasher = this._hasher = new hasher.init();\r\n\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof key == 'string') {\r\n                key = Utf8.parse(key);\r\n            }\r\n\r\n            // Shortcuts\r\n            var hasherBlockSize = hasher.blockSize;\r\n            var hasherBlockSizeBytes = hasherBlockSize * 4;\r\n\r\n            // Allow arbitrary length keys\r\n            if (key.sigBytes > hasherBlockSizeBytes) {\r\n                key = hasher.finalize(key);\r\n            }\r\n\r\n            // Clamp excess bits\r\n            key.clamp();\r\n\r\n            // Clone key for inner and outer pads\r\n            var oKey = this._oKey = key.clone();\r\n            var iKey = this._iKey = key.clone();\r\n\r\n            // Shortcuts\r\n            var oKeyWords = oKey.words;\r\n            var iKeyWords = iKey.words;\r\n\r\n            // XOR keys with pad constants\r\n            for (var i = 0; i < hasherBlockSize; i++) {\r\n                oKeyWords[i] ^= 0x5c5c5c5c;\r\n                iKeyWords[i] ^= 0x36363636;\r\n            }\r\n            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this HMAC to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Reset\r\n            hasher.reset();\r\n            hasher.update(this._iKey);\r\n        },\r\n\r\n        /**\r\n         * Updates this HMAC with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {HMAC} This HMAC instance.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.update('message');\r\n         *     hmacHasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            this._hasher.update(messageUpdate);\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the HMAC computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The HMAC.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmac = hmacHasher.finalize();\r\n         *     var hmac = hmacHasher.finalize('message');\r\n         *     var hmac = hmacHasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Compute HMAC\r\n            var innerHash = hasher.finalize(messageUpdate);\r\n            hasher.reset();\r\n            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\r\n\r\n            return hmac;\r\n        }\r\n    });\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-1 hash algorithm.\r\n     */\r\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init([\r\n                0x67452301, 0xefcdab89,\r\n                0x98badcfe, 0x10325476,\r\n                0xc3d2e1f0\r\n            ]);\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 80; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n                    W[i] = (n << 1) | (n >>> 31);\r\n                }\r\n\r\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n                if (i < 20) {\r\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\r\n                } else if (i < 40) {\r\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\r\n                } else if (i < 60) {\r\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n                } else /* if (i < 80) */ {\r\n                    t += (b ^ c ^ d) - 0x359d3e2a;\r\n                }\r\n\r\n                e = d;\r\n                d = c;\r\n                c = (b << 30) | (b >>> 2);\r\n                b = a;\r\n                a = t;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA1('message');\r\n     *     var hash = CryptoJS.SHA1(wordArray);\r\n     */\r\n    C.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n     */\r\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function (Math) {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Initialization and round constants tables\r\n    var H = [];\r\n    var K = [];\r\n\r\n    // Compute constants\r\n    (function () {\r\n        function isPrime(n) {\r\n            var sqrtN = Math.sqrt(n);\r\n            for (var factor = 2; factor <= sqrtN; factor++) {\r\n                if (!(n % factor)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFractionalBits(n) {\r\n            return ((n - (n | 0)) * 0x100000000) | 0;\r\n        }\r\n\r\n        var n = 2;\r\n        var nPrime = 0;\r\n        while (nPrime < 64) {\r\n            if (isPrime(n)) {\r\n                if (nPrime < 8) {\r\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n                }\r\n                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    }());\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-256 hash algorithm.\r\n     */\r\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init(H.slice(0));\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n            var f = H[5];\r\n            var g = H[6];\r\n            var h = H[7];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 64; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var gamma0x = W[i - 15];\r\n                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n                                   (gamma0x >>> 3);\r\n\r\n                    var gamma1x = W[i - 2];\r\n                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n                                   (gamma1x >>> 10);\r\n\r\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n                }\r\n\r\n                var ch  = (e & f) ^ (~e & g);\r\n                var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n                var t1 = h + sigma1 + ch + K[i] + W[i];\r\n                var t2 = sigma0 + maj;\r\n\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + t1) | 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (t1 + t2) | 0;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n            H[5] = (H[5] + f) | 0;\r\n            H[6] = (H[6] + g) | 0;\r\n            H[7] = (H[7] + h) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA256('message');\r\n     *     var hash = CryptoJS.SHA256(wordArray);\r\n     */\r\n    C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n     */\r\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Check if typed arrays are supported\r\n    if (typeof ArrayBuffer != 'function') {\r\n        return;\r\n    }\r\n\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n\r\n    // Reference original init\r\n    var superInit = WordArray.init;\r\n\r\n    // Augment WordArray.init to handle typed arrays\r\n    var subInit = WordArray.init = function (typedArray) {\r\n        // Convert buffers to uint8\r\n        if (typedArray instanceof ArrayBuffer) {\r\n            typedArray = new Uint8Array(typedArray);\r\n        }\r\n\r\n        // Convert other array views to uint8\r\n        if (\r\n            typedArray instanceof Int8Array ||\r\n            typedArray instanceof Uint8ClampedArray ||\r\n            typedArray instanceof Int16Array ||\r\n            typedArray instanceof Uint16Array ||\r\n            typedArray instanceof Int32Array ||\r\n            typedArray instanceof Uint32Array ||\r\n            typedArray instanceof Float32Array ||\r\n            typedArray instanceof Float64Array\r\n        ) {\r\n            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n        }\r\n\r\n        // Handle Uint8Array\r\n        if (typedArray instanceof Uint8Array) {\r\n            // Shortcut\r\n            var typedArrayByteLength = typedArray.byteLength;\r\n\r\n            // Extract bytes\r\n            var words = [];\r\n            for (var i = 0; i < typedArrayByteLength; i++) {\r\n                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            // Initialize this word array\r\n            superInit.call(this, words, typedArrayByteLength);\r\n        } else {\r\n            // Else call normal init\r\n            superInit.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    subInit.prototype = WordArray;\r\n}());\r\n","/*globals qq */\r\nqq.s3 = qq.s3 || {};\r\n\r\nqq.s3.util = qq.s3.util || (function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\r\n\r\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\r\n\r\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\r\n\r\n        DATE_PARAM_NAME: \"x-amz-date\",\r\n\r\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\r\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\r\n\r\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\r\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\r\n\r\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\r\n\r\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\r\n\r\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\r\n\r\n        CASE_SENSITIVE_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNSIGNABLE_REST_HEADER_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNPREFIXED_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\",\r\n            \"x-amz-server-side-encryption-customer-algorithm\",\r\n            \"x-amz-server-side-encryption-customer-key\",\r\n            \"x-amz-server-side-encryption-customer-key-MD5\"\r\n        ],\r\n\r\n        /**\r\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\r\n         *\r\n         * Examples of some valid endpoints are:\r\n         *     http://foo.s3.amazonaws.com\r\n         *     https://foo.s3.amazonaws.com\r\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\r\n         *     foo.s3.amazonaws.com\r\n         *     http://foo.bar.com\r\n         *     http://s3.amazonaws.com/foo.bar.com\r\n         * ...etc\r\n         *\r\n         * @param endpoint The bucket's URL.\r\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\r\n         */\r\n        getBucket: function(endpoint) {\r\n            var patterns = [\r\n                    //bucket in domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\r\n                    //bucket in path\r\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\r\n                    //custom domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\r\n                ],\r\n                bucket;\r\n\r\n            qq.each(patterns, function(idx, pattern) {\r\n                var match = pattern.exec(endpoint);\r\n\r\n                if (match) {\r\n                    bucket = match[1];\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return bucket;\r\n        },\r\n\r\n        /** Create Prefixed request headers which are appropriate for S3.\r\n         *\r\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\r\n         * it along without a metadata prefix. For all other request header parameter names,\r\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\r\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\r\n         */\r\n        _getPrefixedParamName: function(name) {\r\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\r\n                return name;\r\n            }\r\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\r\n        },\r\n\r\n        /**\r\n         * Create a policy document to be signed and sent along with the S3 upload request.\r\n         *\r\n         * @param spec Object with properties use to construct the policy document.\r\n         * @returns {Object} Policy doc.\r\n         */\r\n        getPolicy: function(spec) {\r\n            var policy = {},\r\n                conditions = [],\r\n                bucket = spec.bucket,\r\n                date = spec.date,\r\n                drift = spec.clockDrift,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                type = spec.type,\r\n                expectedStatus = spec.expectedStatus,\r\n                sessionToken = spec.sessionToken,\r\n                params = spec.params,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                minFileSize = spec.minFileSize,\r\n                maxFileSize = spec.maxFileSize,\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion;\r\n\r\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\r\n\r\n            conditions.push({acl: acl});\r\n            conditions.push({bucket: bucket});\r\n\r\n            if (type) {\r\n                conditions.push({\"Content-Type\": type});\r\n            }\r\n\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                conditions.push({success_action_status: expectedStatus.toString()});\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                conditions.push({success_action_redirect: successRedirectUrl});\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (signatureVersion === 2) {\r\n                conditions.push({key: key});\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1].key = key;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\r\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\r\n                    qq.s3.util.getV4PolicyDate(date, drift);\r\n            }\r\n\r\n            // user metadata\r\n            qq.each(params, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\r\n                    param = {};\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    param[awsParamName] = val;\r\n                }\r\n                else {\r\n                    param[awsParamName] = encodeURIComponent(val);\r\n                }\r\n\r\n                conditions.push(param);\r\n            });\r\n\r\n            policy.conditions = conditions;\r\n\r\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\r\n\r\n            return policy;\r\n        },\r\n\r\n        /**\r\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\r\n         * update the session token.  This is only relevant if requests are being signed client-side.\r\n         *\r\n         * @param policy Live policy document\r\n         * @param newSessionToken Updated session token.\r\n         */\r\n        refreshPolicyCredentials: function(policy, newSessionToken) {\r\n            var sessionTokenFound = false;\r\n\r\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\r\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\r\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\r\n                        oldCondObj[oldCondName] = newSessionToken;\r\n                        sessionTokenFound = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (!sessionTokenFound) {\r\n                policy.conditions.push({});\r\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\r\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\r\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\r\n         * still possible for a malicious user to tamper with these values during policy document generation,\r\n         * before it is sent to the server for signing.\r\n         *\r\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\r\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\r\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\r\n         */\r\n        generateAwsParams: function(spec, signPolicyCallback) {\r\n            var awsParams = {},\r\n                customParams = spec.params,\r\n                promise = new qq.Promise(),\r\n                sessionToken = spec.sessionToken,\r\n                drift = spec.clockDrift,\r\n                type = spec.type,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                expectedStatus = spec.expectedStatus,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion,\r\n                now = new Date(),\r\n                log = spec.log,\r\n                policyJson;\r\n\r\n            spec.date = now;\r\n            policyJson = qq.s3.util.getPolicy(spec);\r\n\r\n            awsParams.key = key;\r\n\r\n            if (type) {\r\n                awsParams[\"Content-Type\"] = type;\r\n            }\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                awsParams.success_action_status = expectedStatus;\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                awsParams.success_action_redirect = successRedirectUrl;\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            awsParams.acl = acl;\r\n\r\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\r\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\r\n            // Prefixed param values will be URI encoded as well.\r\n            qq.each(customParams, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    awsParams[awsParamName] = val;\r\n                }\r\n                else {\r\n                    awsParams[awsParamName] = encodeURIComponent(val);\r\n                }\r\n            });\r\n\r\n            if (signatureVersion === 2) {\r\n                awsParams.AWSAccessKeyId = accessKey;\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\r\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\r\n            }\r\n\r\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\r\n            // HMAC signature for the policy doc.\r\n            signPolicyCallback(policyJson).then(\r\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\r\n                    awsParams.policy = policyAndSignature.policy;\r\n\r\n                    if (spec.signatureVersion === 2) {\r\n                        awsParams.signature = policyAndSignature.signature;\r\n\r\n                        if (updatedAccessKey) {\r\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\r\n                        }\r\n                    }\r\n                    else if (spec.signatureVersion === 4) {\r\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\r\n                    }\r\n\r\n                    if (updatedSessionToken) {\r\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                    }\r\n\r\n                    promise.success(awsParams);\r\n                },\r\n                function(errorMessage) {\r\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\r\n                                                   \"a valid signature and policy from the server.\";\r\n\r\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\r\n                    promise.failure(errorMessage);\r\n                }\r\n            );\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\r\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\r\n         * checks already in place.\r\n         *\r\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\r\n         * @param minSize Minimum acceptable size, in bytes\r\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\r\n         */\r\n        enforceSizeLimits: function(policy, minSize, maxSize) {\r\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\r\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\r\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\r\n\r\n            if (minSize > 0 || maxSize > 0) {\r\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\r\n            }\r\n        },\r\n\r\n        getPolicyExpirationDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\r\n        },\r\n\r\n        getCredentialsDate: function(date) {\r\n            return date.getUTCFullYear() + \"\" +\r\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\r\n                (\"0\" + date.getUTCDate()).slice(-2);\r\n        },\r\n\r\n        getPolicyDate: function(date, _minutesToAdd_) {\r\n            var minutesToAdd = _minutesToAdd_ || 0,\r\n                pad, r;\r\n\r\n            /*jshint -W014 */\r\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\r\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\r\n\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                pad = function(number) {\r\n                    r = String(number);\r\n\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n\r\n                    return r;\r\n                };\r\n\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\r\n         * the associated resource.\r\n         *\r\n         * @param iframe Iframe containing response\r\n         * @returns {{bucket: *, key: *, etag: *}}\r\n         */\r\n        parseIframeResponse: function(iframe) {\r\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\r\n                queryString = doc.location.search,\r\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\r\n\r\n            if (match) {\r\n                return {\r\n                    bucket: match[1],\r\n                    key: match[2],\r\n                    etag: match[3].replace(/%22/g, \"\")\r\n                };\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param successRedirectUrl Relative or absolute location of success redirect page\r\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\r\n         */\r\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\r\n            if (successRedirectUrl) {\r\n                var targetAnchorContainer = document.createElement(\"div\"),\r\n                    targetAnchor;\r\n\r\n                if (qq.ie7()) {\r\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\r\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\r\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\r\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\r\n                    targetAnchor = targetAnchorContainer.firstChild;\r\n                    return targetAnchor.href;\r\n                }\r\n                else {\r\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\r\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\r\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\r\n                    // in order to ensure relative URLs will be properly parsed.\r\n                    targetAnchor = document.createElement(\"a\");\r\n                    targetAnchor.href = successRedirectUrl;\r\n                    targetAnchor.href = targetAnchor.href;\r\n                    return targetAnchor.href;\r\n                }\r\n            }\r\n        },\r\n\r\n        getV4CredentialsString: function(spec) {\r\n            return spec.key + \"/\" +\r\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\r\n                spec.region + \"/s3/aws4_request\";\r\n        },\r\n\r\n        getV4PolicyDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n\r\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\r\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\r\n                    \"Z\";\r\n        },\r\n\r\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\r\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\r\n        // and spaces are replaced with \"+\".\r\n        encodeQueryStringParam: function(param) {\r\n            var percentEncoded = encodeURIComponent(param);\r\n\r\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\r\n\r\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\r\n\r\n            // replace percent-encoded spaces with a \"+\"\r\n            return percentEncoded.replace(/%20/g, \"+\");\r\n        },\r\n        /**\r\n         * Escapes url part as for AWS requirements\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscape: function(string) {\r\n            var output = encodeURIComponent(string);\r\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\r\n            output = output.replace(/[*]/g, function(ch) {\r\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\r\n            });\r\n            return output;\r\n        },\r\n        /**\r\n         * Escapes a path as for AWS requirement\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscapePath: function(path) {\r\n            var parts = [];\r\n            qq.each(path.split(\"/\"), function(idx, item) {\r\n                parts.push(qq.s3.util.uriEscape(item));\r\n            });\r\n            return parts.join(\"/\");\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploaderBasic = function(o) {\n        var options = {\n            request: {\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\n                accessKey: null,\n\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\n                clockDrift: 0\n            },\n\n            objectProperties: {\n                acl: \"private\",\n\n                // string or a function which may be promissory\n                bucket: qq.bind(function(id) {\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\n                }, this),\n\n                // string or a function which may be promissory - only used for V4 multipart uploads\n                host: qq.bind(function(id) {\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\n                }, this),\n\n                // 'uuid', 'filename', or a function which may be promissory\n                key: \"uuid\",\n\n                reducedRedundancy: false,\n\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\n                region: \"us-east-1\",\n\n                serverSideEncryption: false\n            },\n\n            credentials: {\n                // Public key (required).\n                accessKey: null,\n                // Private key (required).\n                secretKey: null,\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\n                expiration: null,\n                // Temporary credentials session token.\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\n                sessionToken: null\n            },\n\n            // All but `version` are ignored if `credentials` is provided.\n            signature: {\n                customHeaders: {},\n                endpoint: null,\n                version: 2\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            // required if non-File-API browsers, such as IE9 and older, are used\n            iframeSupport: {\n                localBlankPagePath: null\n            },\n\n            chunking: {\n                // minimum part size is 5 MiB when uploading to S3\n                partSize: 5242880\n            },\n\n            cors: {\n                allowXdr: true\n            },\n\n            callbacks: {\n                onCredentialsExpired: function() {}\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        if (!this.setCredentials(options.credentials, true)) {\n            this._currentCredentials.accessKey = options.request.accessKey;\n        }\n\n        this._aclStore = this._createStore(options.objectProperties.acl);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds S3 keys for file representations constructed from a session request.\n        this._cannedKeys = {};\n        // Holds S3 buckets for file representations constructed from a session request.\n        this._cannedBuckets = {};\n\n        this._buckets = {};\n        this._hosts = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\n        getBucket: function(id) {\n            if (this._cannedBuckets[id] == null) {\n                return this._buckets[id];\n            }\n            return this._cannedBuckets[id];\n        },\n\n        /**\n         * @param id File ID\n         * @returns {*} Key name associated w/ the file, if one exists\n         */\n        getKey: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedKeys[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n\n            return this._cannedKeys[id];\n        },\n\n        /**\n         * Override the parent's reset function to cleanup various S3-related items.\n         */\n        reset: function() {\n            qq.FineUploaderBasic.prototype.reset.call(this);\n            this._failedSuccessRequestCallbacks = [];\n            this._buckets = {};\n            this._hosts = {};\n        },\n\n        setCredentials: function(credentials, ignoreEmpty) {\n            if (credentials && credentials.secretKey) {\n                if (!credentials.accessKey) {\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\n                }\n                else if (!credentials.expiration) {\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\n                }\n                else {\n                    this._currentCredentials = qq.extend({}, credentials);\n\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\n                    if (qq.isString(credentials.expiration)) {\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\n                    }\n                }\n\n                return true;\n            }\n            else if (!ignoreEmpty) {\n                throw new qq.Error(\"Invalid credentials parameter!\");\n            }\n            else {\n                this._currentCredentials = {};\n            }\n        },\n\n        setAcl: function(acl, id) {\n            this._aclStore.set(acl, id);\n        },\n\n        /**\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\n         *\n         * @returns {qq.UploadHandlerController}\n         * @private\n         */\n        _createUploadHandler: function() {\n            var self = this,\n                additionalOptions = {\n                    aclStore: this._aclStore,\n                    getBucket: qq.bind(this._determineBucket, this),\n                    getHost: qq.bind(this._determineHost, this),\n                    getKeyName: qq.bind(this._determineKeyName, this),\n                    iframeSupport: this._options.iframeSupport,\n                    objectProperties: this._options.objectProperties,\n                    signature: this._options.signature,\n                    clockDrift: this._options.request.clockDrift,\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\n                    validation: {\n                        minSizeLimit: this._options.validation.minSizeLimit,\n                        maxSizeLimit: this._options.validation.sizeLimit\n                    }\n                };\n\n            // We assume HTTP if it is missing from the start of the endpoint string.\n            qq.override(this._endpointStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var endpoint = super_.get(id);\n                        if (typeof endpoint === 'function') {\n                            endpoint = endpoint(id);\n                        }\n                        if (endpoint.indexOf(\"http\") < 0) {\n                            return \"http://\" + endpoint;\n                        }\n\n                        return endpoint;\n                    }\n                };\n            });\n\n            // Some param names should be lower case to avoid signature mismatches\n            qq.override(this._paramsStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var oldParams = super_.get(id),\n                            modifiedParams = {};\n\n                        qq.each(oldParams, function(name, val) {\n                            var paramName = name;\n\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\n                                paramName = paramName.toLowerCase();\n                            }\n\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\n                        });\n\n                        return modifiedParams;\n                    }\n                };\n            });\n\n            additionalOptions.signature.credentialsProvider = {\n                get: function() {\n                    return self._currentCredentials;\n                },\n\n                onExpired: function() {\n                    var updateCredentials = new qq.Promise(),\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\n\n                    if (qq.isGenericPromise(callbackRetVal)) {\n                        callbackRetVal.then(function(credentials) {\n                            try {\n                                self.setCredentials(credentials);\n                                updateCredentials.success();\n                            }\n                            catch (error) {\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\n                            }\n                        }, function(errorMsg) {\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\n                        });\n                    }\n                    else {\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\n                    }\n\n                    return updateCredentials;\n                }\n            };\n\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\n        },\n\n        _determineObjectPropertyValue: function(id, property) {\n            var maybe = this._options.objectProperties[property],\n                promise = new qq.Promise(),\n                self = this;\n\n            if (qq.isFunction(maybe)) {\n                maybe = maybe(id);\n                if (qq.isGenericPromise(maybe)) {\n                    promise = maybe;\n                }\n                else {\n                    promise.success(maybe);\n                }\n            }\n            else if (qq.isString(maybe)) {\n                promise.success(maybe);\n            }\n\n            promise.then(\n                function success(value) {\n                    self[\"_\" + property + \"s\"][id] = value;\n                },\n\n                function failure(errorMsg) {\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\n                }\n            );\n\n            return promise;\n        },\n\n        _determineBucket: function(id) {\n            return this._determineObjectPropertyValue(id, \"bucket\");\n        },\n\n        _determineHost: function(id) {\n            return this._determineObjectPropertyValue(id, \"host\");\n        },\n\n        /**\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\n         * delegate to an integrator-defined function that determines the file's key name on demand,\n         * which also may be promissory.\n         *\n         * @param id ID of the file\n         * @param filename Name of the file\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\n         * @private\n         */\n        _determineKeyName: function(id, filename) {\n            /*jshint -W015*/\n            var promise = new qq.Promise(),\n                keynameLogic = this._options.objectProperties.key,\n                extension = qq.getExtension(filename),\n                onGetKeynameFailure = promise.failure,\n                onGetKeynameSuccess = function(keyname, extension) {\n                    var keynameToUse = keyname;\n\n                    if (extension !== undefined) {\n                        keynameToUse += \".\" + extension;\n                    }\n\n                    promise.success(keynameToUse);\n                };\n\n            switch (keynameLogic) {\n                case \"uuid\":\n                    onGetKeynameSuccess(this.getUuid(id), extension);\n                    break;\n                case \"filename\":\n                    onGetKeynameSuccess(filename);\n                    break;\n                default:\n                    if (qq.isFunction(keynameLogic)) {\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\n                    }\n                    else {\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\n                        onGetKeynameFailure();\n                    }\n            }\n\n            return promise;\n        },\n\n        /**\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\n         * the promise contract associated with the caller as well.\n         *\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\n         * @param id ID of the associated file\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\n         * @private\n         */\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\n            var self = this,\n                onSuccess = function(keyname) {\n                    successCallback(keyname);\n                },\n                onFailure = function(reason) {\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\n                    failureCallback(reason);\n                },\n                keyname = keynameFunc.call(this, id);\n\n            if (qq.isGenericPromise(keyname)) {\n                keyname.then(onSuccess, onFailure);\n            }\n            /*jshint -W116*/\n            else if (keyname == null) {\n                onFailure();\n            }\n            else {\n                onSuccess(keyname);\n            }\n        },\n\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\n            var params = {\n                key: this.getKey(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                bucket: this.getBucket(id)\n            };\n\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\n            }\n            else if (response.etag) {\n                params.etag = response.etag;\n            }\n\n            return params;\n        },\n\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\n        _onSubmitDelete: function(id, onSuccessCallback) {\n            var additionalMandatedParams = {\n                key: this.getKey(id),\n                bucket: this.getBucket(id)\n            };\n\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.s3Key == null) {\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedKeys[id] = sessionData.s3Key;\n                this._cannedBuckets[id] = sessionData.s3Bucket;\n            }\n\n            return id;\n        }\n    });\n}());\n","/* globals qq, CryptoJS */\r\n\r\n/**\r\n * Manages creation and communication of s3 signature workers.\r\n */\r\nqq.s3.RequestSignerWorkerManager = function (o) {\r\n    \"use strict\";\r\n    var worker = null,\r\n        workerPromises = {},\r\n        options = {\r\n            workerUrl: null,\r\n            log: function(str, level) {}\r\n        };\r\n    qq.extend(options, o, true);\r\n\r\n    function init() {\r\n        var workerUrl;\r\n        switch (typeof options.workerUrl) {\r\n            case \"string\":\r\n                if (options.workerUrl !== \"inline\") {\r\n                    workerUrl = options.workerUrl;\r\n                } else {\r\n                    workerUrl = qq.s3.createS3InlineWorkerUrl();\r\n                }\r\n                break;\r\n            case \"function\":\r\n                workerUrl = options.workerUrl();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (!workerUrl) {\r\n            return;\r\n        }\r\n        try {\r\n            worker = new Worker(workerUrl);\r\n            worker.onerror = function (e) {\r\n                // Prevent the event from bubbling\r\n                e.preventDefault();\r\n                // log the error, and fail any pending promises.\r\n                options.log(\"Worker encountered an error. Disabling. \" + e.message, \"warn\");\r\n                worker = null;\r\n                var outstandingRequests = Object.keys(workerPromises),\r\n                    i;\r\n                for (i = 0; i < outstandingRequests.length; i++) {\r\n                    workerPromises[outstandingRequests[i]].failure(e);\r\n                    delete workerPromises[outstandingRequests[i]];\r\n                }\r\n            };\r\n            worker.onmessage = function (e) {\r\n                if (!workerPromises[e.data.id]) {\r\n                    options.log(\"Worker returned a result for an request we dont know about.\", \"warn\");\r\n                    return;\r\n                }\r\n                if (e.data.err) {\r\n                    workerPromises[e.data.id].failure(e.data.err);\r\n                } else {\r\n                    workerPromises[e.data.id].success(e.data.resp);\r\n                }\r\n                delete workerPromises[e.data.id];\r\n            };\r\n        }  catch (ex) {\r\n            // worker is not supported or invalid\r\n            options.log(\"Worker failed to be created. Defaulting back to main thread processing.\" + ex, \"warn\");\r\n            worker = null;\r\n        }\r\n    }\r\n    init();\r\n    /*\r\n        Generates the signuare of the given file.\r\n        @param file the file/slice to generate the signature for.\r\n        @returns a promise or null if we can't generate signatures at all.\r\n    */\r\n    this.generateSignature = function (file) {\r\n        if (!worker) {\r\n            return null;\r\n        }\r\n        var promise = new qq.Promise(),\r\n            task = {file: file, id: qq.getUniqueId()};\r\n        workerPromises[task.id] = promise;\r\n        worker.postMessage(task);\r\n        return promise;\r\n    };\r\n};\r\n","/* globals qq, CryptoJS */\r\n\r\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\r\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\r\nif (!window.Uint8ClampedArray) {\r\n    window.Uint8ClampedArray = function() {};\r\n}\r\n/**\r\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\r\n *\r\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\r\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\r\n * to determine if the effort was successful.\r\n *\r\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\r\n * sign the requests directly in the browser and send them off to S3.\r\n *\r\n * @param o Options associated with all such requests\r\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\r\n * @constructor\r\n */\r\nqq.s3.RequestSigner = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        thisSignatureRequester = this,\r\n        pendingSignatures = {},\r\n        options = {\r\n            expectingPolicy: false,\r\n            method: \"POST\",\r\n            signatureSpec: {\r\n                drift: 0,\r\n                credentialsProvider: {},\r\n                endpoint: null,\r\n                customHeaders: {},\r\n                version: 2\r\n            },\r\n            maxConnections: 3,\r\n            endpointStore: {},\r\n            paramsStore: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {}\r\n        },\r\n        credentialsProvider,\r\n\r\n        generateHeaders = function(signatureConstructor, signature, promise) {\r\n            var headers = signatureConstructor.getHeaders();\r\n\r\n            if (options.signatureSpec.version === 4) {\r\n                headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\r\n                    \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\r\n                    qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\r\n                    options.signatureSpec.region + \"/\" +\r\n                    \"s3/aws4_request,\" +\r\n                    \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\r\n                    \"Signature=\" + signature;\r\n            }\r\n            else {\r\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\r\n            }\r\n\r\n            promise.success(headers, signatureConstructor.getEndOfUrl());\r\n        },\r\n\r\n        v2 = {\r\n            getStringToSign: function(signatureSpec) {\r\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\r\n                    signatureSpec.method,\r\n                    signatureSpec.contentMd5 || \"\",\r\n                    signatureSpec.contentType || \"\",\r\n                    signatureSpec.headersStr || \"\\n\",\r\n                    signatureSpec.bucket,\r\n                    signatureSpec.endOfUrl);\r\n            },\r\n\r\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\r\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\r\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\r\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\r\n\r\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\r\n            },\r\n\r\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n                var policyStr = JSON.stringify(policy),\r\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\r\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\r\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\r\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\r\n\r\n                signatureEffort.success({\r\n                    policy: base64Policy,\r\n                    signature: policyHmacSha1Base64\r\n                }, updatedAccessKey, updatedSessionToken);\r\n            }\r\n        },\r\n\r\n        v4 = {\r\n            getCanonicalQueryString: function(endOfUri) {\r\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\r\n                    canonicalQueryString = \"\",\r\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\r\n\r\n                if (queryParamIdx >= 0) {\r\n                    encodedQueryParams = {};\r\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\r\n\r\n                    qq.each(queryStrings, function(idx, queryString) {\r\n                        var nameAndVal = queryString.split(\"=\"),\r\n                            paramVal = nameAndVal[1];\r\n\r\n                        if (paramVal == null) {\r\n                            paramVal = \"\";\r\n                        }\r\n\r\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\r\n                    });\r\n\r\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\r\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\r\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\r\n                        if (idx < encodedQueryParamNames.length - 1) {\r\n                            canonicalQueryString += \"&\";\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return canonicalQueryString;\r\n            },\r\n\r\n            getCanonicalRequest: function(signatureSpec) {\r\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\r\n                    signatureSpec.method,\r\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\r\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\r\n                    signatureSpec.headersStr || \"\\n\",\r\n                    v4.getSignedHeaders(signatureSpec.headerNames),\r\n                    signatureSpec.hashedContent);\r\n            },\r\n\r\n            getCanonicalUri: function(endOfUri) {\r\n                var path = endOfUri,\r\n                    queryParamIdx = endOfUri.indexOf(\"?\");\r\n\r\n                if (queryParamIdx > 0) {\r\n                    path = endOfUri.substr(0, queryParamIdx);\r\n                }\r\n                return \"/\" + path;\r\n            },\r\n\r\n            getEncodedHashedPayload: function(body) {\r\n                var promise,\r\n                    reader;\r\n                if (qq.isBlob(body)) {\r\n                    // We will fallback to the inline reader if the worker was\r\n                    // not loaded correctly\r\n                    if (options.signatureSpec.workerManager) {\r\n                        promise = options.signatureSpec.workerManager.generateSignature(body);\r\n                        if (promise !== null) {\r\n                            return promise;\r\n                        }\r\n                    }\r\n                    promise = new qq.Promise();\r\n                    reader = new FileReader();\r\n                    reader.onloadend = function(e) {\r\n                        if (e.target.readyState === FileReader.DONE) {\r\n                            if (e.target.error) {\r\n                                promise.failure(e.target.error);\r\n                            }\r\n                            else {\r\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\r\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\r\n                            }\r\n                        }\r\n                    };\r\n                    reader.readAsArrayBuffer(body);\r\n                    return promise;\r\n                }\r\n                promise = new qq.Promise();\r\n                body = body || \"\";\r\n                promise.success(qq.CryptoJS.SHA256(body).toString());\r\n                return promise;\r\n            },\r\n\r\n            getScope: function(date, region) {\r\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\r\n                    region + \"/s3/aws4_request\";\r\n            },\r\n\r\n            getStringToSign: function(signatureSpec) {\r\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\r\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\r\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\r\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\r\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\r\n\r\n                return {\r\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\r\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\r\n                };\r\n            },\r\n\r\n            getSignedHeaders: function(headerNames) {\r\n                var signedHeaders = \"\";\r\n\r\n                headerNames.forEach(function(headerName, idx) {\r\n                    signedHeaders += headerName.toLowerCase();\r\n\r\n                    if (idx < headerNames.length - 1) {\r\n                        signedHeaders += \";\";\r\n                    }\r\n                });\r\n\r\n                return signedHeaders;\r\n            },\r\n\r\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\r\n                var secretKey = credentialsProvider.get().secretKey,\r\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\r\n                    matches = headersPattern.exec(headersStr),\r\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\r\n\r\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\r\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\r\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\r\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\r\n\r\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\r\n            },\r\n\r\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n                var policyStr = JSON.stringify(policy),\r\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\r\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\r\n                    secretKey = credentialsProvider.get().secretKey,\r\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\r\n                    credentialCondition = (function() {\r\n                        var credential = null;\r\n                        qq.each(policy.conditions, function(key, condition) {\r\n                            var val = condition[\"x-amz-credential\"];\r\n                            if (val) {\r\n                                credential = val;\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return credential;\r\n                    }()),\r\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\r\n\r\n                matches = credentialPattern.exec(credentialCondition);\r\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\r\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\r\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\r\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\r\n\r\n                signatureEffort.success({\r\n                    policy: base64Policy,\r\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\r\n                }, updatedAccessKey, updatedSessionToken);\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o, true);\r\n    credentialsProvider = options.signatureSpec.credentialsProvider;\r\n\r\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\r\n        var responseJson = xhrOrXdr.responseText,\r\n            pendingSignatureData = pendingSignatures[id],\r\n            promise,\r\n            signatureConstructor,\r\n            errorMessage, response;\r\n\r\n        if (!pendingSignatureData) {\r\n            return;\r\n        }\r\n        promise = pendingSignatureData.promise;\r\n        signatureConstructor = pendingSignatureData.signatureConstructor;\r\n\r\n        delete pendingSignatures[id];\r\n\r\n        // Attempt to parse what we would expect to be a JSON response\r\n        if (responseJson) {\r\n            try {\r\n                response = qq.parseJson(responseJson);\r\n            }\r\n            catch (error) {\r\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\r\n            }\r\n        }\r\n\r\n        // If the response is parsable and contains an `error` property, use it as the error message\r\n        if (response && response.error) {\r\n            isError = true;\r\n            errorMessage = response.error;\r\n        }\r\n        // If we have received a parsable response, and it has an `invalid` property,\r\n        // the policy document or request headers may have been tampered with client-side.\r\n        else if (response && response.invalid) {\r\n            isError = true;\r\n            errorMessage = \"Invalid policy document or request headers!\";\r\n        }\r\n        // Make sure the response contains policy & signature properties\r\n        else if (response) {\r\n            if (options.expectingPolicy && !response.policy) {\r\n                isError = true;\r\n                errorMessage = \"Response does not include the base64 encoded policy!\";\r\n            }\r\n            else if (!response.signature) {\r\n                isError = true;\r\n                errorMessage = \"Response does not include the signature!\";\r\n            }\r\n        }\r\n        // Something unknown went wrong\r\n        else {\r\n            isError = true;\r\n            errorMessage = \"Received an empty or invalid response from the server!\";\r\n        }\r\n\r\n        if (isError) {\r\n            if (errorMessage) {\r\n                options.log(errorMessage, \"error\");\r\n            }\r\n\r\n            promise.failure(errorMessage);\r\n        }\r\n        else if (signatureConstructor) {\r\n            generateHeaders(signatureConstructor, response.signature, promise);\r\n        }\r\n        else {\r\n            promise.success(response);\r\n        }\r\n    }\r\n\r\n    function getStringToSignArtifacts(id, version, requestInfo) {\r\n        var promise = new qq.Promise(),\r\n            method = \"POST\",\r\n            headerNames = [],\r\n            headersStr = \"\",\r\n            now = new Date(),\r\n            endOfUrl, signatureSpec, toSign,\r\n\r\n            generateStringToSign = function(requestInfo) {\r\n                var contentMd5,\r\n                    headerIndexesToRemove = [];\r\n\r\n                qq.each(requestInfo.headers, function(name) {\r\n                    headerNames.push(name);\r\n                });\r\n                headerNames.sort();\r\n\r\n                qq.each(headerNames, function(idx, headerName) {\r\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\r\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\r\n                    }\r\n                    else if (headerName === \"Content-MD5\") {\r\n                        contentMd5 = requestInfo.headers[headerName];\r\n                    }\r\n                    else {\r\n                        headerIndexesToRemove.unshift(idx);\r\n                    }\r\n                });\r\n\r\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\r\n                    headerNames.splice(headerIdx, 1);\r\n                });\r\n\r\n                signatureSpec = {\r\n                    bucket: requestInfo.bucket,\r\n                    contentMd5: contentMd5,\r\n                    contentType: requestInfo.contentType,\r\n                    date: now,\r\n                    drift: options.signatureSpec.drift,\r\n                    endOfUrl: endOfUrl,\r\n                    hashedContent: requestInfo.hashedContent,\r\n                    headerNames: headerNames,\r\n                    headersStr: headersStr,\r\n                    method: method\r\n                };\r\n\r\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\r\n\r\n                return {\r\n                    date: now,\r\n                    endOfUrl: endOfUrl,\r\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\r\n                    toSign: version === 4 ? toSign.hashed : toSign,\r\n                    toSignRaw: version === 4 ? toSign.raw : toSign\r\n                };\r\n            };\r\n\r\n        /*jshint indent:false */\r\n        switch (requestInfo.type) {\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\r\n                method = \"DELETE\";\r\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\r\n                endOfUrl = \"uploads\";\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\r\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\r\n                method = \"PUT\";\r\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\r\n                break;\r\n        }\r\n\r\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\r\n        if (version === 4) {\r\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\r\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\r\n                requestInfo.headers.Host = requestInfo.host;\r\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\r\n                requestInfo.hashedContent = hashedContent;\r\n\r\n                promise.success(generateStringToSign(requestInfo));\r\n            }, function (err) {\r\n                promise.failure(err);\r\n            });\r\n        }\r\n        else {\r\n            promise.success(generateStringToSign(requestInfo));\r\n        }\r\n\r\n        return promise;\r\n    }\r\n\r\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n        var updatedHeaders;\r\n\r\n        // REST API request\r\n        if (toBeSigned.signatureConstructor) {\r\n            if (updatedSessionToken) {\r\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\r\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\r\n            }\r\n\r\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\r\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\r\n            }, function (err) {\r\n                signatureEffort.failure(err);\r\n            });\r\n        }\r\n        // Form upload (w/ policy document)\r\n        else {\r\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\r\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n    }\r\n\r\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n        if (options.signatureSpec.version === 4) {\r\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n        else {\r\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n    }\r\n\r\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\r\n        if (options.signatureSpec.version === 4) {\r\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\r\n        }\r\n        else {\r\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\r\n        }\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        method: options.method,\r\n        contentType: \"application/json; charset=utf-8\",\r\n        endpointStore: {\r\n            get: function() {\r\n                if (typeof options.signatureSpec.endpoint === 'function') {\r\n                    return options.signatureSpec.endpoint();\r\n                }\r\n                return options.signatureSpec.endpoint;\r\n            }\r\n        },\r\n        paramsStore: options.paramsStore,\r\n        maxConnections: options.maxConnections,\r\n        customHeaders: options.signatureSpec.customHeaders,\r\n        log: options.log,\r\n        onComplete: handleSignatureReceived,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\r\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\r\n         *\r\n         * @param id File ID.\r\n         * @param toBeSigned an Object that holds the item(s) to be signed\r\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\r\n         */\r\n        getSignature: function(id, toBeSigned) {\r\n            var params = toBeSigned,\r\n                signatureConstructor = toBeSigned.signatureConstructor,\r\n                signatureEffort = new qq.Promise(),\r\n                queryParams;\r\n\r\n            if (options.signatureSpec.version === 4) {\r\n                queryParams = {v4: true};\r\n            }\r\n\r\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\r\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\r\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\r\n                }\r\n                // If credentials are expired, ask for new ones before attempting to sign request\r\n                else {\r\n                    credentialsProvider.onExpired().then(function() {\r\n                        determineSignatureClientSide(id, toBeSigned,\r\n                            signatureEffort,\r\n                            credentialsProvider.get().accessKey,\r\n                            credentialsProvider.get().sessionToken);\r\n                    }, function(errorMsg) {\r\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\r\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                options.log(\"Submitting S3 signature request for \" + id);\r\n\r\n                // create before incase the singature effort returns faster than us\r\n                pendingSignatures[id] = {\r\n                    promise: signatureEffort,\r\n                    signatureConstructor: signatureConstructor\r\n                };\r\n\r\n                if (signatureConstructor) {\r\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\r\n                        params = {headers: signatureArtifacts.stringToSignRaw};\r\n                        requester.initTransport(id)\r\n                            .withParams(params)\r\n                            .withQueryParams(queryParams)\r\n                            .send();\r\n                    }, function (err) {\r\n                        options.log(\"Failed to construct signature. \", \"error\");\r\n                        signatureEffort.failure(\"Failed to construct signature.\");\r\n                    });\r\n                }\r\n                else {\r\n                    requester.initTransport(id)\r\n                        .withParams(params)\r\n                        .withQueryParams(queryParams)\r\n                        .send();\r\n                }\r\n            }\r\n\r\n            return signatureEffort;\r\n        },\r\n\r\n        constructStringToSign: function(type, bucket, host, key) {\r\n            var headers = {},\r\n                uploadId, content, contentType, partNum, artifacts;\r\n\r\n            return {\r\n                withHeaders: function(theHeaders) {\r\n                    headers = theHeaders;\r\n                    return this;\r\n                },\r\n\r\n                withUploadId: function(theUploadId) {\r\n                    uploadId = theUploadId;\r\n                    return this;\r\n                },\r\n\r\n                withContent: function(theContent) {\r\n                    content = theContent;\r\n                    return this;\r\n                },\r\n\r\n                withContentType: function(theContentType) {\r\n                    contentType = theContentType;\r\n                    return this;\r\n                },\r\n\r\n                withPartNum: function(thePartNum) {\r\n                    partNum = thePartNum;\r\n                    return this;\r\n                },\r\n\r\n                getToSign: function(id) {\r\n                    var sessionToken = credentialsProvider.get().sessionToken,\r\n                        promise = new qq.Promise(),\r\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\r\n\r\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\r\n\r\n                    if (sessionToken) {\r\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n                    }\r\n\r\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\r\n                        bucket: bucket,\r\n                        content: content,\r\n                        contentType: contentType,\r\n                        headers: headers,\r\n                        host: host,\r\n                        key: key,\r\n                        partNum: partNum,\r\n                        type: type,\r\n                        uploadId: uploadId\r\n                    }).then(function(_artifacts_) {\r\n                        artifacts = _artifacts_;\r\n                        promise.success({\r\n                            headers: (function() {\r\n                                if (contentType) {\r\n                                    headers[\"Content-Type\"] = contentType;\r\n                                }\r\n\r\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\r\n                                return headers;\r\n                            }()),\r\n                            date: artifacts.date,\r\n                            endOfUrl: artifacts.endOfUrl,\r\n                            signedHeaders: artifacts.signedHeaders,\r\n                            stringToSign: artifacts.toSign,\r\n                            stringToSignRaw: artifacts.toSignRaw\r\n                        });\r\n                    }, function (err) {\r\n                        promise.failure(err);\r\n                    });\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getHeaders: function() {\r\n                    return qq.extend({}, headers);\r\n                },\r\n\r\n                getEndOfUrl: function() {\r\n                    return artifacts && artifacts.endOfUrl;\r\n                },\r\n\r\n                getRequestDate: function() {\r\n                    return artifacts && artifacts.date;\r\n                },\r\n\r\n                getSignedHeaders: function() {\r\n                    return artifacts && artifacts.signedHeaders;\r\n                }\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\r\n    MULTIPART_INITIATE: \"multipart_initiate\",\r\n    MULTIPART_COMPLETE: \"multipart_complete\",\r\n    MULTIPART_ABORT: \"multipart_abort\",\r\n    MULTIPART_UPLOAD: \"multipart_upload\"\r\n};\r\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\n * request to S3 via the REST API.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingInitiateRequests = {},\n        options = {\n            filenameParam: \"qqfilename\",\n            method: \"POST\",\n            endpointStore: null,\n            paramsStore: null,\n            signatureSpec: null,\n            aclStore: null,\n            reducedRedundancy: false,\n            serverSideEncryption: false,\n            maxConnections: 3,\n            getContentType: function(id) {},\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            getName: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\n     * method on the promise will be called.\n     *\n     * @param id Associated file ID\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id) {\n        var bucket = options.getBucket(id),\n            host = options.getHost(id),\n            headers = {},\n            promise = new qq.Promise(),\n            key = options.getKey(id),\n            signatureConstructor;\n\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\n\n        if (options.reducedRedundancy) {\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n        }\n\n        if (options.serverSideEncryption) {\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n        }\n\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\n\n        qq.each(options.paramsStore.get(id), function(name, val) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                headers[name] = val;\n            }\n            else {\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\n            }\n        });\n\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\n            .withContentType(options.getContentType(id))\n            .withHeaders(headers);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Initiate MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleInitiateRequestComplete(id, xhr, isError) {\n        var promise = pendingInitiateRequests[id],\n            domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\n\n        delete pendingInitiateRequests[id];\n\n        // The base ajax requester may declare the request to be a failure based on status code.\n        if (isError) {\n            status = xhr.status;\n\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\n            if (messageElements.length > 0) {\n                errorMessage = messageElements[0].textContent;\n            }\n        }\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\n        else {\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\n            if (uploadIdElements.length > 0) {\n                uploadId = uploadIdElements[0].textContent;\n            }\n            else {\n                errorMessage = \"Upload ID missing from request\";\n            }\n        }\n\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\n        if (uploadId === undefined) {\n            if (errorMessage) {\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\n            }\n\n            promise.failure(\"Problem initiating upload request.\", xhr);\n        }\n        else {\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\n            promise.success(uploadId, xhr);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleInitiateRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\n         *\n         * @param id The ID associated with the file\n         * @returns {qq.Promise}\n         */\n        send: function(id) {\n            var promise = new qq.Promise();\n\n            getHeaders(id).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\n\n                pendingInitiateRequests[id] = promise;\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\n * request to S3 via the REST API.\n *\n * @param o Options passed by the creator, to overwrite any default option values.\n * @constructor\n */\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingCompleteRequests = {},\n        options = {\n            method: \"POST\",\n            contentType: \"text/xml\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId, body) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\n                .withUploadId(uploadId)\n                .withContent(body)\n                .withContentType(\"application/xml; charset=UTF-8\");\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Complete MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleCompleteRequestComplete(id, xhr, isError) {\n        var promise = pendingCompleteRequests[id],\n            domParser = new DOMParser(),\n            bucket = options.getBucket(id),\n            key = options.getKey(id),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\n\n        delete pendingCompleteRequests[id];\n\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (bucketEls.length && keyEls.length) {\n                if (bucketEls[0].textContent !== bucket) {\n                    isError = true;\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\n                }\n\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\n            }\n            else {\n                isError = true;\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\n            }\n        }\n\n        if (isError) {\n            promise.failure(\"Problem combining the file parts!\", xhr);\n        }\n        else {\n            promise.success({}, xhr);\n        }\n    }\n\n    /**\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\n     */\n    function getCompleteRequestBody(etagEntries) {\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\n\n        // The entries MUST be sorted by part number, per the AWS API spec.\n        etagEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(etagEntries, function(idx, etagEntry) {\n            var part = etagEntry.part,\n                etag = etagEntry.etag,\n                partEl = doc.createElement(\"Part\"),\n                partNumEl = doc.createElement(\"PartNumber\"),\n                partNumTextEl = doc.createTextNode(part),\n                etagTextEl = doc.createTextNode(etag),\n                etagEl = doc.createElement(\"ETag\");\n\n            etagEl.appendChild(etagTextEl);\n            partNumEl.appendChild(partNumTextEl);\n            partEl.appendChild(partNumEl);\n            partEl.appendChild(etagEl);\n            qq(doc).children()[0].appendChild(partEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: \"application/xml; charset=UTF-8\",\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleCompleteRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n         * @returns {qq.Promise}\n         */\n        send: function(id, uploadId, etagEntries) {\n            var promise = new qq.Promise(),\n                body = getCompleteRequestBody(etagEntries);\n\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\n\n                pendingCompleteRequests[id] = promise;\n                delete headers[\"Content-Type\"];\n\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .withPayload(body)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\n * request to S3 via the REST API.\n\n * @param o\n * @constructor\n */\nqq.s3.AbortMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @param id Associated file ID\n     * @param uploadId ID of the associated upload, according to AWS\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\n                .withUploadId(uploadId);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Abort MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleAbortRequestComplete(id, xhr, isError) {\n        var domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\n            awsErrorMsg;\n\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (errorEls.length) {\n                isError = true;\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [\"DELETE\"],\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleAbortRequestComplete,\n        successfulResponseCodes: {\n            DELETE: [204]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Abort\" request.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         */\n        send: function(id, uploadId) {\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            });\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\r\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\r\n *\r\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.s3.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    // need to pre-construct the workerManager\r\n    var workerManager;\r\n    if (spec.signature.workerUrl) {\r\n        workerManager = new qq.s3.RequestSignerWorkerManager({\r\n            workerUrl: spec.signature.workerUrl,\r\n            log: proxy.log,\r\n        });\r\n    }\r\n\r\n    var getName = proxy.getName,\r\n        log = proxy.log,\r\n        clockDrift = spec.clockDrift,\r\n        expectedStatus = 200,\r\n        onGetBucket = spec.getBucket,\r\n        onGetHost = spec.getHost,\r\n        onGetKeyName = spec.getKeyName,\r\n        filenameParam = spec.filenameParam,\r\n        paramsStore = spec.paramsStore,\r\n        endpointStore = spec.endpointStore,\r\n        aclStore = spec.aclStore,\r\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\r\n        region = spec.objectProperties.region,\r\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\r\n        validation = spec.validation,\r\n        signature = qq.extend({region: region, drift: clockDrift, workerManager: workerManager}, spec.signature),\r\n        handler = this,\r\n        credentialsProvider = spec.signature.credentialsProvider,\r\n\r\n        chunked = {\r\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\r\n            // when the response to this request has been parsed.\r\n            combine: function(id) {\r\n                var uploadId = handler._getPersistableData(id).uploadId,\r\n                    etagMap = handler._getPersistableData(id).etags,\r\n                    result = new qq.Promise();\r\n\r\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\r\n                    result.success,\r\n\r\n                    function failure(reason, xhr) {\r\n                        result.failure(upload.done(id, xhr).response, xhr);\r\n                    }\r\n                );\r\n\r\n                return result;\r\n            },\r\n\r\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\r\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\r\n            // in the XML response and store that along with the associated part number.\r\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\r\n            done: function(id, xhr, chunkIdx) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    etag;\r\n\r\n                if (response.success) {\r\n                    etag = xhr.getResponseHeader(\"ETag\");\r\n\r\n                    if (!handler._getPersistableData(id).etags) {\r\n                        handler._getPersistableData(id).etags = [];\r\n                    }\r\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\r\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\r\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\r\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\r\n             * callback.\r\n             *\r\n             * @param id File ID\r\n             * @param chunkIdx Index of the chunk to PUT\r\n             * @returns {qq.Promise}\r\n             */\r\n            initHeaders: function(id, chunkIdx, blob) {\r\n                var headers = {},\r\n                    bucket = upload.bucket.getName(id),\r\n                    host = upload.host.getName(id),\r\n                    key = upload.key.urlSafe(id),\r\n                    promise = new qq.Promise(),\r\n                    signatureConstructor = requesters.restSignature.constructStringToSign\r\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\r\n                        .withPartNum(chunkIdx + 1)\r\n                        .withContent(blob)\r\n                        .withUploadId(handler._getPersistableData(id).uploadId);\r\n\r\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            put: function(id, chunkIdx) {\r\n                var xhr = handler._createXhr(id, chunkIdx),\r\n                    chunkData = handler._getChunkData(id, chunkIdx),\r\n                    domain = spec.endpointStore.get(id),\r\n                    promise = new qq.Promise();\r\n\r\n                // Add appropriate headers to the multipart upload request.\r\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\r\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\r\n                    if (xhr._cancelled) {\r\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\r\n                        promise.failure({error: \"Chunk upload cancelled\"});\r\n                    }\r\n                    else {\r\n                        var url = domain + \"/\" + endOfUrl;\r\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\r\n                        xhr.open(\"PUT\", url, true);\r\n\r\n                        qq.each(headers, function(name, val) {\r\n                            xhr.setRequestHeader(name, val);\r\n                        });\r\n\r\n                        xhr.send(chunkData.blob);\r\n                    }\r\n                }, function() {\r\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            send: function(id, chunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                chunked.setup(id).then(\r\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\r\n                    function() {\r\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\r\n                    },\r\n\r\n                    // We were unable to initiate the chunked upload process.\r\n                    function(errorMessage, xhr) {\r\n                        promise.failure({error: errorMessage}, xhr);\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\r\n             * initiated.\r\n             *\r\n             * @param id Associated file ID\r\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\r\n             */\r\n            setup: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    uploadId = handler._getPersistableData(id).uploadId,\r\n                    uploadIdPromise = new qq.Promise();\r\n\r\n                if (!uploadId) {\r\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\r\n                    requesters.initiateMultipart.send(id).then(\r\n                        function(uploadId) {\r\n                            handler._getPersistableData(id).uploadId = uploadId;\r\n                            uploadIdPromise.success(uploadId);\r\n                            promise.success(uploadId);\r\n                        },\r\n                        function(errorMsg, xhr) {\r\n                            handler._getPersistableData(id).uploadId = null;\r\n                            promise.failure(errorMsg, xhr);\r\n                            uploadIdPromise.failure(errorMsg, xhr);\r\n                        }\r\n                    );\r\n                }\r\n                else if (uploadId instanceof qq.Promise) {\r\n                    uploadId.then(function(uploadId) {\r\n                        promise.success(uploadId);\r\n                    });\r\n                }\r\n                else {\r\n                    promise.success(uploadId);\r\n                }\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        requesters = {\r\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\r\n                filenameParam: filenameParam,\r\n                endpointStore: endpointStore,\r\n                paramsStore: paramsStore,\r\n                signatureSpec: signature,\r\n                aclStore: aclStore,\r\n                reducedRedundancy: reducedRedundancy,\r\n                serverSideEncryption: serverSideEncryption,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getContentType: function(id) {\r\n                    return handler._getMimeType(id);\r\n                },\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                },\r\n                getName: function(id) {\r\n                    return getName(id);\r\n                }\r\n            }),\r\n\r\n            policySignature: new qq.s3.RequestSigner({\r\n                expectingPolicy: true,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            }),\r\n\r\n            restSignature: new qq.s3.RequestSigner({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            })\r\n        },\r\n\r\n        simple = {\r\n            /**\r\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\r\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\r\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\r\n             * due to some error.\r\n             *\r\n             * @param id File ID\r\n             * @returns {qq.Promise}\r\n             */\r\n            initParams: function(id) {\r\n                /*jshint -W040 */\r\n                var customParams = paramsStore.get(id);\r\n                customParams[filenameParam] = getName(id);\r\n\r\n                return qq.s3.util.generateAwsParams({\r\n                    endpoint: endpointStore.get(id),\r\n                    clockDrift: clockDrift,\r\n                    params: customParams,\r\n                    type: handler._getMimeType(id),\r\n                    bucket: upload.bucket.getName(id),\r\n                    key: handler.getThirdPartyFileId(id),\r\n                    accessKey: credentialsProvider.get().accessKey,\r\n                    sessionToken: credentialsProvider.get().sessionToken,\r\n                    acl: aclStore.get(id),\r\n                    expectedStatus: expectedStatus,\r\n                    minFileSize: validation.minSizeLimit,\r\n                    maxFileSize: validation.maxSizeLimit,\r\n                    reducedRedundancy: reducedRedundancy,\r\n                    region: region,\r\n                    serverSideEncryption: serverSideEncryption,\r\n                    signatureVersion: signature.version,\r\n                    log: log\r\n                },\r\n                qq.bind(requesters.policySignature.getSignature, this, id));\r\n            },\r\n\r\n            send: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    xhr = handler._createXhr(id),\r\n                    fileOrBlob = handler.getFile(id);\r\n\r\n                handler._registerProgressHandler(id);\r\n                upload.track(id, xhr).then(promise.success, promise.failure);\r\n\r\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\r\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\r\n                    log(\"Sending upload request for \" + id);\r\n                    xhr.send(toSend);\r\n                }, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\r\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\r\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\r\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\r\n             *\r\n             * Note that this is only used by the simple (non-chunked) upload process.\r\n             *\r\n             * @param id File ID\r\n             * @param xhr XMLHttpRequest to use for the upload\r\n             * @param fileOrBlob `File` or `Blob` to send\r\n             * @returns {qq.Promise}\r\n             */\r\n            setup: function(id, xhr, fileOrBlob) {\r\n                var formData = new FormData(),\r\n                    endpoint = endpointStore.get(id),\r\n                    url = endpoint,\r\n                    promise = new qq.Promise();\r\n\r\n                simple.initParams(id).then(\r\n                    // Success - all params determined\r\n                    function(awsParams) {\r\n                        xhr.open(\"POST\", url, true);\r\n\r\n                        qq.obj2FormData(awsParams, formData);\r\n\r\n                        // AWS requires the file field be named \"file\".\r\n                        formData.append(\"file\", fileOrBlob);\r\n\r\n                        promise.success(formData);\r\n                    },\r\n\r\n                    // Failure - we couldn't determine some params (likely the signature)\r\n                    function(errorMessage) {\r\n                        promise.failure({error: errorMessage});\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        upload = {\r\n            /**\r\n             * Note that this is called when an upload has reached a termination point,\r\n             * regardless of success/failure.  For example, it is called when we have\r\n             * encountered an error during the upload or when the file may have uploaded successfully.\r\n             *\r\n             * @param id file ID\r\n             */\r\n            bucket: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedBucket = handler._getFileState(id).bucket;\r\n\r\n                    if (cachedBucket) {\r\n                        promise.success(cachedBucket);\r\n                    }\r\n                    else {\r\n                        onGetBucket(id).then(function(bucket) {\r\n                            handler._getFileState(id).bucket = bucket;\r\n                            promise.success(bucket);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).bucket;\r\n                }\r\n            },\r\n\r\n            host: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedHost = handler._getFileState(id).host;\r\n\r\n                    if (cachedHost) {\r\n                        promise.success(cachedHost);\r\n                    }\r\n                    else {\r\n                        onGetHost(id).then(function(host) {\r\n                            handler._getFileState(id).host = host;\r\n                            promise.success(host);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).host;\r\n                }\r\n            },\r\n\r\n            done: function(id, xhr) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    isError = response.success !== true;\r\n\r\n                if (isError && upload.response.shouldReset(response.code)) {\r\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\r\n                    response.reset = true;\r\n                }\r\n\r\n                return {\r\n                    success: !isError,\r\n                    response: response\r\n                };\r\n            },\r\n\r\n            key: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        key = handler.getThirdPartyFileId(id);\r\n\r\n                    /* jshint eqnull:true */\r\n                    if (key == null) {\r\n                        handler._setThirdPartyFileId(id, promise);\r\n                        onGetKeyName(id, getName(id)).then(\r\n                            function(keyName) {\r\n                                handler._setThirdPartyFileId(id, keyName);\r\n                                promise.success(keyName);\r\n                            },\r\n                            function(errorReason) {\r\n                                handler._setThirdPartyFileId(id, null);\r\n                                promise.failure(errorReason);\r\n                            }\r\n                        );\r\n                    }\r\n                    else if (qq.isGenericPromise(key)) {\r\n                        key.then(promise.success, promise.failure);\r\n                    }\r\n                    else {\r\n                        promise.success(key);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                urlSafe: function(id) {\r\n                    var encodedKey = handler.getThirdPartyFileId(id);\r\n                    return qq.s3.util.uriEscapePath(encodedKey);\r\n                }\r\n            },\r\n\r\n            response: {\r\n                parse: function(id, xhr) {\r\n                    var response = {},\r\n                        parsedErrorProps;\r\n\r\n                    try {\r\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\r\n\r\n                        if (xhr.status === expectedStatus) {\r\n                            response.success = true;\r\n                        }\r\n                        else {\r\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\r\n\r\n                            if (parsedErrorProps) {\r\n                                response.error = parsedErrorProps.message;\r\n                                response.code = parsedErrorProps.code;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\r\n                    }\r\n\r\n                    return response;\r\n                },\r\n\r\n                /**\r\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\r\n                 *\r\n                 * @param awsResponseXml XML response from AWS\r\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\r\n                 */\r\n                parseError: function(awsResponseXml) {\r\n                    var parser = new DOMParser(),\r\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\r\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\r\n                        errorDetails = {},\r\n                        codeEls, messageEls;\r\n\r\n                    if (errorEls.length) {\r\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\r\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\r\n\r\n                        if (messageEls.length) {\r\n                            errorDetails.message = messageEls[0].textContent;\r\n                        }\r\n\r\n                        if (codeEls.length) {\r\n                            errorDetails.code = codeEls[0].textContent;\r\n                        }\r\n\r\n                        return errorDetails;\r\n                    }\r\n                },\r\n\r\n                // Determine if the upload should be restarted on the next retry attempt\r\n                // based on the error code returned in the response from AWS.\r\n                shouldReset: function(errorCode) {\r\n                    /*jshint -W014 */\r\n                    return errorCode === \"EntityTooSmall\"\r\n                        || errorCode === \"InvalidPart\"\r\n                        || errorCode === \"InvalidPartOrder\"\r\n                        || errorCode === \"NoSuchUpload\";\r\n                }\r\n            },\r\n\r\n            start: function(id, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                upload.key.promise(id).then(function() {\r\n                    upload.bucket.promise(id).then(function() {\r\n                        upload.host.promise(id).then(function() {\r\n                            /* jshint eqnull:true */\r\n                            if (optChunkIdx == null) {\r\n                                simple.send(id).then(promise.success, promise.failure);\r\n                            }\r\n                            else {\r\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\r\n                            }\r\n                        });\r\n                    });\r\n                },\r\n                function(errorReason) {\r\n                    promise.failure({error: errorReason});\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            track: function(id, xhr, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4) {\r\n                        var result;\r\n\r\n                        /* jshint eqnull:true */\r\n                        if (optChunkIdx == null) {\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                        else {\r\n                            chunked.done(id, xhr, optChunkIdx);\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                return promise;\r\n            }\r\n        };\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: upload.start,\r\n        uploadFile: upload.start\r\n    });\r\n\r\n    qq.extend(this, new qq.XhrUploadHandler({\r\n        options: qq.extend({namespace: \"s3\"}, spec),\r\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n    }));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            expunge: function(id) {\r\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\r\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\r\n\r\n                if (uploadId !== undefined && existedInLocalStorage) {\r\n                    requesters.abortMultipart.send(id, uploadId);\r\n                }\r\n\r\n                super_.expunge(id);\r\n            },\r\n\r\n            finalizeChunks: function(id) {\r\n                return chunked.combine(id);\r\n            },\r\n\r\n            _getLocalStorageId: function(id) {\r\n                var baseStorageId = super_._getLocalStorageId(id),\r\n                    bucketName = upload.bucket.getName(id);\r\n\r\n                return baseStorageId + \"-\" + bucketName;\r\n            }\r\n        };\r\n    });\r\n};\r\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\n * AWS API.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        clockDrift = options.clockDrift,\n        onUuidChanged = proxy.onUuidChanged,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        onGetBucket = options.getBucket,\n        onGetKeyName = options.getKeyName,\n        filenameParam = options.filenameParam,\n        paramsStore = options.paramsStore,\n        endpointStore = options.endpointStore,\n        aclStore = options.aclStore,\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\n        region = options.objectProperties.region,\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\n        validation = options.validation,\n        signature = options.signature,\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\n        credentialsProvider = options.signature.credentialsProvider,\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\n            signatureSpec: signature,\n            cors: options.cors,\n            log: log\n        });\n\n    if (successRedirectUrl === undefined) {\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\n    }\n\n    /**\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\n     * have redirected to a known endpoint that should provide a parseable response.\n     *\n     * @param id ID of the associated file\n     * @param iframe target of the form submit\n     * @returns {boolean} true if the contents can be read, false otherwise\n     */\n    function isValidResponse(id, iframe) {\n        var response,\n            endpoint = options.endpointStore.get(id),\n            bucket = handler._getFileState(id).bucket,\n            doc,\n            innerHtml,\n            responseData;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            responseData = qq.s3.util.parseIframeResponse(iframe);\n            if (responseData.bucket === bucket &&\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\n\n                return true;\n            }\n\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\n\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n        }\n\n        return false;\n    }\n\n    function generateAwsParams(id) {\n        /*jshint -W040 */\n        var customParams = paramsStore.get(id);\n\n        customParams[filenameParam] = getName(id);\n\n        return qq.s3.util.generateAwsParams({\n            endpoint: endpointStore.get(id),\n            clockDrift: clockDrift,\n            params: customParams,\n            bucket: handler._getFileState(id).bucket,\n            key: handler.getThirdPartyFileId(id),\n            accessKey: credentialsProvider.get().accessKey,\n            sessionToken: credentialsProvider.get().sessionToken,\n            acl: aclStore.get(id),\n            minFileSize: validation.minSizeLimit,\n            maxFileSize: validation.maxSizeLimit,\n            successRedirectUrl: successRedirectUrl,\n            reducedRedundancy: reducedRedundancy,\n            region: region,\n            serverSideEncryption: serverSideEncryption,\n            signatureVersion: signature.version,\n            log: log\n        },\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            endpoint = options.endpointStore.get(id),\n            fileName = getName(id);\n\n        generateAwsParams(id).then(function(params) {\n            var form = handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: true,\n                targetName: iframe.name\n            });\n\n            promise.success(form);\n        }, function(errorMessage) {\n            promise.failure(errorMessage);\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\n        });\n\n        return promise;\n    }\n\n    function handleUpload(id) {\n        var iframe = handler._createIframe(id),\n            input = handler.getInput(id),\n            promise = new qq.Promise();\n\n        createForm(id, iframe).then(function(form) {\n            form.appendChild(input);\n\n            // Register a callback when the response comes in from S3\n            handler._attachLoadEvent(iframe, function(response) {\n                log(\"iframe loaded\");\n\n                // If the common response handler has determined success or failure immediately\n                if (response) {\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\n                    if (response.success === false) {\n                        log(\"Amazon likely rejected the upload request\", \"error\");\n                        promise.failure(response);\n                    }\n                }\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\n                else {\n                    response = {};\n                    response.success = isValidResponse(id, iframe);\n\n                    // If the more specific response handle detected a problem with the response from S3\n                    if (response.success === false) {\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\n                        promise.failure(response);\n                    }\n                    else {\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\n                        promise.success(response);\n                    }\n                }\n\n                handleFinishedUpload(id, iframe);\n            });\n\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n        }, promise.failure);\n\n        return promise;\n    }\n\n    function handleFinishedUpload(id, iframe) {\n        handler._detachLoadEvent(id);\n        iframe && qq(iframe).remove();\n    }\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: false,\n            inputName: \"file\"\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            onUuidChanged: onUuidChanged,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n\n    qq.extend(this, {\n        uploadFile: function(id) {\n            var name = getName(id),\n                promise = new qq.Promise();\n\n            if (handler.getThirdPartyFileId(id)) {\n                if (handler._getFileState(id).bucket) {\n                    handleUpload(id).then(promise.success, promise.failure);\n                }\n                else {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handleUpload(id).then(promise.success, promise.failure);\n                    });\n                }\n            }\n            else {\n                // The S3 uploader module will either calculate the key or ask the server for it\n                // and will call us back once it is known.\n                onGetKeyName(id, name).then(function(key) {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handler._setThirdPartyFileId(id, key);\n                        handleUpload(id).then(promise.success, promise.failure);\n                    }, function(errorReason) {\n                        promise.failure({error: errorReason});\n                    });\n                }, function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n            }\n\n            return promise;\n        }\n    });\n};\n","\n        qq.s3.createS3InlineWorkerUrl = function () {\n            return URL.createObjectURL(new Blob([\"// Fine Uploader 5.14.4 - (c) 2013-present Widen Enterprises, Inc. MIT licensed. http://fineuploader.com\\nfunction doTask(t,r){\\\"use strict\\\";var n=new FileReader;n.onloadend=function(t){if(t.target.readyState===FileReader.DONE)if(t.target.error)r(JSON.parse(JSON.stringify(t.target.error,null,2)));else{var n=qq.CryptoJS.lib.WordArray.create(t.target.result);r(null,qq.CryptoJS.SHA256(n).toString())}},n.readAsArrayBuffer(t)}qq={},qq.CryptoJS=function(t,r){var n={},e=n.lib={},i=e.Base=function(){function t(){}return{extend:function(r){t.prototype=this;var n=new t;return r&&n.mixIn(r),n.hasOwnProperty(\\\"init\\\")||(n.init=function(){n.$super.init.apply(this,arguments)}),n.init.prototype=n,n.$super=this,n},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},mixIn:function(t){for(var r in t)t.hasOwnProperty(r)&&(this[r]=t[r]);t.hasOwnProperty(\\\"toString\\\")&&(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),s=e.WordArray=i.extend({init:function(t,n){t=this.words=t||[],n!=r?this.sigBytes=n:this.sigBytes=4*t.length},toString:function(t){return(t||o).stringify(this)},concat:function(t){var r=this.words,n=t.words,e=this.sigBytes,i=t.sigBytes;if(this.clamp(),e%4)for(var s=0;s<i;s++){var a=n[s>>>2]>>>24-s%4*8&255;r[e+s>>>2]|=a<<24-(e+s)%4*8}else if(n.length>65535)for(var s=0;s<i;s+=4)r[e+s>>>2]=n[s>>>2];else r.push.apply(r,n);return this.sigBytes+=i,this},clamp:function(){var r=this.words,n=this.sigBytes;r[n>>>2]&=4294967295<<32-n%4*8,r.length=t.ceil(n/4)},clone:function(){var t=i.clone.call(this);return t.words=this.words.slice(0),t},random:function(r){for(var n=[],e=0;e<r;e+=4)n.push(4294967296*t.random()|0);return new s.init(n,r)}}),a=n.enc={},o=a.Hex={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var s=r[i>>>2]>>>24-i%4*8&255;e.push((s>>>4).toString(16)),e.push((15&s).toString(16))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e+=2)n[e>>>3]|=parseInt(t.substr(e,2),16)<<24-e%8*4;return new s.init(n,r/2)}},c=a.Latin1={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var s=r[i>>>2]>>>24-i%4*8&255;e.push(String.fromCharCode(s))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e++)n[e>>>2]|=(255&t.charCodeAt(e))<<24-e%4*8;return new s.init(n,r)}},f=a.Utf8={stringify:function(t){try{return decodeURIComponent(escape(c.stringify(t)))}catch(t){throw new Error(\\\"Malformed UTF-8 data\\\")}},parse:function(t){return c.parse(unescape(encodeURIComponent(t)))}},h=e.BufferedBlockAlgorithm=i.extend({reset:function(){this._data=new s.init,this._nDataBytes=0},_append:function(t){\\\"string\\\"==typeof t&&(t=f.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes},_process:function(r){var n=this._data,e=n.words,i=n.sigBytes,a=this.blockSize,o=4*a,c=i/o;c=r?t.ceil(c):t.max((0|c)-this._minBufferSize,0);var f=c*a,h=t.min(4*f,i);if(f){for(var u=0;u<f;u+=a)this._doProcessBlock(e,u);var l=e.splice(0,f);n.sigBytes-=h}return new s.init(l,h)},clone:function(){var t=i.clone.call(this);return t._data=this._data.clone(),t},_minBufferSize:0}),u=(e.Hasher=h.extend({cfg:i.extend(),init:function(t){this.cfg=this.cfg.extend(t),this.reset()},reset:function(){h.reset.call(this),this._doReset()},update:function(t){return this._append(t),this._process(),this},finalize:function(t){t&&this._append(t);var r=this._doFinalize();return r},blockSize:16,_createHelper:function(t){return function(r,n){return new t.init(n).finalize(r)}},_createHmacHelper:function(t){return function(r,n){return new u.HMAC.init(t,n).finalize(r)}}}),n.algo={});return n}(Math),function(){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=t.enc;e.Base64={stringify:function(t){var r=t.words,n=t.sigBytes,e=this._map;t.clamp();for(var i=[],s=0;s<n;s+=3)for(var a=r[s>>>2]>>>24-s%4*8&255,o=r[s+1>>>2]>>>24-(s+1)%4*8&255,c=r[s+2>>>2]>>>24-(s+2)%4*8&255,f=a<<16|o<<8|c,h=0;h<4&&s+.75*h<n;h++)i.push(e.charAt(f>>>6*(3-h)&63));var u=e.charAt(64);if(u)for(;i.length%4;)i.push(u);return i.join(\\\"\\\")},parse:function(t){var r=t.length,e=this._map,i=e.charAt(64);if(i){var s=t.indexOf(i);s!=-1&&(r=s)}for(var a=[],o=0,c=0;c<r;c++)if(c%4){var f=e.indexOf(t.charAt(c-1))<<c%4*2,h=e.indexOf(t.charAt(c))>>>6-c%4*2;a[o>>>2]|=(f|h)<<24-o%4*8,o++}return n.create(a,o)},_map:\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\"}}(),function(){var t=qq.CryptoJS,r=t.lib,n=r.Base,e=t.enc,i=e.Utf8,s=t.algo;s.HMAC=n.extend({init:function(t,r){t=this._hasher=new t.init,\\\"string\\\"==typeof r&&(r=i.parse(r));var n=t.blockSize,e=4*n;r.sigBytes>e&&(r=t.finalize(r)),r.clamp();for(var s=this._oKey=r.clone(),a=this._iKey=r.clone(),o=s.words,c=a.words,f=0;f<n;f++)o[f]^=1549556828,c[f]^=909522486;s.sigBytes=a.sigBytes=e,this.reset()},reset:function(){var t=this._hasher;t.reset(),t.update(this._iKey)},update:function(t){return this._hasher.update(t),this},finalize:function(t){var r=this._hasher,n=r.finalize(t);r.reset();var e=r.finalize(this._oKey.clone().concat(n));return e}})}(),function(){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=r.Hasher,i=t.algo,s=[],a=i.SHA1=e.extend({_doReset:function(){this._hash=new n.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],a=n[2],o=n[3],c=n[4],f=0;f<80;f++){if(f<16)s[f]=0|t[r+f];else{var h=s[f-3]^s[f-8]^s[f-14]^s[f-16];s[f]=h<<1|h>>>31}var u=(e<<5|e>>>27)+c+s[f];u+=f<20?(i&a|~i&o)+1518500249:f<40?(i^a^o)+1859775393:f<60?(i&a|i&o|a&o)-1894007588:(i^a^o)-899497514,c=o,o=a,a=i<<30|i>>>2,i=e,e=u}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+a|0,n[3]=n[3]+o|0,n[4]=n[4]+c|0},_doFinalize:function(){var t=this._data,r=t.words,n=8*this._nDataBytes,e=8*t.sigBytes;return r[e>>>5]|=128<<24-e%32,r[(e+64>>>9<<4)+14]=Math.floor(n/4294967296),r[(e+64>>>9<<4)+15]=n,t.sigBytes=4*r.length,this._process(),this._hash},clone:function(){var t=e.clone.call(this);return t._hash=this._hash.clone(),t}});t.SHA1=e._createHelper(a),t.HmacSHA1=e._createHmacHelper(a)}(),function(t){var r=qq.CryptoJS,n=r.lib,e=n.WordArray,i=n.Hasher,s=r.algo,a=[],o=[];!function(){function r(r){for(var n=t.sqrt(r),e=2;e<=n;e++)if(!(r%e))return!1;return!0}function n(t){return 4294967296*(t-(0|t))|0}for(var e=2,i=0;i<64;)r(e)&&(i<8&&(a[i]=n(t.pow(e,.5))),o[i]=n(t.pow(e,1/3)),i++),e++}();var c=[],f=s.SHA256=i.extend({_doReset:function(){this._hash=new e.init(a.slice(0))},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],s=n[2],a=n[3],f=n[4],h=n[5],u=n[6],l=n[7],p=0;p<64;p++){if(p<16)c[p]=0|t[r+p];else{var d=c[p-15],y=(d<<25|d>>>7)^(d<<14|d>>>18)^d>>>3,g=c[p-2],v=(g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10;c[p]=y+c[p-7]+v+c[p-16]}var _=f&h^~f&u,w=e&i^e&s^i&s,A=(e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22),B=(f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25),S=l+B+_+o[p]+c[p],m=A+w;l=u,u=h,h=f,f=a+S|0,a=s,s=i,i=e,e=S+m|0}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+s|0,n[3]=n[3]+a|0,n[4]=n[4]+f|0,n[5]=n[5]+h|0,n[6]=n[6]+u|0,n[7]=n[7]+l|0},_doFinalize:function(){var r=this._data,n=r.words,e=8*this._nDataBytes,i=8*r.sigBytes;return n[i>>>5]|=128<<24-i%32,n[(i+64>>>9<<4)+14]=t.floor(e/4294967296),n[(i+64>>>9<<4)+15]=e,r.sigBytes=4*n.length,this._process(),this._hash},clone:function(){var t=i.clone.call(this);return t._hash=this._hash.clone(),t}});r.SHA256=i._createHelper(f),r.HmacSHA256=i._createHmacHelper(f)}(Math),function(){if(\\\"function\\\"==typeof ArrayBuffer){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=n.init,i=n.init=function(t){if(t instanceof ArrayBuffer&&(t=new Uint8Array(t)),(t instanceof Int8Array||t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)&&(t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),t instanceof Uint8Array){for(var r=t.byteLength,n=[],i=0;i<r;i++)n[i>>>2]|=t[i]<<24-i%4*8;e.call(this,n,r)}else e.apply(this,arguments)};i.prototype=n}}(),onmessage=function(t){\\\"use strict\\\";doTask(t.data.file,function(r,n){postMessage({err:r,resp:n,id:t.data.id})})};\\n//# sourceMappingURL=s3.fine-uploader.worker.js.map\"], {type: \"application/javascript\"}));\n        };\n    ","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Defines the public API for FineUploader mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.uiPublicApi = {\r\n        addInitialFiles: function(cannedFileList) {\r\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\r\n            this._templating.addCacheToDom();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\r\n            this._templating.clearFiles();\r\n        },\r\n\r\n        addExtraDropzone: function(element) {\r\n            this._dnd && this._dnd.setupExtraDropzone(element);\r\n        },\r\n\r\n        removeExtraDropzone: function(element) {\r\n            if (this._dnd) {\r\n                return this._dnd.removeDropzone(element);\r\n            }\r\n        },\r\n\r\n        getItemByFileId: function(id) {\r\n            if (!this._templating.isHiddenForever(id)) {\r\n                return this._templating.getFileContainer(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            this._parent.prototype.reset.apply(this, arguments);\r\n            this._templating.reset();\r\n\r\n            if (!this._options.button && this._templating.getButton()) {\r\n                this._defaultButtonId = this._createUploadButton({\r\n                    element: this._templating.getButton(),\r\n                    title: this._options.text.fileInputTitle\r\n                }).getButtonId();\r\n            }\r\n\r\n            if (this._dnd) {\r\n                this._dnd.dispose();\r\n                this._dnd = this._setupDragAndDrop();\r\n            }\r\n\r\n            this._totalFilesInBatch = 0;\r\n            this._filesInBatchAddedToUi = 0;\r\n\r\n            this._setupClickAndEditEventHandlers();\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            var formattedFilename = this._options.formatFileName(newName);\r\n\r\n            this._parent.prototype.setName.apply(this, arguments);\r\n            this._templating.updateFilename(id, formattedFilename);\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\r\n\r\n            paused && this._templating.uploadPaused(id);\r\n            return paused;\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\r\n\r\n            continued && this._templating.uploadContinued(id);\r\n            return continued;\r\n        },\r\n\r\n        getId: function(fileContainerOrChildEl) {\r\n            return this._templating.getFileId(fileContainerOrChildEl);\r\n        },\r\n\r\n        getDropTarget: function(fileId) {\r\n            var file = this.getFile(fileId);\r\n\r\n            return file.qqDropTarget;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploader mode.\r\n     */\r\n    qq.uiPrivateApi = {\r\n        _getButton: function(buttonId) {\r\n            var button = this._parent.prototype._getButton.apply(this, arguments);\r\n\r\n            if (!button) {\r\n                if (buttonId === this._defaultButtonId) {\r\n                    button = this._templating.getButton();\r\n                }\r\n            }\r\n\r\n            return button;\r\n        },\r\n\r\n        _removeFileItem: function(fileId) {\r\n            this._templating.removeFile(fileId);\r\n        },\r\n\r\n        _setupClickAndEditEventHandlers: function() {\r\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\r\n\r\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\r\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\r\n            this._focusinEventSupported = !qq.firefox();\r\n\r\n            if (this._isEditFilenameEnabled())\r\n            {\r\n                this._filenameClickHandler = this._bindFilenameClickEvent();\r\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\r\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\r\n            }\r\n        },\r\n\r\n        _setupDragAndDrop: function() {\r\n            var self = this,\r\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\r\n                templating = this._templating,\r\n                defaultDropZone = templating.getDropZone();\r\n\r\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\r\n\r\n            return new qq.DragAndDrop({\r\n                dropZoneElements: dropZoneElements,\r\n                allowMultipleItems: this._options.multiple,\r\n                classes: {\r\n                    dropActive: this._options.classes.dropActive\r\n                },\r\n                callbacks: {\r\n                    processingDroppedFiles: function() {\r\n                        templating.showDropProcessing();\r\n                    },\r\n                    processingDroppedFilesComplete: function(files, targetEl) {\r\n                        templating.hideDropProcessing();\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            file.qqDropTarget = targetEl;\r\n                        });\r\n\r\n                        if (files.length) {\r\n                            self.addFiles(files, null, null);\r\n                        }\r\n                    },\r\n                    dropError: function(code, errorData) {\r\n                        self._itemError(code, errorData);\r\n                    },\r\n                    dropLog: function(message, level) {\r\n                        self.log(message, level);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _bindFileButtonsClickEvent: function() {\r\n            var self = this;\r\n\r\n            return new qq.FileButtonsClickHandler({\r\n                templating: this._templating,\r\n\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n\r\n                onDeleteFile: function(fileId) {\r\n                    self.deleteFile(fileId);\r\n                },\r\n\r\n                onCancel: function(fileId) {\r\n                    self.cancel(fileId);\r\n                },\r\n\r\n                onRetry: function(fileId) {\r\n                    self.retry(fileId);\r\n                },\r\n\r\n                onPause: function(fileId) {\r\n                    self.pauseUpload(fileId);\r\n                },\r\n\r\n                onContinue: function(fileId) {\r\n                    self.continueUpload(fileId);\r\n                },\r\n\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                }\r\n            });\r\n        },\r\n\r\n        _isEditFilenameEnabled: function() {\r\n            /*jshint -W014 */\r\n            return this._templating.isEditFilenamePossible()\r\n                && !this._options.autoUpload\r\n                && qq.FilenameClickHandler\r\n                && qq.FilenameInputFocusHandler\r\n                && qq.FilenameInputFocusHandler;\r\n        },\r\n\r\n        _filenameEditHandler: function() {\r\n            var self = this,\r\n                templating = this._templating;\r\n\r\n            return {\r\n                templating: templating,\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n                onGetUploadStatus: function(fileId) {\r\n                    return self.getUploads({id: fileId}).status;\r\n                },\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                },\r\n                onSetName: function(id, newName) {\r\n                    self.setName(id, newName);\r\n                },\r\n                onEditingStatusChange: function(id, isEditing) {\r\n                    var qqInput = qq(templating.getEditInput(id)),\r\n                        qqFileContainer = qq(templating.getFileContainer(id));\r\n\r\n                    if (isEditing) {\r\n                        qqInput.addClass(\"qq-editing\");\r\n                        templating.hideFilename(id);\r\n                        templating.hideEditIcon(id);\r\n                    }\r\n                    else {\r\n                        qqInput.removeClass(\"qq-editing\");\r\n                        templating.showFilename(id);\r\n                        templating.showEditIcon(id);\r\n                    }\r\n\r\n                    // Force IE8 and older to repaint\r\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\r\n                }\r\n            };\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\r\n\r\n            if (this._isEditFilenameEnabled()) {\r\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\r\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\r\n                    this._templating.markFilenameEditable(id);\r\n                    this._templating.hideEditIcon(id);\r\n                }\r\n            }\r\n\r\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\r\n                this._templating.hideRetry(id);\r\n                this._templating.setStatusText(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\r\n            }\r\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\r\n                this._templating.hidePause(id);\r\n            }\r\n        },\r\n\r\n        _bindFilenameInputFocusInEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusInHandler(spec);\r\n        },\r\n\r\n        _bindFilenameInputFocusEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusHandler(spec);\r\n        },\r\n\r\n        _bindFilenameClickEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameClickHandler(spec);\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._parent.prototype._storeForLater.apply(this, arguments);\r\n            this._templating.hideSpinner(id);\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._parent.prototype._onAllComplete.apply(this, arguments);\r\n            this._templating.resetTotalProgress();\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            var file = this.getFile(id);\r\n\r\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\r\n                this._paramsStore.addReadOnly(id, {\r\n                    qqpath: file.qqPath\r\n                });\r\n            }\r\n\r\n            this._parent.prototype._onSubmit.apply(this, arguments);\r\n            this._addToList(id, name);\r\n        },\r\n\r\n        // The file item has been added to the DOM.\r\n        _onSubmitted: function(id) {\r\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\r\n            if (this._isEditFilenameEnabled()) {\r\n                this._templating.markFilenameEditable(id);\r\n                this._templating.showEditIcon(id);\r\n\r\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\r\n                if (!this._focusinEventSupported) {\r\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\r\n                }\r\n            }\r\n        },\r\n\r\n        // Update the progress bar & percentage as the file is uploaded\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._parent.prototype._onProgress.apply(this, arguments);\r\n\r\n            this._templating.updateProgress(id, loaded, total);\r\n\r\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\r\n                this._templating.hideCancel(id);\r\n                this._templating.hidePause(id);\r\n                this._templating.hideProgress(id);\r\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\r\n\r\n                // If ~last byte was sent, display total file size\r\n                this._displayFileSize(id);\r\n            }\r\n            else {\r\n                // If still uploading, display percentage - total size is actually the total request(s) size\r\n                this._displayFileSize(id, loaded, total);\r\n            }\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\r\n            this._templating.updateTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\r\n                templating = this._templating,\r\n                fileContainer = templating.getFileContainer(id),\r\n                self = this;\r\n\r\n            function completeUpload(result) {\r\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\r\n                // If so, don't perform any UI-related tasks related to this file.\r\n                if (!fileContainer) {\r\n                    return;\r\n                }\r\n\r\n                templating.setStatusText(id);\r\n\r\n                qq(fileContainer).removeClass(self._classes.retrying);\r\n                templating.hideProgress(id);\r\n\r\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\r\n                    templating.hideCancel(id);\r\n                }\r\n                templating.hideSpinner(id);\r\n\r\n                if (result.success) {\r\n                    self._markFileAsSuccessful(id);\r\n                }\r\n                else {\r\n                    qq(fileContainer).addClass(self._classes.fail);\r\n                    templating.showCancel(id);\r\n\r\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\r\n                        qq(fileContainer).addClass(self._classes.retryable);\r\n                        templating.showRetry(id);\r\n                    }\r\n                    self._controlFailureTextDisplay(id, result);\r\n                }\r\n            }\r\n\r\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\r\n            if (parentRetVal instanceof qq.Promise) {\r\n                parentRetVal.done(function(newResult) {\r\n                    completeUpload(newResult);\r\n                });\r\n\r\n            }\r\n            else {\r\n                completeUpload(result);\r\n            }\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _markFileAsSuccessful: function(id) {\r\n            var templating = this._templating;\r\n\r\n            if (this._isDeletePossible()) {\r\n                templating.showDeleteButton(id);\r\n            }\r\n\r\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\r\n\r\n            this._maybeUpdateThumbnail(id);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\r\n            this._templating.showSpinner(id);\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\r\n\r\n            this._templating.showSpinner(id);\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\r\n\r\n            // Only display the pause button if we have finished uploading at least one chunk\r\n            // & this file can be resumed\r\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\r\n                this._templating.allowPause(id);\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._parent.prototype._onCancel.apply(this, arguments);\r\n            this._removeFileItem(id);\r\n\r\n            if (this._getNotFinished() === 0) {\r\n                this._templating.resetTotalProgress();\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id) {\r\n            var retryNumForDisplay, maxAuto, retryNote;\r\n\r\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\r\n\r\n            this._showCancelLink(id);\r\n\r\n            if (this._options.retry.showAutoRetryNote) {\r\n                retryNumForDisplay = this._autoRetries[id];\r\n                maxAuto = this._options.retry.maxAutoAttempts;\r\n\r\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\r\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\r\n\r\n                this._templating.setStatusText(id, retryNote);\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\r\n            }\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\r\n                this._templating.resetProgress(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\r\n                this._templating.setStatusText(id);\r\n                this._templating.showSpinner(id);\r\n                this._showCancelLink(id);\r\n                return true;\r\n            }\r\n            else {\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\r\n                this._templating.showRetry(id);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id) {\r\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\r\n\r\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\r\n        },\r\n\r\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\r\n            if (this._options.deleteFile.forceConfirm) {\r\n                this._showDeleteConfirm.apply(this, arguments);\r\n            }\r\n            else {\r\n                this._sendDeleteRequest.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhr, isError) {\r\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\r\n\r\n            this._templating.hideSpinner(id);\r\n\r\n            if (isError) {\r\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\r\n                this._templating.showDeleteButton(id);\r\n            }\r\n            else {\r\n                this._removeFileItem(id);\r\n            }\r\n        },\r\n\r\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\r\n            this._templating.hideDeleteButton(id);\r\n            this._templating.showSpinner(id);\r\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\r\n            this._deleteHandler.sendDelete.apply(this, arguments);\r\n        },\r\n\r\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\r\n            /*jshint -W004 */\r\n            var fileName = this.getName(id),\r\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\r\n                uuid = this.getUuid(id),\r\n                deleteRequestArgs = arguments,\r\n                self = this,\r\n                retVal;\r\n\r\n            retVal = this._options.showConfirm(confirmMessage);\r\n\r\n            if (qq.isGenericPromise(retVal)) {\r\n                retVal.then(function() {\r\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n                });\r\n            }\r\n            else if (retVal !== false) {\r\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n            }\r\n        },\r\n\r\n        _addToList: function(id, name, canned) {\r\n            var prependData,\r\n                prependIndex = 0,\r\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\r\n                record;\r\n\r\n            if (this._options.display.prependFiles) {\r\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\r\n                    prependIndex = this._filesInBatchAddedToUi - 1;\r\n                }\r\n\r\n                prependData = {\r\n                    index: prependIndex\r\n                };\r\n            }\r\n\r\n            if (!canned) {\r\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\r\n                    this._templating.disableCancel();\r\n                }\r\n\r\n                // Cancel all existing (previous) files and clear the list if this file is not part of\r\n                // a scaled file group that has already been accepted, or if this file is not part of\r\n                // a scaled file group at all.\r\n                if (!this._options.multiple) {\r\n                    record = this.getUploads({id: id});\r\n\r\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\r\n\r\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\r\n                        this._handler.cancelAll();\r\n                        this._clearList();\r\n                        this._handledProxyGroup = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (canned) {\r\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\r\n            }\r\n            else {\r\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\r\n            }\r\n\r\n            this._filesInBatchAddedToUi += 1;\r\n\r\n            if (canned ||\r\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\r\n\r\n                this._displayFileSize(id);\r\n            }\r\n        },\r\n\r\n        _clearList: function() {\r\n            this._templating.clearFiles();\r\n            this.clearStoredFiles();\r\n        },\r\n\r\n        _displayFileSize: function(id, loadedSize, totalSize) {\r\n            var size = this.getSize(id),\r\n                sizeForDisplay = this._formatSize(size);\r\n\r\n            if (size >= 0) {\r\n                if (loadedSize !== undefined && totalSize !== undefined) {\r\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\r\n                }\r\n\r\n                this._templating.updateSize(id, sizeForDisplay);\r\n            }\r\n        },\r\n\r\n        _formatProgress: function(uploadedSize, totalSize) {\r\n            var message = this._options.text.formatProgress;\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\r\n            r(\"{total_size}\", this._formatSize(totalSize));\r\n            return message;\r\n        },\r\n\r\n        _controlFailureTextDisplay: function(id, response) {\r\n            var mode, responseProperty, failureReason;\r\n\r\n            mode = this._options.failedUploadTextDisplay.mode;\r\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\r\n\r\n            if (mode === \"custom\") {\r\n                failureReason = response[responseProperty];\r\n                if (!failureReason) {\r\n                    failureReason = this._options.text.failUpload;\r\n                }\r\n\r\n                this._templating.setStatusText(id, failureReason);\r\n\r\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\r\n                    this._showTooltip(id, failureReason);\r\n                }\r\n            }\r\n            else if (mode === \"default\") {\r\n                this._templating.setStatusText(id, this._options.text.failUpload);\r\n            }\r\n            else if (mode !== \"none\") {\r\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\r\n            }\r\n        },\r\n\r\n        _showTooltip: function(id, text) {\r\n            this._templating.getFileContainer(id).title = text;\r\n        },\r\n\r\n        _showCancelLink: function(id) {\r\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\r\n                this._templating.showCancel(id);\r\n            }\r\n        },\r\n\r\n        _itemError: function(code, name, item) {\r\n            var message = this._parent.prototype._itemError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._parent.prototype._batchError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _setupPastePrompt: function() {\r\n            var self = this;\r\n\r\n            this._options.callbacks.onPasteReceived = function() {\r\n                var message = self._options.paste.namePromptMessage,\r\n                    defaultVal = self._options.paste.defaultName;\r\n\r\n                return self._options.showPrompt(message, defaultVal);\r\n            };\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id, name) {\r\n            this._totalFilesInBatch -= 1;\r\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            this._totalFilesInBatch = items.length;\r\n            this._filesInBatchAddedToUi = 0;\r\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\r\n        },\r\n\r\n        _maybeUpdateThumbnail: function(fileId) {\r\n            var thumbnailUrl = this._thumbnailUrls[fileId],\r\n                fileStatus = this.getUploads({id: fileId}).status;\r\n\r\n            if (fileStatus !== qq.status.DELETED &&\r\n                (thumbnailUrl ||\r\n                this._options.thumbnails.placeholders.waitUntilResponse ||\r\n                !qq.supportedFeatures.imagePreviews)) {\r\n\r\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\r\n                // if called with a null thumbnailUrl.\r\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\r\n            }\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\r\n\r\n            this._addToList(id, this.getName(id), true);\r\n            this._templating.hideSpinner(id);\r\n            this._templating.hideCancel(id);\r\n            this._markFileAsSuccessful(id);\r\n\r\n            return id;\r\n        },\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._parent.prototype._setSize.apply(this, arguments);\r\n\r\n            this._templating.updateSize(id, this._formatSize(newSize));\r\n        },\r\n\r\n        _sessionRequestComplete: function() {\r\n            this._templating.addCacheToDom();\r\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\n * in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"s3\");\n\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\n        }\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\n}());\n"]}