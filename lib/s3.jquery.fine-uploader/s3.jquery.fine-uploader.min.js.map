{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/s3/jquery-plugin.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/third-party/crypto-js/core.js","../client/js/third-party/crypto-js/enc-base64.js","../client/js/third-party/crypto-js/hmac.js","../client/js/third-party/crypto-js/sha1.js","../client/js/third-party/crypto-js/sha256.js","../client/js/third-party/crypto-js/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.worker-manager.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","s3.fine-uploader.worker-inline.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/s3/uploader.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","rootDataKey","func","$callbackEl","args","jqueryHandlerResult","fineUploaderDnd","fineUploaderS3","endpointType","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","strBefore","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","slicer","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","v","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","xhr","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","fileRecord","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","acceptIosCamera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","paramsInBody","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partIndex","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","onCancelRetVal","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","alreadyInWaiting","alreadyInOpen","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","traditional","handlerModuleSubtype","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","formatVersion","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","maxPixels","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","TAG_VAL_OFFSET","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","expectedBase64Header","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","aBuffer","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","base64test","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","CryptoJS","C","C_lib","lib","Base","F","overrides","subtype","mixIn","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","update","messageUpdate","hash","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","Base64","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","paddingIndex","bits1","bits2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","subInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","bucket","patterns","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","policyJson","awsParams","customParams","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","pad","minutesToAdd","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","doc","contentWindow","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSignerWorkerManager","workerUrl","createS3InlineWorkerUrl","worker","Worker","outstandingRequests","workerPromises","onmessage","resp","generateSignature","task","RequestSigner","handleSignatureReceived","responseJson","pendingSignatureData","pendingSignatures","signatureConstructor","invalid","expectingPolicy","generateHeaders","getStringToSignArtifacts","requestInfo","endOfUrl","signatureSpec","toSign","headerNames","headersStr","generateStringToSign","contentMd5","headerIndexesToRemove","headerName","headerIdx","hashedContent","v2","getStringToSign","v4","signedHeaders","getSignedHeaders","hashed","toSignRaw","raw","thisSignatureRequester","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","getEncodedHashedPayload","content","Host","determineSignatureClientSide","toBeSigned","signatureEffort","updatedHeaders","getHeaders","getToSign","signatureArtifacts","signApiRequest","stringToSign","signPolicy","Authorization","getRequestDate","getEndOfUrl","headersWordArray","headersHmacSha1","headersHmacSha1Base64","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","getCanonicalQueryString","endOfUri","encodedQueryParams","encodedQueryParamNames","queryStrings","queryParamIdx","canonicalQueryString","nameAndVal","paramVal","forEach","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","workerManager","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","stringToSignTemplate","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","headersPattern","matches","credentialPattern","credentialCondition","credential","condition","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","handleSuccessResponse","parsedResponse","pendingRequests","successIndicator","failureIndicator","InitiateMultipartAjaxRequester","getSignatureAjaxRequester","getContentType","handleInitiateRequestComplete","uploadIdElements","messageElements","pendingInitiateRequests","domParser","DOMParser","responseDoc","parseFromString","CompleteMultipartAjaxRequester","handleCompleteRequestComplete","pendingCompleteRequests","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","awsErrorMsg","errorEls","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","toSend","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","codeEls","messageEls","parsedDoc","errorDetails","existedInLocalStorage","baseStorageId","bucketName","isValidResponse","innerHtml","responseData","createForm","handleFinishedUpload","handleUpload","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","HIDE_BEFORE_ENTER_ATTR","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","fileStatus","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","FILE_ID_ATTR","FILE_CLASS_PREFIX","THUMBNAIL_MAX_SIZE_ATTR","THUMBNAIL_SERVER_SCALE_ATTR","HIDE_DROPZONE_ATTR","DROPZPONE_TEXT_ATTR","IN_PROGRESS_CLASS","HIDDEN_FOREVER_CLASS","fileBatch","createDocumentFragment","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"s3.jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery*/\n/**\n * Simply an alias for the `fineUploader` plug-in wrapper, but hides the required `endpointType` option from the\n * integrator.  I thought it may be confusing to convey to the integrator that, when using Fine Uploader in S3 mode,\n * you need to specify an `endpointType` with a value of S3, and perhaps an `uploaderType` with a value of \"basic\" if\n * you want to use basic mode when uploading directly to S3 as well.  So, you can use this plug-in alias and not worry\n * about the `endpointType` option at all.\n */\n(function($) {\n    \"use strict\";\n\n    $.fn.fineUploaderS3 = function(optionsOrCommand) {\n        if (typeof optionsOrCommand === \"object\") {\n\n            // This option is used to tell the plug-in wrapper to instantiate the appropriate S3-namespace modules.\n            optionsOrCommand.endpointType = \"s3\";\n        }\n\n        return $.fn.fineUploader.apply(this, arguments);\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\r\nqq.version = \"5.14.0-beta3\";\r\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\r\n/**\r\n * Defines the public API for FineUploaderBasic mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.basePublicApi = {\r\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\r\n        addBlobs: function(blobDataOrArray, params, endpoint) {\r\n            this.addFiles(blobDataOrArray, params, endpoint);\r\n        },\r\n\r\n        addInitialFiles: function(cannedFileList) {\r\n            var self = this;\r\n\r\n            qq.each(cannedFileList, function(index, cannedFile) {\r\n                self._addCannedFile(cannedFile);\r\n            });\r\n        },\r\n\r\n        addFiles: function(data, params, endpoint) {\r\n            this._maybeHandleIos8SafariWorkaround();\r\n\r\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\r\n\r\n                processBlob = qq.bind(function(blob) {\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processBlobData = qq.bind(function(blobData) {\r\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvas = qq.bind(function(canvas) {\r\n                    var blob = qq.canvasToBlob(canvas);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: this._options.blobs.defaultName + \".png\"\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processCanvasData = qq.bind(function(canvasData) {\r\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\r\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\r\n\r\n                    this._handleNewFile({\r\n                        blob: blob,\r\n                        name: canvasData.name\r\n                    }, batchId, verifiedFiles);\r\n                }, this),\r\n\r\n                processFileOrInput = qq.bind(function(fileOrInput) {\r\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\r\n                        var files = Array.prototype.slice.call(fileOrInput.files),\r\n                            self = this;\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            self._handleNewFile(file, batchId, verifiedFiles);\r\n                        });\r\n                    }\r\n                    else {\r\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\r\n                    }\r\n                }, this),\r\n\r\n                normalizeData = function() {\r\n                    if (qq.isFileList(data)) {\r\n                        data = Array.prototype.slice.call(data);\r\n                    }\r\n                    data = [].concat(data);\r\n                },\r\n\r\n                self = this,\r\n                verifiedFiles = [];\r\n\r\n            this._currentBatchId = batchId;\r\n\r\n            if (data) {\r\n                normalizeData();\r\n\r\n                qq.each(data, function(idx, fileContainer) {\r\n                    if (qq.isFileOrInput(fileContainer)) {\r\n                        processFileOrInput(fileContainer);\r\n                    }\r\n                    else if (qq.isBlob(fileContainer)) {\r\n                        processBlob(fileContainer);\r\n                    }\r\n                    else if (qq.isObject(fileContainer)) {\r\n                        if (fileContainer.blob && fileContainer.name) {\r\n                            processBlobData(fileContainer);\r\n                        }\r\n                        else if (fileContainer.canvas && fileContainer.name) {\r\n                            processCanvasData(fileContainer);\r\n                        }\r\n                    }\r\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\r\n                        processCanvas(fileContainer);\r\n                    }\r\n                    else {\r\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\r\n                    }\r\n                });\r\n\r\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\r\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\r\n            }\r\n        },\r\n\r\n        cancel: function(id) {\r\n            this._handler.cancel(id);\r\n        },\r\n\r\n        cancelAll: function() {\r\n            var storedIdsCopy = [],\r\n                self = this;\r\n\r\n            qq.extend(storedIdsCopy, this._storedIds);\r\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\r\n                self.cancel(storedFileId);\r\n            });\r\n\r\n            this._handler.cancelAll();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._storedIds = [];\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (uploadData.status === qq.status.PAUSED) {\r\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\r\n                this._uploadFile(id);\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        deleteFile: function(id) {\r\n            return this._onSubmitDelete(id);\r\n        },\r\n\r\n        // TODO document?\r\n        doesExist: function(fileOrBlobId) {\r\n            return this._handler.isValid(fileOrBlobId);\r\n        },\r\n\r\n        // Generate a variable size thumbnail on an img or canvas,\r\n        // returning a promise that is fulfilled when the attempt completes.\r\n        // Thumbnail can either be based off of a URL for an image returned\r\n        // by the server in the upload response, or the associated `Blob`.\r\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\r\n            var promiseToReturn = new qq.Promise(),\r\n                fileOrUrl, options;\r\n\r\n            if (this._imageGenerator) {\r\n                fileOrUrl = this._thumbnailUrls[fileId];\r\n                options = {\r\n                    customResizeFunction: customResizeFunction,\r\n                    maxSize: maxSize > 0 ? maxSize : null,\r\n                    scale: maxSize > 0\r\n                };\r\n\r\n                // If client-side preview generation is possible\r\n                // and we are not specifically looking for the image URl returned by the server...\r\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\r\n                    fileOrUrl = this.getFile(fileId);\r\n                }\r\n\r\n                /* jshint eqeqeq:false,eqnull:true */\r\n                if (fileOrUrl == null) {\r\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\r\n                }\r\n                else {\r\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\r\n                        function success(modifiedContainer) {\r\n                            promiseToReturn.success(modifiedContainer);\r\n                        },\r\n\r\n                        function failure(container, reason) {\r\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\r\n            }\r\n\r\n            return promiseToReturn;\r\n        },\r\n\r\n        getButton: function(fileId) {\r\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\r\n        },\r\n\r\n        getEndpoint: function(fileId) {\r\n            return this._endpointStore.get(fileId);\r\n        },\r\n\r\n        getFile: function(fileOrBlobId) {\r\n            return this._handler.getFile(fileOrBlobId) || null;\r\n        },\r\n\r\n        getInProgress: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        getName: function(id) {\r\n            return this._uploadData.retrieve({id: id}).name;\r\n        },\r\n\r\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\r\n        getParentId: function(id) {\r\n            var uploadDataEntry = this.getUploads({id: id}),\r\n                parentId = null;\r\n\r\n            if (uploadDataEntry) {\r\n                if (uploadDataEntry.parentId !== undefined) {\r\n                    parentId = uploadDataEntry.parentId;\r\n                }\r\n            }\r\n\r\n            return parentId;\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            return this._handler.getResumableFilesData();\r\n        },\r\n\r\n        getSize: function(id) {\r\n            return this._uploadData.retrieve({id: id}).size;\r\n        },\r\n\r\n        getNetUploads: function() {\r\n            return this._netUploaded;\r\n        },\r\n\r\n        getRemainingAllowedItems: function() {\r\n            var allowedItems = this._currentItemLimit;\r\n\r\n            if (allowedItems > 0) {\r\n                return allowedItems - this._netUploadedOrQueued;\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        getUploads: function(optionalFilter) {\r\n            return this._uploadData.retrieve(optionalFilter);\r\n        },\r\n\r\n        getUuid: function(id) {\r\n            return this._uploadData.retrieve({id: id}).uuid;\r\n        },\r\n\r\n        log: function(str, level) {\r\n            if (this._options.debug && (!level || level === \"info\")) {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\r\n            }\r\n            else if (level && level !== \"info\") {\r\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\r\n\r\n            }\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\r\n                return false;\r\n            }\r\n\r\n            // Pause only really makes sense if the file is uploading or retrying\r\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\r\n                if (this._handler.pause(id)) {\r\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\r\n                }\r\n            }\r\n            else {\r\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        removeFileRef: function(id) {\r\n            this._handler.expunge(id);\r\n        },\r\n\r\n        reset: function() {\r\n            this.log(\"Resetting uploader...\");\r\n\r\n            this._handler.reset();\r\n            this._storedIds = [];\r\n            this._autoRetries = [];\r\n            this._retryTimeouts = [];\r\n            this._preventRetries = [];\r\n            this._thumbnailUrls = [];\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n\r\n            this._paramsStore.reset();\r\n            this._endpointStore.reset();\r\n            this._netUploadedOrQueued = 0;\r\n            this._netUploaded = 0;\r\n            this._uploadData.reset();\r\n            this._buttonIdsForFileIds = [];\r\n\r\n            this._pasteHandler && this._pasteHandler.reset();\r\n            this._options.session.refreshOnReset && this._refreshSessionData();\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n\r\n            this._totalProgress && this._totalProgress.reset();\r\n        },\r\n\r\n        retry: function(id) {\r\n            return this._manualRetry(id);\r\n        },\r\n\r\n        scaleImage: function(id, specs) {\r\n            var self = this;\r\n\r\n            return qq.Scaler.prototype.scaleImage(id, specs, {\r\n                log: qq.bind(self.log, self),\r\n                getFile: qq.bind(self.getFile, self),\r\n                uploadData: self._uploadData\r\n            });\r\n        },\r\n\r\n        setCustomHeaders: function(headers, id) {\r\n            this._customHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileCustomHeaders: function(headers, id) {\r\n            this._deleteFileCustomHeadersStore.set(headers, id);\r\n        },\r\n\r\n        setDeleteFileEndpoint: function(endpoint, id) {\r\n            this._deleteFileEndpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setDeleteFileParams: function(params, id) {\r\n            this._deleteFileParamsStore.set(params, id);\r\n        },\r\n\r\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\r\n        setEndpoint: function(endpoint, id) {\r\n            this._endpointStore.set(endpoint, id);\r\n        },\r\n\r\n        setForm: function(elementOrId) {\r\n            this._updateFormSupportAndParams(elementOrId);\r\n        },\r\n\r\n        setItemLimit: function(newItemLimit) {\r\n            this._currentItemLimit = newItemLimit;\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            this._uploadData.updateName(id, newName);\r\n        },\r\n\r\n        setParams: function(params, id) {\r\n            this._paramsStore.set(params, id);\r\n        },\r\n\r\n        setUuid: function(id, newUuid) {\r\n            return this._uploadData.uuidChanged(id, newUuid);\r\n        },\r\n\r\n        /**\r\n         * Expose the internal status of a file id to the public api for manual state changes\r\n         * @public\r\n         *\r\n         * @param {Number} id,\r\n         * @param {String} newStatus\r\n         *\r\n         * @todo Implement the remaining methods\r\n         */\r\n        setStatus: function(id, newStatus) {\r\n            var fileRecord = this.getUploads({id: id});\r\n            if (!fileRecord) {\r\n                throw new qq.Error(id + \" is not a valid file ID.\");\r\n            }\r\n\r\n            switch (newStatus) {\r\n                case qq.status.DELETED:\r\n                    this._onDeleteComplete(id, null, false);\r\n                    break;\r\n                case qq.status.DELETE_FAILED:\r\n                    this._onDeleteComplete(id, null, true);\r\n                    break;\r\n                default:\r\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\r\n                    this.log(errorMessage);\r\n                    throw new qq.Error(errorMessage);\r\n            }\r\n        },\r\n\r\n        uploadStoredFiles: function() {\r\n            if (this._storedIds.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n            }\r\n            else {\r\n                this._uploadStoredFiles();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploaderBasic mode.\r\n     */\r\n    qq.basePrivateApi = {\r\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._uploadData.addFile({\r\n                uuid: sessionData.uuid,\r\n                name: sessionData.name,\r\n                size: sessionData.size,\r\n                status: qq.status.UPLOAD_SUCCESSFUL\r\n            });\r\n\r\n            sessionData.deleteFileEndpoint && this.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\r\n            sessionData.deleteFileParams && this.setDeleteFileParams(sessionData.deleteFileParams, id);\r\n\r\n            if (sessionData.thumbnailUrl) {\r\n                this._thumbnailUrls[id] = sessionData.thumbnailUrl;\r\n            }\r\n\r\n            this._netUploaded++;\r\n            this._netUploadedOrQueued++;\r\n\r\n            return id;\r\n        },\r\n\r\n        _annotateWithButtonId: function(file, associatedInput) {\r\n            if (qq.isFile(file)) {\r\n                file.qqButtonId = this._getButtonId(associatedInput);\r\n            }\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._options.callbacks.onError(null, null, message, undefined);\r\n        },\r\n\r\n        _createDeleteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.DeleteFileAjaxRequester({\r\n                method: this._options.deleteFile.method.toUpperCase(),\r\n                maxConnections: this._options.maxConnections,\r\n                uuidParamName: this._options.request.uuidName,\r\n                customHeaders: this._deleteFileCustomHeadersStore,\r\n                paramsStore: this._deleteFileParamsStore,\r\n                endpointStore: this._deleteFileEndpointStore,\r\n                cors: this._options.cors,\r\n                log: qq.bind(self.log, self),\r\n                onDelete: function(id) {\r\n                    self._onDelete(id);\r\n                    self._options.callbacks.onDelete(id);\r\n                },\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\r\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        _createPasteHandler: function() {\r\n            var self = this;\r\n\r\n            return new qq.PasteSupport({\r\n                targetElement: this._options.paste.targetElement,\r\n                callbacks: {\r\n                    log: qq.bind(self.log, self),\r\n                    pasteReceived: function(blob) {\r\n                        self._handleCheckedCallback({\r\n                            name: \"onPasteReceived\",\r\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\r\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\r\n                            identifier: \"pasted image\"\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _createStore: function(initialValue, _readOnlyValues_) {\r\n            var store = {},\r\n                catchall = initialValue,\r\n                perIdReadOnlyValues = {},\r\n                readOnlyValues = _readOnlyValues_,\r\n                copy = function(orig) {\r\n                    if (qq.isObject(orig)) {\r\n                        return qq.extend({}, orig);\r\n                    }\r\n                    return orig;\r\n                },\r\n                getReadOnlyValues = function() {\r\n                    if (qq.isFunction(readOnlyValues)) {\r\n                        return readOnlyValues();\r\n                    }\r\n                    return readOnlyValues;\r\n                },\r\n                includeReadOnlyValues = function(id, existing) {\r\n                    if (readOnlyValues && qq.isObject(existing)) {\r\n                        qq.extend(existing, getReadOnlyValues());\r\n                    }\r\n\r\n                    if (perIdReadOnlyValues[id]) {\r\n                        qq.extend(existing, perIdReadOnlyValues[id]);\r\n                    }\r\n                };\r\n\r\n            return {\r\n                set: function(val, id) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id == null) {\r\n                        store = {};\r\n                        catchall = copy(val);\r\n                    }\r\n                    else {\r\n                        store[id] = copy(val);\r\n                    }\r\n                },\r\n\r\n                get: function(id) {\r\n                    var values;\r\n\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    if (id != null && store[id]) {\r\n                        values = store[id];\r\n                    }\r\n                    else {\r\n                        values = copy(catchall);\r\n                    }\r\n\r\n                    includeReadOnlyValues(id, values);\r\n\r\n                    return copy(values);\r\n                },\r\n\r\n                addReadOnly: function(id, values) {\r\n                    // Only applicable to Object stores\r\n                    if (qq.isObject(store)) {\r\n                        // If null ID, apply readonly values to all files\r\n                        if (id === null) {\r\n                            if (qq.isFunction(values)) {\r\n                                readOnlyValues = values;\r\n                            }\r\n                            else {\r\n                                readOnlyValues = readOnlyValues || {};\r\n                                qq.extend(readOnlyValues, values);\r\n                            }\r\n                        }\r\n                        else {\r\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\r\n                            qq.extend(perIdReadOnlyValues[id], values);\r\n                        }\r\n                    }\r\n                },\r\n\r\n                remove: function(fileId) {\r\n                    return delete store[fileId];\r\n                },\r\n\r\n                reset: function() {\r\n                    store = {};\r\n                    perIdReadOnlyValues = {};\r\n                    catchall = initialValue;\r\n                }\r\n            };\r\n        },\r\n\r\n        _createUploadDataTracker: function() {\r\n            var self = this;\r\n\r\n            return new qq.UploadData({\r\n                getName: function(id) {\r\n                    return self.getName(id);\r\n                },\r\n                getUuid: function(id) {\r\n                    return self.getUuid(id);\r\n                },\r\n                getSize: function(id) {\r\n                    return self.getSize(id);\r\n                },\r\n                onStatusChange: function(id, oldStatus, newStatus) {\r\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\r\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\r\n                    self._maybeAllComplete(id, newStatus);\r\n\r\n                    if (self._totalProgress) {\r\n                        setTimeout(function() {\r\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\r\n                        }, 0);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Generate a tracked upload button.\r\n         *\r\n         * @param spec Object containing a required `element` property\r\n         * along with optional `multiple`, `accept`, and `folders`.\r\n         * @returns {qq.UploadButton}\r\n         * @private\r\n         */\r\n        _createUploadButton: function(spec) {\r\n            var self = this,\r\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\r\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\r\n                button;\r\n\r\n            function allowMultiple() {\r\n                if (qq.supportedFeatures.ajaxUploading) {\r\n                    // Workaround for bug in iOS7+ (see #1039)\r\n                    if (self._options.workarounds.iosEmptyVideos &&\r\n                        qq.ios() &&\r\n                        !qq.ios6() &&\r\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\r\n\r\n                        return false;\r\n                    }\r\n\r\n                    if (spec.multiple === undefined) {\r\n                        return self._options.multiple;\r\n                    }\r\n\r\n                    return spec.multiple;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            button = new qq.UploadButton({\r\n                acceptFiles: acceptFiles,\r\n                element: spec.element,\r\n                focusClass: this._options.classes.buttonFocus,\r\n                folders: spec.folders,\r\n                hoverClass: this._options.classes.buttonHover,\r\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\r\n                multiple: allowMultiple(),\r\n                name: this._options.request.inputName,\r\n                onChange: function(input) {\r\n                    self._onInputChange(input);\r\n                },\r\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\r\n            });\r\n\r\n            this._disposeSupport.addDisposer(function() {\r\n                button.dispose();\r\n            });\r\n\r\n            self._buttons.push(button);\r\n\r\n            return button;\r\n        },\r\n\r\n        _createUploadHandler: function(additionalOptions, namespace) {\r\n            var self = this,\r\n                lastOnProgress = {},\r\n                options = {\r\n                    debug: this._options.debug,\r\n                    maxConnections: this._options.maxConnections,\r\n                    cors: this._options.cors,\r\n                    paramsStore: this._paramsStore,\r\n                    endpointStore: this._endpointStore,\r\n                    chunking: this._options.chunking,\r\n                    resume: this._options.resume,\r\n                    blobs: this._options.blobs,\r\n                    log: qq.bind(self.log, self),\r\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\r\n                    onProgress: function(id, name, loaded, total) {\r\n                        if (loaded < 0 || total < 0) {\r\n                            return;\r\n                        }\r\n\r\n                        if (lastOnProgress[id]) {\r\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\r\n                                self._onProgress(id, name, loaded, total);\r\n                                self._options.callbacks.onProgress(id, name, loaded, total);\r\n                            }\r\n                        }\r\n                        else {\r\n                            self._onProgress(id, name, loaded, total);\r\n                            self._options.callbacks.onProgress(id, name, loaded, total);\r\n                        }\r\n\r\n                        lastOnProgress[id] = {loaded: loaded, total: total};\r\n\r\n                    },\r\n                    onComplete: function(id, name, result, xhr) {\r\n                        delete lastOnProgress[id];\r\n\r\n                        var status = self.getUploads({id: id}).status,\r\n                            retVal;\r\n\r\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\r\n                        // invoked by the browser multiple times for the same XHR instance with the same state\r\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\r\n                        // done this.\r\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\r\n                            return;\r\n                        }\r\n\r\n                        retVal = self._onComplete(id, name, result, xhr);\r\n\r\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\r\n                        // until the promise has been fulfilled.\r\n                        if (retVal instanceof  qq.Promise) {\r\n                            retVal.done(function() {\r\n                                self._options.callbacks.onComplete(id, name, result, xhr);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self._options.callbacks.onComplete(id, name, result, xhr);\r\n                        }\r\n                    },\r\n                    onCancel: function(id, name, cancelFinalizationEffort) {\r\n                        var promise = new qq.Promise();\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onCancel\",\r\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\r\n                            onFailure: promise.failure,\r\n                            onSuccess: function() {\r\n                                cancelFinalizationEffort.then(function() {\r\n                                    self._onCancel(id, name);\r\n                                });\r\n\r\n                                promise.success();\r\n                            },\r\n                            identifier: id\r\n                        });\r\n\r\n                        return promise;\r\n                    },\r\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\r\n                    onUpload: function(id, name) {\r\n                        self._onUpload(id, name);\r\n                        self._options.callbacks.onUpload(id, name);\r\n                    },\r\n                    onUploadChunk: function(id, name, chunkData) {\r\n                        self._onUploadChunk(id, chunkData);\r\n                        self._options.callbacks.onUploadChunk(id, name, chunkData);\r\n                    },\r\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\r\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\r\n                    },\r\n                    onResume: function(id, name, chunkData) {\r\n                        return self._options.callbacks.onResume(id, name, chunkData);\r\n                    },\r\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\r\n                        return self._onAutoRetry.apply(self, arguments);\r\n                    },\r\n                    onUuidChanged: function(id, newUuid) {\r\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\r\n                        self.setUuid(id, newUuid);\r\n                    },\r\n                    getName: qq.bind(self.getName, self),\r\n                    getUuid: qq.bind(self.getUuid, self),\r\n                    getSize: qq.bind(self.getSize, self),\r\n                    setSize: qq.bind(self._setSize, self),\r\n                    getDataByUuid: function(uuid) {\r\n                        return self.getUploads({uuid: uuid});\r\n                    },\r\n                    isQueued: function(id) {\r\n                        var status = self.getUploads({id: id}).status;\r\n                        return status === qq.status.QUEUED ||\r\n                            status === qq.status.SUBMITTED ||\r\n                            status === qq.status.UPLOAD_RETRYING ||\r\n                            status === qq.status.PAUSED;\r\n                    },\r\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\r\n                    getIdsInBatch: self._uploadData.getIdsInBatch\r\n                };\r\n\r\n            qq.each(this._options.request, function(prop, val) {\r\n                options[prop] = val;\r\n            });\r\n\r\n            options.customHeaders = this._customHeadersStore;\r\n\r\n            if (additionalOptions) {\r\n                qq.each(additionalOptions, function(key, val) {\r\n                    options[key] = val;\r\n                });\r\n            }\r\n\r\n            return new qq.UploadHandlerController(options, namespace);\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id) {\r\n            this._netUploadedOrQueued--;\r\n            this._uploadData.setStatus(id, qq.status.REJECTED);\r\n        },\r\n\r\n        _formatSize: function(bytes) {\r\n            if (bytes === 0) {\r\n                return bytes + this._options.text.sizeSymbols[0];\r\n            }\r\n            var i = -1;\r\n            do {\r\n                bytes = bytes / 1000;\r\n                i++;\r\n            } while (bytes > 999);\r\n\r\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\r\n        },\r\n\r\n        // Creates an internal object that tracks various properties of each extra button,\r\n        // and then actually creates the extra button.\r\n        _generateExtraButtonSpecs: function() {\r\n            var self = this;\r\n\r\n            this._extraButtonSpecs = {};\r\n\r\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\r\n                var multiple = extraButtonOptionEntry.multiple,\r\n                    validation = qq.extend({}, self._options.validation, true),\r\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\r\n\r\n                if (multiple === undefined) {\r\n                    multiple = self._options.multiple;\r\n                }\r\n\r\n                if (extraButtonSpec.validation) {\r\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\r\n                }\r\n\r\n                qq.extend(extraButtonSpec, {\r\n                    multiple: multiple,\r\n                    validation: validation\r\n                }, true);\r\n\r\n                self._initExtraButton(extraButtonSpec);\r\n            });\r\n        },\r\n\r\n        _getButton: function(buttonId) {\r\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            if (extraButtonsSpec) {\r\n                return extraButtonsSpec.element;\r\n            }\r\n            else if (buttonId === this._defaultButtonId) {\r\n                return this._options.button;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Gets the internally used tracking ID for a button.\r\n         *\r\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\r\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\r\n         * @private\r\n         */\r\n        _getButtonId: function(buttonOrFileInputOrFile) {\r\n            var inputs, fileInput,\r\n                fileBlobOrInput = buttonOrFileInputOrFile;\r\n\r\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\r\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\r\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\r\n            }\r\n\r\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\r\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\r\n                if (qq.isFile(fileBlobOrInput)) {\r\n                    return fileBlobOrInput.qqButtonId;\r\n                }\r\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\r\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\r\n\r\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n\r\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\r\n\r\n                qq.each(inputs, function(idx, input) {\r\n                    if (input.getAttribute(\"type\") === \"file\") {\r\n                        fileInput = input;\r\n                        return false;\r\n                    }\r\n                });\r\n\r\n                if (fileInput) {\r\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\r\n                }\r\n            }\r\n        },\r\n\r\n        _getNotFinished: function() {\r\n            return this._uploadData.retrieve({\r\n                status: [\r\n                    qq.status.UPLOADING,\r\n                    qq.status.UPLOAD_RETRYING,\r\n                    qq.status.QUEUED,\r\n                    qq.status.SUBMITTING,\r\n                    qq.status.SUBMITTED,\r\n                    qq.status.PAUSED\r\n                ]\r\n            }).length;\r\n        },\r\n\r\n        // Get the validation options for this button.  Could be the default validation option\r\n        // or a specific one assigned to this particular button.\r\n        _getValidationBase: function(buttonId) {\r\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\r\n\r\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\r\n        },\r\n\r\n        _getValidationDescriptor: function(fileWrapper) {\r\n            if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                return {\r\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\r\n                    size: fileWrapper.file.referenceBlob.size\r\n                };\r\n            }\r\n\r\n            return {\r\n                name: this.getUploads({id: fileWrapper.id}).name,\r\n                size: this.getUploads({id: fileWrapper.id}).size\r\n            };\r\n        },\r\n\r\n        _getValidationDescriptors: function(fileWrappers) {\r\n            var self = this,\r\n                fileDescriptors = [];\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\r\n            });\r\n\r\n            return fileDescriptors;\r\n        },\r\n\r\n        // Allows camera access on either the default or an extra button for iOS devices.\r\n        _handleCameraAccess: function() {\r\n            if (this._options.camera.ios && qq.ios()) {\r\n                var acceptIosCamera = \"image/*;capture=camera\",\r\n                    button = this._options.camera.button,\r\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\r\n                    optionRoot = this._options;\r\n\r\n                // If we are not targeting the default button, it is an \"extra\" button\r\n                if (buttonId && buttonId !== this._defaultButtonId) {\r\n                    optionRoot = this._extraButtonSpecs[buttonId];\r\n                }\r\n\r\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\r\n                optionRoot.multiple = false;\r\n\r\n                // update the options\r\n                if (optionRoot.validation.acceptFiles === null) {\r\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\r\n                }\r\n                else {\r\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\r\n                }\r\n\r\n                // update the already-created button\r\n                qq.each(this._buttons, function(idx, button) {\r\n                    if (button.getButtonId() === buttonId) {\r\n                        button.setMultiple(optionRoot.multiple);\r\n                        button.setAcceptFiles(optionRoot.acceptFiles);\r\n\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        _handleCheckedCallback: function(details) {\r\n            var self = this,\r\n                callbackRetVal = details.callback();\r\n\r\n            if (qq.isGenericPromise(callbackRetVal)) {\r\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\r\n                return callbackRetVal.then(\r\n                    function(successParam) {\r\n                        self.log(details.name + \" promise success for \" + details.identifier);\r\n                        details.onSuccess(successParam);\r\n                    },\r\n                    function() {\r\n                        if (details.onFailure) {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                            details.onFailure();\r\n                        }\r\n                        else {\r\n                            self.log(details.name + \" promise failure for \" + details.identifier);\r\n                        }\r\n                    });\r\n            }\r\n\r\n            if (callbackRetVal !== false) {\r\n                details.onSuccess(callbackRetVal);\r\n            }\r\n            else {\r\n                if (details.onFailure) {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\r\n                    details.onFailure();\r\n                }\r\n                else {\r\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\r\n                }\r\n            }\r\n\r\n            return callbackRetVal;\r\n        },\r\n\r\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\r\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\r\n            var self = this,\r\n                uuid = qq.getUniqueId(),\r\n                size = -1,\r\n                name = qq.getFilename(file),\r\n                actualFile = file.blob || file,\r\n                handler = this._customNewFileHandler ?\r\n                    this._customNewFileHandler :\r\n                    qq.bind(self._handleNewFileGeneric, self);\r\n\r\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\r\n                size = actualFile.size;\r\n            }\r\n\r\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\r\n                uploadData: self._uploadData,\r\n                paramsStore: self._paramsStore,\r\n                addFileToHandler: function(id, file) {\r\n                    self._handler.add(id, file);\r\n                    self._netUploadedOrQueued++;\r\n                    self._trackButton(id);\r\n                }\r\n            });\r\n        },\r\n\r\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\r\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\r\n\r\n            this._handler.add(id, file);\r\n            this._trackButton(id);\r\n\r\n            this._netUploadedOrQueued++;\r\n\r\n            fileList.push({id: id, file: file});\r\n        },\r\n\r\n        _handlePasteSuccess: function(blob, extSuppliedName) {\r\n            var extension = blob.type.split(\"/\")[1],\r\n                name = extSuppliedName;\r\n\r\n            /*jshint eqeqeq: true, eqnull: true*/\r\n            if (name == null) {\r\n                name = this._options.paste.defaultName;\r\n            }\r\n\r\n            name += \".\" + extension;\r\n\r\n            this.addFiles({\r\n                name: name,\r\n                blob: blob\r\n            });\r\n        },\r\n\r\n        _handleDeleteSuccess: function(id) {\r\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\r\n                var name = this.getName(id);\r\n\r\n                this._netUploadedOrQueued--;\r\n                this._netUploaded--;\r\n                this._handler.expunge(id);\r\n                this._uploadData.setStatus(id, qq.status.DELETED);\r\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\r\n            }\r\n        },\r\n\r\n        _handleDeleteFailed: function(id, xhrOrXdr) {\r\n            var name = this.getName(id);\r\n\r\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\r\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\r\n\r\n            // Check first if xhrOrXdr is actually passed or valid\r\n            // For error reporting, we only have access to the response status if this is not\r\n            // an `XDomainRequest`.\r\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\r\n            }\r\n            else {\r\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\r\n            }\r\n        },\r\n\r\n        // Creates an extra button element\r\n        _initExtraButton: function(spec) {\r\n            var button = this._createUploadButton({\r\n                accept: spec.validation.acceptFiles,\r\n                allowedExtensions: spec.validation.allowedExtensions,\r\n                element: spec.element,\r\n                folders: spec.folders,\r\n                multiple: spec.multiple,\r\n                title: spec.fileInputTitle\r\n            });\r\n\r\n            this._extraButtonSpecs[button.getButtonId()] = spec;\r\n        },\r\n\r\n        _initFormSupportAndParams: function() {\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n            );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore = this._createStore(\r\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\r\n                );\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\r\n                }\r\n            }\r\n            else {\r\n                this._paramsStore = this._createStore(this._options.request.params);\r\n            }\r\n        },\r\n\r\n        _isDeletePossible: function() {\r\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\r\n                return false;\r\n            }\r\n\r\n            if (this._options.cors.expected) {\r\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\r\n                    return true;\r\n                }\r\n\r\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        _isAllowedExtension: function(allowed, fileName) {\r\n            var valid = false;\r\n\r\n            if (!allowed.length) {\r\n                return true;\r\n            }\r\n\r\n            qq.each(allowed, function(idx, allowedExt) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExt)) {\r\n                    /*jshint eqeqeq: true, eqnull: true*/\r\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\r\n\r\n                    if (fileName.match(extRegex) != null) {\r\n                        valid = true;\r\n                        return false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return valid;\r\n        },\r\n\r\n        /**\r\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\r\n         *\r\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\r\n         * @param maybeNameOrNames names of the items that have failed, if applicable\r\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\r\n         * @private\r\n         */\r\n        _itemError: function(code, maybeNameOrNames, item) {\r\n            var message = this._options.messages[code],\r\n                allowedExtensions = [],\r\n                names = [].concat(maybeNameOrNames),\r\n                name = names[0],\r\n                buttonId = this._getButtonId(item),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                extensionsForMessage, placeholderMatch;\r\n\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\r\n                /**\r\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\r\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\r\n                 */\r\n                if (qq.isString(allowedExtension)) {\r\n                    allowedExtensions.push(allowedExtension);\r\n                }\r\n            });\r\n\r\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\r\n\r\n            r(\"{file}\", this._options.formatFileName(name));\r\n            r(\"{extensions}\", extensionsForMessage);\r\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\r\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\r\n\r\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\r\n            if (placeholderMatch !== null) {\r\n                qq.each(placeholderMatch, function(idx, placeholder) {\r\n                    r(placeholder, names[idx]);\r\n                });\r\n            }\r\n\r\n            this._options.callbacks.onError(null, name, message, undefined);\r\n\r\n            return message;\r\n        },\r\n\r\n        /**\r\n         * Conditionally orders a manual retry of a failed upload.\r\n         *\r\n         * @param id File ID of the failed upload\r\n         * @param callback Optional callback to invoke if a retry is prudent.\r\n         * In lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if a manual retry will occur\r\n         * @private\r\n         */\r\n        _manualRetry: function(id, callback) {\r\n            if (this._onBeforeManualRetry(id)) {\r\n                this._netUploadedOrQueued++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n\r\n                if (callback) {\r\n                    callback(id);\r\n                }\r\n                else {\r\n                    this._handler.retry(id);\r\n                }\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _maybeAllComplete: function(id, status) {\r\n            var self = this,\r\n                notFinished = this._getNotFinished();\r\n\r\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\r\n                this._succeededSinceLastAllComplete.push(id);\r\n            }\r\n            else if (status === qq.status.UPLOAD_FAILED) {\r\n                this._failedSinceLastAllComplete.push(id);\r\n            }\r\n\r\n            if (notFinished === 0 &&\r\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\r\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\r\n                setTimeout(function() {\r\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _maybeHandleIos8SafariWorkaround: function() {\r\n            var self = this;\r\n\r\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\r\n                setTimeout(function() {\r\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\r\n                }, 0);\r\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\r\n            }\r\n        },\r\n\r\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\r\n            // Assuming no one will actually set the response code to something other than 200\r\n            // and still set 'success' to true...\r\n            if (!response.success) {\r\n                if (xhr && xhr.status !== 200 && !response.error) {\r\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\r\n                }\r\n                else {\r\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\r\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\r\n            var self = this;\r\n\r\n            if (items.length > index) {\r\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\r\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\r\n                    setTimeout(function() {\r\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\r\n                            buttonId = self._getButtonId(items[index].file),\r\n                            button = self._getButton(buttonId);\r\n\r\n                        self._handleCheckedCallback({\r\n                            name: \"onValidate\",\r\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\r\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\r\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\r\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\r\n                        });\r\n                    }, 0);\r\n                }\r\n                else if (!validItem) {\r\n                    for (; index < items.length; index++) {\r\n                        self._fileOrBlobRejected(items[index].id);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\r\n\r\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\r\n\r\n            this._succeededSinceLastAllComplete = [];\r\n            this._failedSinceLastAllComplete = [];\r\n        },\r\n\r\n        /**\r\n         * Attempt to automatically retry a failed upload.\r\n         *\r\n         * @param id The file ID of the failed upload\r\n         * @param name The name of the file associated with the failed upload\r\n         * @param responseJSON Response from the server, parsed into a javascript object\r\n         * @param xhr Ajax transport used to send the failed request\r\n         * @param callback Optional callback to be invoked if a retry is prudent.\r\n         * Invoked in lieu of asking the upload handler to retry.\r\n         * @returns {boolean} true if an auto-retry will occur\r\n         * @private\r\n         */\r\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\r\n            var self = this;\r\n\r\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\r\n\r\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\r\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\r\n\r\n                self._maybeParseAndSendUploadError.apply(self, arguments);\r\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\r\n                self._onBeforeAutoRetry(id, name);\r\n\r\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\r\n                self._retryTimeouts[id] = setTimeout(function() {\r\n                    self.log(\"Starting retry for \" + name + \"...\");\r\n\r\n                    if (callback) {\r\n                        callback(id);\r\n                    }\r\n                    else {\r\n                        self._handler.retry(id);\r\n                    }\r\n                }, retryWaitPeriod);\r\n\r\n                return true;\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id, name) {\r\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            var itemLimit = this._currentItemLimit,\r\n                fileName;\r\n\r\n            if (this._preventRetries[id]) {\r\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\r\n                return false;\r\n            }\r\n            else if (this._handler.isValid(id)) {\r\n                fileName = this.getName(id);\r\n\r\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\r\n                    return false;\r\n                }\r\n\r\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\r\n                    this._itemError(\"retryFailTooManyItems\");\r\n                    return false;\r\n                }\r\n\r\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._netUploadedOrQueued--;\r\n\r\n            clearTimeout(this._retryTimeouts[id]);\r\n\r\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\r\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\r\n                this._storedIds.splice(storedItemIndex, 1);\r\n            }\r\n\r\n            this._uploadData.setStatus(id, qq.status.CANCELED);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            if (!result.success) {\r\n                this._netUploadedOrQueued--;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\r\n\r\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\r\n                    this._preventRetries[id] = true;\r\n                }\r\n            }\r\n            else {\r\n                if (result.thumbnailUrl) {\r\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\r\n                }\r\n\r\n                this._netUploaded++;\r\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\r\n            }\r\n\r\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\r\n\r\n            return result.success ? true : false;\r\n        },\r\n\r\n        _onDelete: function(id) {\r\n            this._uploadData.setStatus(id, qq.status.DELETING);\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\r\n            var name = this.getName(id);\r\n\r\n            if (isError) {\r\n                this._handleDeleteFailed(id, xhrOrXdr);\r\n            }\r\n            else {\r\n                this._handleDeleteSuccess(id);\r\n            }\r\n        },\r\n\r\n        _onInputChange: function(input) {\r\n            var fileIndex;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\r\n                    this._annotateWithButtonId(input.files[fileIndex], input);\r\n                }\r\n\r\n                this.addFiles(input.files);\r\n            }\r\n            // Android 2.3.x will fire `onchange` even if no file has been selected\r\n            else if (input.value.length > 0) {\r\n                this.addFiles(input);\r\n            }\r\n\r\n            qq.each(this._buttons, function(idx, button) {\r\n                button.reset();\r\n            });\r\n        },\r\n\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            //nothing to do yet in core uploader\r\n        },\r\n\r\n        _onSubmitCallbackSuccess: function(id, name) {\r\n            this._onSubmit.apply(this, arguments);\r\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\r\n            this._onSubmitted.apply(this, arguments);\r\n\r\n            if (this._options.autoUpload) {\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n                this._uploadFile(id);\r\n            }\r\n            else {\r\n                this._storeForLater(id);\r\n                this._options.callbacks.onSubmitted.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\r\n            var uuid = this.getUuid(id),\r\n                adjustedOnSuccessCallback;\r\n\r\n            if (onSuccessCallback) {\r\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\r\n            }\r\n\r\n            if (this._isDeletePossible()) {\r\n                this._handleCheckedCallback({\r\n                    name: \"onSubmitDelete\",\r\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\r\n                    onSuccess: adjustedOnSuccessCallback ||\r\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\r\n                    identifier: id\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\r\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitted: function(id) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._options.callbacks.onTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            // nothing to do in the core uploader for now\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            //nothing to do in the base uploader\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\r\n            if (newStatus === qq.status.PAUSED) {\r\n                clearTimeout(this._retryTimeouts[id]);\r\n            }\r\n        },\r\n\r\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\r\n            var self = this;\r\n\r\n            qq.each(fileWrappers, function(idx, fileWrapper) {\r\n                self._fileOrBlobRejected(fileWrapper.id);\r\n            });\r\n        },\r\n\r\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\r\n            var errorMessage,\r\n                itemLimit = this._currentItemLimit,\r\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\r\n\r\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\r\n                if (items.length > 0) {\r\n                    this._handleCheckedCallback({\r\n                        name: \"onValidate\",\r\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\r\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\r\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\r\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\r\n                    });\r\n                }\r\n                else {\r\n                    this._itemError(\"noFilesError\");\r\n                }\r\n            }\r\n            else {\r\n                this._onValidateBatchCallbackFailure(items);\r\n                errorMessage = this._options.messages.tooManyItemsError\r\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\r\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\r\n                this._batchError(errorMessage);\r\n            }\r\n        },\r\n\r\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\r\n            var nextIndex = index + 1;\r\n\r\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\r\n\r\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n        },\r\n\r\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\r\n            var self = this,\r\n                nextIndex = index + 1,\r\n                validationDescriptor = this._getValidationDescriptor(items[index]);\r\n\r\n            this._validateFileOrBlobData(items[index], validationDescriptor)\r\n                .then(\r\n                function() {\r\n                    self._upload(items[index].id, params, endpoint);\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\r\n                },\r\n                function() {\r\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\r\n                }\r\n            );\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            if (items.length === 0) {\r\n                this._itemError(\"noFilesError\");\r\n                return;\r\n            }\r\n\r\n            var validationDescriptors = this._getValidationDescriptors(items),\r\n                buttonId = this._getButtonId(items[0].file),\r\n                button = this._getButton(buttonId);\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onValidateBatch\",\r\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\r\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\r\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\r\n                identifier: \"batch validation\"\r\n            });\r\n        },\r\n\r\n        _preventLeaveInProgress: function() {\r\n            var self = this;\r\n\r\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\r\n                if (self.getInProgress()) {\r\n                    e = e || window.event;\r\n                    // for ie, ff\r\n                    e.returnValue = self._options.messages.onLeave;\r\n                    // for webkit\r\n                    return self._options.messages.onLeave;\r\n                }\r\n            });\r\n        },\r\n\r\n        // Attempts to refresh session data only if the `qq.Session` module exists\r\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\r\n        // callback will be invoked once the refresh is complete.\r\n        _refreshSessionData: function() {\r\n            var self = this,\r\n                options = this._options.session;\r\n\r\n            /* jshint eqnull:true */\r\n            if (qq.Session && this._options.session.endpoint != null) {\r\n                if (!this._session) {\r\n                    qq.extend(options, {cors: this._options.cors});\r\n\r\n                    options.log = qq.bind(this.log, this);\r\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\r\n\r\n                    this._session = new qq.Session(options);\r\n                }\r\n\r\n                setTimeout(function() {\r\n                    self._session.refresh().then(function(response, xhrOrXdr) {\r\n                        self._sessionRequestComplete();\r\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\r\n\r\n                    }, function(response, xhrOrXdr) {\r\n\r\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\r\n                    });\r\n                }, 0);\r\n            }\r\n        },\r\n\r\n        _sessionRequestComplete: function() {},\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._uploadData.updateSize(id, newSize);\r\n            this._totalProgress && this._totalProgress.onNewSize(id);\r\n        },\r\n\r\n        _shouldAutoRetry: function(id, name, responseJSON) {\r\n            var uploadData = this._uploadData.retrieve({id: id});\r\n\r\n            /*jshint laxbreak: true */\r\n            if (!this._preventRetries[id]\r\n                && this._options.retry.enableAuto\r\n                && uploadData.status !== qq.status.PAUSED) {\r\n\r\n                if (this._autoRetries[id] === undefined) {\r\n                    this._autoRetries[id] = 0;\r\n                }\r\n\r\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\r\n                    this._autoRetries[id] += 1;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._storedIds.push(id);\r\n        },\r\n\r\n        // Maps a file with the button that was used to select it.\r\n        _trackButton: function(id) {\r\n            var buttonId;\r\n\r\n            if (qq.supportedFeatures.ajaxUploading) {\r\n                buttonId = this._handler.getFile(id).qqButtonId;\r\n            }\r\n            else {\r\n                buttonId = this._getButtonId(this._handler.getInput(id));\r\n            }\r\n\r\n            if (buttonId) {\r\n                this._buttonIdsForFileIds[id] = buttonId;\r\n            }\r\n        },\r\n\r\n        _updateFormSupportAndParams: function(formElementOrId) {\r\n            this._options.form.element = formElementOrId;\r\n\r\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\r\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\r\n                );\r\n\r\n            if (this._formSupport && this._formSupport.attachedToForm) {\r\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\r\n\r\n                this._options.autoUpload = this._formSupport.newAutoUpload;\r\n                if (this._formSupport.newEndpoint) {\r\n                    this.setEndpoint(this._formSupport.newEndpoint);\r\n                }\r\n            }\r\n        },\r\n\r\n        _upload: function(id, params, endpoint) {\r\n            var name = this.getName(id);\r\n\r\n            if (params) {\r\n                this.setParams(params, id);\r\n            }\r\n\r\n            if (endpoint) {\r\n                this.setEndpoint(endpoint, id);\r\n            }\r\n\r\n            this._handleCheckedCallback({\r\n                name: \"onSubmit\",\r\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\r\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\r\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\r\n                identifier: id\r\n            });\r\n        },\r\n\r\n        _uploadFile: function(id) {\r\n            if (!this._handler.upload(id)) {\r\n                this._uploadData.setStatus(id, qq.status.QUEUED);\r\n            }\r\n        },\r\n\r\n        _uploadStoredFiles: function() {\r\n            var idToUpload, stillSubmitting,\r\n                self = this;\r\n\r\n            while (this._storedIds.length) {\r\n                idToUpload = this._storedIds.shift();\r\n                this._uploadFile(idToUpload);\r\n            }\r\n\r\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\r\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\r\n            if (stillSubmitting) {\r\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\r\n                setTimeout(function() {\r\n                    self._uploadStoredFiles();\r\n                }, 1000);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Performs some internal validation checks on an item, defined in the `validation` option.\r\n         *\r\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\r\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\r\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\r\n         * @private\r\n         */\r\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\r\n            var self = this,\r\n                file = (function() {\r\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\r\n                        return fileWrapper.file.referenceBlob;\r\n                    }\r\n                    return fileWrapper.file;\r\n                }()),\r\n                name = validationDescriptor.name,\r\n                size = validationDescriptor.size,\r\n                buttonId = this._getButtonId(fileWrapper.file),\r\n                validationBase = this._getValidationBase(buttonId),\r\n                validityChecker = new qq.Promise();\r\n\r\n            validityChecker.then(\r\n                function() {},\r\n                function() {\r\n                    self._fileOrBlobRejected(fileWrapper.id, name);\r\n                });\r\n\r\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\r\n                this._itemError(\"typeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (!this._options.validation.allowEmpty && size === 0) {\r\n                this._itemError(\"emptyError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\r\n                this._itemError(\"sizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (size > 0 && size < validationBase.minSizeLimit) {\r\n                this._itemError(\"minSizeError\", name, file);\r\n                return validityChecker.failure();\r\n            }\r\n\r\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\r\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\r\n                    validityChecker.success,\r\n                    function(errorCode) {\r\n                        self._itemError(errorCode + \"ImageError\", name, file);\r\n                        validityChecker.failure();\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                validityChecker.success();\r\n            }\r\n\r\n            return validityChecker;\r\n        },\r\n\r\n        _wrapCallbacks: function() {\r\n            var self, safeCallback, prop;\r\n\r\n            self = this;\r\n\r\n            safeCallback = function(name, callback, args) {\r\n                var errorMsg;\r\n\r\n                try {\r\n                    return callback.apply(self, args);\r\n                }\r\n                catch (exception) {\r\n                    errorMsg = exception.message || exception.toString();\r\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\r\n                }\r\n            };\r\n\r\n            /* jshint forin: false, loopfunc: true */\r\n            for (prop in this._options.callbacks) {\r\n                (function() {\r\n                    var callbackName, callbackFunc;\r\n                    callbackName = prop;\r\n                    callbackFunc = self._options.callbacks[callbackName];\r\n                    self._options.callbacks[callbackName] = function() {\r\n                        return safeCallback(callbackName, callbackFunc, arguments);\r\n                    };\r\n                }());\r\n            }\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.FineUploaderBasic = function(o) {\r\n        var self = this;\r\n\r\n        // These options define FineUploaderBasic mode.\r\n        this._options = {\r\n            debug: false,\r\n            button: null,\r\n            multiple: true,\r\n            maxConnections: 3,\r\n            disableCancelForFormUploads: false,\r\n            autoUpload: true,\r\n\r\n            request: {\r\n                customHeaders: {},\r\n                endpoint: \"/server/upload\",\r\n                filenameParam: \"qqfilename\",\r\n                forceMultipart: true,\r\n                inputName: \"qqfile\",\r\n                method: \"POST\",\r\n                params: {},\r\n                paramsInBody: true,\r\n                totalFileSizeName: \"qqtotalfilesize\",\r\n                uuidName: \"qquuid\"\r\n            },\r\n\r\n            validation: {\r\n                allowedExtensions: [],\r\n                sizeLimit: 0,\r\n                minSizeLimit: 0,\r\n                itemLimit: 0,\r\n                stopOnFirstInvalidFile: true,\r\n                acceptFiles: null,\r\n                image: {\r\n                    maxHeight: 0,\r\n                    maxWidth: 0,\r\n                    minHeight: 0,\r\n                    minWidth: 0\r\n                },\r\n                allowEmpty: false\r\n            },\r\n\r\n            callbacks: {\r\n                onSubmit: function(id, name) {},\r\n                onSubmitted: function(id, name) {},\r\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\r\n                onAllComplete: function(successful, failed) {},\r\n                onCancel: function(id, name) {},\r\n                onUpload: function(id, name) {},\r\n                onUploadChunk: function(id, name, chunkData) {},\r\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\r\n                onResume: function(id, fileName, chunkData) {},\r\n                onProgress: function(id, name, loaded, total) {},\r\n                onTotalProgress: function(loaded, total) {},\r\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\r\n                onAutoRetry: function(id, name, attemptNumber) {},\r\n                onManualRetry: function(id, name) {},\r\n                onValidateBatch: function(fileOrBlobData) {},\r\n                onValidate: function(fileOrBlobData) {},\r\n                onSubmitDelete: function(id) {},\r\n                onDelete: function(id) {},\r\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\r\n                onPasteReceived: function(blob) {},\r\n                onStatusChange: function(id, oldStatus, newStatus) {},\r\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\r\n            },\r\n\r\n            messages: {\r\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\r\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\r\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\r\n                emptyError: \"{file} is empty, please select files again without it.\",\r\n                noFilesError: \"No files to upload.\",\r\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\r\n                maxHeightImageError: \"Image is too tall.\",\r\n                maxWidthImageError: \"Image is too wide.\",\r\n                minHeightImageError: \"Image is not tall enough.\",\r\n                minWidthImageError: \"Image is not wide enough.\",\r\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\r\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\r\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\r\n            },\r\n\r\n            retry: {\r\n                enableAuto: false,\r\n                maxAutoAttempts: 3,\r\n                autoAttemptDelay: 5,\r\n                preventRetryResponseProperty: \"preventRetry\"\r\n            },\r\n\r\n            classes: {\r\n                buttonHover: \"qq-upload-button-hover\",\r\n                buttonFocus: \"qq-upload-button-focus\"\r\n            },\r\n\r\n            chunking: {\r\n                enabled: false,\r\n                concurrent: {\r\n                    enabled: false\r\n                },\r\n                mandatory: false,\r\n                paramNames: {\r\n                    partIndex: \"qqpartindex\",\r\n                    partByteOffset: \"qqpartbyteoffset\",\r\n                    chunkSize: \"qqchunksize\",\r\n                    totalFileSize: \"qqtotalfilesize\",\r\n                    totalParts: \"qqtotalparts\"\r\n                },\r\n                partSize: 2000000,\r\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\r\n                success: {\r\n                    endpoint: null\r\n                }\r\n            },\r\n\r\n            resume: {\r\n                enabled: false,\r\n                recordsExpireIn: 7, //days\r\n                paramNames: {\r\n                    resuming: \"qqresume\"\r\n                }\r\n            },\r\n\r\n            formatFileName: function(fileOrBlobName) {\r\n                return fileOrBlobName;\r\n            },\r\n\r\n            text: {\r\n                defaultResponseError: \"Upload failure reason unknown\",\r\n                fileInputTitle: \"file input\",\r\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\r\n            },\r\n\r\n            deleteFile: {\r\n                enabled: false,\r\n                method: \"DELETE\",\r\n                endpoint: \"/server/upload\",\r\n                customHeaders: {},\r\n                params: {}\r\n            },\r\n\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false,\r\n                allowXdr: false\r\n            },\r\n\r\n            blobs: {\r\n                defaultName: \"misc_data\"\r\n            },\r\n\r\n            paste: {\r\n                targetElement: null,\r\n                defaultName: \"pasted_image\"\r\n            },\r\n\r\n            camera: {\r\n                ios: false,\r\n\r\n                // if ios is true: button is null means target the default button, otherwise target the button specified\r\n                button: null\r\n            },\r\n\r\n            // This refers to additional upload buttons to be handled by Fine Uploader.\r\n            // Each element is an object, containing `element` as the only required\r\n            // property.  The `element` must be a container that will ultimately\r\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\r\n            // Optional properties of each object include `multiple`, `validation`,\r\n            // and `folders`.\r\n            extraButtons: [],\r\n\r\n            // Depends on the session module.  Used to query the server for an initial file list\r\n            // during initialization and optionally after a `reset`.\r\n            session: {\r\n                endpoint: null,\r\n                params: {},\r\n                customHeaders: {},\r\n                refreshOnReset: true\r\n            },\r\n\r\n            // Send parameters associated with an existing form along with the files\r\n            form: {\r\n                // Element ID, HTMLElement, or null\r\n                element: \"qq-form\",\r\n\r\n                // Overrides the base `autoUpload`, unless `element` is null.\r\n                autoUpload: false,\r\n\r\n                // true = upload files on form submission (and squelch submit event)\r\n                interceptSubmit: true\r\n            },\r\n\r\n            // scale images client side, upload a new file for each scaled version\r\n            scaling: {\r\n                customResizer: null,\r\n\r\n                // send the original file as well\r\n                sendOriginal: true,\r\n\r\n                // fox orientation for scaled images\r\n                orient: true,\r\n\r\n                // If null, scaled image type will match reference image type.  This value will be referred to\r\n                // for any size record that does not specific a type.\r\n                defaultType: null,\r\n\r\n                defaultQuality: 80,\r\n\r\n                failureText: \"Failed to scale\",\r\n\r\n                includeExif: false,\r\n\r\n                // metadata about each requested scaled version\r\n                sizes: []\r\n            },\r\n\r\n            workarounds: {\r\n                iosEmptyVideos: true,\r\n                ios8SafariUploads: true,\r\n                ios8BrowserCrash: false\r\n            }\r\n        };\r\n\r\n        // Replace any default options with user defined ones\r\n        qq.extend(this._options, o, true);\r\n\r\n        this._buttons = [];\r\n        this._extraButtonSpecs = {};\r\n        this._buttonIdsForFileIds = [];\r\n\r\n        this._wrapCallbacks();\r\n        this._disposeSupport =  new qq.DisposeSupport();\r\n\r\n        this._storedIds = [];\r\n        this._autoRetries = [];\r\n        this._retryTimeouts = [];\r\n        this._preventRetries = [];\r\n        this._thumbnailUrls = [];\r\n\r\n        this._netUploadedOrQueued = 0;\r\n        this._netUploaded = 0;\r\n        this._uploadData = this._createUploadDataTracker();\r\n\r\n        this._initFormSupportAndParams();\r\n\r\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\r\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\r\n\r\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\r\n\r\n        this._endpointStore = this._createStore(this._options.request.endpoint);\r\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\r\n\r\n        this._handler = this._createUploadHandler();\r\n\r\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\r\n\r\n        if (this._options.button) {\r\n            this._defaultButtonId = this._createUploadButton({\r\n                element: this._options.button,\r\n                title: this._options.text.fileInputTitle\r\n            }).getButtonId();\r\n        }\r\n\r\n        this._generateExtraButtonSpecs();\r\n\r\n        this._handleCameraAccess();\r\n\r\n        if (this._options.paste.targetElement) {\r\n            if (qq.PasteSupport) {\r\n                this._pasteHandler = this._createPasteHandler();\r\n            }\r\n            else {\r\n                this.log(\"Paste support module not found\", \"error\");\r\n            }\r\n        }\r\n\r\n        this._preventLeaveInProgress();\r\n\r\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\r\n        this._refreshSessionData();\r\n\r\n        this._succeededSinceLastAllComplete = [];\r\n        this._failedSinceLastAllComplete = [];\r\n\r\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\r\n        if (this._scaler.enabled) {\r\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\r\n        }\r\n\r\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\r\n            this._totalProgress = new qq.TotalProgress(\r\n                qq.bind(this._onTotalProgress, this),\r\n\r\n                function(id) {\r\n                    var entry = self._uploadData.retrieve({id: id});\r\n                    return (entry && entry.size) || 0;\r\n                }\r\n            );\r\n        }\r\n\r\n        this._currentItemLimit = this._options.validation.itemLimit;\r\n    };\r\n\r\n    // Define the private & public API methods.\r\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\r\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\r\n}());\r\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\r\n/**\r\n * Base upload handler module.  Controls more specific handlers.\r\n *\r\n * @param o Options.  Passed along to the specific handler submodule as well.\r\n * @param namespace [optional] Namespace for the specific handler.\r\n */\r\nqq.UploadHandlerController = function(o, namespace) {\r\n    \"use strict\";\r\n\r\n    var controller = this,\r\n        chunkingPossible = false,\r\n        concurrentChunkingPossible = false,\r\n        chunking, preventRetryResponse, log, handler,\r\n\r\n    options = {\r\n        paramsStore: {},\r\n        maxConnections: 3, // maximum number of concurrent uploads\r\n        chunking: {\r\n            enabled: false,\r\n            multiple: {\r\n                enabled: false\r\n            }\r\n        },\r\n        log: function(str, level) {},\r\n        onProgress: function(id, fileName, loaded, total) {},\r\n        onComplete: function(id, fileName, response, xhr) {},\r\n        onCancel: function(id, fileName) {},\r\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\r\n        onUpload: function(id, fileName) {},\r\n        onUploadChunk: function(id, fileName, chunkData) {},\r\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\r\n        onAutoRetry: function(id, fileName, response, xhr) {},\r\n        onResume: function(id, fileName, chunkData) {},\r\n        onUuidChanged: function(id, newUuid) {},\r\n        getName: function(id) {},\r\n        setSize: function(id, newSize) {},\r\n        isQueued: function(id) {},\r\n        getIdsInProxyGroup: function(id) {},\r\n        getIdsInBatch: function(id) {}\r\n    },\r\n\r\n    chunked = {\r\n        // Called when each chunk has uploaded successfully\r\n        done: function(id, chunkIdx, response, xhr) {\r\n            var chunkData = handler._getChunkData(id, chunkIdx);\r\n\r\n            handler._getFileState(id).attemptingResume = false;\r\n\r\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\r\n            handler._getFileState(id).loaded += chunkData.size;\r\n\r\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\r\n        },\r\n\r\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\r\n        // logic associated with closing out the file, such as combining the chunks.\r\n        finalize: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id);\r\n\r\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\r\n            handler.finalizeChunks(id).then(\r\n                function(response, xhr) {\r\n                    log(\"Finalize successful for \" + id);\r\n\r\n                    var normaizedResponse = upload.normalizeResponse(response, true);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    handler._maybeDeletePersistedChunkData(id);\r\n                    upload.cleanup(id, normaizedResponse, xhr);\r\n                },\r\n                function(response, xhr) {\r\n                    var normaizedResponse = upload.normalizeResponse(response, false);\r\n\r\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\r\n\r\n                    if (normaizedResponse.reset) {\r\n                        chunked.reset(id);\r\n                    }\r\n\r\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\r\n                        upload.cleanup(id, normaizedResponse, xhr);\r\n                    }\r\n                }\r\n            );\r\n        },\r\n\r\n        handleFailure: function(chunkIdx, id, response, xhr) {\r\n            var name = options.getName(id);\r\n\r\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\r\n\r\n            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n            var responseToReport = upload.normalizeResponse(response, false),\r\n                inProgressIdx;\r\n\r\n            if (responseToReport.reset) {\r\n                chunked.reset(id);\r\n            }\r\n            else {\r\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\r\n                if (inProgressIdx >= 0) {\r\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\r\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\r\n                }\r\n            }\r\n\r\n            // We may have aborted all other in-progress chunks for this file due to a failure.\r\n            // If so, ignore the failures associated with those aborts.\r\n            if (!handler._getFileState(id).temp.ignoreFailure) {\r\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\r\n                // chunks since they will be explicitly aborted\r\n                if (concurrentChunkingPossible) {\r\n                    handler._getFileState(id).temp.ignoreFailure = true;\r\n\r\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\r\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\r\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\r\n                        ckXhr.abort();\r\n                        // Flag the transport, in case we are waiting for some other async operation\r\n                        // to complete before attempting to upload the chunk\r\n                        ckXhr._cancelled = true;\r\n                    });\r\n\r\n                    // We must indicate that all aborted chunks are no longer in progress\r\n                    handler.moveInProgressToRemaining(id);\r\n\r\n                    // Free up any connections used by these chunks, but don't allow any\r\n                    // other files to take up the connections (until we have exhausted all auto-retries)\r\n                    connectionManager.free(id, true);\r\n                }\r\n\r\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\r\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\r\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\r\n                    // is a failure or not.\r\n                    upload.cleanup(id, responseToReport, xhr);\r\n                }\r\n            }\r\n        },\r\n\r\n        hasMoreParts: function(id) {\r\n            return !!handler._getFileState(id).chunking.remaining.length;\r\n        },\r\n\r\n        nextPart: function(id) {\r\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\r\n\r\n            if (nextIdx >= handler._getTotalChunks(id)) {\r\n                nextIdx = null;\r\n            }\r\n\r\n            return nextIdx;\r\n        },\r\n\r\n        reset: function(id) {\r\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\r\n\r\n            handler._maybeDeletePersistedChunkData(id);\r\n            handler.reevaluateChunking(id);\r\n            handler._getFileState(id).loaded = 0;\r\n        },\r\n\r\n        sendNext: function(id) {\r\n            var size = options.getSize(id),\r\n                name = options.getName(id),\r\n                chunkIdx = chunked.nextPart(id),\r\n                chunkData = handler._getChunkData(id, chunkIdx),\r\n                resuming = handler._getFileState(id).attemptingResume,\r\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\r\n\r\n            if (handler._getFileState(id).loaded == null) {\r\n                handler._getFileState(id).loaded = 0;\r\n            }\r\n\r\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\r\n            if (resuming && options.onResume(id, name, chunkData) === false) {\r\n                chunked.reset(id);\r\n                chunkIdx = chunked.nextPart(id);\r\n                chunkData = handler._getChunkData(id, chunkIdx);\r\n                resuming = false;\r\n            }\r\n\r\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\r\n            if (chunkIdx == null && inProgressChunks.length === 0) {\r\n                chunked.finalize(id);\r\n            }\r\n\r\n            // Send the next chunk\r\n            else {\r\n                log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\r\n                options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\r\n                inProgressChunks.push(chunkIdx);\r\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\r\n\r\n                if (concurrentChunkingPossible) {\r\n                    connectionManager.open(id, chunkIdx);\r\n                }\r\n\r\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\r\n                    chunked.sendNext(id);\r\n                }\r\n\r\n                if (chunkData.blob.size === 0) {\r\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\r\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\r\n                }\r\n                else {\r\n                    handler.uploadChunk(id, chunkIdx, resuming).then(\r\n                        // upload chunk success\r\n                        function success(response, xhr) {\r\n                            log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\r\n\r\n                            handler.clearCachedChunk(id, chunkIdx);\r\n\r\n                            var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\r\n                                responseToReport = upload.normalizeResponse(response, true),\r\n                                inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\r\n\r\n                            log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\r\n\r\n                            chunked.done(id, chunkIdx, responseToReport, xhr);\r\n\r\n                            if (inProgressChunkIdx >= 0) {\r\n                                inProgressChunks.splice(inProgressChunkIdx, 1);\r\n                            }\r\n\r\n                            handler._maybePersistChunkedState(id);\r\n\r\n                            if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\r\n                                chunked.finalize(id);\r\n                            }\r\n                            else if (chunked.hasMoreParts(id)) {\r\n                                chunked.sendNext(id);\r\n                            }\r\n                            else {\r\n                                log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\r\n                            }\r\n                        },\r\n\r\n                        // upload chunk failure\r\n                        function failure(response, xhr) {\r\n                            chunked.handleFailure(chunkIdx, id, response, xhr);\r\n                        }\r\n                        )\r\n                        .done(function() {\r\n                            handler.clearXhr(id, chunkIdx);\r\n                        });\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    connectionManager = {\r\n        _open: [],\r\n        _openChunks: {},\r\n        _waiting: [],\r\n\r\n        available: function() {\r\n            var max = options.maxConnections,\r\n                openChunkEntriesCount = 0,\r\n                openChunksCount = 0;\r\n\r\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\r\n                openChunkEntriesCount++;\r\n                openChunksCount += openChunkIndexes.length;\r\n            });\r\n\r\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\r\n        },\r\n\r\n        /**\r\n         * Removes element from queue, starts upload of next\r\n         */\r\n        free: function(id, dontAllowNext) {\r\n            var allowNext = !dontAllowNext,\r\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\r\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\r\n                nextId;\r\n\r\n            delete connectionManager._openChunks[id];\r\n\r\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\r\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\r\n                delete handler._getFileState(id).file;\r\n            }\r\n\r\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\r\n            if (waitingIndex >= 0) {\r\n                connectionManager._waiting.splice(waitingIndex, 1);\r\n            }\r\n            // If this file was consuming a connection, allow the next file to be uploaded\r\n            else if (allowNext && connectionsIndex >= 0) {\r\n                connectionManager._open.splice(connectionsIndex, 1);\r\n\r\n                nextId = connectionManager._waiting.shift();\r\n                if (nextId >= 0) {\r\n                    connectionManager._open.push(nextId);\r\n                    upload.start(nextId);\r\n                }\r\n            }\r\n        },\r\n\r\n        getWaitingOrConnected: function() {\r\n            var waitingOrConnected = [];\r\n\r\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\r\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\r\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\r\n                if (chunks && chunks.length) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // For non-chunked files, only one connection will be consumed per file.\r\n            // This is where we aggregate those file IDs.\r\n            qq.each(connectionManager._open, function(idx, fileId) {\r\n                if (!connectionManager._openChunks[fileId]) {\r\n                    waitingOrConnected.push(parseInt(fileId));\r\n                }\r\n            });\r\n\r\n            // There may be files waiting for a connection.\r\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\r\n\r\n            return waitingOrConnected;\r\n        },\r\n\r\n        isUsingConnection: function(id) {\r\n            return qq.indexOf(connectionManager._open, id) >= 0;\r\n        },\r\n\r\n        open: function(id, chunkIdx) {\r\n            if (chunkIdx == null) {\r\n                var alreadyInWaiting = qq.indexOf(connectionManager._waiting, id);\r\n                var alreadyInOpen = qq.indexOf(connectionManager._open, id);\r\n                if (alreadyInWaiting === -1 && alreadyInOpen === -1) {\r\n                    connectionManager._waiting.push(id);\r\n                }\r\n            }\r\n\r\n            if (connectionManager.available()) {\r\n                if (chunkIdx == null) {\r\n                    connectionManager._waiting.pop();\r\n                    connectionManager._open.push(id);\r\n                }\r\n                else {\r\n                    (function() {\r\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\r\n                        openChunksEntry.push(chunkIdx);\r\n                        connectionManager._openChunks[id] = openChunksEntry;\r\n                    }());\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        reset: function() {\r\n            connectionManager._waiting = [];\r\n            connectionManager._open = [];\r\n        }\r\n    },\r\n\r\n    simple = {\r\n        send: function(id, name) {\r\n            handler._getFileState(id).loaded = 0;\r\n\r\n            log(\"Sending simple upload request for \" + id);\r\n            handler.uploadFile(id).then(\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request succeeded for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, true),\r\n                        size = options.getSize(id);\r\n\r\n                    options.onProgress(id, name, size, size);\r\n                    upload.maybeNewUuid(id, responseToReport);\r\n                    upload.cleanup(id, responseToReport, optXhr);\r\n                },\r\n\r\n                function(response, optXhr) {\r\n                    log(\"Simple upload request failed for \" + id);\r\n\r\n                    var responseToReport = upload.normalizeResponse(response, false);\r\n\r\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\r\n                        upload.cleanup(id, responseToReport, optXhr);\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    },\r\n\r\n    upload = {\r\n        cancel: function(id) {\r\n            log(\"Cancelling \" + id);\r\n            options.paramsStore.remove(id);\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        cleanup: function(id, response, optXhr) {\r\n            var name = options.getName(id);\r\n\r\n            options.onComplete(id, name, response, optXhr);\r\n\r\n            if (handler._getFileState(id)) {\r\n                handler._clearXhrs && handler._clearXhrs(id);\r\n            }\r\n\r\n            connectionManager.free(id);\r\n        },\r\n\r\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\r\n        // if none of these are available for the ID\r\n        getProxyOrBlob: function(id) {\r\n            return (handler.getProxy && handler.getProxy(id)) ||\r\n                (handler.getFile && handler.getFile(id));\r\n        },\r\n\r\n        initHandler: function() {\r\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\r\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\r\n\r\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\r\n                options,\r\n                {\r\n                    getDataByUuid: options.getDataByUuid,\r\n                    getName: options.getName,\r\n                    getSize: options.getSize,\r\n                    getUuid: options.getUuid,\r\n                    log: log,\r\n                    onCancel: options.onCancel,\r\n                    onProgress: options.onProgress,\r\n                    onUuidChanged: options.onUuidChanged\r\n                }\r\n            );\r\n\r\n            if (handler._removeExpiredChunkingRecords) {\r\n                handler._removeExpiredChunkingRecords();\r\n            }\r\n        },\r\n\r\n        isDeferredEligibleForUpload: function(id) {\r\n            return options.isQueued(id);\r\n        },\r\n\r\n        // For Blobs that are part of a group of generated images, along with a reference image,\r\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\r\n        // even if some async processing must be completed on one or more Blobs first.\r\n        maybeDefer: function(id, blob) {\r\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\r\n            // and then submit the upload to the specific handler once the blob is available.\r\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\r\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\r\n\r\n                // Blob creation may take some time, so the caller may want to update the\r\n                // UI to indicate that an operation is in progress, even before the actual\r\n                // upload begins and an onUpload callback is invoked.\r\n                options.onUploadPrep(id);\r\n\r\n                log(\"Attempting to generate a blob on-demand for \" + id);\r\n                blob.create().then(function(generatedBlob) {\r\n                    log(\"Generated an on-demand blob for \" + id);\r\n\r\n                    // Update record associated with this file by providing the generated Blob\r\n                    handler.updateBlob(id, generatedBlob);\r\n\r\n                    // Propagate the size for this generated Blob\r\n                    options.setSize(id, generatedBlob.size);\r\n\r\n                    // Order handler to recalculate chunking possibility, if applicable\r\n                    handler.reevaluateChunking(id);\r\n\r\n                    upload.maybeSendDeferredFiles(id);\r\n                },\r\n\r\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\r\n                function(errorMessage) {\r\n                    var errorResponse = {};\r\n\r\n                    if (errorMessage) {\r\n                        errorResponse.error = errorMessage;\r\n                    }\r\n\r\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\r\n\r\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\r\n                    upload.maybeSendDeferredFiles(id);\r\n                    connectionManager.free(id);\r\n                });\r\n            }\r\n            else {\r\n                return upload.maybeSendDeferredFiles(id);\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\r\n        maybeSendDeferredFiles: function(id) {\r\n            var idsInGroup = options.getIdsInProxyGroup(id),\r\n                uploadedThisId = false;\r\n\r\n            if (idsInGroup && idsInGroup.length) {\r\n                log(\"Maybe ready to upload proxy group file \" + id);\r\n\r\n                qq.each(idsInGroup, function(idx, idInGroup) {\r\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\r\n                        uploadedThisId = idInGroup === id;\r\n                        upload.now(idInGroup);\r\n                    }\r\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                uploadedThisId = true;\r\n                upload.now(id);\r\n            }\r\n\r\n            return uploadedThisId;\r\n        },\r\n\r\n        maybeNewUuid: function(id, response) {\r\n            if (response.newUuid !== undefined) {\r\n                options.onUuidChanged(id, response.newUuid);\r\n            }\r\n        },\r\n\r\n        // The response coming from handler implementations may be in various formats.\r\n        // Instead of hoping a promise nested 5 levels deep will always return an object\r\n        // as its first param, let's just normalize the response here.\r\n        normalizeResponse: function(originalResponse, successful) {\r\n            var response = originalResponse;\r\n\r\n            // The passed \"response\" param may not be a response at all.\r\n            // It could be a string, detailing the error, for example.\r\n            if (!qq.isObject(originalResponse)) {\r\n                response = {};\r\n\r\n                if (qq.isString(originalResponse) && !successful) {\r\n                    response.error = originalResponse;\r\n                }\r\n            }\r\n\r\n            response.success = successful;\r\n\r\n            return response;\r\n        },\r\n\r\n        now: function(id) {\r\n            var name = options.getName(id);\r\n\r\n            if (!controller.isValid(id)) {\r\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\r\n            }\r\n\r\n            options.onUpload(id, name);\r\n\r\n            if (chunkingPossible && handler._shouldChunkThisFile(id)) {\r\n                chunked.sendNext(id);\r\n            }\r\n            else {\r\n                simple.send(id, name);\r\n            }\r\n        },\r\n\r\n        start: function(id) {\r\n            var blobToUpload = upload.getProxyOrBlob(id);\r\n\r\n            if (blobToUpload) {\r\n                return upload.maybeDefer(id, blobToUpload);\r\n            }\r\n            else {\r\n                upload.now(id);\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * Adds file or file input to the queue\r\n         **/\r\n        add: function(id, file) {\r\n            handler.add.apply(this, arguments);\r\n        },\r\n\r\n        /**\r\n         * Sends the file identified by id\r\n         */\r\n        upload: function(id) {\r\n            if (connectionManager.open(id)) {\r\n                return upload.start(id);\r\n            }\r\n            return false;\r\n        },\r\n\r\n        retry: function(id) {\r\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\r\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\r\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\r\n            // any more failures at this point.\r\n            if (concurrentChunkingPossible) {\r\n                handler._getFileState(id).temp.ignoreFailure = false;\r\n            }\r\n\r\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\r\n            // Just go ahead and ask the handler to upload again.\r\n            if (connectionManager.isUsingConnection(id)) {\r\n                return upload.start(id);\r\n            }\r\n\r\n            // If we are attempting to retry a file that is not currently consuming a connection,\r\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\r\n            // before the retry commences.\r\n            else {\r\n                return controller.upload(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels file upload by id\r\n         */\r\n        cancel: function(id) {\r\n            var cancelRetVal = handler.cancel(id);\r\n\r\n            if (qq.isGenericPromise(cancelRetVal)) {\r\n                cancelRetVal.then(function() {\r\n                    upload.cancel(id);\r\n                });\r\n            }\r\n            else if (cancelRetVal !== false) {\r\n                upload.cancel(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Cancels all queued or in-progress uploads\r\n         */\r\n        cancelAll: function() {\r\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\r\n                i;\r\n\r\n            // ensure files are cancelled in reverse order which they were added\r\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\r\n            if (waitingOrConnected.length) {\r\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\r\n                    controller.cancel(waitingOrConnected[i]);\r\n                }\r\n            }\r\n\r\n            connectionManager.reset();\r\n        },\r\n\r\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\r\n        // Undefined if no file record is available.\r\n        getFile: function(id) {\r\n            if (handler.getProxy && handler.getProxy(id)) {\r\n                return handler.getProxy(id).referenceBlob;\r\n            }\r\n\r\n            return handler.getFile && handler.getFile(id);\r\n        },\r\n\r\n        // Returns true if the Blob associated with the ID is related to a proxy s\r\n        isProxied: function(id) {\r\n            return !!(handler.getProxy && handler.getProxy(id));\r\n        },\r\n\r\n        getInput: function(id) {\r\n            if (handler.getInput) {\r\n                return handler.getInput(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            log(\"Resetting upload handler\");\r\n            controller.cancelAll();\r\n            connectionManager.reset();\r\n            handler.reset();\r\n        },\r\n\r\n        expunge: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.expunge(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Determine if the file exists.\r\n         */\r\n        isValid: function(id) {\r\n            return handler.isValid(id);\r\n        },\r\n\r\n        getResumableFilesData: function() {\r\n            if (handler.getResumableFilesData) {\r\n                return handler.getResumableFilesData();\r\n            }\r\n            return [];\r\n        },\r\n\r\n        /**\r\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\r\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\r\n         * will be undefined.\r\n         *\r\n         * @param id Internal file ID\r\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\r\n         */\r\n        getThirdPartyFileId: function(id) {\r\n            if (controller.isValid(id)) {\r\n                return handler.getThirdPartyFileId(id);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\r\n         * @param id ID of the upload/file to pause\r\n         * @returns {boolean} true if the upload was paused\r\n         */\r\n        pause: function(id) {\r\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\r\n                connectionManager.free(id);\r\n                handler.moveInProgressToRemaining(id);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        // True if the file is eligible for pause/resume.\r\n        isResumable: function(id) {\r\n            return !!handler.isResumable && handler.isResumable(id);\r\n        }\r\n    });\r\n\r\n    qq.extend(options, o);\r\n    log = options.log;\r\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\r\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\r\n\r\n    preventRetryResponse = (function() {\r\n        var response = {};\r\n\r\n        response[options.preventRetryParam] = true;\r\n\r\n        return response;\r\n    }());\r\n\r\n    upload.initHandler();\r\n};\r\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n/**\r\n * CryptoJS core components.\r\n */\r\nqq.CryptoJS = (function (Math, undefined) {\r\n    /**\r\n     * CryptoJS namespace.\r\n     */\r\n    var C = {};\r\n\r\n    /**\r\n     * Library namespace.\r\n     */\r\n    var C_lib = C.lib = {};\r\n\r\n    /**\r\n     * Base object for prototypal inheritance.\r\n     */\r\n    var Base = C_lib.Base = (function () {\r\n        function F() {}\r\n\r\n        return {\r\n            /**\r\n             * Creates a new object that inherits from this object.\r\n             *\r\n             * @param {Object} overrides Properties to copy into the new object.\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         field: 'value',\r\n             *\r\n             *         method: function () {\r\n             *         }\r\n             *     });\r\n             */\r\n            extend: function (overrides) {\r\n                // Spawn\r\n                F.prototype = this;\r\n                var subtype = new F();\r\n\r\n                // Augment\r\n                if (overrides) {\r\n                    subtype.mixIn(overrides);\r\n                }\r\n\r\n                // Create default initializer\r\n                if (!subtype.hasOwnProperty('init')) {\r\n                    subtype.init = function () {\r\n                        subtype.$super.init.apply(this, arguments);\r\n                    };\r\n                }\r\n\r\n                // Initializer's prototype is the subtype object\r\n                subtype.init.prototype = subtype;\r\n\r\n                // Reference supertype\r\n                subtype.$super = this;\r\n\r\n                return subtype;\r\n            },\r\n\r\n            /**\r\n             * Extends this object and runs the init method.\r\n             * Arguments to create() will be passed to init().\r\n             *\r\n             * @return {Object} The new object.\r\n             *\r\n             * @static\r\n             *\r\n             * @example\r\n             *\r\n             *     var instance = MyType.create();\r\n             */\r\n            create: function () {\r\n                var instance = this.extend();\r\n                instance.init.apply(instance, arguments);\r\n\r\n                return instance;\r\n            },\r\n\r\n            /**\r\n             * Initializes a newly created object.\r\n             * Override this method to add some logic when your objects are created.\r\n             *\r\n             * @example\r\n             *\r\n             *     var MyType = CryptoJS.lib.Base.extend({\r\n             *         init: function () {\r\n             *             // ...\r\n             *         }\r\n             *     });\r\n             */\r\n            init: function () {\r\n            },\r\n\r\n            /**\r\n             * Copies properties into this object.\r\n             *\r\n             * @param {Object} properties The properties to mix in.\r\n             *\r\n             * @example\r\n             *\r\n             *     MyType.mixIn({\r\n             *         field: 'value'\r\n             *     });\r\n             */\r\n            mixIn: function (properties) {\r\n                for (var propertyName in properties) {\r\n                    if (properties.hasOwnProperty(propertyName)) {\r\n                        this[propertyName] = properties[propertyName];\r\n                    }\r\n                }\r\n\r\n                // IE won't copy toString using the loop above\r\n                if (properties.hasOwnProperty('toString')) {\r\n                    this.toString = properties.toString;\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Creates a copy of this object.\r\n             *\r\n             * @return {Object} The clone.\r\n             *\r\n             * @example\r\n             *\r\n             *     var clone = instance.clone();\r\n             */\r\n            clone: function () {\r\n                return this.init.prototype.extend(this);\r\n            }\r\n        };\r\n    }());\r\n\r\n    /**\r\n     * An array of 32-bit words.\r\n     *\r\n     * @property {Array} words The array of 32-bit words.\r\n     * @property {number} sigBytes The number of significant bytes in this word array.\r\n     */\r\n    var WordArray = C_lib.WordArray = Base.extend({\r\n        /**\r\n         * Initializes a newly created word array.\r\n         *\r\n         * @param {Array} words (Optional) An array of 32-bit words.\r\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.create();\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n         */\r\n        init: function (words, sigBytes) {\r\n            words = this.words = words || [];\r\n\r\n            if (sigBytes != undefined) {\r\n                this.sigBytes = sigBytes;\r\n            } else {\r\n                this.sigBytes = words.length * 4;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts this word array to a string.\r\n         *\r\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n         *\r\n         * @return {string} The stringified word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     var string = wordArray + '';\r\n         *     var string = wordArray.toString();\r\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n         */\r\n        toString: function (encoder) {\r\n            return (encoder || Hex).stringify(this);\r\n        },\r\n\r\n        /**\r\n         * Concatenates a word array to this word array.\r\n         *\r\n         * @param {WordArray} wordArray The word array to append.\r\n         *\r\n         * @return {WordArray} This word array.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray1.concat(wordArray2);\r\n         */\r\n        concat: function (wordArray) {\r\n            // Shortcuts\r\n            var thisWords = this.words;\r\n            var thatWords = wordArray.words;\r\n            var thisSigBytes = this.sigBytes;\r\n            var thatSigBytes = wordArray.sigBytes;\r\n\r\n            // Clamp excess bits\r\n            this.clamp();\r\n\r\n            // Concat\r\n            if (thisSigBytes % 4) {\r\n                // Copy one byte at a time\r\n                for (var i = 0; i < thatSigBytes; i++) {\r\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\r\n                }\r\n            } else if (thatWords.length > 0xffff) {\r\n                // Copy one word at a time\r\n                for (var i = 0; i < thatSigBytes; i += 4) {\r\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n                }\r\n            } else {\r\n                // Copy all words at once\r\n                thisWords.push.apply(thisWords, thatWords);\r\n            }\r\n            this.sigBytes += thatSigBytes;\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Removes insignificant bits.\r\n         *\r\n         * @example\r\n         *\r\n         *     wordArray.clamp();\r\n         */\r\n        clamp: function () {\r\n            // Shortcuts\r\n            var words = this.words;\r\n            var sigBytes = this.sigBytes;\r\n\r\n            // Clamp\r\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n            words.length = Math.ceil(sigBytes / 4);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this word array.\r\n         *\r\n         * @return {WordArray} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = wordArray.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone.words = this.words.slice(0);\r\n\r\n            return clone;\r\n        },\r\n\r\n        /**\r\n         * Creates a word array filled with random bytes.\r\n         *\r\n         * @param {number} nBytes The number of random bytes to generate.\r\n         *\r\n         * @return {WordArray} The random word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n         */\r\n        random: function (nBytes) {\r\n            var words = [];\r\n            for (var i = 0; i < nBytes; i += 4) {\r\n                words.push((Math.random() * 0x100000000) | 0);\r\n            }\r\n\r\n            return new WordArray.init(words, nBytes);\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Encoder namespace.\r\n     */\r\n    var C_enc = C.enc = {};\r\n\r\n    /**\r\n     * Hex encoding strategy.\r\n     */\r\n    var Hex = C_enc.Hex = {\r\n        /**\r\n         * Converts a word array to a hex string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The hex string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var hexChars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                hexChars.push((bite >>> 4).toString(16));\r\n                hexChars.push((bite & 0x0f).toString(16));\r\n            }\r\n\r\n            return hexChars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a hex string to a word array.\r\n         *\r\n         * @param {string} hexStr The hex string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n         */\r\n        parse: function (hexStr) {\r\n            // Shortcut\r\n            var hexStrLength = hexStr.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < hexStrLength; i += 2) {\r\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n            }\r\n\r\n            return new WordArray.init(words, hexStrLength / 2);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Latin1 encoding strategy.\r\n     */\r\n    var Latin1 = C_enc.Latin1 = {\r\n        /**\r\n         * Converts a word array to a Latin1 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Latin1 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n\r\n            // Convert\r\n            var latin1Chars = [];\r\n            for (var i = 0; i < sigBytes; i++) {\r\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n                latin1Chars.push(String.fromCharCode(bite));\r\n            }\r\n\r\n            return latin1Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Latin1 string to a word array.\r\n         *\r\n         * @param {string} latin1Str The Latin1 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n         */\r\n        parse: function (latin1Str) {\r\n            // Shortcut\r\n            var latin1StrLength = latin1Str.length;\r\n\r\n            // Convert\r\n            var words = [];\r\n            for (var i = 0; i < latin1StrLength; i++) {\r\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            return new WordArray.init(words, latin1StrLength);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * UTF-8 encoding strategy.\r\n     */\r\n    var Utf8 = C_enc.Utf8 = {\r\n        /**\r\n         * Converts a word array to a UTF-8 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The UTF-8 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            try {\r\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n            } catch (e) {\r\n                throw new Error('Malformed UTF-8 data');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Converts a UTF-8 string to a word array.\r\n         *\r\n         * @param {string} utf8Str The UTF-8 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n         */\r\n        parse: function (utf8Str) {\r\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Abstract buffered block algorithm template.\r\n     *\r\n     * The property blockSize must be implemented in a concrete subtype.\r\n     *\r\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n     */\r\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n        /**\r\n         * Resets this block algorithm's data buffer to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm.reset();\r\n         */\r\n        reset: function () {\r\n            // Initial values\r\n            this._data = new WordArray.init();\r\n            this._nDataBytes = 0;\r\n        },\r\n\r\n        /**\r\n         * Adds new data to this block algorithm's buffer.\r\n         *\r\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n         *\r\n         * @example\r\n         *\r\n         *     bufferedBlockAlgorithm._append('data');\r\n         *     bufferedBlockAlgorithm._append(wordArray);\r\n         */\r\n        _append: function (data) {\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof data == 'string') {\r\n                data = Utf8.parse(data);\r\n            }\r\n\r\n            // Append\r\n            this._data.concat(data);\r\n            this._nDataBytes += data.sigBytes;\r\n        },\r\n\r\n        /**\r\n         * Processes available data blocks.\r\n         *\r\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n         *\r\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n         *\r\n         * @return {WordArray} The processed data.\r\n         *\r\n         * @example\r\n         *\r\n         *     var processedData = bufferedBlockAlgorithm._process();\r\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n         */\r\n        _process: function (doFlush) {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n            var dataSigBytes = data.sigBytes;\r\n            var blockSize = this.blockSize;\r\n            var blockSizeBytes = blockSize * 4;\r\n\r\n            // Count blocks ready\r\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\r\n            if (doFlush) {\r\n                // Round up to include partial blocks\r\n                nBlocksReady = Math.ceil(nBlocksReady);\r\n            } else {\r\n                // Round down to include only full blocks,\r\n                // less the number of blocks that must remain in the buffer\r\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n            }\r\n\r\n            // Count words ready\r\n            var nWordsReady = nBlocksReady * blockSize;\r\n\r\n            // Count bytes ready\r\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n            // Process blocks\r\n            if (nWordsReady) {\r\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n                    // Perform concrete-algorithm logic\r\n                    this._doProcessBlock(dataWords, offset);\r\n                }\r\n\r\n                // Remove processed words\r\n                var processedWords = dataWords.splice(0, nWordsReady);\r\n                data.sigBytes -= nBytesReady;\r\n            }\r\n\r\n            // Return processed words\r\n            return new WordArray.init(processedWords, nBytesReady);\r\n        },\r\n\r\n        /**\r\n         * Creates a copy of this object.\r\n         *\r\n         * @return {Object} The clone.\r\n         *\r\n         * @example\r\n         *\r\n         *     var clone = bufferedBlockAlgorithm.clone();\r\n         */\r\n        clone: function () {\r\n            var clone = Base.clone.call(this);\r\n            clone._data = this._data.clone();\r\n\r\n            return clone;\r\n        },\r\n\r\n        _minBufferSize: 0\r\n    });\r\n\r\n    /**\r\n     * Abstract hasher template.\r\n     *\r\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n     */\r\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n        /**\r\n         * Configuration options.\r\n         */\r\n        cfg: Base.extend(),\r\n\r\n        /**\r\n         * Initializes a newly created hasher.\r\n         *\r\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hasher = CryptoJS.algo.SHA256.create();\r\n         */\r\n        init: function (cfg) {\r\n            // Apply config defaults\r\n            this.cfg = this.cfg.extend(cfg);\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this hasher to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Reset data buffer\r\n            BufferedBlockAlgorithm.reset.call(this);\r\n\r\n            // Perform concrete-hasher logic\r\n            this._doReset();\r\n        },\r\n\r\n        /**\r\n         * Updates this hasher with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {Hasher} This hasher.\r\n         *\r\n         * @example\r\n         *\r\n         *     hasher.update('message');\r\n         *     hasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            // Append\r\n            this._append(messageUpdate);\r\n\r\n            // Update the hash\r\n            this._process();\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the hash computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The hash.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hash = hasher.finalize();\r\n         *     var hash = hasher.finalize('message');\r\n         *     var hash = hasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Final message update\r\n            if (messageUpdate) {\r\n                this._append(messageUpdate);\r\n            }\r\n\r\n            // Perform concrete-hasher logic\r\n            var hash = this._doFinalize();\r\n\r\n            return hash;\r\n        },\r\n\r\n        blockSize: 512/32,\r\n\r\n        /**\r\n         * Creates a shortcut function to a hasher's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to create a helper for.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHelper: function (hasher) {\r\n            return function (message, cfg) {\r\n                return new hasher.init(cfg).finalize(message);\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Creates a shortcut function to the HMAC's object interface.\r\n         *\r\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n         *\r\n         * @return {Function} The shortcut function.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n         */\r\n        _createHmacHelper: function (hasher) {\r\n            return function (message, key) {\r\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\r\n            };\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Algorithm namespace.\r\n     */\r\n    var C_algo = C.algo = {};\r\n\r\n    return C;\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var C_enc = C.enc;\r\n\r\n    /**\r\n     * Base64 encoding strategy.\r\n     */\r\n    var Base64 = C_enc.Base64 = {\r\n        /**\r\n         * Converts a word array to a Base64 string.\r\n         *\r\n         * @param {WordArray} wordArray The word array.\r\n         *\r\n         * @return {string} The Base64 string.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n         */\r\n        stringify: function (wordArray) {\r\n            // Shortcuts\r\n            var words = wordArray.words;\r\n            var sigBytes = wordArray.sigBytes;\r\n            var map = this._map;\r\n\r\n            // Clamp excess bits\r\n            wordArray.clamp();\r\n\r\n            // Convert\r\n            var base64Chars = [];\r\n            for (var i = 0; i < sigBytes; i += 3) {\r\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\r\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n                }\r\n            }\r\n\r\n            // Add padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                while (base64Chars.length % 4) {\r\n                    base64Chars.push(paddingChar);\r\n                }\r\n            }\r\n\r\n            return base64Chars.join('');\r\n        },\r\n\r\n        /**\r\n         * Converts a Base64 string to a word array.\r\n         *\r\n         * @param {string} base64Str The Base64 string.\r\n         *\r\n         * @return {WordArray} The word array.\r\n         *\r\n         * @static\r\n         *\r\n         * @example\r\n         *\r\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n         */\r\n        parse: function (base64Str) {\r\n            // Shortcuts\r\n            var base64StrLength = base64Str.length;\r\n            var map = this._map;\r\n\r\n            // Ignore padding\r\n            var paddingChar = map.charAt(64);\r\n            if (paddingChar) {\r\n                var paddingIndex = base64Str.indexOf(paddingChar);\r\n                if (paddingIndex != -1) {\r\n                    base64StrLength = paddingIndex;\r\n                }\r\n            }\r\n\r\n            // Convert\r\n            var words = [];\r\n            var nBytes = 0;\r\n            for (var i = 0; i < base64StrLength; i++) {\r\n                if (i % 4) {\r\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\r\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\r\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n                    nBytes++;\r\n                }\r\n            }\r\n\r\n            return WordArray.create(words, nBytes);\r\n        },\r\n\r\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n    };\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var Base = C_lib.Base;\r\n    var C_enc = C.enc;\r\n    var Utf8 = C_enc.Utf8;\r\n    var C_algo = C.algo;\r\n\r\n    /**\r\n     * HMAC algorithm.\r\n     */\r\n    var HMAC = C_algo.HMAC = Base.extend({\r\n        /**\r\n         * Initializes a newly created HMAC.\r\n         *\r\n         * @param {Hasher} hasher The hash algorithm to use.\r\n         * @param {WordArray|string} key The secret key.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\r\n         */\r\n        init: function (hasher, key) {\r\n            // Init hasher\r\n            hasher = this._hasher = new hasher.init();\r\n\r\n            // Convert string to WordArray, else assume WordArray already\r\n            if (typeof key == 'string') {\r\n                key = Utf8.parse(key);\r\n            }\r\n\r\n            // Shortcuts\r\n            var hasherBlockSize = hasher.blockSize;\r\n            var hasherBlockSizeBytes = hasherBlockSize * 4;\r\n\r\n            // Allow arbitrary length keys\r\n            if (key.sigBytes > hasherBlockSizeBytes) {\r\n                key = hasher.finalize(key);\r\n            }\r\n\r\n            // Clamp excess bits\r\n            key.clamp();\r\n\r\n            // Clone key for inner and outer pads\r\n            var oKey = this._oKey = key.clone();\r\n            var iKey = this._iKey = key.clone();\r\n\r\n            // Shortcuts\r\n            var oKeyWords = oKey.words;\r\n            var iKeyWords = iKey.words;\r\n\r\n            // XOR keys with pad constants\r\n            for (var i = 0; i < hasherBlockSize; i++) {\r\n                oKeyWords[i] ^= 0x5c5c5c5c;\r\n                iKeyWords[i] ^= 0x36363636;\r\n            }\r\n            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\r\n\r\n            // Set initial values\r\n            this.reset();\r\n        },\r\n\r\n        /**\r\n         * Resets this HMAC to its initial state.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.reset();\r\n         */\r\n        reset: function () {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Reset\r\n            hasher.reset();\r\n            hasher.update(this._iKey);\r\n        },\r\n\r\n        /**\r\n         * Updates this HMAC with a message.\r\n         *\r\n         * @param {WordArray|string} messageUpdate The message to append.\r\n         *\r\n         * @return {HMAC} This HMAC instance.\r\n         *\r\n         * @example\r\n         *\r\n         *     hmacHasher.update('message');\r\n         *     hmacHasher.update(wordArray);\r\n         */\r\n        update: function (messageUpdate) {\r\n            this._hasher.update(messageUpdate);\r\n\r\n            // Chainable\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Finalizes the HMAC computation.\r\n         * Note that the finalize operation is effectively a destructive, read-once operation.\r\n         *\r\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n         *\r\n         * @return {WordArray} The HMAC.\r\n         *\r\n         * @example\r\n         *\r\n         *     var hmac = hmacHasher.finalize();\r\n         *     var hmac = hmacHasher.finalize('message');\r\n         *     var hmac = hmacHasher.finalize(wordArray);\r\n         */\r\n        finalize: function (messageUpdate) {\r\n            // Shortcut\r\n            var hasher = this._hasher;\r\n\r\n            // Compute HMAC\r\n            var innerHash = hasher.finalize(messageUpdate);\r\n            hasher.reset();\r\n            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\r\n\r\n            return hmac;\r\n        }\r\n    });\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-1 hash algorithm.\r\n     */\r\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init([\r\n                0x67452301, 0xefcdab89,\r\n                0x98badcfe, 0x10325476,\r\n                0xc3d2e1f0\r\n            ]);\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 80; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n                    W[i] = (n << 1) | (n >>> 31);\r\n                }\r\n\r\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n                if (i < 20) {\r\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\r\n                } else if (i < 40) {\r\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\r\n                } else if (i < 60) {\r\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n                } else /* if (i < 80) */ {\r\n                    t += (b ^ c ^ d) - 0x359d3e2a;\r\n                }\r\n\r\n                e = d;\r\n                d = c;\r\n                c = (b << 30) | (b >>> 2);\r\n                b = a;\r\n                a = t;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA1('message');\r\n     *     var hash = CryptoJS.SHA1(wordArray);\r\n     */\r\n    C.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n     */\r\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n}());\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function (Math) {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Initialization and round constants tables\r\n    var H = [];\r\n    var K = [];\r\n\r\n    // Compute constants\r\n    (function () {\r\n        function isPrime(n) {\r\n            var sqrtN = Math.sqrt(n);\r\n            for (var factor = 2; factor <= sqrtN; factor++) {\r\n                if (!(n % factor)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFractionalBits(n) {\r\n            return ((n - (n | 0)) * 0x100000000) | 0;\r\n        }\r\n\r\n        var n = 2;\r\n        var nPrime = 0;\r\n        while (nPrime < 64) {\r\n            if (isPrime(n)) {\r\n                if (nPrime < 8) {\r\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n                }\r\n                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    }());\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-256 hash algorithm.\r\n     */\r\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init(H.slice(0));\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n            var f = H[5];\r\n            var g = H[6];\r\n            var h = H[7];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 64; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var gamma0x = W[i - 15];\r\n                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n                                   (gamma0x >>> 3);\r\n\r\n                    var gamma1x = W[i - 2];\r\n                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n                                   (gamma1x >>> 10);\r\n\r\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n                }\r\n\r\n                var ch  = (e & f) ^ (~e & g);\r\n                var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n                var t1 = h + sigma1 + ch + K[i] + W[i];\r\n                var t2 = sigma0 + maj;\r\n\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + t1) | 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (t1 + t2) | 0;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n            H[5] = (H[5] + f) | 0;\r\n            H[6] = (H[6] + g) | 0;\r\n            H[7] = (H[7] + h) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA256('message');\r\n     *     var hash = CryptoJS.SHA256(wordArray);\r\n     */\r\n    C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n     */\r\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Check if typed arrays are supported\r\n    if (typeof ArrayBuffer != 'function') {\r\n        return;\r\n    }\r\n\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n\r\n    // Reference original init\r\n    var superInit = WordArray.init;\r\n\r\n    // Augment WordArray.init to handle typed arrays\r\n    var subInit = WordArray.init = function (typedArray) {\r\n        // Convert buffers to uint8\r\n        if (typedArray instanceof ArrayBuffer) {\r\n            typedArray = new Uint8Array(typedArray);\r\n        }\r\n\r\n        // Convert other array views to uint8\r\n        if (\r\n            typedArray instanceof Int8Array ||\r\n            typedArray instanceof Uint8ClampedArray ||\r\n            typedArray instanceof Int16Array ||\r\n            typedArray instanceof Uint16Array ||\r\n            typedArray instanceof Int32Array ||\r\n            typedArray instanceof Uint32Array ||\r\n            typedArray instanceof Float32Array ||\r\n            typedArray instanceof Float64Array\r\n        ) {\r\n            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n        }\r\n\r\n        // Handle Uint8Array\r\n        if (typedArray instanceof Uint8Array) {\r\n            // Shortcut\r\n            var typedArrayByteLength = typedArray.byteLength;\r\n\r\n            // Extract bytes\r\n            var words = [];\r\n            for (var i = 0; i < typedArrayByteLength; i++) {\r\n                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            // Initialize this word array\r\n            superInit.call(this, words, typedArrayByteLength);\r\n        } else {\r\n            // Else call normal init\r\n            superInit.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    subInit.prototype = WordArray;\r\n}());\r\n","/*globals qq */\r\nqq.s3 = qq.s3 || {};\r\n\r\nqq.s3.util = qq.s3.util || (function() {\r\n    \"use strict\";\r\n\r\n    return {\r\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\r\n\r\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\r\n\r\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\r\n\r\n        DATE_PARAM_NAME: \"x-amz-date\",\r\n\r\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\r\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\r\n\r\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\r\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\r\n\r\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\r\n\r\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\r\n\r\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\r\n\r\n        CASE_SENSITIVE_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNSIGNABLE_REST_HEADER_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\"\r\n        ],\r\n\r\n        UNPREFIXED_PARAM_NAMES: [\r\n            \"Cache-Control\",\r\n            \"Content-Disposition\",\r\n            \"Content-Encoding\",\r\n            \"Content-MD5\",\r\n            \"x-amz-server-side-encryption-customer-algorithm\",\r\n            \"x-amz-server-side-encryption-customer-key\",\r\n            \"x-amz-server-side-encryption-customer-key-MD5\"\r\n        ],\r\n\r\n        /**\r\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\r\n         *\r\n         * Examples of some valid endpoints are:\r\n         *     http://foo.s3.amazonaws.com\r\n         *     https://foo.s3.amazonaws.com\r\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\r\n         *     foo.s3.amazonaws.com\r\n         *     http://foo.bar.com\r\n         *     http://s3.amazonaws.com/foo.bar.com\r\n         * ...etc\r\n         *\r\n         * @param endpoint The bucket's URL.\r\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\r\n         */\r\n        getBucket: function(endpoint) {\r\n            var patterns = [\r\n                    //bucket in domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\r\n                    //bucket in path\r\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\r\n                    //custom domain\r\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\r\n                ],\r\n                bucket;\r\n\r\n            qq.each(patterns, function(idx, pattern) {\r\n                var match = pattern.exec(endpoint);\r\n\r\n                if (match) {\r\n                    bucket = match[1];\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            return bucket;\r\n        },\r\n\r\n        /** Create Prefixed request headers which are appropriate for S3.\r\n         *\r\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\r\n         * it along without a metadata prefix. For all other request header parameter names,\r\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\r\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\r\n         */\r\n        _getPrefixedParamName: function(name) {\r\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\r\n                return name;\r\n            }\r\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\r\n        },\r\n\r\n        /**\r\n         * Create a policy document to be signed and sent along with the S3 upload request.\r\n         *\r\n         * @param spec Object with properties use to construct the policy document.\r\n         * @returns {Object} Policy doc.\r\n         */\r\n        getPolicy: function(spec) {\r\n            var policy = {},\r\n                conditions = [],\r\n                bucket = spec.bucket,\r\n                date = spec.date,\r\n                drift = spec.clockDrift,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                type = spec.type,\r\n                expectedStatus = spec.expectedStatus,\r\n                sessionToken = spec.sessionToken,\r\n                params = spec.params,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                minFileSize = spec.minFileSize,\r\n                maxFileSize = spec.maxFileSize,\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion;\r\n\r\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\r\n\r\n            conditions.push({acl: acl});\r\n            conditions.push({bucket: bucket});\r\n\r\n            if (type) {\r\n                conditions.push({\"Content-Type\": type});\r\n            }\r\n\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                conditions.push({success_action_status: expectedStatus.toString()});\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                conditions.push({success_action_redirect: successRedirectUrl});\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (signatureVersion === 2) {\r\n                conditions.push({key: key});\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1].key = key;\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\r\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\r\n\r\n                conditions.push({});\r\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\r\n                    qq.s3.util.getV4PolicyDate(date, drift);\r\n            }\r\n\r\n            // user metadata\r\n            qq.each(params, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\r\n                    param = {};\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    param[awsParamName] = val;\r\n                }\r\n                else {\r\n                    param[awsParamName] = encodeURIComponent(val);\r\n                }\r\n\r\n                conditions.push(param);\r\n            });\r\n\r\n            policy.conditions = conditions;\r\n\r\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\r\n\r\n            return policy;\r\n        },\r\n\r\n        /**\r\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\r\n         * update the session token.  This is only relevant if requests are being signed client-side.\r\n         *\r\n         * @param policy Live policy document\r\n         * @param newSessionToken Updated session token.\r\n         */\r\n        refreshPolicyCredentials: function(policy, newSessionToken) {\r\n            var sessionTokenFound = false;\r\n\r\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\r\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\r\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\r\n                        oldCondObj[oldCondName] = newSessionToken;\r\n                        sessionTokenFound = true;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (!sessionTokenFound) {\r\n                policy.conditions.push({});\r\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\r\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\r\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\r\n         * still possible for a malicious user to tamper with these values during policy document generation,\r\n         * before it is sent to the server for signing.\r\n         *\r\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\r\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\r\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\r\n         */\r\n        generateAwsParams: function(spec, signPolicyCallback) {\r\n            var awsParams = {},\r\n                customParams = spec.params,\r\n                promise = new qq.Promise(),\r\n                sessionToken = spec.sessionToken,\r\n                drift = spec.clockDrift,\r\n                type = spec.type,\r\n                key = spec.key,\r\n                accessKey = spec.accessKey,\r\n                acl = spec.acl,\r\n                expectedStatus = spec.expectedStatus,\r\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\r\n                reducedRedundancy = spec.reducedRedundancy,\r\n                region = spec.region,\r\n                serverSideEncryption = spec.serverSideEncryption,\r\n                signatureVersion = spec.signatureVersion,\r\n                now = new Date(),\r\n                log = spec.log,\r\n                policyJson;\r\n\r\n            spec.date = now;\r\n            policyJson = qq.s3.util.getPolicy(spec);\r\n\r\n            awsParams.key = key;\r\n\r\n            if (type) {\r\n                awsParams[\"Content-Type\"] = type;\r\n            }\r\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\r\n            if (expectedStatus) {\r\n                awsParams.success_action_status = expectedStatus;\r\n            }\r\n\r\n            if (successRedirectUrl) {\r\n                awsParams.success_action_redirect = successRedirectUrl;\r\n            }\r\n            // jscs:enable\r\n            if (reducedRedundancy) {\r\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\r\n            }\r\n\r\n            if (serverSideEncryption) {\r\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\r\n            }\r\n\r\n            if (sessionToken) {\r\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n            }\r\n\r\n            awsParams.acl = acl;\r\n\r\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\r\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\r\n            // Prefixed param values will be URI encoded as well.\r\n            qq.each(customParams, function(name, val) {\r\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\r\n\r\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\r\n                    awsParams[awsParamName] = val;\r\n                }\r\n                else {\r\n                    awsParams[awsParamName] = encodeURIComponent(val);\r\n                }\r\n            });\r\n\r\n            if (signatureVersion === 2) {\r\n                awsParams.AWSAccessKeyId = accessKey;\r\n            }\r\n            else if (signatureVersion === 4) {\r\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\r\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\r\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\r\n            }\r\n\r\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\r\n            // HMAC signature for the policy doc.\r\n            signPolicyCallback(policyJson).then(\r\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\r\n                    awsParams.policy = policyAndSignature.policy;\r\n\r\n                    if (spec.signatureVersion === 2) {\r\n                        awsParams.signature = policyAndSignature.signature;\r\n\r\n                        if (updatedAccessKey) {\r\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\r\n                        }\r\n                    }\r\n                    else if (spec.signatureVersion === 4) {\r\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\r\n                    }\r\n\r\n                    if (updatedSessionToken) {\r\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                    }\r\n\r\n                    promise.success(awsParams);\r\n                },\r\n                function(errorMessage) {\r\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\r\n                                                   \"a valid signature and policy from the server.\";\r\n\r\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\r\n                    promise.failure(errorMessage);\r\n                }\r\n            );\r\n\r\n            return promise;\r\n        },\r\n\r\n        /**\r\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\r\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\r\n         * checks already in place.\r\n         *\r\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\r\n         * @param minSize Minimum acceptable size, in bytes\r\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\r\n         */\r\n        enforceSizeLimits: function(policy, minSize, maxSize) {\r\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\r\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\r\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\r\n\r\n            if (minSize > 0 || maxSize > 0) {\r\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\r\n            }\r\n        },\r\n\r\n        getPolicyExpirationDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\r\n        },\r\n\r\n        getCredentialsDate: function(date) {\r\n            return date.getUTCFullYear() + \"\" +\r\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\r\n                (\"0\" + date.getUTCDate()).slice(-2);\r\n        },\r\n\r\n        getPolicyDate: function(date, _minutesToAdd_) {\r\n            var minutesToAdd = _minutesToAdd_ || 0,\r\n                pad, r;\r\n\r\n            /*jshint -W014 */\r\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\r\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\r\n\r\n            if (Date.prototype.toISOString) {\r\n                return date.toISOString();\r\n            }\r\n            else {\r\n                pad = function(number) {\r\n                    r = String(number);\r\n\r\n                    if (r.length === 1) {\r\n                        r = \"0\" + r;\r\n                    }\r\n\r\n                    return r;\r\n                };\r\n\r\n                return date.getUTCFullYear()\r\n                    + \"-\" + pad(date.getUTCMonth() + 1)\r\n                    + \"-\" + pad(date.getUTCDate())\r\n                    + \"T\" + pad(date.getUTCHours())\r\n                    + \":\" + pad(date.getUTCMinutes())\r\n                    + \":\" + pad(date.getUTCSeconds())\r\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                    + \"Z\";\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\r\n         * the associated resource.\r\n         *\r\n         * @param iframe Iframe containing response\r\n         * @returns {{bucket: *, key: *, etag: *}}\r\n         */\r\n        parseIframeResponse: function(iframe) {\r\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\r\n                queryString = doc.location.search,\r\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\r\n\r\n            if (match) {\r\n                return {\r\n                    bucket: match[1],\r\n                    key: match[2],\r\n                    etag: match[3].replace(/%22/g, \"\")\r\n                };\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param successRedirectUrl Relative or absolute location of success redirect page\r\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\r\n         */\r\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\r\n            if (successRedirectUrl) {\r\n                var targetAnchorContainer = document.createElement(\"div\"),\r\n                    targetAnchor;\r\n\r\n                if (qq.ie7()) {\r\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\r\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\r\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\r\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\r\n                    targetAnchor = targetAnchorContainer.firstChild;\r\n                    return targetAnchor.href;\r\n                }\r\n                else {\r\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\r\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\r\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\r\n                    // in order to ensure relative URLs will be properly parsed.\r\n                    targetAnchor = document.createElement(\"a\");\r\n                    targetAnchor.href = successRedirectUrl;\r\n                    targetAnchor.href = targetAnchor.href;\r\n                    return targetAnchor.href;\r\n                }\r\n            }\r\n        },\r\n\r\n        getV4CredentialsString: function(spec) {\r\n            return spec.key + \"/\" +\r\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\r\n                spec.region + \"/s3/aws4_request\";\r\n        },\r\n\r\n        getV4PolicyDate: function(date, drift) {\r\n            var adjustedDate = new Date(date.getTime() + drift);\r\n\r\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\r\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\r\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\r\n                    \"Z\";\r\n        },\r\n\r\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\r\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\r\n        // and spaces are replaced with \"+\".\r\n        encodeQueryStringParam: function(param) {\r\n            var percentEncoded = encodeURIComponent(param);\r\n\r\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\r\n\r\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\r\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\r\n\r\n            // replace percent-encoded spaces with a \"+\"\r\n            return percentEncoded.replace(/%20/g, \"+\");\r\n        },\r\n        /**\r\n         * Escapes url part as for AWS requirements\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscape: function(string) {\r\n            var output = encodeURIComponent(string);\r\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\r\n            output = output.replace(/[*]/g, function(ch) {\r\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\r\n            });\r\n            return output;\r\n        },\r\n        /**\r\n         * Escapes a path as for AWS requirement\r\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\r\n         */\r\n        uriEscapePath: function(path) {\r\n            var parts = [];\r\n            qq.each(path.split(\"/\"), function(idx, item) {\r\n                parts.push(qq.s3.util.uriEscape(item));\r\n            });\r\n            return parts.join(\"/\");\r\n        }\r\n    };\r\n}());\r\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploaderBasic = function(o) {\n        var options = {\n            request: {\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\n                accessKey: null,\n\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\n                clockDrift: 0\n            },\n\n            objectProperties: {\n                acl: \"private\",\n\n                // string or a function which may be promissory\n                bucket: qq.bind(function(id) {\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\n                }, this),\n\n                // string or a function which may be promissory - only used for V4 multipart uploads\n                host: qq.bind(function(id) {\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\n                }, this),\n\n                // 'uuid', 'filename', or a function which may be promissory\n                key: \"uuid\",\n\n                reducedRedundancy: false,\n\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\n                region: \"us-east-1\",\n\n                serverSideEncryption: false\n            },\n\n            credentials: {\n                // Public key (required).\n                accessKey: null,\n                // Private key (required).\n                secretKey: null,\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\n                expiration: null,\n                // Temporary credentials session token.\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\n                sessionToken: null\n            },\n\n            // All but `version` are ignored if `credentials` is provided.\n            signature: {\n                customHeaders: {},\n                endpoint: null,\n                version: 2\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            // required if non-File-API browsers, such as IE9 and older, are used\n            iframeSupport: {\n                localBlankPagePath: null\n            },\n\n            chunking: {\n                // minimum part size is 5 MiB when uploading to S3\n                partSize: 5242880\n            },\n\n            cors: {\n                allowXdr: true\n            },\n\n            callbacks: {\n                onCredentialsExpired: function() {}\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        if (!this.setCredentials(options.credentials, true)) {\n            this._currentCredentials.accessKey = options.request.accessKey;\n        }\n\n        this._aclStore = this._createStore(options.objectProperties.acl);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds S3 keys for file representations constructed from a session request.\n        this._cannedKeys = {};\n        // Holds S3 buckets for file representations constructed from a session request.\n        this._cannedBuckets = {};\n\n        this._buckets = {};\n        this._hosts = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\n        getBucket: function(id) {\n            if (this._cannedBuckets[id] == null) {\n                return this._buckets[id];\n            }\n            return this._cannedBuckets[id];\n        },\n\n        /**\n         * @param id File ID\n         * @returns {*} Key name associated w/ the file, if one exists\n         */\n        getKey: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedKeys[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n\n            return this._cannedKeys[id];\n        },\n\n        /**\n         * Override the parent's reset function to cleanup various S3-related items.\n         */\n        reset: function() {\n            qq.FineUploaderBasic.prototype.reset.call(this);\n            this._failedSuccessRequestCallbacks = [];\n            this._buckets = {};\n            this._hosts = {};\n        },\n\n        setCredentials: function(credentials, ignoreEmpty) {\n            if (credentials && credentials.secretKey) {\n                if (!credentials.accessKey) {\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\n                }\n                else if (!credentials.expiration) {\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\n                }\n                else {\n                    this._currentCredentials = qq.extend({}, credentials);\n\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\n                    if (qq.isString(credentials.expiration)) {\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\n                    }\n                }\n\n                return true;\n            }\n            else if (!ignoreEmpty) {\n                throw new qq.Error(\"Invalid credentials parameter!\");\n            }\n            else {\n                this._currentCredentials = {};\n            }\n        },\n\n        setAcl: function(acl, id) {\n            this._aclStore.set(acl, id);\n        },\n\n        /**\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\n         *\n         * @returns {qq.UploadHandlerController}\n         * @private\n         */\n        _createUploadHandler: function() {\n            var self = this,\n                additionalOptions = {\n                    aclStore: this._aclStore,\n                    getBucket: qq.bind(this._determineBucket, this),\n                    getHost: qq.bind(this._determineHost, this),\n                    getKeyName: qq.bind(this._determineKeyName, this),\n                    iframeSupport: this._options.iframeSupport,\n                    objectProperties: this._options.objectProperties,\n                    signature: this._options.signature,\n                    clockDrift: this._options.request.clockDrift,\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\n                    validation: {\n                        minSizeLimit: this._options.validation.minSizeLimit,\n                        maxSizeLimit: this._options.validation.sizeLimit\n                    }\n                };\n\n            // We assume HTTP if it is missing from the start of the endpoint string.\n            qq.override(this._endpointStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var endpoint = super_.get(id);\n\n                        if (endpoint.indexOf(\"http\") < 0) {\n                            return \"http://\" + endpoint;\n                        }\n\n                        return endpoint;\n                    }\n                };\n            });\n\n            // Some param names should be lower case to avoid signature mismatches\n            qq.override(this._paramsStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var oldParams = super_.get(id),\n                            modifiedParams = {};\n\n                        qq.each(oldParams, function(name, val) {\n                            var paramName = name;\n\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\n                                paramName = paramName.toLowerCase();\n                            }\n\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\n                        });\n\n                        return modifiedParams;\n                    }\n                };\n            });\n\n            additionalOptions.signature.credentialsProvider = {\n                get: function() {\n                    return self._currentCredentials;\n                },\n\n                onExpired: function() {\n                    var updateCredentials = new qq.Promise(),\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\n\n                    if (qq.isGenericPromise(callbackRetVal)) {\n                        callbackRetVal.then(function(credentials) {\n                            try {\n                                self.setCredentials(credentials);\n                                updateCredentials.success();\n                            }\n                            catch (error) {\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\n                            }\n                        }, function(errorMsg) {\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\n                        });\n                    }\n                    else {\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\n                    }\n\n                    return updateCredentials;\n                }\n            };\n\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\n        },\n\n        _determineObjectPropertyValue: function(id, property) {\n            var maybe = this._options.objectProperties[property],\n                promise = new qq.Promise(),\n                self = this;\n\n            if (qq.isFunction(maybe)) {\n                maybe = maybe(id);\n                if (qq.isGenericPromise(maybe)) {\n                    promise = maybe;\n                }\n                else {\n                    promise.success(maybe);\n                }\n            }\n            else if (qq.isString(maybe)) {\n                promise.success(maybe);\n            }\n\n            promise.then(\n                function success(value) {\n                    self[\"_\" + property + \"s\"][id] = value;\n                },\n\n                function failure(errorMsg) {\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\n                }\n            );\n\n            return promise;\n        },\n\n        _determineBucket: function(id) {\n            return this._determineObjectPropertyValue(id, \"bucket\");\n        },\n\n        _determineHost: function(id) {\n            return this._determineObjectPropertyValue(id, \"host\");\n        },\n\n        /**\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\n         * delegate to an integrator-defined function that determines the file's key name on demand,\n         * which also may be promissory.\n         *\n         * @param id ID of the file\n         * @param filename Name of the file\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\n         * @private\n         */\n        _determineKeyName: function(id, filename) {\n            /*jshint -W015*/\n            var promise = new qq.Promise(),\n                keynameLogic = this._options.objectProperties.key,\n                extension = qq.getExtension(filename),\n                onGetKeynameFailure = promise.failure,\n                onGetKeynameSuccess = function(keyname, extension) {\n                    var keynameToUse = keyname;\n\n                    if (extension !== undefined) {\n                        keynameToUse += \".\" + extension;\n                    }\n\n                    promise.success(keynameToUse);\n                };\n\n            switch (keynameLogic) {\n                case \"uuid\":\n                    onGetKeynameSuccess(this.getUuid(id), extension);\n                    break;\n                case \"filename\":\n                    onGetKeynameSuccess(filename);\n                    break;\n                default:\n                    if (qq.isFunction(keynameLogic)) {\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\n                    }\n                    else {\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\n                        onGetKeynameFailure();\n                    }\n            }\n\n            return promise;\n        },\n\n        /**\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\n         * the promise contract associated with the caller as well.\n         *\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\n         * @param id ID of the associated file\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\n         * @private\n         */\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\n            var self = this,\n                onSuccess = function(keyname) {\n                    successCallback(keyname);\n                },\n                onFailure = function(reason) {\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\n                    failureCallback(reason);\n                },\n                keyname = keynameFunc.call(this, id);\n\n            if (qq.isGenericPromise(keyname)) {\n                keyname.then(onSuccess, onFailure);\n            }\n            /*jshint -W116*/\n            else if (keyname == null) {\n                onFailure();\n            }\n            else {\n                onSuccess(keyname);\n            }\n        },\n\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\n            var params = {\n                key: this.getKey(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                bucket: this.getBucket(id)\n            };\n\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\n            }\n            else if (response.etag) {\n                params.etag = response.etag;\n            }\n\n            return params;\n        },\n\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\n        _onSubmitDelete: function(id, onSuccessCallback) {\n            var additionalMandatedParams = {\n                key: this.getKey(id),\n                bucket: this.getBucket(id)\n            };\n\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.s3Key == null) {\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedKeys[id] = sessionData.s3Key;\n                this._cannedBuckets[id] = sessionData.s3Bucket;\n            }\n\n            return id;\n        }\n    });\n}());\n","/* globals qq, CryptoJS */\r\n\r\n/**\r\n * Manages creation and communication of s3 signature workers.\r\n */\r\nqq.s3.RequestSignerWorkerManager = function (o) {\r\n    \"use strict\";\r\n    var worker = null,\r\n        workerPromises = {},\r\n        options = {\r\n            workerUrl: null,\r\n            log: function(str, level) {}\r\n        };\r\n    qq.extend(options, o, true);\r\n\r\n    function init() {\r\n        var workerUrl;\r\n        switch (typeof options.workerUrl) {\r\n            case \"string\":\r\n                if (options.workerUrl !== \"inline\") {\r\n                    workerUrl = options.workerUrl;\r\n                } else {\r\n                    workerUrl = qq.s3.createS3InlineWorkerUrl();\r\n                }\r\n                break;\r\n            case \"function\":\r\n                workerUrl = options.workerUrl();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (!workerUrl) {\r\n            return;\r\n        }\r\n        try {\r\n            worker = new Worker(workerUrl);\r\n            worker.onerror = function (e) {\r\n                // Prevent the event from bubbling\r\n                e.preventDefault();\r\n                // log the error, and fail any pending promises.\r\n                options.log(\"Worker encountered an error. Disabling. \" + e.message, \"warn\");\r\n                worker = null;\r\n                var outstandingRequests = Object.keys(workerPromises),\r\n                    i;\r\n                for (i = 0; i < outstandingRequests.length; i++) {\r\n                    workerPromises[outstandingRequests[i]].failure(e);\r\n                    delete workerPromises[outstandingRequests[i]];\r\n                }\r\n            };\r\n            worker.onmessage = function (e) {\r\n                if (!workerPromises[e.data.id]) {\r\n                    options.log(\"Worker returned a result for an request we dont know about.\", \"warn\");\r\n                    return;\r\n                }\r\n                if (e.data.err) {\r\n                    workerPromises[e.data.id].failure(e.data.err);\r\n                } else {\r\n                    workerPromises[e.data.id].success(e.data.resp);\r\n                }\r\n                delete workerPromises[e.data.id];\r\n            };\r\n        }  catch (ex) {\r\n            // worker is not supported or invalid\r\n            options.log(\"Worker failed to be created. Defaulting back to main thread processing.\" + ex, \"warn\");\r\n            worker = null;\r\n        }\r\n    }\r\n    init();\r\n    /*\r\n        Generates the signuare of the given file.\r\n        @param file the file/slice to generate the signature for.\r\n        @returns a promise or null if we can't generate signatures at all.\r\n    */\r\n    this.generateSignature = function (file) {\r\n        if (!worker) {\r\n            return null;\r\n        }\r\n        var promise = new qq.Promise(),\r\n            task = {file: file, id: qq.getUniqueId()};\r\n        workerPromises[task.id] = promise;\r\n        worker.postMessage(task);\r\n        return promise;\r\n    };\r\n};\r\n","/* globals qq, CryptoJS */\r\n\r\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\r\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\r\nif (!window.Uint8ClampedArray) {\r\n    window.Uint8ClampedArray = function() {};\r\n}\r\n/**\r\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\r\n *\r\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\r\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\r\n * to determine if the effort was successful.\r\n *\r\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\r\n * sign the requests directly in the browser and send them off to S3.\r\n *\r\n * @param o Options associated with all such requests\r\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\r\n * @constructor\r\n */\r\nqq.s3.RequestSigner = function(o) {\r\n    \"use strict\";\r\n\r\n    var requester,\r\n        thisSignatureRequester = this,\r\n        pendingSignatures = {},\r\n        options = {\r\n            expectingPolicy: false,\r\n            method: \"POST\",\r\n            signatureSpec: {\r\n                drift: 0,\r\n                credentialsProvider: {},\r\n                endpoint: null,\r\n                customHeaders: {},\r\n                version: 2\r\n            },\r\n            maxConnections: 3,\r\n            endpointStore: {},\r\n            paramsStore: {},\r\n            cors: {\r\n                expected: false,\r\n                sendCredentials: false\r\n            },\r\n            log: function(str, level) {}\r\n        },\r\n        credentialsProvider,\r\n\r\n        generateHeaders = function(signatureConstructor, signature, promise) {\r\n            var headers = signatureConstructor.getHeaders();\r\n\r\n            if (options.signatureSpec.version === 4) {\r\n                headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\r\n                    \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\r\n                    qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\r\n                    options.signatureSpec.region + \"/\" +\r\n                    \"s3/aws4_request,\" +\r\n                    \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\r\n                    \"Signature=\" + signature;\r\n            }\r\n            else {\r\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\r\n            }\r\n\r\n            promise.success(headers, signatureConstructor.getEndOfUrl());\r\n        },\r\n\r\n        v2 = {\r\n            getStringToSign: function(signatureSpec) {\r\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\r\n                    signatureSpec.method,\r\n                    signatureSpec.contentMd5 || \"\",\r\n                    signatureSpec.contentType || \"\",\r\n                    signatureSpec.headersStr || \"\\n\",\r\n                    signatureSpec.bucket,\r\n                    signatureSpec.endOfUrl);\r\n            },\r\n\r\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\r\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\r\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\r\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\r\n\r\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\r\n            },\r\n\r\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n                var policyStr = JSON.stringify(policy),\r\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\r\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\r\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\r\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\r\n\r\n                signatureEffort.success({\r\n                    policy: base64Policy,\r\n                    signature: policyHmacSha1Base64\r\n                }, updatedAccessKey, updatedSessionToken);\r\n            }\r\n        },\r\n\r\n        v4 = {\r\n            getCanonicalQueryString: function(endOfUri) {\r\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\r\n                    canonicalQueryString = \"\",\r\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\r\n\r\n                if (queryParamIdx >= 0) {\r\n                    encodedQueryParams = {};\r\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\r\n\r\n                    qq.each(queryStrings, function(idx, queryString) {\r\n                        var nameAndVal = queryString.split(\"=\"),\r\n                            paramVal = nameAndVal[1];\r\n\r\n                        if (paramVal == null) {\r\n                            paramVal = \"\";\r\n                        }\r\n\r\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\r\n                    });\r\n\r\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\r\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\r\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\r\n                        if (idx < encodedQueryParamNames.length - 1) {\r\n                            canonicalQueryString += \"&\";\r\n                        }\r\n                    });\r\n                }\r\n\r\n                return canonicalQueryString;\r\n            },\r\n\r\n            getCanonicalRequest: function(signatureSpec) {\r\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\r\n                    signatureSpec.method,\r\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\r\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\r\n                    signatureSpec.headersStr || \"\\n\",\r\n                    v4.getSignedHeaders(signatureSpec.headerNames),\r\n                    signatureSpec.hashedContent);\r\n            },\r\n\r\n            getCanonicalUri: function(endOfUri) {\r\n                var path = endOfUri,\r\n                    queryParamIdx = endOfUri.indexOf(\"?\");\r\n\r\n                if (queryParamIdx > 0) {\r\n                    path = endOfUri.substr(0, queryParamIdx);\r\n                }\r\n                return \"/\" + path;\r\n            },\r\n\r\n            getEncodedHashedPayload: function(body) {\r\n                var promise,\r\n                    reader;\r\n                if (qq.isBlob(body)) {\r\n                    // We will fallback to the inline reader if the worker was\r\n                    // not loaded correctly\r\n                    if (options.signatureSpec.workerManager) {\r\n                        promise = options.signatureSpec.workerManager.generateSignature(body);\r\n                        if (promise !== null) {\r\n                            return promise;\r\n                        }\r\n                    }\r\n                    promise = new qq.Promise();\r\n                    reader = new FileReader();\r\n                    reader.onloadend = function(e) {\r\n                        if (e.target.readyState === FileReader.DONE) {\r\n                            if (e.target.error) {\r\n                                promise.failure(e.target.error);\r\n                            }\r\n                            else {\r\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\r\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\r\n                            }\r\n                        }\r\n                    };\r\n                    reader.readAsArrayBuffer(body);\r\n                    return promise;\r\n                }\r\n                promise = new qq.Promise();\r\n                body = body || \"\";\r\n                promise.success(qq.CryptoJS.SHA256(body).toString());\r\n                return promise;\r\n            },\r\n\r\n            getScope: function(date, region) {\r\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\r\n                    region + \"/s3/aws4_request\";\r\n            },\r\n\r\n            getStringToSign: function(signatureSpec) {\r\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\r\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\r\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\r\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\r\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\r\n\r\n                return {\r\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\r\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\r\n                };\r\n            },\r\n\r\n            getSignedHeaders: function(headerNames) {\r\n                var signedHeaders = \"\";\r\n\r\n                headerNames.forEach(function(headerName, idx) {\r\n                    signedHeaders += headerName.toLowerCase();\r\n\r\n                    if (idx < headerNames.length - 1) {\r\n                        signedHeaders += \";\";\r\n                    }\r\n                });\r\n\r\n                return signedHeaders;\r\n            },\r\n\r\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\r\n                var secretKey = credentialsProvider.get().secretKey,\r\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\r\n                    matches = headersPattern.exec(headersStr),\r\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\r\n\r\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\r\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\r\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\r\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\r\n\r\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\r\n            },\r\n\r\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n                var policyStr = JSON.stringify(policy),\r\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\r\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\r\n                    secretKey = credentialsProvider.get().secretKey,\r\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\r\n                    credentialCondition = (function() {\r\n                        var credential = null;\r\n                        qq.each(policy.conditions, function(key, condition) {\r\n                            var val = condition[\"x-amz-credential\"];\r\n                            if (val) {\r\n                                credential = val;\r\n                                return false;\r\n                            }\r\n                        });\r\n                        return credential;\r\n                    }()),\r\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\r\n\r\n                matches = credentialPattern.exec(credentialCondition);\r\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\r\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\r\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\r\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\r\n\r\n                signatureEffort.success({\r\n                    policy: base64Policy,\r\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\r\n                }, updatedAccessKey, updatedSessionToken);\r\n            }\r\n        };\r\n\r\n    qq.extend(options, o, true);\r\n    credentialsProvider = options.signatureSpec.credentialsProvider;\r\n\r\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\r\n        var responseJson = xhrOrXdr.responseText,\r\n            pendingSignatureData = pendingSignatures[id],\r\n            promise = pendingSignatureData.promise,\r\n            signatureConstructor = pendingSignatureData.signatureConstructor,\r\n            errorMessage, response;\r\n\r\n        delete pendingSignatures[id];\r\n\r\n        // Attempt to parse what we would expect to be a JSON response\r\n        if (responseJson) {\r\n            try {\r\n                response = qq.parseJson(responseJson);\r\n            }\r\n            catch (error) {\r\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\r\n            }\r\n        }\r\n\r\n        // If the response is parsable and contains an `error` property, use it as the error message\r\n        if (response && response.error) {\r\n            isError = true;\r\n            errorMessage = response.error;\r\n        }\r\n        // If we have received a parsable response, and it has an `invalid` property,\r\n        // the policy document or request headers may have been tampered with client-side.\r\n        else if (response && response.invalid) {\r\n            isError = true;\r\n            errorMessage = \"Invalid policy document or request headers!\";\r\n        }\r\n        // Make sure the response contains policy & signature properties\r\n        else if (response) {\r\n            if (options.expectingPolicy && !response.policy) {\r\n                isError = true;\r\n                errorMessage = \"Response does not include the base64 encoded policy!\";\r\n            }\r\n            else if (!response.signature) {\r\n                isError = true;\r\n                errorMessage = \"Response does not include the signature!\";\r\n            }\r\n        }\r\n        // Something unknown went wrong\r\n        else {\r\n            isError = true;\r\n            errorMessage = \"Received an empty or invalid response from the server!\";\r\n        }\r\n\r\n        if (isError) {\r\n            if (errorMessage) {\r\n                options.log(errorMessage, \"error\");\r\n            }\r\n\r\n            promise.failure(errorMessage);\r\n        }\r\n        else if (signatureConstructor) {\r\n            generateHeaders(signatureConstructor, response.signature, promise);\r\n        }\r\n        else {\r\n            promise.success(response);\r\n        }\r\n    }\r\n\r\n    function getStringToSignArtifacts(id, version, requestInfo) {\r\n        var promise = new qq.Promise(),\r\n            method = \"POST\",\r\n            headerNames = [],\r\n            headersStr = \"\",\r\n            now = new Date(),\r\n            endOfUrl, signatureSpec, toSign,\r\n\r\n            generateStringToSign = function(requestInfo) {\r\n                var contentMd5,\r\n                    headerIndexesToRemove = [];\r\n\r\n                qq.each(requestInfo.headers, function(name) {\r\n                    headerNames.push(name);\r\n                });\r\n                headerNames.sort();\r\n\r\n                qq.each(headerNames, function(idx, headerName) {\r\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\r\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\r\n                    }\r\n                    else if (headerName === \"Content-MD5\") {\r\n                        contentMd5 = requestInfo.headers[headerName];\r\n                    }\r\n                    else {\r\n                        headerIndexesToRemove.unshift(idx);\r\n                    }\r\n                });\r\n\r\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\r\n                    headerNames.splice(headerIdx, 1);\r\n                });\r\n\r\n                signatureSpec = {\r\n                    bucket: requestInfo.bucket,\r\n                    contentMd5: contentMd5,\r\n                    contentType: requestInfo.contentType,\r\n                    date: now,\r\n                    drift: options.signatureSpec.drift,\r\n                    endOfUrl: endOfUrl,\r\n                    hashedContent: requestInfo.hashedContent,\r\n                    headerNames: headerNames,\r\n                    headersStr: headersStr,\r\n                    method: method\r\n                };\r\n\r\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\r\n\r\n                return {\r\n                    date: now,\r\n                    endOfUrl: endOfUrl,\r\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\r\n                    toSign: version === 4 ? toSign.hashed : toSign,\r\n                    toSignRaw: version === 4 ? toSign.raw : toSign\r\n                };\r\n            };\r\n\r\n        /*jshint indent:false */\r\n        switch (requestInfo.type) {\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\r\n                method = \"DELETE\";\r\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\r\n                endOfUrl = \"uploads\";\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\r\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\r\n                break;\r\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\r\n                method = \"PUT\";\r\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\r\n                break;\r\n        }\r\n\r\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\r\n        if (version === 4) {\r\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\r\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\r\n                requestInfo.headers.Host = requestInfo.host;\r\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\r\n                requestInfo.hashedContent = hashedContent;\r\n\r\n                promise.success(generateStringToSign(requestInfo));\r\n            }, function (err) {\r\n                promise.failure(err);\r\n            });\r\n        }\r\n        else {\r\n            promise.success(generateStringToSign(requestInfo));\r\n        }\r\n\r\n        return promise;\r\n    }\r\n\r\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n        var updatedHeaders;\r\n\r\n        // REST API request\r\n        if (toBeSigned.signatureConstructor) {\r\n            if (updatedSessionToken) {\r\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\r\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\r\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\r\n            }\r\n\r\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\r\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\r\n            }, function (err) {\r\n                signatureEffort.failure(err);\r\n            });\r\n        }\r\n        // Form upload (w/ policy document)\r\n        else {\r\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\r\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n    }\r\n\r\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\r\n        if (options.signatureSpec.version === 4) {\r\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n        else {\r\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\r\n        }\r\n    }\r\n\r\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\r\n        if (options.signatureSpec.version === 4) {\r\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\r\n        }\r\n        else {\r\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\r\n        }\r\n    }\r\n\r\n    requester = qq.extend(this, new qq.AjaxRequester({\r\n        acceptHeader: \"application/json\",\r\n        method: options.method,\r\n        contentType: \"application/json; charset=utf-8\",\r\n        endpointStore: {\r\n            get: function() {\r\n                return options.signatureSpec.endpoint;\r\n            }\r\n        },\r\n        paramsStore: options.paramsStore,\r\n        maxConnections: options.maxConnections,\r\n        customHeaders: options.signatureSpec.customHeaders,\r\n        log: options.log,\r\n        onComplete: handleSignatureReceived,\r\n        cors: options.cors\r\n    }));\r\n\r\n    qq.extend(this, {\r\n        /**\r\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\r\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\r\n         *\r\n         * @param id File ID.\r\n         * @param toBeSigned an Object that holds the item(s) to be signed\r\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\r\n         */\r\n        getSignature: function(id, toBeSigned) {\r\n            var params = toBeSigned,\r\n                signatureConstructor = toBeSigned.signatureConstructor,\r\n                signatureEffort = new qq.Promise(),\r\n                queryParams;\r\n\r\n            if (options.signatureSpec.version === 4) {\r\n                queryParams = {v4: true};\r\n            }\r\n\r\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\r\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\r\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\r\n                }\r\n                // If credentials are expired, ask for new ones before attempting to sign request\r\n                else {\r\n                    credentialsProvider.onExpired().then(function() {\r\n                        determineSignatureClientSide(id, toBeSigned,\r\n                            signatureEffort,\r\n                            credentialsProvider.get().accessKey,\r\n                            credentialsProvider.get().sessionToken);\r\n                    }, function(errorMsg) {\r\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\r\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                options.log(\"Submitting S3 signature request for \" + id);\r\n\r\n                if (signatureConstructor) {\r\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\r\n                        params = {headers: signatureArtifacts.stringToSignRaw};\r\n                        requester.initTransport(id)\r\n                            .withParams(params)\r\n                            .withQueryParams(queryParams)\r\n                            .send();\r\n                    }, function (err) {\r\n                        options.log(\"Failed to construct signature. \", \"error\");\r\n                        signatureEffort.failure(\"Failed to construct signature.\");\r\n                    });\r\n                }\r\n                else {\r\n                    requester.initTransport(id)\r\n                        .withParams(params)\r\n                        .withQueryParams(queryParams)\r\n                        .send();\r\n                }\r\n\r\n                pendingSignatures[id] = {\r\n                    promise: signatureEffort,\r\n                    signatureConstructor: signatureConstructor\r\n                };\r\n            }\r\n\r\n            return signatureEffort;\r\n        },\r\n\r\n        constructStringToSign: function(type, bucket, host, key) {\r\n            var headers = {},\r\n                uploadId, content, contentType, partNum, artifacts;\r\n\r\n            return {\r\n                withHeaders: function(theHeaders) {\r\n                    headers = theHeaders;\r\n                    return this;\r\n                },\r\n\r\n                withUploadId: function(theUploadId) {\r\n                    uploadId = theUploadId;\r\n                    return this;\r\n                },\r\n\r\n                withContent: function(theContent) {\r\n                    content = theContent;\r\n                    return this;\r\n                },\r\n\r\n                withContentType: function(theContentType) {\r\n                    contentType = theContentType;\r\n                    return this;\r\n                },\r\n\r\n                withPartNum: function(thePartNum) {\r\n                    partNum = thePartNum;\r\n                    return this;\r\n                },\r\n\r\n                getToSign: function(id) {\r\n                    var sessionToken = credentialsProvider.get().sessionToken,\r\n                        promise = new qq.Promise(),\r\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\r\n\r\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\r\n\r\n                    if (sessionToken) {\r\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\r\n                    }\r\n\r\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\r\n                        bucket: bucket,\r\n                        content: content,\r\n                        contentType: contentType,\r\n                        headers: headers,\r\n                        host: host,\r\n                        key: key,\r\n                        partNum: partNum,\r\n                        type: type,\r\n                        uploadId: uploadId\r\n                    }).then(function(_artifacts_) {\r\n                        artifacts = _artifacts_;\r\n                        promise.success({\r\n                            headers: (function() {\r\n                                if (contentType) {\r\n                                    headers[\"Content-Type\"] = contentType;\r\n                                }\r\n\r\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\r\n                                return headers;\r\n                            }()),\r\n                            date: artifacts.date,\r\n                            endOfUrl: artifacts.endOfUrl,\r\n                            signedHeaders: artifacts.signedHeaders,\r\n                            stringToSign: artifacts.toSign,\r\n                            stringToSignRaw: artifacts.toSignRaw\r\n                        });\r\n                    }, function (err) {\r\n                        promise.failure(err);\r\n                    });\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getHeaders: function() {\r\n                    return qq.extend({}, headers);\r\n                },\r\n\r\n                getEndOfUrl: function() {\r\n                    return artifacts && artifacts.endOfUrl;\r\n                },\r\n\r\n                getRequestDate: function() {\r\n                    return artifacts && artifacts.date;\r\n                },\r\n\r\n                getSignedHeaders: function() {\r\n                    return artifacts && artifacts.signedHeaders;\r\n                }\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\r\n    MULTIPART_INITIATE: \"multipart_initiate\",\r\n    MULTIPART_COMPLETE: \"multipart_complete\",\r\n    MULTIPART_ABORT: \"multipart_abort\",\r\n    MULTIPART_UPLOAD: \"multipart_upload\"\r\n};\r\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\n * request to S3 via the REST API.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingInitiateRequests = {},\n        options = {\n            filenameParam: \"qqfilename\",\n            method: \"POST\",\n            endpointStore: null,\n            paramsStore: null,\n            signatureSpec: null,\n            aclStore: null,\n            reducedRedundancy: false,\n            serverSideEncryption: false,\n            maxConnections: 3,\n            getContentType: function(id) {},\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            getName: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\n     * method on the promise will be called.\n     *\n     * @param id Associated file ID\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id) {\n        var bucket = options.getBucket(id),\n            host = options.getHost(id),\n            headers = {},\n            promise = new qq.Promise(),\n            key = options.getKey(id),\n            signatureConstructor;\n\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\n\n        if (options.reducedRedundancy) {\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n        }\n\n        if (options.serverSideEncryption) {\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n        }\n\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\n\n        qq.each(options.paramsStore.get(id), function(name, val) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                headers[name] = val;\n            }\n            else {\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\n            }\n        });\n\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\n            .withContentType(options.getContentType(id))\n            .withHeaders(headers);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Initiate MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleInitiateRequestComplete(id, xhr, isError) {\n        var promise = pendingInitiateRequests[id],\n            domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\n\n        delete pendingInitiateRequests[id];\n\n        // The base ajax requester may declare the request to be a failure based on status code.\n        if (isError) {\n            status = xhr.status;\n\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\n            if (messageElements.length > 0) {\n                errorMessage = messageElements[0].textContent;\n            }\n        }\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\n        else {\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\n            if (uploadIdElements.length > 0) {\n                uploadId = uploadIdElements[0].textContent;\n            }\n            else {\n                errorMessage = \"Upload ID missing from request\";\n            }\n        }\n\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\n        if (uploadId === undefined) {\n            if (errorMessage) {\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\n            }\n\n            promise.failure(\"Problem initiating upload request.\", xhr);\n        }\n        else {\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\n            promise.success(uploadId, xhr);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleInitiateRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\n         *\n         * @param id The ID associated with the file\n         * @returns {qq.Promise}\n         */\n        send: function(id) {\n            var promise = new qq.Promise();\n\n            getHeaders(id).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\n\n                pendingInitiateRequests[id] = promise;\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\n * request to S3 via the REST API.\n *\n * @param o Options passed by the creator, to overwrite any default option values.\n * @constructor\n */\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingCompleteRequests = {},\n        options = {\n            method: \"POST\",\n            contentType: \"text/xml\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId, body) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\n                .withUploadId(uploadId)\n                .withContent(body)\n                .withContentType(\"application/xml; charset=UTF-8\");\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Complete MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleCompleteRequestComplete(id, xhr, isError) {\n        var promise = pendingCompleteRequests[id],\n            domParser = new DOMParser(),\n            bucket = options.getBucket(id),\n            key = options.getKey(id),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\n\n        delete pendingCompleteRequests[id];\n\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (bucketEls.length && keyEls.length) {\n                if (bucketEls[0].textContent !== bucket) {\n                    isError = true;\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\n                }\n\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\n            }\n            else {\n                isError = true;\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\n            }\n        }\n\n        if (isError) {\n            promise.failure(\"Problem combining the file parts!\", xhr);\n        }\n        else {\n            promise.success({}, xhr);\n        }\n    }\n\n    /**\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\n     */\n    function getCompleteRequestBody(etagEntries) {\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\n\n        // The entries MUST be sorted by part number, per the AWS API spec.\n        etagEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(etagEntries, function(idx, etagEntry) {\n            var part = etagEntry.part,\n                etag = etagEntry.etag,\n                partEl = doc.createElement(\"Part\"),\n                partNumEl = doc.createElement(\"PartNumber\"),\n                partNumTextEl = doc.createTextNode(part),\n                etagTextEl = doc.createTextNode(etag),\n                etagEl = doc.createElement(\"ETag\");\n\n            etagEl.appendChild(etagTextEl);\n            partNumEl.appendChild(partNumTextEl);\n            partEl.appendChild(partNumEl);\n            partEl.appendChild(etagEl);\n            qq(doc).children()[0].appendChild(partEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: \"application/xml; charset=UTF-8\",\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleCompleteRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n         * @returns {qq.Promise}\n         */\n        send: function(id, uploadId, etagEntries) {\n            var promise = new qq.Promise(),\n                body = getCompleteRequestBody(etagEntries);\n\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\n\n                pendingCompleteRequests[id] = promise;\n                delete headers[\"Content-Type\"];\n\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .withPayload(body)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\n * request to S3 via the REST API.\n\n * @param o\n * @constructor\n */\nqq.s3.AbortMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @param id Associated file ID\n     * @param uploadId ID of the associated upload, according to AWS\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\n                .withUploadId(uploadId);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Abort MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleAbortRequestComplete(id, xhr, isError) {\n        var domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\n            awsErrorMsg;\n\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (errorEls.length) {\n                isError = true;\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [\"DELETE\"],\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleAbortRequestComplete,\n        successfulResponseCodes: {\n            DELETE: [204]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Abort\" request.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         */\n        send: function(id, uploadId) {\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            });\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\r\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\r\n *\r\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\r\n *\r\n * @param spec Options passed from the base handler\r\n * @param proxy Callbacks & methods used to query for or push out data/changes\r\n */\r\nqq.s3.XhrUploadHandler = function(spec, proxy) {\r\n    \"use strict\";\r\n\r\n    // need to pre-construct the workerManager\r\n    var workerManager;\r\n    if (spec.signature.workerUrl) {\r\n        workerManager = new qq.s3.RequestSignerWorkerManager({\r\n            workerUrl: spec.signature.workerUrl,\r\n            log: proxy.log,\r\n        });\r\n    }\r\n\r\n    var getName = proxy.getName,\r\n        log = proxy.log,\r\n        clockDrift = spec.clockDrift,\r\n        expectedStatus = 200,\r\n        onGetBucket = spec.getBucket,\r\n        onGetHost = spec.getHost,\r\n        onGetKeyName = spec.getKeyName,\r\n        filenameParam = spec.filenameParam,\r\n        paramsStore = spec.paramsStore,\r\n        endpointStore = spec.endpointStore,\r\n        aclStore = spec.aclStore,\r\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\r\n        region = spec.objectProperties.region,\r\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\r\n        validation = spec.validation,\r\n        signature = qq.extend({region: region, drift: clockDrift, workerManager: workerManager}, spec.signature),\r\n        handler = this,\r\n        credentialsProvider = spec.signature.credentialsProvider,\r\n\r\n        chunked = {\r\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\r\n            // when the response to this request has been parsed.\r\n            combine: function(id) {\r\n                var uploadId = handler._getPersistableData(id).uploadId,\r\n                    etagMap = handler._getPersistableData(id).etags,\r\n                    result = new qq.Promise();\r\n\r\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\r\n                    result.success,\r\n\r\n                    function failure(reason, xhr) {\r\n                        result.failure(upload.done(id, xhr).response, xhr);\r\n                    }\r\n                );\r\n\r\n                return result;\r\n            },\r\n\r\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\r\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\r\n            // in the XML response and store that along with the associated part number.\r\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\r\n            done: function(id, xhr, chunkIdx) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    etag;\r\n\r\n                if (response.success) {\r\n                    etag = xhr.getResponseHeader(\"ETag\");\r\n\r\n                    if (!handler._getPersistableData(id).etags) {\r\n                        handler._getPersistableData(id).etags = [];\r\n                    }\r\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\r\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\r\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\r\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\r\n             * callback.\r\n             *\r\n             * @param id File ID\r\n             * @param chunkIdx Index of the chunk to PUT\r\n             * @returns {qq.Promise}\r\n             */\r\n            initHeaders: function(id, chunkIdx, blob) {\r\n                var headers = {},\r\n                    bucket = upload.bucket.getName(id),\r\n                    host = upload.host.getName(id),\r\n                    key = upload.key.urlSafe(id),\r\n                    promise = new qq.Promise(),\r\n                    signatureConstructor = requesters.restSignature.constructStringToSign\r\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\r\n                        .withPartNum(chunkIdx + 1)\r\n                        .withContent(blob)\r\n                        .withUploadId(handler._getPersistableData(id).uploadId);\r\n\r\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\r\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            put: function(id, chunkIdx) {\r\n                var xhr = handler._createXhr(id, chunkIdx),\r\n                    chunkData = handler._getChunkData(id, chunkIdx),\r\n                    domain = spec.endpointStore.get(id),\r\n                    promise = new qq.Promise();\r\n\r\n                // Add appropriate headers to the multipart upload request.\r\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\r\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\r\n                    if (xhr._cancelled) {\r\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\r\n                        promise.failure({error: \"Chunk upload cancelled\"});\r\n                    }\r\n                    else {\r\n                        var url = domain + \"/\" + endOfUrl;\r\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\r\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\r\n                        xhr.open(\"PUT\", url, true);\r\n\r\n                        qq.each(headers, function(name, val) {\r\n                            xhr.setRequestHeader(name, val);\r\n                        });\r\n\r\n                        xhr.send(chunkData.blob);\r\n                    }\r\n                }, function() {\r\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            send: function(id, chunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                chunked.setup(id).then(\r\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\r\n                    function() {\r\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\r\n                    },\r\n\r\n                    // We were unable to initiate the chunked upload process.\r\n                    function(errorMessage, xhr) {\r\n                        promise.failure({error: errorMessage}, xhr);\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\r\n             * initiated.\r\n             *\r\n             * @param id Associated file ID\r\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\r\n             */\r\n            setup: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    uploadId = handler._getPersistableData(id).uploadId,\r\n                    uploadIdPromise = new qq.Promise();\r\n\r\n                if (!uploadId) {\r\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\r\n                    requesters.initiateMultipart.send(id).then(\r\n                        function(uploadId) {\r\n                            handler._getPersistableData(id).uploadId = uploadId;\r\n                            uploadIdPromise.success(uploadId);\r\n                            promise.success(uploadId);\r\n                        },\r\n                        function(errorMsg, xhr) {\r\n                            handler._getPersistableData(id).uploadId = null;\r\n                            promise.failure(errorMsg, xhr);\r\n                            uploadIdPromise.failure(errorMsg, xhr);\r\n                        }\r\n                    );\r\n                }\r\n                else if (uploadId instanceof qq.Promise) {\r\n                    uploadId.then(function(uploadId) {\r\n                        promise.success(uploadId);\r\n                    });\r\n                }\r\n                else {\r\n                    promise.success(uploadId);\r\n                }\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        requesters = {\r\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                }\r\n            }),\r\n\r\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\r\n                filenameParam: filenameParam,\r\n                endpointStore: endpointStore,\r\n                paramsStore: paramsStore,\r\n                signatureSpec: signature,\r\n                aclStore: aclStore,\r\n                reducedRedundancy: reducedRedundancy,\r\n                serverSideEncryption: serverSideEncryption,\r\n                cors: spec.cors,\r\n                log: log,\r\n                getContentType: function(id) {\r\n                    return handler._getMimeType(id);\r\n                },\r\n                getBucket: function(id) {\r\n                    return upload.bucket.getName(id);\r\n                },\r\n                getHost: function(id) {\r\n                    return upload.host.getName(id);\r\n                },\r\n                getKey: function(id) {\r\n                    return upload.key.urlSafe(id);\r\n                },\r\n                getName: function(id) {\r\n                    return getName(id);\r\n                }\r\n            }),\r\n\r\n            policySignature: new qq.s3.RequestSigner({\r\n                expectingPolicy: true,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            }),\r\n\r\n            restSignature: new qq.s3.RequestSigner({\r\n                endpointStore: endpointStore,\r\n                signatureSpec: signature,\r\n                cors: spec.cors,\r\n                log: log\r\n            })\r\n        },\r\n\r\n        simple = {\r\n            /**\r\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\r\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\r\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\r\n             * due to some error.\r\n             *\r\n             * @param id File ID\r\n             * @returns {qq.Promise}\r\n             */\r\n            initParams: function(id) {\r\n                /*jshint -W040 */\r\n                var customParams = paramsStore.get(id);\r\n                customParams[filenameParam] = getName(id);\r\n\r\n                return qq.s3.util.generateAwsParams({\r\n                    endpoint: endpointStore.get(id),\r\n                    clockDrift: clockDrift,\r\n                    params: customParams,\r\n                    type: handler._getMimeType(id),\r\n                    bucket: upload.bucket.getName(id),\r\n                    key: handler.getThirdPartyFileId(id),\r\n                    accessKey: credentialsProvider.get().accessKey,\r\n                    sessionToken: credentialsProvider.get().sessionToken,\r\n                    acl: aclStore.get(id),\r\n                    expectedStatus: expectedStatus,\r\n                    minFileSize: validation.minSizeLimit,\r\n                    maxFileSize: validation.maxSizeLimit,\r\n                    reducedRedundancy: reducedRedundancy,\r\n                    region: region,\r\n                    serverSideEncryption: serverSideEncryption,\r\n                    signatureVersion: signature.version,\r\n                    log: log\r\n                },\r\n                qq.bind(requesters.policySignature.getSignature, this, id));\r\n            },\r\n\r\n            send: function(id) {\r\n                var promise = new qq.Promise(),\r\n                    xhr = handler._createXhr(id),\r\n                    fileOrBlob = handler.getFile(id);\r\n\r\n                handler._registerProgressHandler(id);\r\n                upload.track(id, xhr).then(promise.success, promise.failure);\r\n\r\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\r\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\r\n                    log(\"Sending upload request for \" + id);\r\n                    xhr.send(toSend);\r\n                }, promise.failure);\r\n\r\n                return promise;\r\n            },\r\n\r\n            /**\r\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\r\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\r\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\r\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\r\n             *\r\n             * Note that this is only used by the simple (non-chunked) upload process.\r\n             *\r\n             * @param id File ID\r\n             * @param xhr XMLHttpRequest to use for the upload\r\n             * @param fileOrBlob `File` or `Blob` to send\r\n             * @returns {qq.Promise}\r\n             */\r\n            setup: function(id, xhr, fileOrBlob) {\r\n                var formData = new FormData(),\r\n                    endpoint = endpointStore.get(id),\r\n                    url = endpoint,\r\n                    promise = new qq.Promise();\r\n\r\n                simple.initParams(id).then(\r\n                    // Success - all params determined\r\n                    function(awsParams) {\r\n                        xhr.open(\"POST\", url, true);\r\n\r\n                        qq.obj2FormData(awsParams, formData);\r\n\r\n                        // AWS requires the file field be named \"file\".\r\n                        formData.append(\"file\", fileOrBlob);\r\n\r\n                        promise.success(formData);\r\n                    },\r\n\r\n                    // Failure - we couldn't determine some params (likely the signature)\r\n                    function(errorMessage) {\r\n                        promise.failure({error: errorMessage});\r\n                    }\r\n                );\r\n\r\n                return promise;\r\n            }\r\n        },\r\n\r\n        upload = {\r\n            /**\r\n             * Note that this is called when an upload has reached a termination point,\r\n             * regardless of success/failure.  For example, it is called when we have\r\n             * encountered an error during the upload or when the file may have uploaded successfully.\r\n             *\r\n             * @param id file ID\r\n             */\r\n            bucket: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedBucket = handler._getFileState(id).bucket;\r\n\r\n                    if (cachedBucket) {\r\n                        promise.success(cachedBucket);\r\n                    }\r\n                    else {\r\n                        onGetBucket(id).then(function(bucket) {\r\n                            handler._getFileState(id).bucket = bucket;\r\n                            promise.success(bucket);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).bucket;\r\n                }\r\n            },\r\n\r\n            host: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        cachedHost = handler._getFileState(id).host;\r\n\r\n                    if (cachedHost) {\r\n                        promise.success(cachedHost);\r\n                    }\r\n                    else {\r\n                        onGetHost(id).then(function(host) {\r\n                            handler._getFileState(id).host = host;\r\n                            promise.success(host);\r\n                        }, promise.failure);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                getName: function(id) {\r\n                    return handler._getFileState(id).host;\r\n                }\r\n            },\r\n\r\n            done: function(id, xhr) {\r\n                var response = upload.response.parse(id, xhr),\r\n                    isError = response.success !== true;\r\n\r\n                if (isError && upload.response.shouldReset(response.code)) {\r\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\r\n                    response.reset = true;\r\n                }\r\n\r\n                return {\r\n                    success: !isError,\r\n                    response: response\r\n                };\r\n            },\r\n\r\n            key: {\r\n                promise: function(id) {\r\n                    var promise = new qq.Promise(),\r\n                        key = handler.getThirdPartyFileId(id);\r\n\r\n                    /* jshint eqnull:true */\r\n                    if (key == null) {\r\n                        handler._setThirdPartyFileId(id, promise);\r\n                        onGetKeyName(id, getName(id)).then(\r\n                            function(keyName) {\r\n                                handler._setThirdPartyFileId(id, keyName);\r\n                                promise.success(keyName);\r\n                            },\r\n                            function(errorReason) {\r\n                                handler._setThirdPartyFileId(id, null);\r\n                                promise.failure(errorReason);\r\n                            }\r\n                        );\r\n                    }\r\n                    else if (qq.isGenericPromise(key)) {\r\n                        key.then(promise.success, promise.failure);\r\n                    }\r\n                    else {\r\n                        promise.success(key);\r\n                    }\r\n\r\n                    return promise;\r\n                },\r\n\r\n                urlSafe: function(id) {\r\n                    var encodedKey = handler.getThirdPartyFileId(id);\r\n                    return qq.s3.util.uriEscapePath(encodedKey);\r\n                }\r\n            },\r\n\r\n            response: {\r\n                parse: function(id, xhr) {\r\n                    var response = {},\r\n                        parsedErrorProps;\r\n\r\n                    try {\r\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\r\n\r\n                        if (xhr.status === expectedStatus) {\r\n                            response.success = true;\r\n                        }\r\n                        else {\r\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\r\n\r\n                            if (parsedErrorProps) {\r\n                                response.error = parsedErrorProps.message;\r\n                                response.code = parsedErrorProps.code;\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (error) {\r\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\r\n                    }\r\n\r\n                    return response;\r\n                },\r\n\r\n                /**\r\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\r\n                 *\r\n                 * @param awsResponseXml XML response from AWS\r\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\r\n                 */\r\n                parseError: function(awsResponseXml) {\r\n                    var parser = new DOMParser(),\r\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\r\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\r\n                        errorDetails = {},\r\n                        codeEls, messageEls;\r\n\r\n                    if (errorEls.length) {\r\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\r\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\r\n\r\n                        if (messageEls.length) {\r\n                            errorDetails.message = messageEls[0].textContent;\r\n                        }\r\n\r\n                        if (codeEls.length) {\r\n                            errorDetails.code = codeEls[0].textContent;\r\n                        }\r\n\r\n                        return errorDetails;\r\n                    }\r\n                },\r\n\r\n                // Determine if the upload should be restarted on the next retry attempt\r\n                // based on the error code returned in the response from AWS.\r\n                shouldReset: function(errorCode) {\r\n                    /*jshint -W014 */\r\n                    return errorCode === \"EntityTooSmall\"\r\n                        || errorCode === \"InvalidPart\"\r\n                        || errorCode === \"InvalidPartOrder\"\r\n                        || errorCode === \"NoSuchUpload\";\r\n                }\r\n            },\r\n\r\n            start: function(id, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                upload.key.promise(id).then(function() {\r\n                    upload.bucket.promise(id).then(function() {\r\n                        upload.host.promise(id).then(function() {\r\n                            /* jshint eqnull:true */\r\n                            if (optChunkIdx == null) {\r\n                                simple.send(id).then(promise.success, promise.failure);\r\n                            }\r\n                            else {\r\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\r\n                            }\r\n                        });\r\n                    });\r\n                },\r\n                function(errorReason) {\r\n                    promise.failure({error: errorReason});\r\n                });\r\n\r\n                return promise;\r\n            },\r\n\r\n            track: function(id, xhr, optChunkIdx) {\r\n                var promise = new qq.Promise();\r\n\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4) {\r\n                        var result;\r\n\r\n                        /* jshint eqnull:true */\r\n                        if (optChunkIdx == null) {\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                        else {\r\n                            chunked.done(id, xhr, optChunkIdx);\r\n                            result = upload.done(id, xhr);\r\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                return promise;\r\n            }\r\n        };\r\n\r\n    qq.extend(this, {\r\n        uploadChunk: upload.start,\r\n        uploadFile: upload.start\r\n    });\r\n\r\n    qq.extend(this, new qq.XhrUploadHandler({\r\n        options: qq.extend({namespace: \"s3\"}, spec),\r\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\r\n    }));\r\n\r\n    qq.override(this, function(super_) {\r\n        return {\r\n            expunge: function(id) {\r\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\r\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\r\n\r\n                if (uploadId !== undefined && existedInLocalStorage) {\r\n                    requesters.abortMultipart.send(id, uploadId);\r\n                }\r\n\r\n                super_.expunge(id);\r\n            },\r\n\r\n            finalizeChunks: function(id) {\r\n                return chunked.combine(id);\r\n            },\r\n\r\n            _getLocalStorageId: function(id) {\r\n                var baseStorageId = super_._getLocalStorageId(id),\r\n                    bucketName = upload.bucket.getName(id);\r\n\r\n                return baseStorageId + \"-\" + bucketName;\r\n            }\r\n        };\r\n    });\r\n};\r\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\n * AWS API.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        clockDrift = options.clockDrift,\n        onUuidChanged = proxy.onUuidChanged,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        onGetBucket = options.getBucket,\n        onGetKeyName = options.getKeyName,\n        filenameParam = options.filenameParam,\n        paramsStore = options.paramsStore,\n        endpointStore = options.endpointStore,\n        aclStore = options.aclStore,\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\n        region = options.objectProperties.region,\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\n        validation = options.validation,\n        signature = options.signature,\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\n        credentialsProvider = options.signature.credentialsProvider,\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\n            signatureSpec: signature,\n            cors: options.cors,\n            log: log\n        });\n\n    if (successRedirectUrl === undefined) {\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\n    }\n\n    /**\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\n     * have redirected to a known endpoint that should provide a parseable response.\n     *\n     * @param id ID of the associated file\n     * @param iframe target of the form submit\n     * @returns {boolean} true if the contents can be read, false otherwise\n     */\n    function isValidResponse(id, iframe) {\n        var response,\n            endpoint = options.endpointStore.get(id),\n            bucket = handler._getFileState(id).bucket,\n            doc,\n            innerHtml,\n            responseData;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            responseData = qq.s3.util.parseIframeResponse(iframe);\n            if (responseData.bucket === bucket &&\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\n\n                return true;\n            }\n\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\n\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n        }\n\n        return false;\n    }\n\n    function generateAwsParams(id) {\n        /*jshint -W040 */\n        var customParams = paramsStore.get(id);\n\n        customParams[filenameParam] = getName(id);\n\n        return qq.s3.util.generateAwsParams({\n            endpoint: endpointStore.get(id),\n            clockDrift: clockDrift,\n            params: customParams,\n            bucket: handler._getFileState(id).bucket,\n            key: handler.getThirdPartyFileId(id),\n            accessKey: credentialsProvider.get().accessKey,\n            sessionToken: credentialsProvider.get().sessionToken,\n            acl: aclStore.get(id),\n            minFileSize: validation.minSizeLimit,\n            maxFileSize: validation.maxSizeLimit,\n            successRedirectUrl: successRedirectUrl,\n            reducedRedundancy: reducedRedundancy,\n            region: region,\n            serverSideEncryption: serverSideEncryption,\n            signatureVersion: signature.version,\n            log: log\n        },\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            endpoint = options.endpointStore.get(id),\n            fileName = getName(id);\n\n        generateAwsParams(id).then(function(params) {\n            var form = handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: true,\n                targetName: iframe.name\n            });\n\n            promise.success(form);\n        }, function(errorMessage) {\n            promise.failure(errorMessage);\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\n        });\n\n        return promise;\n    }\n\n    function handleUpload(id) {\n        var iframe = handler._createIframe(id),\n            input = handler.getInput(id),\n            promise = new qq.Promise();\n\n        createForm(id, iframe).then(function(form) {\n            form.appendChild(input);\n\n            // Register a callback when the response comes in from S3\n            handler._attachLoadEvent(iframe, function(response) {\n                log(\"iframe loaded\");\n\n                // If the common response handler has determined success or failure immediately\n                if (response) {\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\n                    if (response.success === false) {\n                        log(\"Amazon likely rejected the upload request\", \"error\");\n                        promise.failure(response);\n                    }\n                }\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\n                else {\n                    response = {};\n                    response.success = isValidResponse(id, iframe);\n\n                    // If the more specific response handle detected a problem with the response from S3\n                    if (response.success === false) {\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\n                        promise.failure(response);\n                    }\n                    else {\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\n                        promise.success(response);\n                    }\n                }\n\n                handleFinishedUpload(id, iframe);\n            });\n\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n        }, promise.failure);\n\n        return promise;\n    }\n\n    function handleFinishedUpload(id, iframe) {\n        handler._detachLoadEvent(id);\n        iframe && qq(iframe).remove();\n    }\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: false,\n            inputName: \"file\"\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            onUuidChanged: onUuidChanged,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n\n    qq.extend(this, {\n        uploadFile: function(id) {\n            var name = getName(id),\n                promise = new qq.Promise();\n\n            if (handler.getThirdPartyFileId(id)) {\n                if (handler._getFileState(id).bucket) {\n                    handleUpload(id).then(promise.success, promise.failure);\n                }\n                else {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handleUpload(id).then(promise.success, promise.failure);\n                    });\n                }\n            }\n            else {\n                // The S3 uploader module will either calculate the key or ask the server for it\n                // and will call us back once it is known.\n                onGetKeyName(id, name).then(function(key) {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handler._setThirdPartyFileId(id, key);\n                        handleUpload(id).then(promise.success, promise.failure);\n                    }, function(errorReason) {\n                        promise.failure({error: errorReason});\n                    });\n                }, function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n            }\n\n            return promise;\n        }\n    });\n};\n","\n        qq.s3.createS3InlineWorkerUrl = function () {\n            return URL.createObjectURL(new Blob([\"// Fine Uploader 5.14.0-beta3 - (c) 2013-present Widen Enterprises, Inc. MIT licensed. http://fineuploader.com\\nfunction doTask(t,r){\\\"use strict\\\";var n=new FileReader;n.onloadend=function(t){if(t.target.readyState===FileReader.DONE)if(t.target.error)r(JSON.parse(JSON.stringify(t.target.error,null,2)));else{var n=qq.CryptoJS.lib.WordArray.create(t.target.result);r(null,qq.CryptoJS.SHA256(n).toString())}},n.readAsArrayBuffer(t)}qq={},qq.CryptoJS=function(t,r){var n={},e=n.lib={},i=e.Base=function(){function t(){}return{extend:function(r){t.prototype=this;var n=new t;return r&&n.mixIn(r),n.hasOwnProperty(\\\"init\\\")||(n.init=function(){n.$super.init.apply(this,arguments)}),n.init.prototype=n,n.$super=this,n},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},mixIn:function(t){for(var r in t)t.hasOwnProperty(r)&&(this[r]=t[r]);t.hasOwnProperty(\\\"toString\\\")&&(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),s=e.WordArray=i.extend({init:function(t,n){t=this.words=t||[],n!=r?this.sigBytes=n:this.sigBytes=4*t.length},toString:function(t){return(t||o).stringify(this)},concat:function(t){var r=this.words,n=t.words,e=this.sigBytes,i=t.sigBytes;if(this.clamp(),e%4)for(var s=0;s<i;s++){var a=n[s>>>2]>>>24-s%4*8&255;r[e+s>>>2]|=a<<24-(e+s)%4*8}else if(n.length>65535)for(var s=0;s<i;s+=4)r[e+s>>>2]=n[s>>>2];else r.push.apply(r,n);return this.sigBytes+=i,this},clamp:function(){var r=this.words,n=this.sigBytes;r[n>>>2]&=4294967295<<32-n%4*8,r.length=t.ceil(n/4)},clone:function(){var t=i.clone.call(this);return t.words=this.words.slice(0),t},random:function(r){for(var n=[],e=0;e<r;e+=4)n.push(4294967296*t.random()|0);return new s.init(n,r)}}),a=n.enc={},o=a.Hex={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var s=r[i>>>2]>>>24-i%4*8&255;e.push((s>>>4).toString(16)),e.push((15&s).toString(16))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e+=2)n[e>>>3]|=parseInt(t.substr(e,2),16)<<24-e%8*4;return new s.init(n,r/2)}},c=a.Latin1={stringify:function(t){for(var r=t.words,n=t.sigBytes,e=[],i=0;i<n;i++){var s=r[i>>>2]>>>24-i%4*8&255;e.push(String.fromCharCode(s))}return e.join(\\\"\\\")},parse:function(t){for(var r=t.length,n=[],e=0;e<r;e++)n[e>>>2]|=(255&t.charCodeAt(e))<<24-e%4*8;return new s.init(n,r)}},f=a.Utf8={stringify:function(t){try{return decodeURIComponent(escape(c.stringify(t)))}catch(t){throw new Error(\\\"Malformed UTF-8 data\\\")}},parse:function(t){return c.parse(unescape(encodeURIComponent(t)))}},h=e.BufferedBlockAlgorithm=i.extend({reset:function(){this._data=new s.init,this._nDataBytes=0},_append:function(t){\\\"string\\\"==typeof t&&(t=f.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes},_process:function(r){var n=this._data,e=n.words,i=n.sigBytes,a=this.blockSize,o=4*a,c=i/o;c=r?t.ceil(c):t.max((0|c)-this._minBufferSize,0);var f=c*a,h=t.min(4*f,i);if(f){for(var u=0;u<f;u+=a)this._doProcessBlock(e,u);var l=e.splice(0,f);n.sigBytes-=h}return new s.init(l,h)},clone:function(){var t=i.clone.call(this);return t._data=this._data.clone(),t},_minBufferSize:0}),u=(e.Hasher=h.extend({cfg:i.extend(),init:function(t){this.cfg=this.cfg.extend(t),this.reset()},reset:function(){h.reset.call(this),this._doReset()},update:function(t){return this._append(t),this._process(),this},finalize:function(t){t&&this._append(t);var r=this._doFinalize();return r},blockSize:16,_createHelper:function(t){return function(r,n){return new t.init(n).finalize(r)}},_createHmacHelper:function(t){return function(r,n){return new u.HMAC.init(t,n).finalize(r)}}}),n.algo={});return n}(Math),function(){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=t.enc;e.Base64={stringify:function(t){var r=t.words,n=t.sigBytes,e=this._map;t.clamp();for(var i=[],s=0;s<n;s+=3)for(var a=r[s>>>2]>>>24-s%4*8&255,o=r[s+1>>>2]>>>24-(s+1)%4*8&255,c=r[s+2>>>2]>>>24-(s+2)%4*8&255,f=a<<16|o<<8|c,h=0;h<4&&s+.75*h<n;h++)i.push(e.charAt(f>>>6*(3-h)&63));var u=e.charAt(64);if(u)for(;i.length%4;)i.push(u);return i.join(\\\"\\\")},parse:function(t){var r=t.length,e=this._map,i=e.charAt(64);if(i){var s=t.indexOf(i);s!=-1&&(r=s)}for(var a=[],o=0,c=0;c<r;c++)if(c%4){var f=e.indexOf(t.charAt(c-1))<<c%4*2,h=e.indexOf(t.charAt(c))>>>6-c%4*2;a[o>>>2]|=(f|h)<<24-o%4*8,o++}return n.create(a,o)},_map:\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\\"}}(),function(){var t=qq.CryptoJS,r=t.lib,n=r.Base,e=t.enc,i=e.Utf8,s=t.algo;s.HMAC=n.extend({init:function(t,r){t=this._hasher=new t.init,\\\"string\\\"==typeof r&&(r=i.parse(r));var n=t.blockSize,e=4*n;r.sigBytes>e&&(r=t.finalize(r)),r.clamp();for(var s=this._oKey=r.clone(),a=this._iKey=r.clone(),o=s.words,c=a.words,f=0;f<n;f++)o[f]^=1549556828,c[f]^=909522486;s.sigBytes=a.sigBytes=e,this.reset()},reset:function(){var t=this._hasher;t.reset(),t.update(this._iKey)},update:function(t){return this._hasher.update(t),this},finalize:function(t){var r=this._hasher,n=r.finalize(t);r.reset();var e=r.finalize(this._oKey.clone().concat(n));return e}})}(),function(){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=r.Hasher,i=t.algo,s=[],a=i.SHA1=e.extend({_doReset:function(){this._hash=new n.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],a=n[2],o=n[3],c=n[4],f=0;f<80;f++){if(f<16)s[f]=0|t[r+f];else{var h=s[f-3]^s[f-8]^s[f-14]^s[f-16];s[f]=h<<1|h>>>31}var u=(e<<5|e>>>27)+c+s[f];u+=f<20?(i&a|~i&o)+1518500249:f<40?(i^a^o)+1859775393:f<60?(i&a|i&o|a&o)-1894007588:(i^a^o)-899497514,c=o,o=a,a=i<<30|i>>>2,i=e,e=u}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+a|0,n[3]=n[3]+o|0,n[4]=n[4]+c|0},_doFinalize:function(){var t=this._data,r=t.words,n=8*this._nDataBytes,e=8*t.sigBytes;return r[e>>>5]|=128<<24-e%32,r[(e+64>>>9<<4)+14]=Math.floor(n/4294967296),r[(e+64>>>9<<4)+15]=n,t.sigBytes=4*r.length,this._process(),this._hash},clone:function(){var t=e.clone.call(this);return t._hash=this._hash.clone(),t}});t.SHA1=e._createHelper(a),t.HmacSHA1=e._createHmacHelper(a)}(),function(t){var r=qq.CryptoJS,n=r.lib,e=n.WordArray,i=n.Hasher,s=r.algo,a=[],o=[];!function(){function r(r){for(var n=t.sqrt(r),e=2;e<=n;e++)if(!(r%e))return!1;return!0}function n(t){return 4294967296*(t-(0|t))|0}for(var e=2,i=0;i<64;)r(e)&&(i<8&&(a[i]=n(t.pow(e,.5))),o[i]=n(t.pow(e,1/3)),i++),e++}();var c=[],f=s.SHA256=i.extend({_doReset:function(){this._hash=new e.init(a.slice(0))},_doProcessBlock:function(t,r){for(var n=this._hash.words,e=n[0],i=n[1],s=n[2],a=n[3],f=n[4],h=n[5],u=n[6],l=n[7],p=0;p<64;p++){if(p<16)c[p]=0|t[r+p];else{var d=c[p-15],y=(d<<25|d>>>7)^(d<<14|d>>>18)^d>>>3,g=c[p-2],v=(g<<15|g>>>17)^(g<<13|g>>>19)^g>>>10;c[p]=y+c[p-7]+v+c[p-16]}var _=f&h^~f&u,w=e&i^e&s^i&s,A=(e<<30|e>>>2)^(e<<19|e>>>13)^(e<<10|e>>>22),B=(f<<26|f>>>6)^(f<<21|f>>>11)^(f<<7|f>>>25),S=l+B+_+o[p]+c[p],m=A+w;l=u,u=h,h=f,f=a+S|0,a=s,s=i,i=e,e=S+m|0}n[0]=n[0]+e|0,n[1]=n[1]+i|0,n[2]=n[2]+s|0,n[3]=n[3]+a|0,n[4]=n[4]+f|0,n[5]=n[5]+h|0,n[6]=n[6]+u|0,n[7]=n[7]+l|0},_doFinalize:function(){var r=this._data,n=r.words,e=8*this._nDataBytes,i=8*r.sigBytes;return n[i>>>5]|=128<<24-i%32,n[(i+64>>>9<<4)+14]=t.floor(e/4294967296),n[(i+64>>>9<<4)+15]=e,r.sigBytes=4*n.length,this._process(),this._hash},clone:function(){var t=i.clone.call(this);return t._hash=this._hash.clone(),t}});r.SHA256=i._createHelper(f),r.HmacSHA256=i._createHmacHelper(f)}(Math),function(){if(\\\"function\\\"==typeof ArrayBuffer){var t=qq.CryptoJS,r=t.lib,n=r.WordArray,e=n.init,i=n.init=function(t){if(t instanceof ArrayBuffer&&(t=new Uint8Array(t)),(t instanceof Int8Array||t instanceof Uint8ClampedArray||t instanceof Int16Array||t instanceof Uint16Array||t instanceof Int32Array||t instanceof Uint32Array||t instanceof Float32Array||t instanceof Float64Array)&&(t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),t instanceof Uint8Array){for(var r=t.byteLength,n=[],i=0;i<r;i++)n[i>>>2]|=t[i]<<24-i%4*8;e.call(this,n,r)}else e.apply(this,arguments)};i.prototype=n}}(),onmessage=function(t){\\\"use strict\\\";doTask(t.data.file,function(r,n){postMessage({err:r,resp:n,id:t.data.id})})};\\n//# sourceMappingURL=s3.fine-uploader.worker.js.map\"], {type: \"application/javascript\"}));\n        };\n    ","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\r\n/**\r\n * Defines the public API for FineUploader mode.\r\n */\r\n(function() {\r\n    \"use strict\";\r\n\r\n    qq.uiPublicApi = {\r\n        addInitialFiles: function(cannedFileList) {\r\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\r\n            this._templating.addCacheToDom();\r\n        },\r\n\r\n        clearStoredFiles: function() {\r\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\r\n            this._templating.clearFiles();\r\n        },\r\n\r\n        addExtraDropzone: function(element) {\r\n            this._dnd && this._dnd.setupExtraDropzone(element);\r\n        },\r\n\r\n        removeExtraDropzone: function(element) {\r\n            if (this._dnd) {\r\n                return this._dnd.removeDropzone(element);\r\n            }\r\n        },\r\n\r\n        getItemByFileId: function(id) {\r\n            if (!this._templating.isHiddenForever(id)) {\r\n                return this._templating.getFileContainer(id);\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            this._parent.prototype.reset.apply(this, arguments);\r\n            this._templating.reset();\r\n\r\n            if (!this._options.button && this._templating.getButton()) {\r\n                this._defaultButtonId = this._createUploadButton({\r\n                    element: this._templating.getButton(),\r\n                    title: this._options.text.fileInputTitle\r\n                }).getButtonId();\r\n            }\r\n\r\n            if (this._dnd) {\r\n                this._dnd.dispose();\r\n                this._dnd = this._setupDragAndDrop();\r\n            }\r\n\r\n            this._totalFilesInBatch = 0;\r\n            this._filesInBatchAddedToUi = 0;\r\n\r\n            this._setupClickAndEditEventHandlers();\r\n        },\r\n\r\n        setName: function(id, newName) {\r\n            var formattedFilename = this._options.formatFileName(newName);\r\n\r\n            this._parent.prototype.setName.apply(this, arguments);\r\n            this._templating.updateFilename(id, formattedFilename);\r\n        },\r\n\r\n        pauseUpload: function(id) {\r\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\r\n\r\n            paused && this._templating.uploadPaused(id);\r\n            return paused;\r\n        },\r\n\r\n        continueUpload: function(id) {\r\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\r\n\r\n            continued && this._templating.uploadContinued(id);\r\n            return continued;\r\n        },\r\n\r\n        getId: function(fileContainerOrChildEl) {\r\n            return this._templating.getFileId(fileContainerOrChildEl);\r\n        },\r\n\r\n        getDropTarget: function(fileId) {\r\n            var file = this.getFile(fileId);\r\n\r\n            return file.qqDropTarget;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Defines the private (internal) API for FineUploader mode.\r\n     */\r\n    qq.uiPrivateApi = {\r\n        _getButton: function(buttonId) {\r\n            var button = this._parent.prototype._getButton.apply(this, arguments);\r\n\r\n            if (!button) {\r\n                if (buttonId === this._defaultButtonId) {\r\n                    button = this._templating.getButton();\r\n                }\r\n            }\r\n\r\n            return button;\r\n        },\r\n\r\n        _removeFileItem: function(fileId) {\r\n            this._templating.removeFile(fileId);\r\n        },\r\n\r\n        _setupClickAndEditEventHandlers: function() {\r\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\r\n\r\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\r\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\r\n            this._focusinEventSupported = !qq.firefox();\r\n\r\n            if (this._isEditFilenameEnabled())\r\n            {\r\n                this._filenameClickHandler = this._bindFilenameClickEvent();\r\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\r\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\r\n            }\r\n        },\r\n\r\n        _setupDragAndDrop: function() {\r\n            var self = this,\r\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\r\n                templating = this._templating,\r\n                defaultDropZone = templating.getDropZone();\r\n\r\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\r\n\r\n            return new qq.DragAndDrop({\r\n                dropZoneElements: dropZoneElements,\r\n                allowMultipleItems: this._options.multiple,\r\n                classes: {\r\n                    dropActive: this._options.classes.dropActive\r\n                },\r\n                callbacks: {\r\n                    processingDroppedFiles: function() {\r\n                        templating.showDropProcessing();\r\n                    },\r\n                    processingDroppedFilesComplete: function(files, targetEl) {\r\n                        templating.hideDropProcessing();\r\n\r\n                        qq.each(files, function(idx, file) {\r\n                            file.qqDropTarget = targetEl;\r\n                        });\r\n\r\n                        if (files.length) {\r\n                            self.addFiles(files, null, null);\r\n                        }\r\n                    },\r\n                    dropError: function(code, errorData) {\r\n                        self._itemError(code, errorData);\r\n                    },\r\n                    dropLog: function(message, level) {\r\n                        self.log(message, level);\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        _bindFileButtonsClickEvent: function() {\r\n            var self = this;\r\n\r\n            return new qq.FileButtonsClickHandler({\r\n                templating: this._templating,\r\n\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n\r\n                onDeleteFile: function(fileId) {\r\n                    self.deleteFile(fileId);\r\n                },\r\n\r\n                onCancel: function(fileId) {\r\n                    self.cancel(fileId);\r\n                },\r\n\r\n                onRetry: function(fileId) {\r\n                    self.retry(fileId);\r\n                },\r\n\r\n                onPause: function(fileId) {\r\n                    self.pauseUpload(fileId);\r\n                },\r\n\r\n                onContinue: function(fileId) {\r\n                    self.continueUpload(fileId);\r\n                },\r\n\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                }\r\n            });\r\n        },\r\n\r\n        _isEditFilenameEnabled: function() {\r\n            /*jshint -W014 */\r\n            return this._templating.isEditFilenamePossible()\r\n                && !this._options.autoUpload\r\n                && qq.FilenameClickHandler\r\n                && qq.FilenameInputFocusHandler\r\n                && qq.FilenameInputFocusHandler;\r\n        },\r\n\r\n        _filenameEditHandler: function() {\r\n            var self = this,\r\n                templating = this._templating;\r\n\r\n            return {\r\n                templating: templating,\r\n                log: function(message, lvl) {\r\n                    self.log(message, lvl);\r\n                },\r\n                onGetUploadStatus: function(fileId) {\r\n                    return self.getUploads({id: fileId}).status;\r\n                },\r\n                onGetName: function(fileId) {\r\n                    return self.getName(fileId);\r\n                },\r\n                onSetName: function(id, newName) {\r\n                    self.setName(id, newName);\r\n                },\r\n                onEditingStatusChange: function(id, isEditing) {\r\n                    var qqInput = qq(templating.getEditInput(id)),\r\n                        qqFileContainer = qq(templating.getFileContainer(id));\r\n\r\n                    if (isEditing) {\r\n                        qqInput.addClass(\"qq-editing\");\r\n                        templating.hideFilename(id);\r\n                        templating.hideEditIcon(id);\r\n                    }\r\n                    else {\r\n                        qqInput.removeClass(\"qq-editing\");\r\n                        templating.showFilename(id);\r\n                        templating.showEditIcon(id);\r\n                    }\r\n\r\n                    // Force IE8 and older to repaint\r\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\r\n                }\r\n            };\r\n        },\r\n\r\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\r\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\r\n\r\n            if (this._isEditFilenameEnabled()) {\r\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\r\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\r\n                    this._templating.markFilenameEditable(id);\r\n                    this._templating.hideEditIcon(id);\r\n                }\r\n            }\r\n\r\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\r\n                this._templating.hideRetry(id);\r\n                this._templating.setStatusText(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\r\n            }\r\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\r\n                this._templating.hidePause(id);\r\n            }\r\n        },\r\n\r\n        _bindFilenameInputFocusInEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusInHandler(spec);\r\n        },\r\n\r\n        _bindFilenameInputFocusEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameInputFocusHandler(spec);\r\n        },\r\n\r\n        _bindFilenameClickEvent: function() {\r\n            var spec = qq.extend({}, this._filenameEditHandler());\r\n\r\n            return new qq.FilenameClickHandler(spec);\r\n        },\r\n\r\n        _storeForLater: function(id) {\r\n            this._parent.prototype._storeForLater.apply(this, arguments);\r\n            this._templating.hideSpinner(id);\r\n        },\r\n\r\n        _onAllComplete: function(successful, failed) {\r\n            this._parent.prototype._onAllComplete.apply(this, arguments);\r\n            this._templating.resetTotalProgress();\r\n        },\r\n\r\n        _onSubmit: function(id, name) {\r\n            var file = this.getFile(id);\r\n\r\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\r\n                this._paramsStore.addReadOnly(id, {\r\n                    qqpath: file.qqPath\r\n                });\r\n            }\r\n\r\n            this._parent.prototype._onSubmit.apply(this, arguments);\r\n            this._addToList(id, name);\r\n        },\r\n\r\n        // The file item has been added to the DOM.\r\n        _onSubmitted: function(id) {\r\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\r\n            if (this._isEditFilenameEnabled()) {\r\n                this._templating.markFilenameEditable(id);\r\n                this._templating.showEditIcon(id);\r\n\r\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\r\n                if (!this._focusinEventSupported) {\r\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\r\n                }\r\n            }\r\n        },\r\n\r\n        // Update the progress bar & percentage as the file is uploaded\r\n        _onProgress: function(id, name, loaded, total) {\r\n            this._parent.prototype._onProgress.apply(this, arguments);\r\n\r\n            this._templating.updateProgress(id, loaded, total);\r\n\r\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\r\n                this._templating.hideCancel(id);\r\n                this._templating.hidePause(id);\r\n                this._templating.hideProgress(id);\r\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\r\n\r\n                // If ~last byte was sent, display total file size\r\n                this._displayFileSize(id);\r\n            }\r\n            else {\r\n                // If still uploading, display percentage - total size is actually the total request(s) size\r\n                this._displayFileSize(id, loaded, total);\r\n            }\r\n        },\r\n\r\n        _onTotalProgress: function(loaded, total) {\r\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\r\n            this._templating.updateTotalProgress(loaded, total);\r\n        },\r\n\r\n        _onComplete: function(id, name, result, xhr) {\r\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\r\n                templating = this._templating,\r\n                fileContainer = templating.getFileContainer(id),\r\n                self = this;\r\n\r\n            function completeUpload(result) {\r\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\r\n                // If so, don't perform any UI-related tasks related to this file.\r\n                if (!fileContainer) {\r\n                    return;\r\n                }\r\n\r\n                templating.setStatusText(id);\r\n\r\n                qq(fileContainer).removeClass(self._classes.retrying);\r\n                templating.hideProgress(id);\r\n\r\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\r\n                    templating.hideCancel(id);\r\n                }\r\n                templating.hideSpinner(id);\r\n\r\n                if (result.success) {\r\n                    self._markFileAsSuccessful(id);\r\n                }\r\n                else {\r\n                    qq(fileContainer).addClass(self._classes.fail);\r\n                    templating.showCancel(id);\r\n\r\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\r\n                        qq(fileContainer).addClass(self._classes.retryable);\r\n                        templating.showRetry(id);\r\n                    }\r\n                    self._controlFailureTextDisplay(id, result);\r\n                }\r\n            }\r\n\r\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\r\n            if (parentRetVal instanceof qq.Promise) {\r\n                parentRetVal.done(function(newResult) {\r\n                    completeUpload(newResult);\r\n                });\r\n\r\n            }\r\n            else {\r\n                completeUpload(result);\r\n            }\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _markFileAsSuccessful: function(id) {\r\n            var templating = this._templating;\r\n\r\n            if (this._isDeletePossible()) {\r\n                templating.showDeleteButton(id);\r\n            }\r\n\r\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\r\n\r\n            this._maybeUpdateThumbnail(id);\r\n        },\r\n\r\n        _onUploadPrep: function(id) {\r\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\r\n            this._templating.showSpinner(id);\r\n        },\r\n\r\n        _onUpload: function(id, name) {\r\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\r\n\r\n            this._templating.showSpinner(id);\r\n\r\n            return parentRetVal;\r\n        },\r\n\r\n        _onUploadChunk: function(id, chunkData) {\r\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\r\n\r\n            // Only display the pause button if we have finished uploading at least one chunk\r\n            // & this file can be resumed\r\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\r\n                this._templating.allowPause(id);\r\n            }\r\n        },\r\n\r\n        _onCancel: function(id, name) {\r\n            this._parent.prototype._onCancel.apply(this, arguments);\r\n            this._removeFileItem(id);\r\n\r\n            if (this._getNotFinished() === 0) {\r\n                this._templating.resetTotalProgress();\r\n            }\r\n        },\r\n\r\n        _onBeforeAutoRetry: function(id) {\r\n            var retryNumForDisplay, maxAuto, retryNote;\r\n\r\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\r\n\r\n            this._showCancelLink(id);\r\n\r\n            if (this._options.retry.showAutoRetryNote) {\r\n                retryNumForDisplay = this._autoRetries[id];\r\n                maxAuto = this._options.retry.maxAutoAttempts;\r\n\r\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\r\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\r\n\r\n                this._templating.setStatusText(id, retryNote);\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\r\n            }\r\n        },\r\n\r\n        //return false if we should not attempt the requested retry\r\n        _onBeforeManualRetry: function(id) {\r\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\r\n                this._templating.resetProgress(id);\r\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\r\n                this._templating.setStatusText(id);\r\n                this._templating.showSpinner(id);\r\n                this._showCancelLink(id);\r\n                return true;\r\n            }\r\n            else {\r\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\r\n                this._templating.showRetry(id);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        _onSubmitDelete: function(id) {\r\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\r\n\r\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\r\n        },\r\n\r\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\r\n            if (this._options.deleteFile.forceConfirm) {\r\n                this._showDeleteConfirm.apply(this, arguments);\r\n            }\r\n            else {\r\n                this._sendDeleteRequest.apply(this, arguments);\r\n            }\r\n        },\r\n\r\n        _onDeleteComplete: function(id, xhr, isError) {\r\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\r\n\r\n            this._templating.hideSpinner(id);\r\n\r\n            if (isError) {\r\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\r\n                this._templating.showDeleteButton(id);\r\n            }\r\n            else {\r\n                this._removeFileItem(id);\r\n            }\r\n        },\r\n\r\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\r\n            this._templating.hideDeleteButton(id);\r\n            this._templating.showSpinner(id);\r\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\r\n            this._deleteHandler.sendDelete.apply(this, arguments);\r\n        },\r\n\r\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\r\n            /*jshint -W004 */\r\n            var fileName = this.getName(id),\r\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\r\n                uuid = this.getUuid(id),\r\n                deleteRequestArgs = arguments,\r\n                self = this,\r\n                retVal;\r\n\r\n            retVal = this._options.showConfirm(confirmMessage);\r\n\r\n            if (qq.isGenericPromise(retVal)) {\r\n                retVal.then(function() {\r\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n                });\r\n            }\r\n            else if (retVal !== false) {\r\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\r\n            }\r\n        },\r\n\r\n        _addToList: function(id, name, canned) {\r\n            var prependData,\r\n                prependIndex = 0,\r\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\r\n                record;\r\n\r\n            if (this._options.display.prependFiles) {\r\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\r\n                    prependIndex = this._filesInBatchAddedToUi - 1;\r\n                }\r\n\r\n                prependData = {\r\n                    index: prependIndex\r\n                };\r\n            }\r\n\r\n            if (!canned) {\r\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\r\n                    this._templating.disableCancel();\r\n                }\r\n\r\n                // Cancel all existing (previous) files and clear the list if this file is not part of\r\n                // a scaled file group that has already been accepted, or if this file is not part of\r\n                // a scaled file group at all.\r\n                if (!this._options.multiple) {\r\n                    record = this.getUploads({id: id});\r\n\r\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\r\n\r\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\r\n                        this._handler.cancelAll();\r\n                        this._clearList();\r\n                        this._handledProxyGroup = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (canned) {\r\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\r\n            }\r\n            else {\r\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\r\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\r\n            }\r\n\r\n            this._filesInBatchAddedToUi += 1;\r\n\r\n            if (canned ||\r\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\r\n\r\n                this._displayFileSize(id);\r\n            }\r\n        },\r\n\r\n        _clearList: function() {\r\n            this._templating.clearFiles();\r\n            this.clearStoredFiles();\r\n        },\r\n\r\n        _displayFileSize: function(id, loadedSize, totalSize) {\r\n            var size = this.getSize(id),\r\n                sizeForDisplay = this._formatSize(size);\r\n\r\n            if (size >= 0) {\r\n                if (loadedSize !== undefined && totalSize !== undefined) {\r\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\r\n                }\r\n\r\n                this._templating.updateSize(id, sizeForDisplay);\r\n            }\r\n        },\r\n\r\n        _formatProgress: function(uploadedSize, totalSize) {\r\n            var message = this._options.text.formatProgress;\r\n            function r(name, replacement) { message = message.replace(name, replacement); }\r\n\r\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\r\n            r(\"{total_size}\", this._formatSize(totalSize));\r\n            return message;\r\n        },\r\n\r\n        _controlFailureTextDisplay: function(id, response) {\r\n            var mode, responseProperty, failureReason;\r\n\r\n            mode = this._options.failedUploadTextDisplay.mode;\r\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\r\n\r\n            if (mode === \"custom\") {\r\n                failureReason = response[responseProperty];\r\n                if (!failureReason) {\r\n                    failureReason = this._options.text.failUpload;\r\n                }\r\n\r\n                this._templating.setStatusText(id, failureReason);\r\n\r\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\r\n                    this._showTooltip(id, failureReason);\r\n                }\r\n            }\r\n            else if (mode === \"default\") {\r\n                this._templating.setStatusText(id, this._options.text.failUpload);\r\n            }\r\n            else if (mode !== \"none\") {\r\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\r\n            }\r\n        },\r\n\r\n        _showTooltip: function(id, text) {\r\n            this._templating.getFileContainer(id).title = text;\r\n        },\r\n\r\n        _showCancelLink: function(id) {\r\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\r\n                this._templating.showCancel(id);\r\n            }\r\n        },\r\n\r\n        _itemError: function(code, name, item) {\r\n            var message = this._parent.prototype._itemError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _batchError: function(message) {\r\n            this._parent.prototype._batchError.apply(this, arguments);\r\n            this._options.showMessage(message);\r\n        },\r\n\r\n        _setupPastePrompt: function() {\r\n            var self = this;\r\n\r\n            this._options.callbacks.onPasteReceived = function() {\r\n                var message = self._options.paste.namePromptMessage,\r\n                    defaultVal = self._options.paste.defaultName;\r\n\r\n                return self._options.showPrompt(message, defaultVal);\r\n            };\r\n        },\r\n\r\n        _fileOrBlobRejected: function(id, name) {\r\n            this._totalFilesInBatch -= 1;\r\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\r\n        },\r\n\r\n        _prepareItemsForUpload: function(items, params, endpoint) {\r\n            this._totalFilesInBatch = items.length;\r\n            this._filesInBatchAddedToUi = 0;\r\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\r\n        },\r\n\r\n        _maybeUpdateThumbnail: function(fileId) {\r\n            var thumbnailUrl = this._thumbnailUrls[fileId],\r\n                fileStatus = this.getUploads({id: fileId}).status;\r\n\r\n            if (fileStatus !== qq.status.DELETED &&\r\n                (thumbnailUrl ||\r\n                this._options.thumbnails.placeholders.waitUntilResponse ||\r\n                !qq.supportedFeatures.imagePreviews)) {\r\n\r\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\r\n                // if called with a null thumbnailUrl.\r\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\r\n            }\r\n        },\r\n\r\n        _addCannedFile: function(sessionData) {\r\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\r\n\r\n            this._addToList(id, this.getName(id), true);\r\n            this._templating.hideSpinner(id);\r\n            this._templating.hideCancel(id);\r\n            this._markFileAsSuccessful(id);\r\n\r\n            return id;\r\n        },\r\n\r\n        _setSize: function(id, newSize) {\r\n            this._parent.prototype._setSize.apply(this, arguments);\r\n\r\n            this._templating.updateSize(id, this._formatSize(newSize));\r\n        },\r\n\r\n        _sessionRequestComplete: function() {\r\n            this._templating.addCacheToDom();\r\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\r\n        }\r\n    };\r\n}());\r\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\n * in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"s3\");\n\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\n        }\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\n}());\n"]}